var Pg=Object.defineProperty;var Cg=(te,h,s)=>h in te?Pg(te,h,{enumerable:!0,configurable:!0,writable:!0,value:s}):te[h]=s;var fe=(te,h,s)=>Cg(te,typeof h!="symbol"?h+"":h,s);(function(){const h=document.createElement("link").relList;if(h&&h.supports&&h.supports("modulepreload"))return;for(const w of document.querySelectorAll('link[rel="modulepreload"]'))p(w);new MutationObserver(w=>{for(const A of w)if(A.type==="childList")for(const D of A.addedNodes)D.tagName==="LINK"&&D.rel==="modulepreload"&&p(D)}).observe(document,{childList:!0,subtree:!0});function s(w){const A={};return w.integrity&&(A.integrity=w.integrity),w.referrerPolicy&&(A.referrerPolicy=w.referrerPolicy),w.crossOrigin==="use-credentials"?A.credentials="include":w.crossOrigin==="anonymous"?A.credentials="omit":A.credentials="same-origin",A}function p(w){if(w.ep)return;w.ep=!0;const A=s(w);fetch(w.href,A)}})();/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const uh=globalThis,Yh=uh.ShadowRoot&&(uh.ShadyCSS===void 0||uh.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,Jh=Symbol(),L_=new WeakMap;let q_=class{constructor(h,s,p){if(this._$cssResult$=!0,p!==Jh)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=h,this.t=s}get styleSheet(){let h=this.o;const s=this.t;if(Yh&&h===void 0){const p=s!==void 0&&s.length===1;p&&(h=L_.get(s)),h===void 0&&((this.o=h=new CSSStyleSheet).replaceSync(this.cssText),p&&L_.set(s,h))}return h}toString(){return this.cssText}};const $g=te=>new q_(typeof te=="string"?te:te+"",void 0,Jh),Zh=(te,...h)=>{const s=te.length===1?te[0]:h.reduce((p,w,A)=>p+(D=>{if(D._$cssResult$===!0)return D.cssText;if(typeof D=="number")return D;throw Error("Value passed to 'css' function must be a 'css' function result: "+D+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(w)+te[A+1],te[0]);return new q_(s,te,Jh)},Sg=(te,h)=>{if(Yh)te.adoptedStyleSheets=h.map(s=>s instanceof CSSStyleSheet?s:s.styleSheet);else for(const s of h){const p=document.createElement("style"),w=uh.litNonce;w!==void 0&&p.setAttribute("nonce",w),p.textContent=s.cssText,te.appendChild(p)}},z_=Yh?te=>te:te=>te instanceof CSSStyleSheet?(h=>{let s="";for(const p of h.cssRules)s+=p.cssText;return $g(s)})(te):te;/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const{is:kg,defineProperty:Ag,getOwnPropertyDescriptor:Ig,getOwnPropertyNames:Og,getOwnPropertySymbols:Fg,getPrototypeOf:Dg}=Object,oi=globalThis,B_=oi.trustedTypes,Lg=B_?B_.emptyScript:"",Hh=oi.reactiveElementPolyfillSupport,Jc=(te,h)=>te,ch={toAttribute(te,h){switch(h){case Boolean:te=te?Lg:null;break;case Object:case Array:te=te==null?te:JSON.stringify(te)}return te},fromAttribute(te,h){let s=te;switch(h){case Boolean:s=te!==null;break;case Number:s=te===null?null:Number(te);break;case Object:case Array:try{s=JSON.parse(te)}catch{s=null}}return s}},em=(te,h)=>!kg(te,h),R_={attribute:!0,type:String,converter:ch,reflect:!1,hasChanged:em};Symbol.metadata??(Symbol.metadata=Symbol("metadata")),oi.litPropertyMetadata??(oi.litPropertyMetadata=new WeakMap);class qa extends HTMLElement{static addInitializer(h){this._$Ei(),(this.l??(this.l=[])).push(h)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(h,s=R_){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(h,s),!s.noAccessor){const p=Symbol(),w=this.getPropertyDescriptor(h,p,s);w!==void 0&&Ag(this.prototype,h,w)}}static getPropertyDescriptor(h,s,p){const{get:w,set:A}=Ig(this.prototype,h)??{get(){return this[s]},set(D){this[s]=D}};return{get(){return w==null?void 0:w.call(this)},set(D){const z=w==null?void 0:w.call(this);A.call(this,D),this.requestUpdate(h,z,p)},configurable:!0,enumerable:!0}}static getPropertyOptions(h){return this.elementProperties.get(h)??R_}static _$Ei(){if(this.hasOwnProperty(Jc("elementProperties")))return;const h=Dg(this);h.finalize(),h.l!==void 0&&(this.l=[...h.l]),this.elementProperties=new Map(h.elementProperties)}static finalize(){if(this.hasOwnProperty(Jc("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(Jc("properties"))){const s=this.properties,p=[...Og(s),...Fg(s)];for(const w of p)this.createProperty(w,s[w])}const h=this[Symbol.metadata];if(h!==null){const s=litPropertyMetadata.get(h);if(s!==void 0)for(const[p,w]of s)this.elementProperties.set(p,w)}this._$Eh=new Map;for(const[s,p]of this.elementProperties){const w=this._$Eu(s,p);w!==void 0&&this._$Eh.set(w,s)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(h){const s=[];if(Array.isArray(h)){const p=new Set(h.flat(1/0).reverse());for(const w of p)s.unshift(z_(w))}else h!==void 0&&s.push(z_(h));return s}static _$Eu(h,s){const p=s.attribute;return p===!1?void 0:typeof p=="string"?p:typeof h=="string"?h.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){var h;this._$ES=new Promise(s=>this.enableUpdating=s),this._$AL=new Map,this._$E_(),this.requestUpdate(),(h=this.constructor.l)==null||h.forEach(s=>s(this))}addController(h){var s;(this._$EO??(this._$EO=new Set)).add(h),this.renderRoot!==void 0&&this.isConnected&&((s=h.hostConnected)==null||s.call(h))}removeController(h){var s;(s=this._$EO)==null||s.delete(h)}_$E_(){const h=new Map,s=this.constructor.elementProperties;for(const p of s.keys())this.hasOwnProperty(p)&&(h.set(p,this[p]),delete this[p]);h.size>0&&(this._$Ep=h)}createRenderRoot(){const h=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return Sg(h,this.constructor.elementStyles),h}connectedCallback(){var h;this.renderRoot??(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),(h=this._$EO)==null||h.forEach(s=>{var p;return(p=s.hostConnected)==null?void 0:p.call(s)})}enableUpdating(h){}disconnectedCallback(){var h;(h=this._$EO)==null||h.forEach(s=>{var p;return(p=s.hostDisconnected)==null?void 0:p.call(s)})}attributeChangedCallback(h,s,p){this._$AK(h,p)}_$EC(h,s){var A;const p=this.constructor.elementProperties.get(h),w=this.constructor._$Eu(h,p);if(w!==void 0&&p.reflect===!0){const D=(((A=p.converter)==null?void 0:A.toAttribute)!==void 0?p.converter:ch).toAttribute(s,p.type);this._$Em=h,D==null?this.removeAttribute(w):this.setAttribute(w,D),this._$Em=null}}_$AK(h,s){var A;const p=this.constructor,w=p._$Eh.get(h);if(w!==void 0&&this._$Em!==w){const D=p.getPropertyOptions(w),z=typeof D.converter=="function"?{fromAttribute:D.converter}:((A=D.converter)==null?void 0:A.fromAttribute)!==void 0?D.converter:ch;this._$Em=w,this[w]=z.fromAttribute(s,D.type),this._$Em=null}}requestUpdate(h,s,p){if(h!==void 0){if(p??(p=this.constructor.getPropertyOptions(h)),!(p.hasChanged??em)(this[h],s))return;this.P(h,s,p)}this.isUpdatePending===!1&&(this._$ES=this._$ET())}P(h,s,p){this._$AL.has(h)||this._$AL.set(h,s),p.reflect===!0&&this._$Em!==h&&(this._$Ej??(this._$Ej=new Set)).add(h)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(s){Promise.reject(s)}const h=this.scheduleUpdate();return h!=null&&await h,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var p;if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??(this.renderRoot=this.createRenderRoot()),this._$Ep){for(const[A,D]of this._$Ep)this[A]=D;this._$Ep=void 0}const w=this.constructor.elementProperties;if(w.size>0)for(const[A,D]of w)D.wrapped!==!0||this._$AL.has(A)||this[A]===void 0||this.P(A,this[A],D)}let h=!1;const s=this._$AL;try{h=this.shouldUpdate(s),h?(this.willUpdate(s),(p=this._$EO)==null||p.forEach(w=>{var A;return(A=w.hostUpdate)==null?void 0:A.call(w)}),this.update(s)):this._$EU()}catch(w){throw h=!1,this._$EU(),w}h&&this._$AE(s)}willUpdate(h){}_$AE(h){var s;(s=this._$EO)==null||s.forEach(p=>{var w;return(w=p.hostUpdated)==null?void 0:w.call(p)}),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(h)),this.updated(h)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(h){return!0}update(h){this._$Ej&&(this._$Ej=this._$Ej.forEach(s=>this._$EC(s,this[s]))),this._$EU()}updated(h){}firstUpdated(h){}}qa.elementStyles=[],qa.shadowRootOptions={mode:"open"},qa[Jc("elementProperties")]=new Map,qa[Jc("finalized")]=new Map,Hh==null||Hh({ReactiveElement:qa}),(oi.reactiveElementVersions??(oi.reactiveElementVersions=[])).push("2.0.4");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const Zc=globalThis,ph=Zc.trustedTypes,N_=ph?ph.createPolicy("lit-html",{createHTML:te=>te}):void 0,Q_="$lit$",ii=`lit$${Math.random().toFixed(9).slice(2)}$`,X_="?"+ii,zg=`<${X_}>`,Qi=document,ep=()=>Qi.createComment(""),tp=te=>te===null||typeof te!="object"&&typeof te!="function",tm=Array.isArray,Bg=te=>tm(te)||typeof(te==null?void 0:te[Symbol.iterator])=="function",qh=`[ 	
\f\r]`,Xc=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,j_=/-->/g,U_=/>/g,Ki=RegExp(`>|${qh}(?:([^\\s"'>=/]+)(${qh}*=${qh}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`,"g"),V_=/'/g,W_=/"/g,Y_=/^(?:script|style|textarea|title)$/i,Rg=te=>(h,...s)=>({_$litType$:te,strings:h,values:s}),Qa=Rg(1),Xa=Symbol.for("lit-noChange"),ir=Symbol.for("lit-nothing"),G_=new WeakMap,Hi=Qi.createTreeWalker(Qi,129);function J_(te,h){if(!tm(te)||!te.hasOwnProperty("raw"))throw Error("invalid template strings array");return N_!==void 0?N_.createHTML(h):h}const Ng=(te,h)=>{const s=te.length-1,p=[];let w,A=h===2?"<svg>":h===3?"<math>":"",D=Xc;for(let z=0;z<s;z++){const g=te[z];let x,v,M=-1,T=0;for(;T<g.length&&(D.lastIndex=T,v=D.exec(g),v!==null);)T=D.lastIndex,D===Xc?v[1]==="!--"?D=j_:v[1]!==void 0?D=U_:v[2]!==void 0?(Y_.test(v[2])&&(w=RegExp("</"+v[2],"g")),D=Ki):v[3]!==void 0&&(D=Ki):D===Ki?v[0]===">"?(D=w??Xc,M=-1):v[1]===void 0?M=-2:(M=D.lastIndex-v[2].length,x=v[1],D=v[3]===void 0?Ki:v[3]==='"'?W_:V_):D===W_||D===V_?D=Ki:D===j_||D===U_?D=Xc:(D=Ki,w=void 0);const F=D===Ki&&te[z+1].startsWith("/>")?" ":"";A+=D===Xc?g+zg:M>=0?(p.push(x),g.slice(0,M)+Q_+g.slice(M)+ii+F):g+ii+(M===-2?z:F)}return[J_(te,A+(te[s]||"<?>")+(h===2?"</svg>":h===3?"</math>":"")),p]};class sp{constructor({strings:h,_$litType$:s},p){let w;this.parts=[];let A=0,D=0;const z=h.length-1,g=this.parts,[x,v]=Ng(h,s);if(this.el=sp.createElement(x,p),Hi.currentNode=this.el.content,s===2||s===3){const M=this.el.content.firstChild;M.replaceWith(...M.childNodes)}for(;(w=Hi.nextNode())!==null&&g.length<z;){if(w.nodeType===1){if(w.hasAttributes())for(const M of w.getAttributeNames())if(M.endsWith(Q_)){const T=v[D++],F=w.getAttribute(M).split(ii),q=/([.?@])?(.*)/.exec(T);g.push({type:1,index:A,name:q[2],strings:F,ctor:q[1]==="."?Ug:q[1]==="?"?Vg:q[1]==="@"?Wg:mh}),w.removeAttribute(M)}else M.startsWith(ii)&&(g.push({type:6,index:A}),w.removeAttribute(M));if(Y_.test(w.tagName)){const M=w.textContent.split(ii),T=M.length-1;if(T>0){w.textContent=ph?ph.emptyScript:"";for(let F=0;F<T;F++)w.append(M[F],ep()),Hi.nextNode(),g.push({type:2,index:++A});w.append(M[T],ep())}}}else if(w.nodeType===8)if(w.data===X_)g.push({type:2,index:A});else{let M=-1;for(;(M=w.data.indexOf(ii,M+1))!==-1;)g.push({type:7,index:A}),M+=ii.length-1}A++}}static createElement(h,s){const p=Qi.createElement("template");return p.innerHTML=h,p}}function Ya(te,h,s=te,p){var D,z;if(h===Xa)return h;let w=p!==void 0?(D=s._$Co)==null?void 0:D[p]:s._$Cl;const A=tp(h)?void 0:h._$litDirective$;return(w==null?void 0:w.constructor)!==A&&((z=w==null?void 0:w._$AO)==null||z.call(w,!1),A===void 0?w=void 0:(w=new A(te),w._$AT(te,s,p)),p!==void 0?(s._$Co??(s._$Co=[]))[p]=w:s._$Cl=w),w!==void 0&&(h=Ya(te,w._$AS(te,h.values),w,p)),h}class jg{constructor(h,s){this._$AV=[],this._$AN=void 0,this._$AD=h,this._$AM=s}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(h){const{el:{content:s},parts:p}=this._$AD,w=((h==null?void 0:h.creationScope)??Qi).importNode(s,!0);Hi.currentNode=w;let A=Hi.nextNode(),D=0,z=0,g=p[0];for(;g!==void 0;){if(D===g.index){let x;g.type===2?x=new rp(A,A.nextSibling,this,h):g.type===1?x=new g.ctor(A,g.name,g.strings,this,h):g.type===6&&(x=new Gg(A,this,h)),this._$AV.push(x),g=p[++z]}D!==(g==null?void 0:g.index)&&(A=Hi.nextNode(),D++)}return Hi.currentNode=Qi,w}p(h){let s=0;for(const p of this._$AV)p!==void 0&&(p.strings!==void 0?(p._$AI(h,p,s),s+=p.strings.length-2):p._$AI(h[s])),s++}}class rp{get _$AU(){var h;return((h=this._$AM)==null?void 0:h._$AU)??this._$Cv}constructor(h,s,p,w){this.type=2,this._$AH=ir,this._$AN=void 0,this._$AA=h,this._$AB=s,this._$AM=p,this.options=w,this._$Cv=(w==null?void 0:w.isConnected)??!0}get parentNode(){let h=this._$AA.parentNode;const s=this._$AM;return s!==void 0&&(h==null?void 0:h.nodeType)===11&&(h=s.parentNode),h}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(h,s=this){h=Ya(this,h,s),tp(h)?h===ir||h==null||h===""?(this._$AH!==ir&&this._$AR(),this._$AH=ir):h!==this._$AH&&h!==Xa&&this._(h):h._$litType$!==void 0?this.$(h):h.nodeType!==void 0?this.T(h):Bg(h)?this.k(h):this._(h)}O(h){return this._$AA.parentNode.insertBefore(h,this._$AB)}T(h){this._$AH!==h&&(this._$AR(),this._$AH=this.O(h))}_(h){this._$AH!==ir&&tp(this._$AH)?this._$AA.nextSibling.data=h:this.T(Qi.createTextNode(h)),this._$AH=h}$(h){var A;const{values:s,_$litType$:p}=h,w=typeof p=="number"?this._$AC(h):(p.el===void 0&&(p.el=sp.createElement(J_(p.h,p.h[0]),this.options)),p);if(((A=this._$AH)==null?void 0:A._$AD)===w)this._$AH.p(s);else{const D=new jg(w,this),z=D.u(this.options);D.p(s),this.T(z),this._$AH=D}}_$AC(h){let s=G_.get(h.strings);return s===void 0&&G_.set(h.strings,s=new sp(h)),s}k(h){tm(this._$AH)||(this._$AH=[],this._$AR());const s=this._$AH;let p,w=0;for(const A of h)w===s.length?s.push(p=new rp(this.O(ep()),this.O(ep()),this,this.options)):p=s[w],p._$AI(A),w++;w<s.length&&(this._$AR(p&&p._$AB.nextSibling,w),s.length=w)}_$AR(h=this._$AA.nextSibling,s){var p;for((p=this._$AP)==null?void 0:p.call(this,!1,!0,s);h&&h!==this._$AB;){const w=h.nextSibling;h.remove(),h=w}}setConnected(h){var s;this._$AM===void 0&&(this._$Cv=h,(s=this._$AP)==null||s.call(this,h))}}class mh{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(h,s,p,w,A){this.type=1,this._$AH=ir,this._$AN=void 0,this.element=h,this.name=s,this._$AM=w,this.options=A,p.length>2||p[0]!==""||p[1]!==""?(this._$AH=Array(p.length-1).fill(new String),this.strings=p):this._$AH=ir}_$AI(h,s=this,p,w){const A=this.strings;let D=!1;if(A===void 0)h=Ya(this,h,s,0),D=!tp(h)||h!==this._$AH&&h!==Xa,D&&(this._$AH=h);else{const z=h;let g,x;for(h=A[0],g=0;g<A.length-1;g++)x=Ya(this,z[p+g],s,g),x===Xa&&(x=this._$AH[g]),D||(D=!tp(x)||x!==this._$AH[g]),x===ir?h=ir:h!==ir&&(h+=(x??"")+A[g+1]),this._$AH[g]=x}D&&!w&&this.j(h)}j(h){h===ir?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,h??"")}}class Ug extends mh{constructor(){super(...arguments),this.type=3}j(h){this.element[this.name]=h===ir?void 0:h}}class Vg extends mh{constructor(){super(...arguments),this.type=4}j(h){this.element.toggleAttribute(this.name,!!h&&h!==ir)}}class Wg extends mh{constructor(h,s,p,w,A){super(h,s,p,w,A),this.type=5}_$AI(h,s=this){if((h=Ya(this,h,s,0)??ir)===Xa)return;const p=this._$AH,w=h===ir&&p!==ir||h.capture!==p.capture||h.once!==p.once||h.passive!==p.passive,A=h!==ir&&(p===ir||w);w&&this.element.removeEventListener(this.name,this,p),A&&this.element.addEventListener(this.name,this,h),this._$AH=h}handleEvent(h){var s;typeof this._$AH=="function"?this._$AH.call(((s=this.options)==null?void 0:s.host)??this.element,h):this._$AH.handleEvent(h)}}class Gg{constructor(h,s,p){this.element=h,this.type=6,this._$AN=void 0,this._$AM=s,this.options=p}get _$AU(){return this._$AM._$AU}_$AI(h){Ya(this,h)}}const Qh=Zc.litHtmlPolyfillSupport;Qh==null||Qh(sp,rp),(Zc.litHtmlVersions??(Zc.litHtmlVersions=[])).push("3.2.1");const Kg=(te,h,s)=>{const p=(s==null?void 0:s.renderBefore)??h;let w=p._$litPart$;if(w===void 0){const A=(s==null?void 0:s.renderBefore)??null;p._$litPart$=w=new rp(h.insertBefore(ep(),A),A,void 0,s??{})}return w._$AI(te),w};/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */let qi=class extends qa{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var s;const h=super.createRenderRoot();return(s=this.renderOptions).renderBefore??(s.renderBefore=h.firstChild),h}update(h){const s=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(h),this._$Do=Kg(s,this.renderRoot,this.renderOptions)}connectedCallback(){var h;super.connectedCallback(),(h=this._$Do)==null||h.setConnected(!0)}disconnectedCallback(){var h;super.disconnectedCallback(),(h=this._$Do)==null||h.setConnected(!1)}render(){return Xa}};var H_;qi._$litElement$=!0,qi.finalized=!0,(H_=globalThis.litElementHydrateSupport)==null||H_.call(globalThis,{LitElement:qi});const Xh=globalThis.litElementPolyfillSupport;Xh==null||Xh({LitElement:qi});(globalThis.litElementVersions??(globalThis.litElementVersions=[])).push("4.1.1");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const sm=te=>(h,s)=>{s!==void 0?s.addInitializer(()=>{customElements.define(te,h)}):customElements.define(te,h)};/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const Hg={attribute:!0,type:String,converter:ch,reflect:!1,hasChanged:em},qg=(te=Hg,h,s)=>{const{kind:p,metadata:w}=s;let A=globalThis.litPropertyMetadata.get(w);if(A===void 0&&globalThis.litPropertyMetadata.set(w,A=new Map),A.set(s.name,te),p==="accessor"){const{name:D}=s;return{set(z){const g=h.get.call(this);h.set.call(this,z),this.requestUpdate(D,g,te)},init(z){return z!==void 0&&this.P(D,void 0,te),z}}}if(p==="setter"){const{name:D}=s;return function(z){const g=this[D];h.call(this,z),this.requestUpdate(D,g,te)}}throw Error("Unsupported decorator location: "+p)};function ai(te){return(h,s)=>typeof s=="object"?qg(te,h,s):((p,w,A)=>{const D=w.hasOwnProperty(A);return w.constructor.createProperty(A,D?{...p,wrapped:!0}:p),D?Object.getOwnPropertyDescriptor(w,A):void 0})(te,h,s)}/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */function _h(te){return ai({...te,state:!0,attribute:!1})}var Qg=Object.defineProperty,Xg=Object.getOwnPropertyDescriptor,Z_=(te,h,s,p)=>{for(var w=p>1?void 0:p?Xg(h,s):h,A=te.length-1,D;A>=0;A--)(D=te[A])&&(w=(p?D(h,s,w):D(w))||w);return p&&w&&Qg(h,s,w),w};let hh=class extends qi{constructor(){super(),this.listening=!1,this.recognition=null;const te=window.SpeechRecognition||window.webkitSpeechRecognition;if(!te){console.error("Speech Recognition API not supported in this browser");return}this.recognition=new te,this.recognition.continuous=!1,this.recognition.interimResults=!1,this.recognition.lang="en-US",this.recognition.onresult=h=>{const s=h.results[0][0].transcript;this.emitCommandEvent(s)},this.recognition.onerror=h=>{console.error("Speech recognition error:",h.error),console.log(h),this.listening=!1},this.recognition.onend=()=>{this.listening=!1}}emitCommandEvent(te){console.log("emitting command event",te);const h={originalCommand:te,timestamp:Date.now()};this.dispatchEvent(new CustomEvent("command-detected",{detail:h,bubbles:!0,composed:!0}))}toggleListening(){this.listening&&this.recognition?this.recognition.stop():this.recognition&&(this.recognition.start(),this.listening=!0)}render(){return Qa`
      <div id="speech-command-wrapper">
        <button
          @click=${this.toggleListening}
          ?disabled=${!window.SpeechRecognition&&!window.webkitSpeechRecognition}
        >
          ${this.listening?"Stop Listening":"Start Listening"}
        </button>
      </div>
    `}};hh.styles=Zh`
    :host {
      display: block;
      font-family: Arial, sans-serif;
    }
    #speech-command-wrapper {

    }
    button {
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
    }
    button:hover {
      background-color: #45a049;
    }
    button:disabled {
      background-color: #cccccc;
      cursor: not-allowed;
    }
    .transcript {
      margin-top: 10px;
      padding: 10px;
      border-radius: 4px;
    }
  `;Z_([ai({type:Boolean})],hh.prototype,"listening",2);hh=Z_([sm("speech-command")],hh);var In={},ef={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(te,h,s)=>{te.exports=s.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(te,h,s)=>{te.exports=s.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(te,h,s)=>{s.r(h),s.d(h,{Environment:()=>st,Interpreter:()=>ut,Template:()=>mt,parse:()=>be,tokenize:()=>M});var p=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),w=Object.freeze({set:p.Set,for:p.For,in:p.In,is:p.Is,if:p.If,else:p.Else,endif:p.EndIf,elif:p.ElseIf,endfor:p.EndFor,and:p.And,or:p.Or,not:p.Not,"not in":p.NotIn,macro:p.Macro,endmacro:p.EndMacro,true:p.BooleanLiteral,false:p.BooleanLiteral,none:p.NullLiteral,True:p.BooleanLiteral,False:p.BooleanLiteral,None:p.NullLiteral}),A=class{constructor(R,ae){this.value=R,this.type=ae}};function D(R){return/\w/.test(R)}function z(R){return/[0-9]/.test(R)}var g=[["{%",p.OpenStatement],["%}",p.CloseStatement],["{{",p.OpenExpression],["}}",p.CloseExpression],["(",p.OpenParen],[")",p.CloseParen],["{",p.OpenCurlyBracket],["}",p.CloseCurlyBracket],["[",p.OpenSquareBracket],["]",p.CloseSquareBracket],[",",p.Comma],[".",p.Dot],[":",p.Colon],["|",p.Pipe],["<=",p.ComparisonBinaryOperator],[">=",p.ComparisonBinaryOperator],["==",p.ComparisonBinaryOperator],["!=",p.ComparisonBinaryOperator],["<",p.ComparisonBinaryOperator],[">",p.ComparisonBinaryOperator],["+",p.AdditiveBinaryOperator],["-",p.AdditiveBinaryOperator],["*",p.MultiplicativeBinaryOperator],["/",p.MultiplicativeBinaryOperator],["%",p.MultiplicativeBinaryOperator],["=",p.Equals]],x=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function v(R,ae={}){return R.endsWith(`
`)&&(R=R.slice(0,-1)),R=R.replace(/{#.*?#}/gs,"{##}"),ae.lstrip_blocks&&(R=R.replace(/^[ \t]*({[#%])/gm,"$1")),ae.trim_blocks&&(R=R.replace(/([#%]})\n/g,"$1")),R.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function M(R,ae={}){var qe,at,ct;const K=[],me=v(R,ae);let Se=0;const Re=vt=>{let $t="";for(;vt(me[Se]);){if(me[Se]==="\\"){if(++Se,Se>=me.length)throw new SyntaxError("Unexpected end of input");const kt=me[Se++],is=x.get(kt);if(is===void 0)throw new SyntaxError(`Unexpected escaped character: ${kt}`);$t+=is;continue}if($t+=me[Se++],Se>=me.length)throw new SyntaxError("Unexpected end of input")}return $t};e:for(;Se<me.length;){const vt=(qe=K.at(-1))==null?void 0:qe.type;if(vt===void 0||vt===p.CloseStatement||vt===p.CloseExpression){let kt="";for(;Se<me.length&&!(me[Se]==="{"&&(me[Se+1]==="%"||me[Se+1]==="{"));)kt+=me[Se++];if(kt.length>0){K.push(new A(kt,p.Text));continue}}Re(kt=>/\s/.test(kt));const $t=me[Se];if($t==="-"||$t==="+"){const kt=(at=K.at(-1))==null?void 0:at.type;if(kt===p.Text||kt===void 0)throw new SyntaxError(`Unexpected character: ${$t}`);switch(kt){case p.Identifier:case p.NumericLiteral:case p.BooleanLiteral:case p.NullLiteral:case p.StringLiteral:case p.CloseParen:case p.CloseSquareBracket:break;default:{++Se;const is=Re(z);K.push(new A(`${$t}${is}`,is.length>0?p.NumericLiteral:p.UnaryOperator));continue}}}for(const[kt,is]of g)if(me.slice(Se,Se+kt.length)===kt){K.push(new A(kt,is)),Se+=kt.length;continue e}if($t==="'"||$t==='"'){++Se;const kt=Re(is=>is!==$t);K.push(new A(kt,p.StringLiteral)),++Se;continue}if(z($t)){const kt=Re(z);K.push(new A(kt,p.NumericLiteral));continue}if(D($t)){const kt=Re(D),is=Object.hasOwn(w,kt)?w[kt]:p.Identifier;is===p.In&&((ct=K.at(-1))==null?void 0:ct.type)===p.Not?(K.pop(),K.push(new A("not in",p.NotIn))):K.push(new A(kt,is));continue}throw new SyntaxError(`Unexpected character: ${$t}`)}return K}var T=class{constructor(){fe(this,"type","Statement")}},F=class extends T{constructor(ae){super();fe(this,"type","Program");this.body=ae}},q=class extends T{constructor(ae,K,me){super();fe(this,"type","If");this.test=ae,this.body=K,this.alternate=me}},re=class extends T{constructor(ae,K,me,Se){super();fe(this,"type","For");this.loopvar=ae,this.iterable=K,this.body=me,this.defaultBlock=Se}},ie=class extends T{constructor(ae,K){super();fe(this,"type","Set");this.assignee=ae,this.value=K}},G=class extends T{constructor(ae,K,me){super();fe(this,"type","Macro");this.name=ae,this.args=K,this.body=me}},V=class extends T{constructor(){super(...arguments);fe(this,"type","Expression")}},Q=class extends V{constructor(ae,K,me){super();fe(this,"type","MemberExpression");this.object=ae,this.property=K,this.computed=me}},O=class extends V{constructor(ae,K){super();fe(this,"type","CallExpression");this.callee=ae,this.args=K}},I=class extends V{constructor(ae){super();fe(this,"type","Identifier");this.value=ae}},b=class extends V{constructor(ae){super();fe(this,"type","Literal");this.value=ae}},E=class extends b{constructor(){super(...arguments);fe(this,"type","NumericLiteral")}},L=class extends b{constructor(){super(...arguments);fe(this,"type","StringLiteral")}},le=class extends b{constructor(){super(...arguments);fe(this,"type","BooleanLiteral")}},oe=class extends b{constructor(){super(...arguments);fe(this,"type","NullLiteral")}},Te=class extends b{constructor(){super(...arguments);fe(this,"type","ArrayLiteral")}},we=class extends b{constructor(){super(...arguments);fe(this,"type","TupleLiteral")}},ne=class extends b{constructor(){super(...arguments);fe(this,"type","ObjectLiteral")}},Ee=class extends V{constructor(ae,K,me){super();fe(this,"type","BinaryExpression");this.operator=ae,this.left=K,this.right=me}},pe=class extends V{constructor(ae,K){super();fe(this,"type","FilterExpression");this.operand=ae,this.filter=K}},ke=class extends V{constructor(ae,K){super();fe(this,"type","SelectExpression");this.iterable=ae,this.test=K}},Oe=class extends V{constructor(ae,K,me){super();fe(this,"type","TestExpression");this.operand=ae,this.negate=K,this.test=me}},Ce=class extends V{constructor(ae,K){super();fe(this,"type","UnaryExpression");this.operator=ae,this.argument=K}},tt=class extends V{constructor(ae=void 0,K=void 0,me=void 0){super();fe(this,"type","SliceExpression");this.start=ae,this.stop=K,this.step=me}},Ge=class extends V{constructor(ae,K){super();fe(this,"type","KeywordArgumentExpression");this.key=ae,this.value=K}};function be(R){const ae=new F([]);let K=0;function me(it,xt){const Ft=R[K++];if(!Ft||Ft.type!==it)throw new Error(`Parser Error: ${xt}. ${Ft.type} !== ${it}.`);return Ft}function Se(){switch(R[K].type){case p.Text:return at();case p.OpenStatement:return ct();case p.OpenExpression:return vt();default:throw new SyntaxError(`Unexpected token type: ${R[K].type}`)}}function Re(...it){return K+it.length<=R.length&&it.some((xt,Ft)=>xt!==R[K+Ft].type)}function qe(...it){return K+it.length<=R.length&&it.every((xt,Ft)=>xt===R[K+Ft].type)}function at(){return new L(me(p.Text,"Expected text token").value)}function ct(){me(p.OpenStatement,"Expected opening statement token");let it;switch(R[K].type){case p.Set:++K,it=$t(),me(p.CloseStatement,"Expected closing statement token");break;case p.If:++K,it=kt(),me(p.OpenStatement,"Expected {% token"),me(p.EndIf,"Expected endif token"),me(p.CloseStatement,"Expected %} token");break;case p.Macro:++K,it=is(),me(p.OpenStatement,"Expected {% token"),me(p.EndMacro,"Expected endmacro token"),me(p.CloseStatement,"Expected %} token");break;case p.For:++K,it=$s(),me(p.OpenStatement,"Expected {% token"),me(p.EndFor,"Expected endfor token"),me(p.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${R[K].type}`)}return it}function vt(){me(p.OpenExpression,"Expected opening expression token");const it=Ls();return me(p.CloseExpression,"Expected closing expression token"),it}function $t(){const it=Ls();if(qe(p.Equals)){++K;const xt=$t();return new ie(it,xt)}return it}function kt(){var Vs,Ur,Ir,Ms,lr,Os,Tr,ss;const it=Ls();me(p.CloseStatement,"Expected closing statement token");const xt=[],Ft=[];for(;!(((Vs=R[K])==null?void 0:Vs.type)===p.OpenStatement&&(((Ur=R[K+1])==null?void 0:Ur.type)===p.ElseIf||((Ir=R[K+1])==null?void 0:Ir.type)===p.Else||((Ms=R[K+1])==null?void 0:Ms.type)===p.EndIf));)xt.push(Se());if(((lr=R[K])==null?void 0:lr.type)===p.OpenStatement&&((Os=R[K+1])==null?void 0:Os.type)!==p.EndIf)if(++K,qe(p.ElseIf))me(p.ElseIf,"Expected elseif token"),Ft.push(kt());else for(me(p.Else,"Expected else token"),me(p.CloseStatement,"Expected closing statement token");!(((Tr=R[K])==null?void 0:Tr.type)===p.OpenStatement&&((ss=R[K+1])==null?void 0:ss.type)===p.EndIf);)Ft.push(Se());return new q(it,xt,Ft)}function is(){const it=ar();if(it.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const xt=kr();me(p.CloseStatement,"Expected closing statement token");const Ft=[];for(;Re(p.OpenStatement,p.EndMacro);)Ft.push(Se());return new G(it,xt,Ft)}function bs(it=!1){const xt=it?ar:Ls,Ft=[xt()],Vs=qe(p.Comma);for(;Vs&&(++K,Ft.push(xt()),!!qe(p.Comma)););return Vs?new we(Ft):Ft[0]}function $s(){const it=bs(!0);if(!(it instanceof I||it instanceof we))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${it.type} instead`);me(p.In,"Expected `in` keyword following loop variable");const xt=Ls();me(p.CloseStatement,"Expected closing statement token");const Ft=[];for(;Re(p.OpenStatement,p.EndFor)&&Re(p.OpenStatement,p.Else);)Ft.push(Se());const Vs=[];if(qe(p.OpenStatement,p.Else))for(++K,++K,me(p.CloseStatement,"Expected closing statement token");Re(p.OpenStatement,p.EndFor);)Vs.push(Se());return new re(it,xt,Ft,Vs)}function Ls(){return sr()}function sr(){const it=$r();if(qe(p.If)){++K;const xt=$r();if(qe(p.Else)){++K;const Ft=$r();return new q(xt,[it],[Ft])}else return new ke(it,xt)}return it}function $r(){let it=Jr();for(;qe(p.Or);){const xt=R[K];++K;const Ft=Jr();it=new Ee(xt,it,Ft)}return it}function Jr(){let it=Us();for(;qe(p.And);){const xt=R[K];++K;const Ft=Us();it=new Ee(xt,it,Ft)}return it}function Us(){let it;for(;qe(p.Not);){const xt=R[K];++K;const Ft=Us();it=new Ce(xt,Ft)}return it??xr()}function xr(){let it=Nt();for(;qe(p.ComparisonBinaryOperator)||qe(p.In)||qe(p.NotIn);){const xt=R[K];++K;const Ft=Nt();it=new Ee(xt,it,Ft)}return it}function Nt(){let it=Ar();for(;qe(p.AdditiveBinaryOperator);){const xt=R[K];++K;const Ft=Ar();it=new Ee(xt,it,Ft)}return it}function Zr(){const it=Rr(ar());return qe(p.OpenParen)?Sr(it):it}function Sr(it){let xt=new O(it,kr());return xt=Rr(xt),qe(p.OpenParen)&&(xt=Sr(xt)),xt}function kr(){me(p.OpenParen,"Expected opening parenthesis for arguments list");const it=en();return me(p.CloseParen,"Expected closing parenthesis for arguments list"),it}function en(){const it=[];for(;!qe(p.CloseParen);){let xt=Ls();if(qe(p.Equals)){if(++K,!(xt instanceof I))throw new SyntaxError("Expected identifier for keyword argument");const Ft=Ls();xt=new Ge(xt,Ft)}it.push(xt),qe(p.Comma)&&++K}return it}function cr(){const it=[];let xt=!1;for(;!qe(p.CloseSquareBracket);)qe(p.Colon)?(it.push(void 0),++K,xt=!0):(it.push(Ls()),qe(p.Colon)&&(++K,xt=!0));if(it.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(xt){if(it.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new tt(...it)}return it[0]}function Rr(it){for(;qe(p.Dot)||qe(p.OpenSquareBracket);){const xt=R[K];++K;let Ft;const Vs=xt.type!==p.Dot;if(Vs)Ft=cr(),me(p.CloseSquareBracket,"Expected closing square bracket");else if(Ft=ar(),Ft.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");it=new Q(it,Ft,Vs)}return it}function Ar(){let it=Nr();for(;qe(p.MultiplicativeBinaryOperator);){const xt=R[K];++K;const Ft=Nr();it=new Ee(xt,it,Ft)}return it}function Nr(){let it=jr();for(;qe(p.Is);){++K;const xt=qe(p.Not);xt&&++K;let Ft=ar();if(Ft instanceof le?Ft=new I(Ft.value.toString()):Ft instanceof oe&&(Ft=new I("none")),!(Ft instanceof I))throw new SyntaxError("Expected identifier for the test");it=new Oe(it,xt,Ft)}return it}function jr(){let it=Zr();for(;qe(p.Pipe);){++K;let xt=ar();if(!(xt instanceof I))throw new SyntaxError("Expected identifier for the filter");qe(p.OpenParen)&&(xt=Sr(xt)),it=new pe(it,xt)}return it}function ar(){const it=R[K];switch(it.type){case p.NumericLiteral:return++K,new E(Number(it.value));case p.StringLiteral:return++K,new L(it.value);case p.BooleanLiteral:return++K,new le(it.value.toLowerCase()==="true");case p.NullLiteral:return++K,new oe(null);case p.Identifier:return++K,new I(it.value);case p.OpenParen:{++K;const xt=bs();if(R[K].type!==p.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${R[K].type} instead`);return++K,xt}case p.OpenSquareBracket:{++K;const xt=[];for(;!qe(p.CloseSquareBracket);)xt.push(Ls()),qe(p.Comma)&&++K;return++K,new Te(xt)}case p.OpenCurlyBracket:{++K;const xt=new Map;for(;!qe(p.CloseCurlyBracket);){const Ft=Ls();me(p.Colon,"Expected colon between key and value in object literal");const Vs=Ls();xt.set(Ft,Vs),qe(p.Comma)&&++K}return++K,new ne(xt)}default:throw new SyntaxError(`Unexpected token: ${it.type}`)}}for(;K<R.length;)ae.body.push(Se());return ae}function J(R,ae,K=1){ae===void 0&&(ae=R,R=0);const me=[];for(let Se=R;Se<ae;Se+=K)me.push(Se);return me}function ce(R,ae,K,me=1){const Se=Math.sign(me);Se>=0?(ae=(ae??(ae=0))<0?Math.max(R.length+ae,0):Math.min(ae,R.length),K=(K??(K=R.length))<0?Math.max(R.length+K,0):Math.min(K,R.length)):(ae=(ae??(ae=R.length-1))<0?Math.max(R.length+ae,-1):Math.min(ae,R.length-1),K=(K??(K=-1))<-1?Math.max(R.length+K,-1):Math.min(K,R.length-1));const Re=[];for(let qe=ae;Se*qe<Se*K;qe+=me)Re.push(R[qe]);return Re}function $e(R){return R.replace(/\b\w/g,ae=>ae.toUpperCase())}var Be=class{constructor(R=void 0){fe(this,"type","RuntimeValue");fe(this,"value");fe(this,"builtins",new Map);this.value=R}__bool__(){return new Ke(!!this.value)}},Je=class extends Be{constructor(){super(...arguments);fe(this,"type","NumericValue")}},se=class extends Be{constructor(){super(...arguments);fe(this,"type","StringValue");fe(this,"builtins",new Map([["upper",new We(()=>new se(this.value.toUpperCase()))],["lower",new We(()=>new se(this.value.toLowerCase()))],["strip",new We(()=>new se(this.value.trim()))],["title",new We(()=>new se($e(this.value)))],["length",new Je(this.value.length)],["rstrip",new We(()=>new se(this.value.trimEnd()))],["lstrip",new We(()=>new se(this.value.trimStart()))],["split",new We(ae=>{const K=ae[0]??new Ne;if(!(K instanceof se||K instanceof Ne))throw new Error("sep argument must be a string or null");const me=ae[1]??new Je(-1);if(!(me instanceof Je))throw new Error("maxsplit argument must be a number");let Se=[];if(K instanceof Ne){const Re=this.value.trimStart();for(const{0:qe,index:at}of Re.matchAll(/\S+/g)){if(me.value!==-1&&Se.length>=me.value&&at!==void 0){Se.push(qe+Re.slice(at+qe.length));break}Se.push(qe)}}else{if(K.value==="")throw new Error("empty separator");Se=this.value.split(K.value),me.value!==-1&&Se.length>me.value&&Se.push(Se.splice(me.value).join(K.value))}return new ve(Se.map(Re=>new se(Re)))})]]))}},Ke=class extends Be{constructor(){super(...arguments);fe(this,"type","BooleanValue")}},Ue=class extends Be{constructor(){super(...arguments);fe(this,"type","ObjectValue");fe(this,"builtins",new Map([["get",new We(([ae,K])=>{if(!(ae instanceof se))throw new Error(`Object key must be a string: got ${ae.type}`);return this.value.get(ae.value)??K??new Ne})],["items",new We(()=>new ve(Array.from(this.value.entries()).map(([ae,K])=>new ve([new se(ae),K]))))]]))}__bool__(){return new Ke(this.value.size>0)}},ue=class extends Ue{constructor(){super(...arguments);fe(this,"type","KeywordArgumentsValue")}},ve=class extends Be{constructor(){super(...arguments);fe(this,"type","ArrayValue");fe(this,"builtins",new Map([["length",new Je(this.value.length)]]))}__bool__(){return new Ke(this.value.length>0)}},Ve=class extends ve{constructor(){super(...arguments);fe(this,"type","TupleValue")}},We=class extends Be{constructor(){super(...arguments);fe(this,"type","FunctionValue")}},Ne=class extends Be{constructor(){super(...arguments);fe(this,"type","NullValue")}},je=class extends Be{constructor(){super(...arguments);fe(this,"type","UndefinedValue")}},st=class{constructor(R){fe(this,"variables",new Map([["namespace",new We(R=>{if(R.length===0)return new Ue(new Map);if(R.length!==1||!(R[0]instanceof Ue))throw new Error("`namespace` expects either zero arguments or a single object argument");return R[0]})]]));fe(this,"tests",new Map([["boolean",R=>R.type==="BooleanValue"],["callable",R=>R instanceof We],["odd",R=>{if(R.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${R.type}`);return R.value%2!==0}],["even",R=>{if(R.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${R.type}`);return R.value%2===0}],["false",R=>R.type==="BooleanValue"&&!R.value],["true",R=>R.type==="BooleanValue"&&R.value],["none",R=>R.type==="NullValue"],["string",R=>R.type==="StringValue"],["number",R=>R.type==="NumericValue"],["integer",R=>R.type==="NumericValue"&&Number.isInteger(R.value)],["iterable",R=>R.type==="ArrayValue"||R.type==="StringValue"],["mapping",R=>R.type==="ObjectValue"],["lower",R=>{const ae=R.value;return R.type==="StringValue"&&ae===ae.toLowerCase()}],["upper",R=>{const ae=R.value;return R.type==="StringValue"&&ae===ae.toUpperCase()}],["none",R=>R.type==="NullValue"],["defined",R=>R.type!=="UndefinedValue"],["undefined",R=>R.type==="UndefinedValue"],["equalto",(R,ae)=>R.value===ae.value],["eq",(R,ae)=>R.value===ae.value]]));this.parent=R}set(R,ae){return this.declareVariable(R,pt(ae))}declareVariable(R,ae){if(this.variables.has(R))throw new SyntaxError(`Variable already declared: ${R}`);return this.variables.set(R,ae),ae}setVariable(R,ae){return this.variables.set(R,ae),ae}resolve(R){if(this.variables.has(R))return this;if(this.parent)return this.parent.resolve(R);throw new Error(`Unknown variable: ${R}`)}lookupVariable(R){try{return this.resolve(R).variables.get(R)??new je}catch{return new je}}},ut=class{constructor(R){fe(this,"global");this.global=R??new st}run(R){return this.evaluate(R,this.global)}evaluateBinaryExpression(R,ae){const K=this.evaluate(R.left,ae);switch(R.operator.value){case"and":return K.__bool__().value?this.evaluate(R.right,ae):K;case"or":return K.__bool__().value?K:this.evaluate(R.right,ae)}const me=this.evaluate(R.right,ae);switch(R.operator.value){case"==":return new Ke(K.value==me.value);case"!=":return new Ke(K.value!=me.value)}if(K instanceof je||me instanceof je)throw new Error("Cannot perform operation on undefined values");if(K instanceof Ne||me instanceof Ne)throw new Error("Cannot perform operation on null values");if(K instanceof Je&&me instanceof Je)switch(R.operator.value){case"+":return new Je(K.value+me.value);case"-":return new Je(K.value-me.value);case"*":return new Je(K.value*me.value);case"/":return new Je(K.value/me.value);case"%":return new Je(K.value%me.value);case"<":return new Ke(K.value<me.value);case">":return new Ke(K.value>me.value);case">=":return new Ke(K.value>=me.value);case"<=":return new Ke(K.value<=me.value)}else if(K instanceof ve&&me instanceof ve)switch(R.operator.value){case"+":return new ve(K.value.concat(me.value))}else if(me instanceof ve){const Se=me.value.find(Re=>Re.value===K.value)!==void 0;switch(R.operator.value){case"in":return new Ke(Se);case"not in":return new Ke(!Se)}}if(K instanceof se||me instanceof se)switch(R.operator.value){case"+":return new se(K.value.toString()+me.value.toString())}if(K instanceof se&&me instanceof se)switch(R.operator.value){case"in":return new Ke(me.value.includes(K.value));case"not in":return new Ke(!me.value.includes(K.value))}if(K instanceof se&&me instanceof Ue)switch(R.operator.value){case"in":return new Ke(me.value.has(K.value));case"not in":return new Ke(!me.value.has(K.value))}throw new SyntaxError(`Unknown operator "${R.operator.value}" between ${K.type} and ${me.type}`)}evaluateArguments(R,ae){const K=[],me=new Map;for(const Se of R)if(Se.type==="KeywordArgumentExpression"){const Re=Se;me.set(Re.key.value,this.evaluate(Re.value,ae))}else{if(me.size>0)throw new Error("Positional arguments must come before keyword arguments");K.push(this.evaluate(Se,ae))}return[K,me]}evaluateFilterExpression(R,ae){const K=this.evaluate(R.operand,ae);if(R.filter.type==="Identifier"){const me=R.filter;if(me.value==="tojson")return new se(lt(K));if(K instanceof ve)switch(me.value){case"list":return K;case"first":return K.value[0];case"last":return K.value[K.value.length-1];case"length":return new Je(K.value.length);case"reverse":return new ve(K.value.reverse());case"sort":return new ve(K.value.sort((Se,Re)=>{if(Se.type!==Re.type)throw new Error(`Cannot compare different types: ${Se.type} and ${Re.type}`);switch(Se.type){case"NumericValue":return Se.value-Re.value;case"StringValue":return Se.value.localeCompare(Re.value);default:throw new Error(`Cannot compare type: ${Se.type}`)}}));case"join":return new se(K.value.map(Se=>Se.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${me.value}`)}else if(K instanceof se)switch(me.value){case"length":return new Je(K.value.length);case"upper":return new se(K.value.toUpperCase());case"lower":return new se(K.value.toLowerCase());case"title":return new se($e(K.value));case"capitalize":return new se(K.value.charAt(0).toUpperCase()+K.value.slice(1));case"trim":return new se(K.value.trim());case"indent":return new se(K.value.split(`
`).map((Se,Re)=>Re===0||Se.length===0?Se:"    "+Se).join(`
`));case"join":case"string":return K;default:throw new Error(`Unknown StringValue filter: ${me.value}`)}else if(K instanceof Je)switch(me.value){case"abs":return new Je(Math.abs(K.value));default:throw new Error(`Unknown NumericValue filter: ${me.value}`)}else if(K instanceof Ue)switch(me.value){case"items":return new ve(Array.from(K.value.entries()).map(([Se,Re])=>new ve([new se(Se),Re])));case"length":return new Je(K.value.size);default:throw new Error(`Unknown ObjectValue filter: ${me.value}`)}throw new Error(`Cannot apply filter "${me.value}" to type: ${K.type}`)}else if(R.filter.type==="CallExpression"){const me=R.filter;if(me.callee.type!=="Identifier")throw new Error(`Unknown filter: ${me.callee.type}`);const Se=me.callee.value;if(Se==="tojson"){const[,Re]=this.evaluateArguments(me.args,ae),qe=Re.get("indent")??new Ne;if(!(qe instanceof Je||qe instanceof Ne))throw new Error("If set, indent must be a number");return new se(lt(K,qe.value))}else if(Se==="join"){let Re;if(K instanceof se)Re=Array.from(K.value);else if(K instanceof ve)Re=K.value.map(vt=>vt.value);else throw new Error(`Cannot apply filter "${Se}" to type: ${K.type}`);const[qe,at]=this.evaluateArguments(me.args,ae),ct=qe.at(0)??at.get("separator")??new se("");if(!(ct instanceof se))throw new Error("separator must be a string");return new se(Re.join(ct.value))}if(K instanceof ve){switch(Se){case"selectattr":case"rejectattr":{const Re=Se==="selectattr";if(K.value.some(kt=>!(kt instanceof Ue)))throw new Error(`\`${Se}\` can only be applied to array of objects`);if(me.args.some(kt=>kt.type!=="StringLiteral"))throw new Error(`arguments of \`${Se}\` must be strings`);const[qe,at,ct]=me.args.map(kt=>this.evaluate(kt,ae));let vt;if(at){const kt=ae.tests.get(at.value);if(!kt)throw new Error(`Unknown test: ${at.value}`);vt=kt}else vt=(...kt)=>kt[0].__bool__().value;const $t=K.value.filter(kt=>{const is=kt.value.get(qe.value),bs=is?vt(is,ct):!1;return Re?bs:!bs});return new ve($t)}case"map":{const[,Re]=this.evaluateArguments(me.args,ae);if(Re.has("attribute")){const qe=Re.get("attribute");if(!(qe instanceof se))throw new Error("attribute must be a string");const at=Re.get("default"),ct=K.value.map(vt=>{if(!(vt instanceof Ue))throw new Error("items in map must be an object");return vt.value.get(qe.value)??at??new je});return new ve(ct)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Se}`)}else if(K instanceof se){switch(Se){case"indent":{const[Re,qe]=this.evaluateArguments(me.args,ae),at=Re.at(0)??qe.get("width")??new Je(4);if(!(at instanceof Je))throw new Error("width must be a number");const ct=Re.at(1)??qe.get("first")??new Ke(!1),vt=Re.at(2)??qe.get("blank")??new Ke(!1),$t=K.value.split(`
`),kt=" ".repeat(at.value),is=$t.map((bs,$s)=>!ct.value&&$s===0||!vt.value&&bs.length===0?bs:kt+bs);return new se(is.join(`
`))}}throw new Error(`Unknown StringValue filter: ${Se}`)}else throw new Error(`Cannot apply filter "${Se}" to type: ${K.type}`)}throw new Error(`Unknown filter: ${R.filter.type}`)}evaluateTestExpression(R,ae){const K=this.evaluate(R.operand,ae),me=ae.tests.get(R.test.value);if(!me)throw new Error(`Unknown test: ${R.test.value}`);const Se=me(K);return new Ke(R.negate?!Se:Se)}evaluateUnaryExpression(R,ae){const K=this.evaluate(R.argument,ae);switch(R.operator.value){case"not":return new Ke(!K.value);default:throw new SyntaxError(`Unknown operator: ${R.operator.value}`)}}evalProgram(R,ae){return this.evaluateBlock(R.body,ae)}evaluateBlock(R,ae){let K="";for(const me of R){const Se=this.evaluate(me,ae);Se.type!=="NullValue"&&Se.type!=="UndefinedValue"&&(K+=Se.value)}return new se(K)}evaluateIdentifier(R,ae){return ae.lookupVariable(R.value)}evaluateCallExpression(R,ae){const[K,me]=this.evaluateArguments(R.args,ae);me.size>0&&K.push(new ue(me));const Se=this.evaluate(R.callee,ae);if(Se.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Se.type}`);return Se.value(K,ae)}evaluateSliceExpression(R,ae,K){if(!(R instanceof ve||R instanceof se))throw new Error("Slice object must be an array or string");const me=this.evaluate(ae.start,K),Se=this.evaluate(ae.stop,K),Re=this.evaluate(ae.step,K);if(!(me instanceof Je||me instanceof je))throw new Error("Slice start must be numeric or undefined");if(!(Se instanceof Je||Se instanceof je))throw new Error("Slice stop must be numeric or undefined");if(!(Re instanceof Je||Re instanceof je))throw new Error("Slice step must be numeric or undefined");return R instanceof ve?new ve(ce(R.value,me.value,Se.value,Re.value)):new se(ce(Array.from(R.value),me.value,Se.value,Re.value).join(""))}evaluateMemberExpression(R,ae){const K=this.evaluate(R.object,ae);let me;if(R.computed){if(R.property.type==="SliceExpression")return this.evaluateSliceExpression(K,R.property,ae);me=this.evaluate(R.property,ae)}else me=new se(R.property.value);let Se;if(K instanceof Ue){if(!(me instanceof se))throw new Error(`Cannot access property with non-string: got ${me.type}`);Se=K.value.get(me.value)??K.builtins.get(me.value)}else if(K instanceof ve||K instanceof se)if(me instanceof Je)Se=K.value.at(me.value),K instanceof se&&(Se=new se(K.value.at(me.value)));else if(me instanceof se)Se=K.builtins.get(me.value);else throw new Error(`Cannot access property with non-string/non-number: got ${me.type}`);else{if(!(me instanceof se))throw new Error(`Cannot access property with non-string: got ${me.type}`);Se=K.builtins.get(me.value)}return Se instanceof Be?Se:new je}evaluateSet(R,ae){const K=this.evaluate(R.value,ae);if(R.assignee.type==="Identifier"){const me=R.assignee.value;ae.setVariable(me,K)}else if(R.assignee.type==="MemberExpression"){const me=R.assignee,Se=this.evaluate(me.object,ae);if(!(Se instanceof Ue))throw new Error("Cannot assign to member of non-object");if(me.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Se.value.set(me.property.value,K)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(R.assignee)}`);return new Ne}evaluateIf(R,ae){const K=this.evaluate(R.test,ae);return this.evaluateBlock(K.__bool__().value?R.body:R.alternate,ae)}evaluateFor(R,ae){const K=new st(ae);let me,Se;if(R.iterable.type==="SelectExpression"){const vt=R.iterable;Se=this.evaluate(vt.iterable,K),me=vt.test}else Se=this.evaluate(R.iterable,K);if(!(Se instanceof ve))throw new Error(`Expected iterable type in for loop: got ${Se.type}`);const Re=[],qe=[];for(let vt=0;vt<Se.value.length;++vt){const $t=new st(K),kt=Se.value[vt];let is;if(R.loopvar.type==="Identifier")is=bs=>bs.setVariable(R.loopvar.value,kt);else if(R.loopvar.type==="TupleLiteral"){const bs=R.loopvar;if(kt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${kt.type}`);const $s=kt;if(bs.value.length!==$s.value.length)throw new Error(`Too ${bs.value.length>$s.value.length?"few":"many"} items to unpack`);is=Ls=>{for(let sr=0;sr<bs.value.length;++sr){if(bs.value[sr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${bs.value[sr].type}`);Ls.setVariable(bs.value[sr].value,$s.value[sr])}}}else throw new Error(`Invalid loop variable(s): ${R.loopvar.type}`);me&&(is($t),!this.evaluate(me,$t).__bool__().value)||(Re.push(kt),qe.push(is))}let at="",ct=!0;for(let vt=0;vt<Re.length;++vt){const $t=new Map([["index",new Je(vt+1)],["index0",new Je(vt)],["revindex",new Je(Re.length-vt)],["revindex0",new Je(Re.length-vt-1)],["first",new Ke(vt===0)],["last",new Ke(vt===Re.length-1)],["length",new Je(Re.length)],["previtem",vt>0?Re[vt-1]:new je],["nextitem",vt<Re.length-1?Re[vt+1]:new je]]);K.setVariable("loop",new Ue($t)),qe[vt](K);const kt=this.evaluateBlock(R.body,K);at+=kt.value,ct=!1}if(ct){const vt=this.evaluateBlock(R.defaultBlock,K);at+=vt.value}return new se(at)}evaluateMacro(R,ae){return ae.setVariable(R.name.value,new We((K,me)=>{var qe;const Se=new st(me);K=K.slice();let Re;((qe=K.at(-1))==null?void 0:qe.type)==="KeywordArgumentsValue"&&(Re=K.pop());for(let at=0;at<R.args.length;++at){const ct=R.args[at],vt=K[at];if(ct.type==="Identifier"){const $t=ct;if(!vt)throw new Error(`Missing positional argument: ${$t.value}`);Se.setVariable($t.value,vt)}else if(ct.type==="KeywordArgumentExpression"){const $t=ct,kt=vt??(Re==null?void 0:Re.value.get($t.key.value))??this.evaluate($t.value,Se);Se.setVariable($t.key.value,kt)}else throw new Error(`Unknown argument type: ${ct.type}`)}return this.evaluateBlock(R.body,Se)})),new Ne}evaluate(R,ae){if(R===void 0)return new je;switch(R.type){case"Program":return this.evalProgram(R,ae);case"Set":return this.evaluateSet(R,ae);case"If":return this.evaluateIf(R,ae);case"For":return this.evaluateFor(R,ae);case"Macro":return this.evaluateMacro(R,ae);case"NumericLiteral":return new Je(Number(R.value));case"StringLiteral":return new se(R.value);case"BooleanLiteral":return new Ke(R.value);case"NullLiteral":return new Ne(R.value);case"ArrayLiteral":return new ve(R.value.map(K=>this.evaluate(K,ae)));case"TupleLiteral":return new Ve(R.value.map(K=>this.evaluate(K,ae)));case"ObjectLiteral":{const K=new Map;for(const[me,Se]of R.value){const Re=this.evaluate(me,ae);if(!(Re instanceof se))throw new Error(`Object keys must be strings: got ${Re.type}`);K.set(Re.value,this.evaluate(Se,ae))}return new Ue(K)}case"Identifier":return this.evaluateIdentifier(R,ae);case"CallExpression":return this.evaluateCallExpression(R,ae);case"MemberExpression":return this.evaluateMemberExpression(R,ae);case"UnaryExpression":return this.evaluateUnaryExpression(R,ae);case"BinaryExpression":return this.evaluateBinaryExpression(R,ae);case"FilterExpression":return this.evaluateFilterExpression(R,ae);case"TestExpression":return this.evaluateTestExpression(R,ae);default:throw new SyntaxError(`Unknown node type: ${R.type}`)}}};function pt(R){switch(typeof R){case"number":return new Je(R);case"string":return new se(R);case"boolean":return new Ke(R);case"undefined":return new je;case"object":return R===null?new Ne:Array.isArray(R)?new ve(R.map(pt)):new Ue(new Map(Object.entries(R).map(([ae,K])=>[ae,pt(K)])));case"function":return new We((ae,K)=>{const me=R(...ae.map(Se=>Se.value))??null;return pt(me)});default:throw new Error(`Cannot convert to runtime value: ${R}`)}}function lt(R,ae,K){const me=K??0;switch(R.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(R.value);case"ArrayValue":case"ObjectValue":{const Se=ae?" ".repeat(ae):"",Re=`
`+Se.repeat(me),qe=Re+Se;if(R.type==="ArrayValue"){const at=R.value.map(ct=>lt(ct,ae,me+1));return ae?`[${qe}${at.join(`,${qe}`)}${Re}]`:`[${at.join(", ")}]`}else{const at=Array.from(R.value.entries()).map(([ct,vt])=>{const $t=`"${ct}": ${lt(vt,ae,me+1)}`;return ae?`${qe}${$t}`:$t});return ae?`{${at.join(",")}${Re}}`:`{${at.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${R.type}`)}}var mt=class{constructor(R){fe(this,"parsed");const ae=M(R,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=be(ae)}render(R){const ae=new st;if(ae.set("false",!1),ae.set("true",!0),ae.set("raise_exception",Se=>{throw new Error(Se)}),ae.set("range",J),R)for(const[Se,Re]of Object.entries(R))ae.set(Se,Re);return new ut(ae).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(te,h,s)=>{s.r(h),s.d(h,{registerBackend:()=>A,resolveBackendAndExecutionProviders:()=>z});const p=new Map,w=[],A=(g,x,v)=>{if(x&&typeof x.init=="function"&&typeof x.createInferenceSessionHandler=="function"){const M=p.get(g);if(M===void 0)p.set(g,{backend:x,priority:v});else{if(M.priority>v)return;if(M.priority===v&&M.backend!==x)throw new Error(`cannot register backend "${g}" using priority ${v}`)}if(v>=0){const T=w.indexOf(g);T!==-1&&w.splice(T,1);for(let F=0;F<w.length;F++)if(p.get(w[F]).priority<=v){w.splice(F,0,g);return}w.push(g)}return}throw new TypeError("not a valid backend")},D=async g=>{const x=p.get(g);if(!x)return"backend not found.";if(x.initialized)return x.backend;if(x.aborted)return x.error;{const v=!!x.initPromise;try{return v||(x.initPromise=x.backend.init(g)),await x.initPromise,x.initialized=!0,x.backend}catch(M){return v||(x.error=`${M}`,x.aborted=!0),x.error}finally{delete x.initPromise}}},z=async g=>{const x=g.executionProviders||[],v=x.map(ie=>typeof ie=="string"?ie:ie.name),M=v.length===0?w:v;let T;const F=[],q=new Set;for(const ie of M){const G=await D(ie);typeof G=="string"?F.push({name:ie,err:G}):(T||(T=G),T===G&&q.add(ie))}if(!T)throw new Error(`no available backend found. ERR: ${F.map(ie=>`[${ie.name}] ${ie.err}`).join(", ")}`);for(const{name:ie,err:G}of F)v.includes(ie)&&console.warn(`removing requested execution provider "${ie}" from session options because it is not available: ${G}`);const re=x.filter(ie=>q.has(typeof ie=="string"?ie:ie.name));return[T,new Proxy(g,{get:(ie,G)=>G==="executionProviders"?re:Reflect.get(ie,G)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(te,h,s)=>{s.r(h),s.d(h,{registerBackend:()=>p.registerBackend});var p=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(te,h,s)=>{s.r(h),s.d(h,{env:()=>A});var p=s("./node_modules/onnxruntime-common/dist/esm/version.js");let w="warning";const A={wasm:{},webgl:{},webgpu:{},versions:{common:p.version},set logLevel(D){if(D!==void 0){if(typeof D!="string"||["verbose","info","warning","error","fatal"].indexOf(D)===-1)throw new Error(`Unsupported logging level: ${D}`);w=D}},get logLevel(){return w}};Object.defineProperty(A,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(te,h,s)=>{s.r(h),s.d(h,{env:()=>w});var p=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const w=p.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(te,h,s)=>{s.r(h),s.d(h,{InferenceSession:()=>A.InferenceSession,TRACE:()=>z.TRACE,TRACE_FUNC_BEGIN:()=>z.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>z.TRACE_FUNC_END,Tensor:()=>D.Tensor,TrainingSession:()=>g.TrainingSession,env:()=>w.env,registerBackend:()=>p.registerBackend});var p=s("./node_modules/onnxruntime-common/dist/esm/backend.js"),w=s("./node_modules/onnxruntime-common/dist/esm/env.js"),A=s("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),D=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),s("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var z=s("./node_modules/onnxruntime-common/dist/esm/trace.js");s("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),s("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var g=s("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(te,h,s)=>{s.r(h),s.d(h,{InferenceSession:()=>D});var p=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),w=s("./node_modules/onnxruntime-common/dist/esm/tensor.js"),A=s("./node_modules/onnxruntime-common/dist/esm/trace.js");class D{constructor(g){this.handler=g}async run(g,x,v){(0,A.TRACE_FUNC_BEGIN)();const M={};let T={};if(typeof g!="object"||g===null||g instanceof w.Tensor||Array.isArray(g))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let F=!0;if(typeof x=="object"){if(x===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(x instanceof w.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(x)){if(x.length===0)throw new TypeError("'fetches' cannot be an empty array.");F=!1;for(const ie of x){if(typeof ie!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(ie)===-1)throw new RangeError(`'fetches' contains invalid output name: ${ie}.`);M[ie]=null}if(typeof v=="object"&&v!==null)T=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else{let ie=!1;const G=Object.getOwnPropertyNames(x);for(const V of this.outputNames)if(G.indexOf(V)!==-1){const Q=x[V];(Q===null||Q instanceof w.Tensor)&&(ie=!0,F=!1,M[V]=Q)}if(ie){if(typeof v=="object"&&v!==null)T=v;else if(typeof v<"u")throw new TypeError("'options' must be an object.")}else T=x}}else if(typeof x<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const ie of this.inputNames)if(typeof g[ie]>"u")throw new Error(`input '${ie}' is missing in 'feeds'.`);if(F)for(const ie of this.outputNames)M[ie]=null;const q=await this.handler.run(g,M,T),re={};for(const ie in q)if(Object.hasOwnProperty.call(q,ie)){const G=q[ie];G instanceof w.Tensor?re[ie]=G:re[ie]=new w.Tensor(G.type,G.data,G.dims)}return(0,A.TRACE_FUNC_END)(),re}async release(){return this.handler.dispose()}static async create(g,x,v,M){(0,A.TRACE_FUNC_BEGIN)();let T,F={};if(typeof g=="string"){if(T=g,typeof x=="object"&&x!==null)F=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof Uint8Array){if(T=g,typeof x=="object"&&x!==null)F=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else if(g instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&g instanceof SharedArrayBuffer){const G=g;let V=0,Q=g.byteLength;if(typeof x=="object"&&x!==null)F=x;else if(typeof x=="number"){if(V=x,!Number.isSafeInteger(V))throw new RangeError("'byteOffset' must be an integer.");if(V<0||V>=G.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${G.byteLength}).`);if(Q=g.byteLength-V,typeof v=="number"){if(Q=v,!Number.isSafeInteger(Q))throw new RangeError("'byteLength' must be an integer.");if(Q<=0||V+Q>G.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${G.byteLength-V}].`);if(typeof M=="object"&&M!==null)F=M;else if(typeof M<"u")throw new TypeError("'options' must be an object.")}else if(typeof v<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof x<"u")throw new TypeError("'options' must be an object.");T=new Uint8Array(G,V,Q)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[q,re]=await(0,p.resolveBackendAndExecutionProviders)(F),ie=await q.createInferenceSessionHandler(T,re);return(0,A.TRACE_FUNC_END)(),new D(ie)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(te,h,s)=>{s.r(h),s.d(h,{InferenceSession:()=>w});var p=s("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const w=p.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(te,h,s)=>{s.r(h)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(te,h,s)=>{s.r(h)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(te,h,s)=>{s.r(h),s.d(h,{tensorToDataURL:()=>p,tensorToImageData:()=>w});const p=(A,D)=>{const z=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);z.width=A.dims[3],z.height=A.dims[2];const g=z.getContext("2d");if(g!=null){let x,v;(D==null?void 0:D.tensorLayout)!==void 0&&D.tensorLayout==="NHWC"?(x=A.dims[2],v=A.dims[3]):(x=A.dims[3],v=A.dims[2]);const M=(D==null?void 0:D.format)!==void 0?D.format:"RGB",T=D==null?void 0:D.norm;let F,q;T===void 0||T.mean===void 0?F=[255,255,255,255]:typeof T.mean=="number"?F=[T.mean,T.mean,T.mean,T.mean]:(F=[T.mean[0],T.mean[1],T.mean[2],0],T.mean[3]!==void 0&&(F[3]=T.mean[3])),T===void 0||T.bias===void 0?q=[0,0,0,0]:typeof T.bias=="number"?q=[T.bias,T.bias,T.bias,T.bias]:(q=[T.bias[0],T.bias[1],T.bias[2],0],T.bias[3]!==void 0&&(q[3]=T.bias[3]));const re=v*x;let ie=0,G=re,V=re*2,Q=-1;M==="RGBA"?(ie=0,G=re,V=re*2,Q=re*3):M==="RGB"?(ie=0,G=re,V=re*2):M==="RBG"&&(ie=0,V=re,G=re*2);for(let O=0;O<v;O++)for(let I=0;I<x;I++){const b=(A.data[ie++]-q[0])*F[0],E=(A.data[G++]-q[1])*F[1],L=(A.data[V++]-q[2])*F[2],le=Q===-1?255:(A.data[Q++]-q[3])*F[3];g.fillStyle="rgba("+b+","+E+","+L+","+le+")",g.fillRect(I,O,1,1)}if("toDataURL"in z)return z.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},w=(A,D)=>{const z=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let g;if(z!=null){let x,v,M;(D==null?void 0:D.tensorLayout)!==void 0&&D.tensorLayout==="NHWC"?(x=A.dims[2],v=A.dims[1],M=A.dims[3]):(x=A.dims[3],v=A.dims[2],M=A.dims[1]);const T=D!==void 0&&D.format!==void 0?D.format:"RGB",F=D==null?void 0:D.norm;let q,re;F===void 0||F.mean===void 0?q=[255,255,255,255]:typeof F.mean=="number"?q=[F.mean,F.mean,F.mean,F.mean]:(q=[F.mean[0],F.mean[1],F.mean[2],255],F.mean[3]!==void 0&&(q[3]=F.mean[3])),F===void 0||F.bias===void 0?re=[0,0,0,0]:typeof F.bias=="number"?re=[F.bias,F.bias,F.bias,F.bias]:(re=[F.bias[0],F.bias[1],F.bias[2],0],F.bias[3]!==void 0&&(re[3]=F.bias[3]));const ie=v*x;if(D!==void 0&&(D.format!==void 0&&M===4&&D.format!=="RGBA"||M===3&&D.format!=="RGB"&&D.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const G=4;let V=0,Q=1,O=2,I=3,b=0,E=ie,L=ie*2,le=-1;T==="RGBA"?(b=0,E=ie,L=ie*2,le=ie*3):T==="RGB"?(b=0,E=ie,L=ie*2):T==="RBG"&&(b=0,L=ie,E=ie*2),g=z.createImageData(x,v);for(let oe=0;oe<v*x;V+=G,Q+=G,O+=G,I+=G,oe++)g.data[V]=(A.data[b++]-re[0])*q[0],g.data[Q]=(A.data[E++]-re[1])*q[1],g.data[O]=(A.data[L++]-re[2])*q[2],g.data[I]=le===-1?255:(A.data[le++]-re[3])*q[3]}else throw new Error("Can not access image data");return g}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(te,h,s)=>{s.r(h)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(te,h,s)=>{s.r(h),s.d(h,{bufferToTensor:()=>w,tensorFromGpuBuffer:()=>z,tensorFromImage:()=>A,tensorFromMLTensor:()=>g,tensorFromPinnedBuffer:()=>x,tensorFromTexture:()=>D});var p=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const w=(v,M)=>{if(v===void 0)throw new Error("Image buffer must be defined");if(M.height===void 0||M.width===void 0)throw new Error("Image height and width must be defined");if(M.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:T,width:F}=M,q=M.norm??{mean:255,bias:0};let re,ie;typeof q.mean=="number"?re=[q.mean,q.mean,q.mean,q.mean]:re=[q.mean[0],q.mean[1],q.mean[2],q.mean[3]??255],typeof q.bias=="number"?ie=[q.bias,q.bias,q.bias,q.bias]:ie=[q.bias[0],q.bias[1],q.bias[2],q.bias[3]??0];const G=M.format!==void 0?M.format:"RGBA",V=M.tensorFormat!==void 0&&M.tensorFormat!==void 0?M.tensorFormat:"RGB",Q=T*F,O=V==="RGBA"?new Float32Array(Q*4):new Float32Array(Q*3);let I=4,b=0,E=1,L=2,le=3,oe=0,Te=Q,we=Q*2,ne=-1;G==="RGB"&&(I=3,b=0,E=1,L=2,le=-1),V==="RGBA"?ne=Q*3:V==="RBG"?(oe=0,we=Q,Te=Q*2):V==="BGR"&&(we=0,Te=Q,oe=Q*2);for(let pe=0;pe<Q;pe++,b+=I,L+=I,E+=I,le+=I)O[oe++]=(v[b]+ie[0])/re[0],O[Te++]=(v[E]+ie[1])/re[1],O[we++]=(v[L]+ie[2])/re[2],ne!==-1&&le!==-1&&(O[ne++]=(v[le]+ie[3])/re[3]);return V==="RGBA"?new p.Tensor("float32",O,[1,4,T,F]):new p.Tensor("float32",O,[1,3,T,F])},A=async(v,M)=>{const T=typeof HTMLImageElement<"u"&&v instanceof HTMLImageElement,F=typeof ImageData<"u"&&v instanceof ImageData,q=typeof ImageBitmap<"u"&&v instanceof ImageBitmap,re=typeof v=="string";let ie,G=M??{};const V=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},Q=O=>typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||O instanceof OffscreenCanvas?O.getContext("2d"):null;if(T){const O=V();O.width=v.width,O.height=v.height;const I=Q(O);if(I!=null){let b=v.height,E=v.width;if(M!==void 0&&M.resizedHeight!==void 0&&M.resizedWidth!==void 0&&(b=M.resizedHeight,E=M.resizedWidth),M!==void 0){if(G=M,M.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");G.tensorFormat="RGBA",G.height=b,G.width=E}else G.tensorFormat="RGBA",G.height=b,G.width=E;I.drawImage(v,0,0),ie=I.getImageData(0,0,E,b).data}else throw new Error("Can not access image data")}else if(F){let O,I;if(M!==void 0&&M.resizedWidth!==void 0&&M.resizedHeight!==void 0?(O=M.resizedHeight,I=M.resizedWidth):(O=v.height,I=v.width),M!==void 0&&(G=M),G.format="RGBA",G.height=O,G.width=I,M!==void 0){const b=V();b.width=I,b.height=O;const E=Q(b);if(E!=null)E.putImageData(v,0,0),ie=E.getImageData(0,0,I,O).data;else throw new Error("Can not access image data")}else ie=v.data}else if(q){if(M===void 0)throw new Error("Please provide image config with format for Imagebitmap");const O=V();O.width=v.width,O.height=v.height;const I=Q(O);if(I!=null){const b=v.height,E=v.width;return I.drawImage(v,0,0,E,b),ie=I.getImageData(0,0,E,b).data,G.height=b,G.width=E,w(ie,G)}else throw new Error("Can not access image data")}else{if(re)return new Promise((O,I)=>{const b=V(),E=Q(b);if(!v||!E)return I();const L=new Image;L.crossOrigin="Anonymous",L.src=v,L.onload=()=>{b.width=L.width,b.height=L.height,E.drawImage(L,0,0,b.width,b.height);const le=E.getImageData(0,0,b.width,b.height);G.height=b.height,G.width=b.width,O(w(le.data,G))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(ie!==void 0)return w(ie,G);throw new Error("Input data provided is not supported - aborted tensor creation")},D=(v,M)=>{const{width:T,height:F,download:q,dispose:re}=M,ie=[1,F,T,4];return new p.Tensor({location:"texture",type:"float32",texture:v,dims:ie,download:q,dispose:re})},z=(v,M)=>{const{dataType:T,dims:F,download:q,dispose:re}=M;return new p.Tensor({location:"gpu-buffer",type:T??"float32",gpuBuffer:v,dims:F,download:q,dispose:re})},g=(v,M)=>{const{dataType:T,dims:F,download:q,dispose:re}=M;return new p.Tensor({location:"ml-tensor",type:T??"float32",mlTensor:v,dims:F,download:q,dispose:re})},x=(v,M,T)=>new p.Tensor({location:"cpu-pinned",type:v,data:M,dims:T??[M.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(te,h,s)=>{s.r(h)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(te,h,s)=>{s.r(h),s.d(h,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>w,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>p,checkTypedArray:()=>D});const p=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),w=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let A=!1;const D=()=>{if(!A){A=!0;const z=typeof BigInt64Array<"u"&&BigInt64Array.from,g=typeof BigUint64Array<"u"&&BigUint64Array.from,x=typeof Float16Array<"u"&&Float16Array.from;z&&(p.set("int64",BigInt64Array),w.set(BigInt64Array,"int64")),g&&(p.set("uint64",BigUint64Array),w.set(BigUint64Array,"uint64")),x?(p.set("float16",Float16Array),w.set(Float16Array,"float16")):p.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(te,h,s)=>{s.r(h),s.d(h,{Tensor:()=>z});var p=s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),w=s("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),A=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),D=s("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class z{constructor(x,v,M){(0,A.checkTypedArray)();let T,F;if(typeof x=="object"&&"location"in x)switch(this.dataLocation=x.location,T=x.type,F=x.dims,x.location){case"cpu-pinned":{const re=A.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(T);if(!re)throw new TypeError(`unsupported type "${T}" to create tensor from pinned buffer`);if(!(x.data instanceof re))throw new TypeError(`buffer should be of type ${re.name}`);this.cpuData=x.data;break}case"texture":{if(T!=="float32")throw new TypeError(`unsupported type "${T}" to create tensor from texture`);this.gpuTextureData=x.texture,this.downloader=x.download,this.disposer=x.dispose;break}case"gpu-buffer":{if(T!=="float32"&&T!=="float16"&&T!=="int32"&&T!=="int64"&&T!=="uint32"&&T!=="uint8"&&T!=="bool"&&T!=="uint4"&&T!=="int4")throw new TypeError(`unsupported type "${T}" to create tensor from gpu buffer`);this.gpuBufferData=x.gpuBuffer,this.downloader=x.download,this.disposer=x.dispose;break}case"ml-tensor":{if(T!=="float32"&&T!=="float16"&&T!=="int32"&&T!=="int64"&&T!=="uint32"&&T!=="uint64"&&T!=="int8"&&T!=="uint8"&&T!=="bool")throw new TypeError(`unsupported type "${T}" to create tensor from MLTensor`);this.mlTensorData=x.mlTensor,this.downloader=x.download,this.disposer=x.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let re,ie;if(typeof x=="string")if(T=x,ie=M,x==="string"){if(!Array.isArray(v))throw new TypeError("A string tensor's data must be a string array.");re=v}else{const G=A.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(x);if(G===void 0)throw new TypeError(`Unsupported tensor type: ${x}.`);if(Array.isArray(v)){if(x==="float16"&&G===Uint16Array||x==="uint4"||x==="int4")throw new TypeError(`Creating a ${x} tensor from number array is not supported. Please use ${G.name} as data.`);x==="uint64"||x==="int64"?re=G.from(v,BigInt):re=G.from(v)}else if(v instanceof G)re=v;else if(v instanceof Uint8ClampedArray)if(x==="uint8")re=Uint8Array.from(v);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${T} tensor's data must be type of ${G}`)}else if(ie=v,Array.isArray(x)){if(x.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const G=typeof x[0];if(G==="string")T="string",re=x;else if(G==="boolean")T="bool",re=Uint8Array.from(x);else throw new TypeError(`Invalid element type of data array: ${G}.`)}else if(x instanceof Uint8ClampedArray)T="uint8",re=Uint8Array.from(x);else{const G=A.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(x.constructor);if(G===void 0)throw new TypeError(`Unsupported type for tensor data: ${x.constructor}.`);T=G,re=x}if(ie===void 0)ie=[re.length];else if(!Array.isArray(ie))throw new TypeError("A tensor's dims must be a number array");F=ie,this.cpuData=re,this.dataLocation="cpu"}const q=(0,D.calculateSize)(F);if(this.cpuData&&q!==this.cpuData.length&&!((T==="uint4"||T==="int4")&&Math.ceil(q/2)===this.cpuData.length))throw new Error(`Tensor's size(${q}) does not match data length(${this.cpuData.length}).`);this.type=T,this.dims=F,this.size=q}static async fromImage(x,v){return(0,w.tensorFromImage)(x,v)}static fromTexture(x,v){return(0,w.tensorFromTexture)(x,v)}static fromGpuBuffer(x,v){return(0,w.tensorFromGpuBuffer)(x,v)}static fromMLTensor(x,v){return(0,w.tensorFromMLTensor)(x,v)}static fromPinnedBuffer(x,v,M){return(0,w.tensorFromPinnedBuffer)(x,v,M)}toDataURL(x){return(0,p.tensorToDataURL)(this,x)}toImageData(x){return(0,p.tensorToImageData)(this,x)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(x){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const v=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=v,x&&this.disposer&&(this.disposer(),this.disposer=void 0),v}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(x){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,D.tensorReshape)(this,x)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(te,h,s)=>{s.r(h),s.d(h,{calculateSize:()=>w,tensorReshape:()=>A});var p=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const w=D=>{let z=1;for(let g=0;g<D.length;g++){const x=D[g];if(typeof x!="number"||!Number.isSafeInteger(x))throw new TypeError(`dims[${g}] must be an integer, got: ${x}`);if(x<0)throw new RangeError(`dims[${g}] must be a non-negative integer, got: ${x}`);z*=x}return z},A=(D,z)=>{switch(D.location){case"cpu":return new p.Tensor(D.type,D.data,z);case"cpu-pinned":return new p.Tensor({location:"cpu-pinned",data:D.data,type:D.type,dims:z});case"texture":return new p.Tensor({location:"texture",texture:D.texture,type:D.type,dims:z});case"gpu-buffer":return new p.Tensor({location:"gpu-buffer",gpuBuffer:D.gpuBuffer,type:D.type,dims:z});case"ml-tensor":return new p.Tensor({location:"ml-tensor",mlTensor:D.mlTensor,type:D.type,dims:z});default:throw new Error(`tensorReshape: tensor location ${D.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(te,h,s)=>{s.r(h),s.d(h,{Tensor:()=>w});var p=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const w=p.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(te,h,s)=>{s.r(h),s.d(h,{TRACE:()=>w,TRACE_FUNC_BEGIN:()=>D,TRACE_FUNC_END:()=>z});var p=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const w=(g,x)=>{(typeof p.env.trace>"u"?!p.env.wasm.trace:!p.env.trace)||console.timeStamp(`${g}::ORT::${x}`)},A=(g,x)=>{var T;const v=((T=new Error().stack)==null?void 0:T.split(/\r\n|\r|\n/g))||[];let M=!1;for(let F=0;F<v.length;F++){if(M&&!v[F].includes("TRACE_FUNC")){let q=`FUNC_${g}::${v[F].trim().split(" ")[1]}`;x&&(q+=`::${x}`),w("CPU",q);return}v[F].includes("TRACE_FUNC")&&(M=!0)}},D=g=>{(typeof p.env.trace>"u"?!p.env.wasm.trace:!p.env.trace)||A("BEGIN",g)},z=g=>{(typeof p.env.trace>"u"?!p.env.wasm.trace:!p.env.trace)||A("END",g)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(te,h,s)=>{s.r(h),s.d(h,{TrainingSession:()=>D});var p=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),w=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");const A="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class D{constructor(g,x,v){this.handler=g,this.hasOptimizerModel=x,this.hasEvalModel=v}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(g,x){const v=g.evalModel||"",M=g.optimizerModel||"",T=x||{},[F,q]=await(0,p.resolveBackendAndExecutionProviders)(T);if(F.createTrainingSessionHandler){const re=await F.createTrainingSessionHandler(g.checkpointState,g.trainModel,v,M,q);return new D(re,!!g.optimizerModel,!!g.evalModel)}else throw new Error(A)}typeNarrowingForRunStep(g,x,v,M,T){const F={};let q={};if(typeof v!="object"||v===null||v instanceof w.Tensor||Array.isArray(v))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let re=!0;if(typeof M=="object"){if(M===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(M instanceof w.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(M)){if(M.length===0)throw new TypeError("'fetches' cannot be an empty array.");re=!1;for(const ie of M){if(typeof ie!="string")throw new TypeError("'fetches' must be a string array or an object.");if(x.indexOf(ie)===-1)throw new RangeError(`'fetches' contains invalid output name: ${ie}.`);F[ie]=null}if(typeof T=="object"&&T!==null)q=T;else if(typeof T<"u")throw new TypeError("'options' must be an object.")}else{let ie=!1;const G=Object.getOwnPropertyNames(M);for(const V of x)if(G.indexOf(V)!==-1){const Q=M[V];(Q===null||Q instanceof w.Tensor)&&(ie=!0,re=!1,F[V]=Q)}if(ie){if(typeof T=="object"&&T!==null)q=T;else if(typeof T<"u")throw new TypeError("'options' must be an object.")}else q=M}}else if(typeof M<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const ie of g)if(typeof v[ie]>"u")throw new Error(`input '${ie}' is missing in 'feeds'.`);if(re)for(const ie of x)F[ie]=null;return[F,q]}convertHandlerReturnTypeToMapOfTensors(g){const x={};for(const v in g)if(Object.hasOwnProperty.call(g,v)){const M=g[v];M instanceof w.Tensor?x[v]=M:x[v]=new w.Tensor(M.type,M.data,M.dims)}return x}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(g,x,v){const[M,T]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,g,x,v),F=await this.handler.runTrainStep(g,M,T);return this.convertHandlerReturnTypeToMapOfTensors(F)}async runOptimizerStep(g){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(g||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(g,x,v){if(this.hasEvalModel){const[M,T]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,g,x,v),F=await this.handler.runEvalStep(g,M,T);return this.convertHandlerReturnTypeToMapOfTensors(F)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(g=!0){return this.handler.getParametersSize(g)}async loadParametersBuffer(g,x=!0){const v=await this.getParametersSize(x);if(g.length!==4*v)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(g,x)}async getContiguousParameters(g=!0){return this.handler.getContiguousParameters(g)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(te,h,s)=>{s.r(h),s.d(h,{TrainingSession:()=>w});var p=s("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const w=p.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(te,h,s)=>{s.r(h),s.d(h,{version:()=>p});const p="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(te,h,s)=>{s.r(h),s.d(h,{InferenceSession:()=>lt,TRACE:()=>Ve,TRACE_FUNC_BEGIN:()=>Ne,TRACE_FUNC_END:()=>je,Tensor:()=>ue,default:()=>af,env:()=>L,registerBackend:()=>q});/*!
 * ONNX Runtime Web v1.21.0-dev.20250206-d981b153d3
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var p=Object.defineProperty,w=Object.getOwnPropertyDescriptor,A=Object.getOwnPropertyNames,D=Object.prototype.hasOwnProperty,z=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),g=(e,t)=>()=>(e&&(t=e(e=0)),t),x=(e,t)=>{for(var r in t)p(e,r,{get:t[r],enumerable:!0})},v=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of A(t))!D.call(e,i)&&i!==r&&p(e,i,{get:()=>t[i],enumerable:!(n=w(t,i))||n.enumerable});return e},M=e=>v(p({},"__esModule",{value:!0}),e),T,F,q,re,ie,G=g(()=>{T=new Map,F=[],q=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let n=T.get(e);if(n===void 0)T.set(e,{backend:t,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=F.indexOf(e);i!==-1&&F.splice(i,1);for(let a=0;a<F.length;a++)if(T.get(F[a]).priority<=r){F.splice(a,0,e);return}F.push(e)}return}throw new TypeError("not a valid backend")},re=async e=>{let t=T.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},ie=async e=>{let t=e.executionProviders||[],r=t.map(m=>typeof m=="string"?m:m.name),n=r.length===0?F:r,i,a=[],o=new Set;for(let m of n){let _=await re(m);typeof _=="string"?a.push({name:m,err:_}):(i||(i=_),i===_&&o.add(m))}if(!i)throw new Error(`no available backend found. ERR: ${a.map(m=>`[${m.name}] ${m.err}`).join(", ")}`);for(let{name:m,err:_}of a)r.includes(m)&&console.warn(`removing requested execution provider "${m}" from session options because it is not available: ${_}`);let u=t.filter(m=>o.has(typeof m=="string"?m:m.name));return[i,new Proxy(e,{get:(m,_)=>_==="executionProviders"?u:Reflect.get(m,_)})]}}),V=g(()=>{G()}),Q,O=g(()=>{Q="1.21.0-dev.20250206-d981b153d3"}),I,b,E=g(()=>{O(),I="warning",b={wasm:{},webgl:{},webgpu:{},versions:{common:Q},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);I=e}},get logLevel(){return I}},Object.defineProperty(b,"logLevel",{enumerable:!0})}),L,le=g(()=>{E(),L=b}),oe,Te,we=g(()=>{oe=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let n=r.getContext("2d");if(n!=null){let i,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],a=e.dims[3]):(i=e.dims[3],a=e.dims[2]);let o=(t==null?void 0:t.format)!==void 0?t.format:"RGB",u=t==null?void 0:t.norm,m,_;u===void 0||u.mean===void 0?m=[255,255,255,255]:typeof u.mean=="number"?m=[u.mean,u.mean,u.mean,u.mean]:(m=[u.mean[0],u.mean[1],u.mean[2],0],u.mean[3]!==void 0&&(m[3]=u.mean[3])),u===void 0||u.bias===void 0?_=[0,0,0,0]:typeof u.bias=="number"?_=[u.bias,u.bias,u.bias,u.bias]:(_=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(_[3]=u.bias[3]));let S=a*i,k=0,d=S,N=S*2,j=-1;o==="RGBA"?(k=0,d=S,N=S*2,j=S*3):o==="RGB"?(k=0,d=S,N=S*2):o==="RBG"&&(k=0,N=S,d=S*2);for(let W=0;W<a;W++)for(let Z=0;Z<i;Z++){let ee=(e.data[k++]-_[0])*m[0],Y=(e.data[d++]-_[1])*m[1],_e=(e.data[N++]-_[2])*m[2],he=j===-1?255:(e.data[j++]-_[3])*m[3];n.fillStyle="rgba("+ee+","+Y+","+_e+","+he+")",n.fillRect(Z,W,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Te=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let i,a,o;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],a=e.dims[1],o=e.dims[3]):(i=e.dims[3],a=e.dims[2],o=e.dims[1]);let u=t!==void 0&&t.format!==void 0?t.format:"RGB",m=t==null?void 0:t.norm,_,S;m===void 0||m.mean===void 0?_=[255,255,255,255]:typeof m.mean=="number"?_=[m.mean,m.mean,m.mean,m.mean]:(_=[m.mean[0],m.mean[1],m.mean[2],255],m.mean[3]!==void 0&&(_[3]=m.mean[3])),m===void 0||m.bias===void 0?S=[0,0,0,0]:typeof m.bias=="number"?S=[m.bias,m.bias,m.bias,m.bias]:(S=[m.bias[0],m.bias[1],m.bias[2],0],m.bias[3]!==void 0&&(S[3]=m.bias[3]));let k=a*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let d=4,N=0,j=1,W=2,Z=3,ee=0,Y=k,_e=k*2,he=-1;u==="RGBA"?(ee=0,Y=k,_e=k*2,he=k*3):u==="RGB"?(ee=0,Y=k,_e=k*2):u==="RBG"&&(ee=0,_e=k,Y=k*2),n=r.createImageData(i,a);for(let Me=0;Me<a*i;N+=d,j+=d,W+=d,Z+=d,Me++)n.data[N]=(e.data[ee++]-S[0])*_[0],n.data[j]=(e.data[Y++]-S[1])*_[1],n.data[W]=(e.data[_e++]-S[2])*_[2],n.data[Z]=he===-1?255:(e.data[he++]-S[3])*_[3]}else throw new Error("Can not access image data");return n}}),ne,Ee,pe,ke,Oe,Ce,tt=g(()=>{Ue(),ne=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=t,i=t.norm??{mean:255,bias:0},a,o;typeof i.mean=="number"?a=[i.mean,i.mean,i.mean,i.mean]:a=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let u=t.format!==void 0?t.format:"RGBA",m=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",_=r*n,S=m==="RGBA"?new Float32Array(_*4):new Float32Array(_*3),k=4,d=0,N=1,j=2,W=3,Z=0,ee=_,Y=_*2,_e=-1;u==="RGB"&&(k=3,d=0,N=1,j=2,W=-1),m==="RGBA"?_e=_*3:m==="RBG"?(Z=0,Y=_,ee=_*2):m==="BGR"&&(Y=0,ee=_,Z=_*2);for(let he=0;he<_;he++,d+=k,j+=k,N+=k,W+=k)S[Z++]=(e[d]+o[0])/a[0],S[ee++]=(e[N]+o[1])/a[1],S[Y++]=(e[j]+o[2])/a[2],_e!==-1&&W!==-1&&(S[_e++]=(e[W]+o[3])/a[3]);return m==="RGBA"?new Ke("float32",S,[1,4,r,n]):new Ke("float32",S,[1,3,r,n])},Ee=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,n=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a=typeof e=="string",o,u=t??{},m=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},_=S=>typeof HTMLCanvasElement<"u"&&S instanceof HTMLCanvasElement||S instanceof OffscreenCanvas?S.getContext("2d"):null;if(r){let S=m();S.width=e.width,S.height=e.height;let k=_(S);if(k!=null){let d=e.height,N=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(d=t.resizedHeight,N=t.resizedWidth),t!==void 0){if(u=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=d,u.width=N}else u.tensorFormat="RGBA",u.height=d,u.width=N;k.drawImage(e,0,0),o=k.getImageData(0,0,N,d).data}else throw new Error("Can not access image data")}else if(n){let S,k;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(S=t.resizedHeight,k=t.resizedWidth):(S=e.height,k=e.width),t!==void 0&&(u=t),u.format="RGBA",u.height=S,u.width=k,t!==void 0){let d=m();d.width=k,d.height=S;let N=_(d);if(N!=null)N.putImageData(e,0,0),o=N.getImageData(0,0,k,S).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let S=m();S.width=e.width,S.height=e.height;let k=_(S);if(k!=null){let d=e.height,N=e.width;return k.drawImage(e,0,0,N,d),o=k.getImageData(0,0,N,d).data,u.height=d,u.width=N,ne(o,u)}else throw new Error("Can not access image data")}else{if(a)return new Promise((S,k)=>{let d=m(),N=_(d);if(!e||!N)return k();let j=new Image;j.crossOrigin="Anonymous",j.src=e,j.onload=()=>{d.width=j.width,d.height=j.height,N.drawImage(j,0,0,d.width,d.height);let W=N.getImageData(0,0,d.width,d.height);u.height=d.height,u.width=d.width,S(ne(W.data,u))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return ne(o,u);throw new Error("Input data provided is not supported - aborted tensor creation")},pe=(e,t)=>{let{width:r,height:n,download:i,dispose:a}=t,o=[1,n,r,4];return new Ke({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:a})},ke=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:a}=t;return new Ke({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:n,download:i,dispose:a})},Oe=(e,t)=>{let{dataType:r,dims:n,download:i,dispose:a}=t;return new Ke({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:n,download:i,dispose:a})},Ce=(e,t,r)=>new Ke({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Ge,be,J,ce,$e=g(()=>{Ge=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),be=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),J=!1,ce=()=>{if(!J){J=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ge.set("int64",BigInt64Array),be.set(BigInt64Array,"int64")),t&&(Ge.set("uint64",BigUint64Array),be.set(BigUint64Array,"uint64")),r?(Ge.set("float16",Float16Array),be.set(Float16Array,"float16")):Ge.set("float16",Uint16Array)}}}),Be,Je,se=g(()=>{Ue(),Be=e=>{let t=1;for(let r=0;r<e.length;r++){let n=e[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);t*=n}return t},Je=(e,t)=>{switch(e.location){case"cpu":return new Ke(e.type,e.data,t);case"cpu-pinned":return new Ke({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Ke({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Ke({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Ke({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Ke,Ue=g(()=>{we(),tt(),$e(),se(),Ke=class{constructor(e,t,r){ce();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=Ge.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,u;if(typeof e=="string")if(n=e,u=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let m=Ge.get(e);if(m===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&m===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${m.name} as data.`);e==="uint64"||e==="int64"?o=m.from(t,BigInt):o=m.from(t)}else if(t instanceof m)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${m}`)}else if(u=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let m=typeof e[0];if(m==="string")n="string",o=e;else if(m==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${m}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{let m=be.get(e.constructor);if(m===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=m,o=e}if(u===void 0)u=[o.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=o,this.dataLocation="cpu"}let a=Be(i);if(this.cpuData&&a!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=a}static async fromImage(e,t){return Ee(e,t)}static fromTexture(e,t){return pe(e,t)}static fromGpuBuffer(e,t){return ke(e,t)}static fromMLTensor(e,t){return Oe(e,t)}static fromPinnedBuffer(e,t,r){return Ce(e,t,r)}toDataURL(e){return oe(this,e)}toImageData(e){return Te(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Je(this,e)}}}),ue,ve=g(()=>{Ue(),ue=Ke}),Ve,We,Ne,je,st=g(()=>{E(),Ve=(e,t)=>{(typeof b.trace>"u"?!b.wasm.trace:!b.trace)||console.timeStamp(`${e}::ORT::${t}`)},We=(e,t)=>{var i;let r=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],n=!1;for(let a=0;a<r.length;a++){if(n&&!r[a].includes("TRACE_FUNC")){let o=`FUNC_${e}::${r[a].trim().split(" ")[1]}`;t&&(o+=`::${t}`),Ve("CPU",o);return}r[a].includes("TRACE_FUNC")&&(n=!0)}},Ne=e=>{(typeof b.trace>"u"?!b.wasm.trace:!b.trace)||We("BEGIN",e)},je=e=>{(typeof b.trace>"u"?!b.wasm.trace:!b.trace)||We("END",e)}}),ut,pt=g(()=>{G(),ve(),st(),ut=class tf{constructor(t){this.handler=t}async run(t,r,n){Ne();let i={},a={};if(typeof t!="object"||t===null||t instanceof ue||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ue)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let _ of r){if(typeof _!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(_)===-1)throw new RangeError(`'fetches' contains invalid output name: ${_}.`);i[_]=null}if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let _=!1,S=Object.getOwnPropertyNames(r);for(let k of this.outputNames)if(S.indexOf(k)!==-1){let d=r[k];(d===null||d instanceof ue)&&(_=!0,o=!1,i[k]=d)}if(_){if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else a=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let _ of this.inputNames)if(typeof t[_]>"u")throw new Error(`input '${_}' is missing in 'feeds'.`);if(o)for(let _ of this.outputNames)i[_]=null;let u=await this.handler.run(t,i,a),m={};for(let _ in u)if(Object.hasOwnProperty.call(u,_)){let S=u[_];S instanceof ue?m[_]=S:m[_]=new ue(S.type,S.data,S.dims)}return je(),m}async release(){return this.handler.dispose()}static async create(t,r,n,i){Ne();let a,o={};if(typeof t=="string"){if(a=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let S=t,k=0,d=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(k=r,!Number.isSafeInteger(k))throw new RangeError("'byteOffset' must be an integer.");if(k<0||k>=S.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${S.byteLength}).`);if(d=t.byteLength-k,typeof n=="number"){if(d=n,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||k+d>S.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${S.byteLength-k}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(S,k,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,m]=await ie(o),_=await u.createInferenceSessionHandler(a,m);return je(),new tf(_)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),lt,mt=g(()=>{pt(),lt=ut}),R=g(()=>{}),ae=g(()=>{}),K=g(()=>{}),me=g(()=>{}),Se={};x(Se,{InferenceSession:()=>lt,TRACE:()=>Ve,TRACE_FUNC_BEGIN:()=>Ne,TRACE_FUNC_END:()=>je,Tensor:()=>ue,env:()=>L,registerBackend:()=>q});var Re=g(()=>{V(),le(),mt(),ve(),R(),ae(),st(),K(),me()}),qe=g(()=>{}),at={};x(at,{default:()=>$t});var ct,vt,$t,kt=g(()=>{var e;rm(),lr(),jr(),ct="ort-wasm-proxy-worker",vt=((e=globalThis.self)==null?void 0:e.name)===ct,vt&&(self.onmessage=t=>{let{type:r,in:n}=t.data;try{switch(r){case"init-wasm":Ir(n.wasm).then(()=>{Jn(n).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})})},i=>{postMessage({type:r,err:i})});break;case"init-ep":{let{epName:i,env:a}=n;Ri(a,i).then(()=>{postMessage({type:r})},o=>{postMessage({type:r,err:o})});break}case"copy-from":{let{buffer:i}=n,a=$n(i);postMessage({type:r,out:a});break}case"create":{let{model:i,options:a}=n;Vc(i,a).then(o=>{postMessage({type:r,out:o})},o=>{postMessage({type:r,err:o})});break}case"release":Wc(n),postMessage({type:r});break;case"run":{let{sessionId:i,inputIndices:a,inputs:o,outputIndices:u,options:m}=n;Yr(i,a,o,u,new Array(u.length).fill(null),m).then(_=>{_.some(S=>S[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:_},wh([...o,..._]))},_=>{postMessage({type:r,err:_})});break}case"end-profiling":mr(n),postMessage({type:r});break;default:}}catch(i){postMessage({type:r,err:i})}}),$t=vt?null:t=>new Worker(t??Us,{type:"module",name:ct})}),is={};x(is,{default:()=>Ls});var bs,$s,Ls,sr=g(()=>{var e;$s=(bs=import.meta.url,async function(t={}){function r(){return yt.buffer!=Ut.buffer&&Cs(),Ut}function n(){return yt.buffer!=Ut.buffer&&Cs(),Qt}function i(){return yt.buffer!=Ut.buffer&&Cs(),gs}function a(){return yt.buffer!=Ut.buffer&&Cs(),ot}function o(){return yt.buffer!=Ut.buffer&&Cs(),Pt}function u(){return yt.buffer!=Ut.buffer&&Cs(),hs}function m(){return yt.buffer!=Ut.buffer&&Cs(),Ns}function _(){return yt.buffer!=Ut.buffer&&Cs(),hn}var S,k,d=Object.assign({},t),N=new Promise((l,f)=>{S=l,k=f}),j=typeof window=="object",W=typeof importScripts=="function",Z=W&&self.name=="em-pthread";d.mountExternalData=(l,f)=>{l.startsWith("./")&&(l=l.substring(2)),(d.Fb||(d.Fb=new Map)).set(l,f)},d.unmountExternalData=()=>{delete d.Fb};var ee=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Y=()=>{let l=($,B,H)=>(...ye)=>{let Ye=fn,nt=B==null?void 0:B();ye=$(...ye);let wt=B==null?void 0:B();return nt!==wt&&($=wt,H(nt),B=H=null),fn!=Ye?new Promise((Ct,Vt)=>{Rh={resolve:Ct,reject:Vt}}):ye},f=$=>async(...B)=>{var H;try{if(d.Gb)throw Error("Session already started");let ye=d.Gb={hc:B[0],errors:[]},Ye=await $(...B);if(d.Gb!==ye)throw Error("Session mismatch");(H=d.Hb)==null||H.flush();let nt=ye.errors;if(0<nt.length){let wt=await Promise.all(nt);if(wt=wt.filter(Ct=>Ct),0<wt.length)throw Error(wt.join(`
`))}return Ye}finally{d.Gb=null}};d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,$=>d._OrtCreateSession=$),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,$=>d._OrtRun=$)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,$=>d._OrtRunWithBinding=$)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,$=>d._OrtBindInput=$),Y=void 0};d.jsepInit=(l,f)=>{if(Y==null||Y(),l==="webgpu"){[d.Hb,d.Vb,d.Zb,d.Ob,d.Yb,d.kb,d.$b,d.cc,d.Wb,d.Xb,d.ac]=f;let $=d.Hb;d.jsepRegisterBuffer=(B,H,ye,Ye)=>$.registerBuffer(B,H,ye,Ye),d.jsepGetBuffer=B=>$.getBuffer(B),d.jsepCreateDownloader=(B,H,ye)=>$.createDownloader(B,H,ye),d.jsepOnCreateSession=B=>{$.onCreateSession(B)},d.jsepOnReleaseSession=B=>{$.onReleaseSession(B)},d.jsepOnRunStart=B=>$.onRunStart(B),d.dc=(B,H)=>{$.upload(B,H)}}else if(l==="webnn"){[d.Hb,d.bc,d.Pb,d.jsepEnsureTensor,d.ec,d.jsepDownloadTensor]=f,d.jsepReleaseTensorId=d.Pb;let $=d.Hb;d.jsepOnRunStart=B=>$.onRunStart(B),d.jsepRegisterMLContext=(B,H)=>{$.registerMLContext(B,H)},d.jsepOnReleaseSession=B=>{$.onReleaseSession(B)},d.jsepCreateMLTensorDownloader=(B,H)=>$.createMLTensorDownloader(B,H),d.jsepRegisterMLTensor=(B,H,ye)=>$.registerMLTensor(B,H,ye),d.jsepCreateMLContext=B=>$.createMLContext(B),d.jsepRegisterMLConstant=(B,H,ye,Ye,nt)=>$.registerMLConstant(B,H,ye,Ye,nt,d.Fb)}};var _e,he,Me=Object.assign({},d),Ie=(l,f)=>{throw f},Le="";(j||W)&&(W?Le=self.location.href:typeof document<"u"&&document.currentScript&&(Le=document.currentScript.src),bs&&(Le=bs),Le=Le.startsWith("blob:")?"":Le.substr(0,Le.replace(/[?#].*/,"").lastIndexOf("/")+1),W&&(he=l=>{var f=new XMLHttpRequest;return f.open("GET",l,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),_e=(l,f,$)=>{var B=new XMLHttpRequest;B.open("GET",l,!0),B.responseType="arraybuffer",B.onload=()=>{B.status==200||B.status==0&&B.response?f(B.response):$()},B.onerror=$,B.send(null)});var et,dt=console.log.bind(console),Et=console.error.bind(console),qt=dt,Bt=Et;if(Object.assign(d,Me),Me=null,Z){let l=function(f){try{var $=f.data,B=$.cmd;if(B==="load"){let H=[];self.onmessage=ye=>H.push(ye),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let ye of H)l(ye);self.onmessage=l};for(let ye of $.handlers)d[ye]&&!d[ye].proxy||(d[ye]=(...Ye)=>{postMessage({Nb:"callHandler",pc:ye,args:Ye})},ye=="print"&&(qt=d[ye]),ye=="printErr"&&(Bt=d[ye]));yt=$.wasmMemory,Cs(),It($.wasmModule)}else if(B==="run"){Vh($.pthread_ptr,0,0,1,0,0),zh($.pthread_ptr),df(),Cm(),ts||(T_(),ts=!0);try{cf($.start_routine,$.arg)}catch(H){if(H!="unwind")throw H}}else B==="cancel"?Ha()&&ah(-1):$.target!=="setimmediate"&&(B==="checkMailbox"?ts&&Yp():B&&(Bt(`worker: received unknown command ${B}`),Bt($)))}catch(H){throw E_(),H}};var It,ts=!1;Bt=function(...f){f=f.join(" "),console.error(f)},self.alert=function(...f){postMessage({Nb:"alert",text:f.join(" "),rc:Ha()})},d.instantiateWasm=(f,$)=>new Promise(B=>{It=H=>{H=new WebAssembly.Instance(H,vm()),$(H),B()}}),self.onunhandledrejection=f=>{throw f.reason||f},self.onmessage=l}d.wasmBinary&&(et=d.wasmBinary);var yt,Ht,ps,Ut,Qt,gs,ot,Pt,hs,Ns,qs,Lr,hn,zr=!1;function Cs(){var l=yt.buffer;d.HEAP8=Ut=new Int8Array(l),d.HEAP16=gs=new Int16Array(l),d.HEAPU8=Qt=new Uint8Array(l),d.HEAPU16=ot=new Uint16Array(l),d.HEAP32=Pt=new Int32Array(l),d.HEAPU32=hs=new Uint32Array(l),d.HEAPF32=Ns=new Float32Array(l),d.HEAPF64=hn=new Float64Array(l),d.HEAP64=qs=new BigInt64Array(l),d.HEAPU64=Lr=new BigUint64Array(l)}if(!Z){if(!((yt=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof ee))throw Bt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Cs()}var Js=[],Sn=[],Th=[],Ui=0,qc=null;function gm(){if(--Ui==0&&qc){var l=qc;qc=null,l()}}function ei(l){throw Bt(l="Aborted("+l+")"),zr=!0,ps=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),k(l),l}var Eh,ym=l=>l.startsWith("data:application/octet-stream;base64,"),wm=l=>l.startsWith("file://");function bm(l){if(l==Eh&&et)return new Uint8Array(et);if(he)return he(l);throw"both async and sync fetching of the wasm failed"}function Mm(l,f,$){return function(B){if(!et&&(j||W)){if(typeof fetch=="function"&&!wm(B))return fetch(B,{credentials:"same-origin"}).then(H=>{if(!H.ok)throw`failed to load wasm binary file at '${B}'`;return H.arrayBuffer()}).catch(()=>bm(B));if(_e)return new Promise((H,ye)=>{_e(B,Ye=>H(new Uint8Array(Ye)),ye)})}return Promise.resolve().then(()=>bm(B))}(l).then(B=>WebAssembly.instantiate(B,f)).then($,B=>{Bt(`failed to asynchronously prepare wasm: ${B}`),ei(B)})}function vm(){return{a:{O:uf,Aa:lf,b:hf,aa:Am,B:Fm,qa:Dm,Y:zm,_:Bm,ra:Rm,oa:Nm,ha:jm,na:Um,L:Vm,Z:Wm,W:Gm,pa:Km,X:Hm,va:mf,F:_f,Q:ff,P:yf,E:bf,u:Mf,q:vf,G:xf,A:kf,R:Af,ua:If,ka:Of,U:Ff,ba:Df,H:Lf,ja:zh,ta:zf,t:Bf,Ba:Rf,x:Uf,o:Vf,m:Gf,c:Dh,n:Kf,k:Qf,w:Xf,p:Yf,f:Jf,s:Zf,l:eg,e:tg,j:sg,i:rg,g:ng,d:ig,ea:og,fa:ag,ga:lg,ca:a_,da:l_,T:ug,h:dg,D:cg,I:pg,M:hg,y:mg,sa:_g,V:fg,v:d_,z:gg,N:yg,S:wg,za:bg,ya:Mg,la:h_,ma:m_,$:kh,C:__,K:f_,ia:g_,J:y_,a:yt,xa:Sh,wa:M_,r:Tg}}}var Ph={916868:(l,f,$,B,H)=>{if(d===void 0||!d.Fb)return 1;if((l=Qs(Number(l>>>0))).startsWith("./")&&(l=l.substring(2)),!(l=d.Fb.get(l)))return 2;if(f=Number(f>>>0),$=Number($>>>0),B=Number(B>>>0),f+$>l.byteLength)return 3;try{let ye=l.subarray(f,f+$);switch(H){case 0:n().set(ye,B>>>0);break;case 1:d.dc(B,ye);break;default:return 4}return 0}catch{return 4}},917583:(l,f,$)=>{d.ec(l,n().subarray(f>>>0,f+$>>>0))},917646:()=>d.bc(),917687:l=>{d.Pb(l)},917723:()=>{d.Wb()},917754:()=>{d.Xb()},917783:()=>{d.ac()},917808:l=>d.Vb(l),917841:l=>d.Zb(l),917873:(l,f,$)=>{d.Ob(Number(l),Number(f),Number($),!0)},917936:(l,f,$)=>{d.Ob(Number(l),Number(f),Number($))},917993:()=>typeof wasmOffsetConverter<"u",918050:l=>{d.kb("Abs",l,void 0)},918101:l=>{d.kb("Neg",l,void 0)},918152:l=>{d.kb("Floor",l,void 0)},918205:l=>{d.kb("Ceil",l,void 0)},918257:l=>{d.kb("Reciprocal",l,void 0)},918315:l=>{d.kb("Sqrt",l,void 0)},918367:l=>{d.kb("Exp",l,void 0)},918418:l=>{d.kb("Erf",l,void 0)},918469:l=>{d.kb("Sigmoid",l,void 0)},918524:(l,f,$)=>{d.kb("HardSigmoid",l,{alpha:f,beta:$})},918603:l=>{d.kb("Log",l,void 0)},918654:l=>{d.kb("Sin",l,void 0)},918705:l=>{d.kb("Cos",l,void 0)},918756:l=>{d.kb("Tan",l,void 0)},918807:l=>{d.kb("Asin",l,void 0)},918859:l=>{d.kb("Acos",l,void 0)},918911:l=>{d.kb("Atan",l,void 0)},918963:l=>{d.kb("Sinh",l,void 0)},919015:l=>{d.kb("Cosh",l,void 0)},919067:l=>{d.kb("Asinh",l,void 0)},919120:l=>{d.kb("Acosh",l,void 0)},919173:l=>{d.kb("Atanh",l,void 0)},919226:l=>{d.kb("Tanh",l,void 0)},919278:l=>{d.kb("Not",l,void 0)},919329:(l,f,$)=>{d.kb("Clip",l,{min:f,max:$})},919398:l=>{d.kb("Clip",l,void 0)},919450:(l,f)=>{d.kb("Elu",l,{alpha:f})},919508:l=>{d.kb("Gelu",l,void 0)},919560:l=>{d.kb("Relu",l,void 0)},919612:(l,f)=>{d.kb("LeakyRelu",l,{alpha:f})},919676:(l,f)=>{d.kb("ThresholdedRelu",l,{alpha:f})},919746:(l,f)=>{d.kb("Cast",l,{to:f})},919804:l=>{d.kb("Add",l,void 0)},919855:l=>{d.kb("Sub",l,void 0)},919906:l=>{d.kb("Mul",l,void 0)},919957:l=>{d.kb("Div",l,void 0)},920008:l=>{d.kb("Pow",l,void 0)},920059:l=>{d.kb("Equal",l,void 0)},920112:l=>{d.kb("Greater",l,void 0)},920167:l=>{d.kb("GreaterOrEqual",l,void 0)},920229:l=>{d.kb("Less",l,void 0)},920281:l=>{d.kb("LessOrEqual",l,void 0)},920340:(l,f,$,B,H)=>{d.kb("ReduceMean",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},920515:(l,f,$,B,H)=>{d.kb("ReduceMax",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},920689:(l,f,$,B,H)=>{d.kb("ReduceMin",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},920863:(l,f,$,B,H)=>{d.kb("ReduceProd",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921038:(l,f,$,B,H)=>{d.kb("ReduceSum",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921212:(l,f,$,B,H)=>{d.kb("ReduceL1",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921385:(l,f,$,B,H)=>{d.kb("ReduceL2",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921558:(l,f,$,B,H)=>{d.kb("ReduceLogSum",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921735:(l,f,$,B,H)=>{d.kb("ReduceSumSquare",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},921915:(l,f,$,B,H)=>{d.kb("ReduceLogSumExp",l,{keepDims:!!f,noopWithEmptyAxes:!!$,axes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},922095:l=>{d.kb("Where",l,void 0)},922148:(l,f,$)=>{d.kb("Transpose",l,{perm:f?Array.from(o().subarray(Number(f)>>>0,Number($)>>>0)):[]})},922272:(l,f,$,B)=>{d.kb("DepthToSpace",l,{blocksize:f,mode:Qs($),format:B?"NHWC":"NCHW"})},922405:(l,f,$,B)=>{d.kb("DepthToSpace",l,{blocksize:f,mode:Qs($),format:B?"NHWC":"NCHW"})},922538:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He,ls)=>{d.kb("ConvTranspose",l,{format:wt?"NHWC":"NCHW",autoPad:f,dilations:[$],group:B,kernelShape:[H],pads:[ye,Ye],strides:[nt],wIsConst:()=>!!r()[Ct>>>0],outputPadding:Vt?Array.from(o().subarray(Number(Vt)>>>0,Number(ms)>>>0)):[],outputShape:vs?Array.from(o().subarray(Number(vs)>>>0,Number(He)>>>0)):[],activation:Qs(ls)})},922971:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("ConvTranspose",l,{format:nt?"NHWC":"NCHW",autoPad:f,dilations:Array.from(o().subarray(Number($)>>>0,2+(Number($)>>>0)>>>0)),group:B,kernelShape:Array.from(o().subarray(Number(H)>>>0,2+(Number(H)>>>0)>>>0)),pads:Array.from(o().subarray(Number(ye)>>>0,4+(Number(ye)>>>0)>>>0)),strides:Array.from(o().subarray(Number(Ye)>>>0,2+(Number(Ye)>>>0)>>>0)),wIsConst:()=>!!r()[wt>>>0],outputPadding:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],outputShape:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[],activation:Qs(He)})},923632:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He,ls)=>{d.kb("ConvTranspose",l,{format:wt?"NHWC":"NCHW",autoPad:f,dilations:[$],group:B,kernelShape:[H],pads:[ye,Ye],strides:[nt],wIsConst:()=>!!r()[Ct>>>0],outputPadding:Vt?Array.from(o().subarray(Number(Vt)>>>0,Number(ms)>>>0)):[],outputShape:vs?Array.from(o().subarray(Number(vs)>>>0,Number(He)>>>0)):[],activation:Qs(ls)})},924065:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("ConvTranspose",l,{format:nt?"NHWC":"NCHW",autoPad:f,dilations:Array.from(o().subarray(Number($)>>>0,2+(Number($)>>>0)>>>0)),group:B,kernelShape:Array.from(o().subarray(Number(H)>>>0,2+(Number(H)>>>0)>>>0)),pads:Array.from(o().subarray(Number(ye)>>>0,4+(Number(ye)>>>0)>>>0)),strides:Array.from(o().subarray(Number(Ye)>>>0,2+(Number(Ye)>>>0)>>>0)),wIsConst:()=>!!r()[wt>>>0],outputPadding:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],outputShape:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[],activation:Qs(He)})},924726:(l,f)=>{d.kb("GlobalAveragePool",l,{format:f?"NHWC":"NCHW"})},924817:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("AveragePool",l,{format:He?"NHWC":"NCHW",auto_pad:f,ceil_mode:$,count_include_pad:B,storage_order:H,dilations:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[],kernel_shape:nt?Array.from(o().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],strides:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[]})},925296:(l,f)=>{d.kb("GlobalAveragePool",l,{format:f?"NHWC":"NCHW"})},925387:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("AveragePool",l,{format:He?"NHWC":"NCHW",auto_pad:f,ceil_mode:$,count_include_pad:B,storage_order:H,dilations:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[],kernel_shape:nt?Array.from(o().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],strides:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[]})},925866:(l,f)=>{d.kb("GlobalMaxPool",l,{format:f?"NHWC":"NCHW"})},925953:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("MaxPool",l,{format:He?"NHWC":"NCHW",auto_pad:f,ceil_mode:$,count_include_pad:B,storage_order:H,dilations:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[],kernel_shape:nt?Array.from(o().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],strides:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[]})},926428:(l,f)=>{d.kb("GlobalMaxPool",l,{format:f?"NHWC":"NCHW"})},926515:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He)=>{d.kb("MaxPool",l,{format:He?"NHWC":"NCHW",auto_pad:f,ceil_mode:$,count_include_pad:B,storage_order:H,dilations:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[],kernel_shape:nt?Array.from(o().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],pads:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],strides:ms?Array.from(o().subarray(Number(ms)>>>0,Number(vs)>>>0)):[]})},926990:(l,f,$,B,H)=>{d.kb("Gemm",l,{alpha:f,beta:$,transA:B,transB:H})},927094:l=>{d.kb("MatMul",l,void 0)},927148:(l,f,$,B)=>{d.kb("ArgMax",l,{keepDims:!!f,selectLastIndex:!!$,axis:B})},927256:(l,f,$,B)=>{d.kb("ArgMin",l,{keepDims:!!f,selectLastIndex:!!$,axis:B})},927364:(l,f)=>{d.kb("Softmax",l,{axis:f})},927427:(l,f)=>{d.kb("Concat",l,{axis:f})},927487:(l,f,$,B,H)=>{d.kb("Split",l,{axis:f,numOutputs:$,splitSizes:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},927643:l=>{d.kb("Expand",l,void 0)},927697:(l,f)=>{d.kb("Gather",l,{axis:Number(f)})},927768:(l,f)=>{d.kb("GatherElements",l,{axis:Number(f)})},927847:(l,f)=>{d.kb("GatherND",l,{batch_dims:Number(f)})},927926:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt)=>{d.kb("Resize",l,{antialias:f,axes:$?Array.from(o().subarray(Number($)>>>0,Number(B)>>>0)):[],coordinateTransformMode:Qs(H),cubicCoeffA:ye,excludeOutside:Ye,extrapolationValue:nt,keepAspectRatioPolicy:Qs(wt),mode:Qs(Ct),nearestMode:Qs(Vt)})},928288:(l,f,$,B,H,ye,Ye)=>{d.kb("Slice",l,{starts:f?Array.from(o().subarray(Number(f)>>>0,Number($)>>>0)):[],ends:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[],axes:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[]})},928552:l=>{d.kb("Tile",l,void 0)},928604:(l,f,$)=>{d.kb("InstanceNormalization",l,{epsilon:f,format:$?"NHWC":"NCHW"})},928718:(l,f,$)=>{d.kb("InstanceNormalization",l,{epsilon:f,format:$?"NHWC":"NCHW"})},928832:l=>{d.kb("Range",l,void 0)},928885:(l,f)=>{d.kb("Einsum",l,{equation:Qs(f)})},928966:(l,f,$,B,H)=>{d.kb("Pad",l,{mode:f,value:$,pads:B?Array.from(o().subarray(Number(B)>>>0,Number(H)>>>0)):[]})},929109:(l,f,$,B,H,ye)=>{d.kb("BatchNormalization",l,{epsilon:f,momentum:$,spatial:!!H,trainingMode:!!B,format:ye?"NHWC":"NCHW"})},929278:(l,f,$,B,H,ye)=>{d.kb("BatchNormalization",l,{epsilon:f,momentum:$,spatial:!!H,trainingMode:!!B,format:ye?"NHWC":"NCHW"})},929447:(l,f,$)=>{d.kb("CumSum",l,{exclusive:Number(f),reverse:Number($)})},929544:(l,f,$)=>{d.kb("DequantizeLinear",l,{axis:f,blockSize:$})},929634:(l,f,$,B,H)=>{d.kb("GridSample",l,{align_corners:f,mode:Qs($),padding_mode:Qs(B),format:H?"NHWC":"NCHW"})},929804:(l,f,$,B,H)=>{d.kb("GridSample",l,{align_corners:f,mode:Qs($),padding_mode:Qs(B),format:H?"NHWC":"NCHW"})},929974:(l,f,$,B,H,ye,Ye,nt,wt)=>{d.kb("Attention",l,{numHeads:f,isUnidirectional:$,maskFilterValue:B,scale:H,doRotary:ye,qkvHiddenSizes:Ye?Array.from(o().subarray(Number(nt)>>>0,Number(nt)+Ye>>>0)):[],pastPresentShareBuffer:!!wt})},930246:l=>{d.kb("BiasAdd",l,void 0)},930301:l=>{d.kb("BiasSplitGelu",l,void 0)},930362:l=>{d.kb("FastGelu",l,void 0)},930418:(l,f,$,B,H,ye,Ye,nt,wt,Ct,Vt,ms,vs,He,ls,js)=>{d.kb("Conv",l,{format:ms?"NHWC":"NCHW",auto_pad:f,dilations:$?Array.from(o().subarray(Number($)>>>0,Number(B)>>>0)):[],group:H,kernel_shape:ye?Array.from(o().subarray(Number(ye)>>>0,Number(Ye)>>>0)):[],pads:nt?Array.from(o().subarray(Number(nt)>>>0,Number(wt)>>>0)):[],strides:Ct?Array.from(o().subarray(Number(Ct)>>>0,Number(Vt)>>>0)):[],w_is_const:()=>!!r()[Number(vs)>>>0],activation:Qs(He),activation_params:ls?Array.from(m().subarray(Number(ls)>>>0,Number(js)>>>0)):[]})},931002:l=>{d.kb("Gelu",l,void 0)},931054:(l,f,$,B,H,ye,Ye,nt,wt)=>{d.kb("GroupQueryAttention",l,{numHeads:f,kvNumHeads:$,scale:B,softcap:H,doRotary:ye,rotaryInterleaved:Ye,smoothSoftmax:nt,localWindowSize:wt})},931271:(l,f,$,B)=>{d.kb("LayerNormalization",l,{axis:f,epsilon:$,simplified:!!B})},931382:(l,f,$,B)=>{d.kb("LayerNormalization",l,{axis:f,epsilon:$,simplified:!!B})},931493:(l,f,$,B,H,ye)=>{d.kb("MatMulNBits",l,{k:f,n:$,accuracyLevel:B,bits:H,blockSize:ye})},931620:(l,f,$,B,H,ye)=>{d.kb("MultiHeadAttention",l,{numHeads:f,isUnidirectional:$,maskFilterValue:B,scale:H,doRotary:ye})},931779:(l,f)=>{d.kb("QuickGelu",l,{alpha:f})},931843:(l,f,$,B,H)=>{d.kb("RotaryEmbedding",l,{interleaved:!!f,numHeads:$,rotaryEmbeddingDim:B,scale:H})},931982:(l,f,$)=>{d.kb("SkipLayerNormalization",l,{epsilon:f,simplified:!!$})},932084:(l,f,$)=>{d.kb("SkipLayerNormalization",l,{epsilon:f,simplified:!!$})},932186:(l,f,$,B)=>{d.kb("GatherBlockQuantized",l,{gatherAxis:f,quantizeAxis:$,blockSize:B})},932307:l=>{d.$b(l)},932341:(l,f)=>d.cc(Number(l),Number(f),d.Gb.hc,d.Gb.errors)};function lf(l,f,$){return s_(async()=>{await d.Yb(Number(l),Number(f),Number($))})}function uf(){return typeof wasmOffsetConverter<"u"}function Ch(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var $h=l=>{l.terminate(),l.onmessage=()=>{}},xm=l=>{ti.length==0&&(Sm(),$m(ti[0]));var f=ti.pop();if(!f)return 6;Wi.push(f),mn[l.Bb]=f,f.Bb=l.Bb;var $={cmd:"run",start_routine:l.ic,arg:l.Rb,pthread_ptr:l.Bb};return f.postMessage($,l.nc),0},Vi=0,Rs=(l,f,...$)=>{for(var B=2*$.length,H=Kh(),ye=Gh(8*B),Ye=ye>>>3,nt=0;nt<$.length;nt++){var wt=$[nt];typeof wt=="bigint"?(qs[Ye+2*nt]=1n,qs[Ye+2*nt+1]=wt):(qs[Ye+2*nt]=0n,_()[Ye+2*nt+1>>>0]=wt)}return l=P_(l,0,B,ye,f),lh(H),l};function Sh(l){if(Z)return Rs(0,1,l);if(ps=l,!(0<Vi)){for(var f of Wi)$h(f);for(f of ti)$h(f);ti=[],Wi=[],mn=[],zr=!0}Ie(0,new Ch(l))}function Tm(l){if(Z)return Rs(1,0,l);kh(l)}var kh=l=>{if(ps=l,Z)throw Tm(l),"unwind";Sh(l)},ti=[],Wi=[],Em=[],mn={},Pm=l=>{var f=l.Bb;delete mn[f],ti.push(l),Wi.splice(Wi.indexOf(l),1),l.Bb=0,Wh(f)};function Cm(){Em.forEach(l=>l())}var $m=l=>new Promise(f=>{l.onmessage=H=>{var ye=(H=H.data).cmd;if(H.targetThread&&H.targetThread!=Ha()){var Ye=mn[H.targetThread];Ye?Ye.postMessage(H,H.transferList):Bt(`Internal error! Worker sent a message "${ye}" to target pthread ${H.targetThread}, but that thread no longer exists!`)}else ye==="checkMailbox"?Yp():ye==="spawnThread"?xm(H):ye==="cleanupThread"?Pm(mn[H.thread]):ye==="killThread"?(H=H.thread,ye=mn[H],delete mn[H],$h(ye),Wh(H),Wi.splice(Wi.indexOf(ye),1),ye.Bb=0):ye==="cancelThread"?mn[H.thread].postMessage({cmd:"cancel"}):ye==="loaded"?(l.loaded=!0,f(l)):ye==="alert"?alert(`Thread ${H.threadId}: ${H.text}`):H.target==="setimmediate"?l.postMessage(H):ye==="callHandler"?d[H.handler](...H.args):ye&&Bt(`worker sent an unknown command ${ye}`)},l.onerror=H=>{throw Bt(`worker sent an error! ${H.filename}:${H.lineno}: ${H.message}`),H};var $,B=[];for($ of[])d.hasOwnProperty($)&&B.push($);l.postMessage({cmd:"load",handlers:B,wasmMemory:yt,wasmModule:Ht})});function Sm(){var l=new Worker(import.meta.url.startsWith("file:")?new URL(s("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),s.b):new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});ti.push(l)}var Xp=l=>{for(;0<l.length;)l.shift()(d)},df=()=>{var l=Ha(),f=u()[l+52>>>2>>>0];l=u()[l+56>>>2>>>0],$_(f,f-l),lh(f)},cf=(l,f)=>{Vi=0,l=S_(l,f),0<Vi?ps=l:ah(l)};class pf{constructor(f){this.Kb=f-24}}function hf(l,f,$){var B=new pf(l>>>=0);throw f>>>=0,$>>>=0,u()[B.Kb+16>>>2>>>0]=0,u()[B.Kb+4>>>2>>>0]=f,u()[B.Kb+8>>>2>>>0]=$,l}function km(l,f,$,B){return Z?Rs(2,1,l,f,$,B):Am(l,f,$,B)}function Am(l,f,$,B){if(l>>>=0,f>>>=0,$>>>=0,B>>>=0,ee===void 0)return Bt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var H=[];return Z&&H.length===0?km(l,f,$,B):(l={ic:$,Bb:l,Rb:B,nc:H},Z?(l.Nb="spawnThread",postMessage(l,H),0):xm(l))}var Im=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Om=(l,f,$)=>{var B=(f>>>=0)+$;for($=f;l[$]&&!($>=B);)++$;if(16<$-f&&l.buffer&&Im)return Im.decode(l.buffer instanceof ee?l.slice(f,$):l.subarray(f,$));for(B="";f<$;){var H=l[f++];if(128&H){var ye=63&l[f++];if((224&H)==192)B+=String.fromCharCode((31&H)<<6|ye);else{var Ye=63&l[f++];65536>(H=(240&H)==224?(15&H)<<12|ye<<6|Ye:(7&H)<<18|ye<<12|Ye<<6|63&l[f++])?B+=String.fromCharCode(H):(H-=65536,B+=String.fromCharCode(55296|H>>10,56320|1023&H))}}else B+=String.fromCharCode(H)}return B},Qs=(l,f)=>(l>>>=0)?Om(n(),l,f):"";function Fm(l,f,$){return Z?Rs(3,1,l,f,$):0}function Dm(l,f){if(Z)return Rs(4,1,l,f)}var Ah=l=>{for(var f=0,$=0;$<l.length;++$){var B=l.charCodeAt($);127>=B?f++:2047>=B?f+=2:55296<=B&&57343>=B?(f+=4,++$):f+=3}return f},Lm=(l,f,$,B)=>{if(!(0<B))return 0;var H=$>>>=0;B=$+B-1;for(var ye=0;ye<l.length;++ye){var Ye=l.charCodeAt(ye);if(55296<=Ye&&57343>=Ye&&(Ye=65536+((1023&Ye)<<10)|1023&l.charCodeAt(++ye)),127>=Ye){if($>=B)break;f[$++>>>0]=Ye}else{if(2047>=Ye){if($+1>=B)break;f[$++>>>0]=192|Ye>>6}else{if(65535>=Ye){if($+2>=B)break;f[$++>>>0]=224|Ye>>12}else{if($+3>=B)break;f[$++>>>0]=240|Ye>>18,f[$++>>>0]=128|Ye>>12&63}f[$++>>>0]=128|Ye>>6&63}f[$++>>>0]=128|63&Ye}}return f[$>>>0]=0,$-H},Ga=(l,f,$)=>Lm(l,n(),f,$);function zm(l,f){if(Z)return Rs(5,1,l,f)}function Bm(l,f,$){if(Z)return Rs(6,1,l,f,$)}function Rm(l,f,$){return Z?Rs(7,1,l,f,$):0}function Nm(l,f){if(Z)return Rs(8,1,l,f)}function jm(l,f,$){if(Z)return Rs(9,1,l,f,$)}function Um(l,f,$,B){if(Z)return Rs(10,1,l,f,$,B)}function Vm(l,f,$,B){if(Z)return Rs(11,1,l,f,$,B)}function Wm(l,f,$,B){if(Z)return Rs(12,1,l,f,$,B)}function Gm(l){if(Z)return Rs(13,1,l)}function Km(l,f){if(Z)return Rs(14,1,l,f)}function Hm(l,f,$){if(Z)return Rs(15,1,l,f,$)}var qm,si,mf=()=>{ei("")},_n=l=>{for(var f="";n()[l>>>0];)f+=qm[n()[l++>>>0]];return f},Ih={},Oh={};function kn(l,f,$={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(B,H,ye={}){var Ye=H.name;if(!B)throw new si(`type "${Ye}" must have a positive integer typeid pointer`);if(Oh.hasOwnProperty(B)){if(ye.Tb)return;throw new si(`Cannot register type '${Ye}' twice`)}Oh[B]=H,Ih.hasOwnProperty(B)&&(H=Ih[B],delete Ih[B],H.forEach(nt=>nt()))}(l,f,$)}var Qm=(l,f,$)=>{switch(f){case 1:return $?B=>r()[B>>>0]:B=>n()[B>>>0];case 2:return $?B=>i()[B>>>1>>>0]:B=>a()[B>>>1>>>0];case 4:return $?B=>o()[B>>>2>>>0]:B=>u()[B>>>2>>>0];case 8:return $?B=>qs[B>>>3]:B=>Lr[B>>>3];default:throw new TypeError(`invalid integer width (${f}): ${l}`)}};function _f(l,f,$){$>>>=0,kn(l>>>=0,{name:f=_n(f>>>0),fromWireType:B=>B,toWireType:function(B,H){if(typeof H!="bigint"&&typeof H!="number")throw H=H===null?"null":(B=typeof H)=="object"||B==="array"||B==="function"?H.toString():""+H,new TypeError(`Cannot convert "${H}" to ${this.name}`);return typeof H=="number"&&(H=BigInt(H)),H},argPackAdvance:ri,readValueFromPointer:Qm(f,$,f.indexOf("u")==-1),Eb:null})}var ri=8;function ff(l,f,$,B){kn(l>>>=0,{name:f=_n(f>>>0),fromWireType:function(H){return!!H},toWireType:function(H,ye){return ye?$:B},argPackAdvance:ri,readValueFromPointer:function(H){return this.fromWireType(n()[H>>>0])},Eb:null})}var Fh=[],An=[];function Dh(l){9<(l>>>=0)&&--An[l+1]==0&&(An[l]=void 0,Fh.push(l))}var Cr=l=>{if(!l)throw new si("Cannot use deleted val. handle = "+l);return An[l]},Br=l=>{switch(l){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=Fh.pop()||An.length;return An[f]=l,An[f+1]=1,f}};function Lh(l){return this.fromWireType(u()[l>>>2>>>0])}var gf={name:"emscripten::val",fromWireType:l=>{var f=Cr(l);return Dh(l),f},toWireType:(l,f)=>Br(f),argPackAdvance:ri,readValueFromPointer:Lh,Eb:null};function yf(l){return kn(l>>>0,gf)}var wf=(l,f)=>{switch(f){case 4:return function($){return this.fromWireType(m()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(_()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${l}`)}};function bf(l,f,$){$>>>=0,kn(l>>>=0,{name:f=_n(f>>>0),fromWireType:B=>B,toWireType:(B,H)=>H,argPackAdvance:ri,readValueFromPointer:wf(f,$),Eb:null})}function Mf(l,f,$,B,H){if(l>>>=0,$>>>=0,f=_n(f>>>0),H===-1&&(H=4294967295),H=nt=>nt,B===0){var ye=32-8*$;H=nt=>nt<<ye>>>ye}var Ye=f.includes("unsigned")?function(nt,wt){return wt>>>0}:function(nt,wt){return wt};kn(l,{name:f,fromWireType:H,toWireType:Ye,argPackAdvance:ri,readValueFromPointer:Qm(f,$,B!==0),Eb:null})}function vf(l,f,$){function B(ye){var Ye=u()[ye>>>2>>>0];return ye=u()[ye+4>>>2>>>0],new H(r().buffer,ye,Ye)}var H=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];kn(l>>>=0,{name:$=_n($>>>0),fromWireType:B,argPackAdvance:ri,readValueFromPointer:B},{Tb:!0})}function xf(l,f){l>>>=0;var $=(f=_n(f>>>0))==="std::string";kn(l,{name:f,fromWireType:function(B){var H=u()[B>>>2>>>0],ye=B+4;if($)for(var Ye=ye,nt=0;nt<=H;++nt){var wt=ye+nt;if(nt==H||n()[wt>>>0]==0){if(Ye=Qs(Ye,wt-Ye),Ct===void 0)var Ct=Ye;else Ct+="\0",Ct+=Ye;Ye=wt+1}}else{for(Ct=Array(H),nt=0;nt<H;++nt)Ct[nt]=String.fromCharCode(n()[ye+nt>>>0]);Ct=Ct.join("")}return gn(B),Ct},toWireType:function(B,H){H instanceof ArrayBuffer&&(H=new Uint8Array(H));var ye=typeof H=="string";if(!(ye||H instanceof Uint8Array||H instanceof Uint8ClampedArray||H instanceof Int8Array))throw new si("Cannot pass non-string to std::string");var Ye=$&&ye?Ah(H):H.length,nt=oh(4+Ye+1),wt=nt+4;if(u()[nt>>>2>>>0]=Ye,$&&ye)Ga(H,wt,Ye+1);else if(ye)for(ye=0;ye<Ye;++ye){var Ct=H.charCodeAt(ye);if(255<Ct)throw gn(wt),new si("String has UTF-16 code units that do not fit in 8 bits");n()[wt+ye>>>0]=Ct}else for(ye=0;ye<Ye;++ye)n()[wt+ye>>>0]=H[ye];return B!==null&&B.push(gn,nt),nt},argPackAdvance:ri,readValueFromPointer:Lh,Eb(B){gn(B)}})}var Xm=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Tf=(l,f)=>{for(var $=l>>1,B=$+f/2;!($>=B)&&a()[$>>>0];)++$;if(32<($<<=1)-l&&Xm)return Xm.decode(n().slice(l,$));for($="",B=0;!(B>=f/2);++B){var H=i()[l+2*B>>>1>>>0];if(H==0)break;$+=String.fromCharCode(H)}return $},Ef=(l,f,$)=>{if($??($=2147483647),2>$)return 0;var B=f;$=($-=2)<2*l.length?$/2:l.length;for(var H=0;H<$;++H){var ye=l.charCodeAt(H);i()[f>>>1>>>0]=ye,f+=2}return i()[f>>>1>>>0]=0,f-B},Pf=l=>2*l.length,Cf=(l,f)=>{for(var $=0,B="";!($>=f/4);){var H=o()[l+4*$>>>2>>>0];if(H==0)break;++$,65536<=H?(H-=65536,B+=String.fromCharCode(55296|H>>10,56320|1023&H)):B+=String.fromCharCode(H)}return B},$f=(l,f,$)=>{if(f>>>=0,$??($=2147483647),4>$)return 0;var B=f;$=B+$-4;for(var H=0;H<l.length;++H){var ye=l.charCodeAt(H);if(55296<=ye&&57343>=ye&&(ye=65536+((1023&ye)<<10)|1023&l.charCodeAt(++H)),o()[f>>>2>>>0]=ye,(f+=4)+4>$)break}return o()[f>>>2>>>0]=0,f-B},Sf=l=>{for(var f=0,$=0;$<l.length;++$){var B=l.charCodeAt($);55296<=B&&57343>=B&&++$,f+=4}return f};function kf(l,f,$){if(l>>>=0,f>>>=0,$=_n($>>>=0),f===2)var B=Tf,H=Ef,ye=Pf,Ye=nt=>a()[nt>>>1>>>0];else f===4&&(B=Cf,H=$f,ye=Sf,Ye=nt=>u()[nt>>>2>>>0]);kn(l,{name:$,fromWireType:nt=>{for(var wt,Ct=u()[nt>>>2>>>0],Vt=nt+4,ms=0;ms<=Ct;++ms){var vs=nt+4+ms*f;ms!=Ct&&Ye(vs)!=0||(Vt=B(Vt,vs-Vt),wt===void 0?wt=Vt:(wt+="\0",wt+=Vt),Vt=vs+f)}return gn(nt),wt},toWireType:(nt,wt)=>{if(typeof wt!="string")throw new si(`Cannot pass non-string to C++ string type ${$}`);var Ct=ye(wt),Vt=oh(4+Ct+f);return u()[Vt>>>2>>>0]=Ct/f,H(wt,Vt+4,Ct+f),nt!==null&&nt.push(gn,Vt),Vt},argPackAdvance:ri,readValueFromPointer:Lh,Eb(nt){gn(nt)}})}function Af(l,f){kn(l>>>=0,{Ub:!0,name:f=_n(f>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var If=()=>1;function Of(l){Vh(l>>>0,!W,1,!j,131072,!1),Cm()}var Ym=l=>{if(!zr)try{if(l(),!(0<Vi))try{Z?ah(ps):kh(ps)}catch(f){f instanceof Ch||f=="unwind"||Ie(0,f)}}catch(f){f instanceof Ch||f=="unwind"||Ie(0,f)}};function zh(l){l>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(o(),l>>>2,l).value.then(Yp),l+=128,Atomics.store(o(),l>>>2,1))}var Yp=()=>{var l=Ha();l&&(zh(l),Ym(C_))};function Ff(l,f){(l>>>=0)==f>>>0?setTimeout(Yp):Z?postMessage({targetThread:l,cmd:"checkMailbox"}):(l=mn[l])&&l.postMessage({cmd:"checkMailbox"})}var Bh=[];function Df(l,f,$,B,H){for(f>>>=0,B/=2,Bh.length=B,$=H>>>0>>>3,H=0;H<B;H++)Bh[H]=qs[$+2*H]?qs[$+2*H+1]:_()[$+2*H+1>>>0];return(f?Ph[f]:Eg[l])(...Bh)}function Lf(l){l>>>=0,Z?postMessage({cmd:"cleanupThread",thread:l}):Pm(mn[l])}function zf(l){}var Jp=(l,f)=>{var $=Oh[l];if($===void 0)throw l=x_(l),$=_n(l),gn(l),new si(`${f} has unknown type ${$}`);return $},Jm=(l,f,$)=>{var B=[];return l=l.toWireType(B,$),B.length&&(u()[f>>>2>>>0]=Br(B)),l};function Bf(l,f,$){return f>>>=0,$>>>=0,l=Cr(l>>>0),f=Jp(f,"emval::as"),Jm(f,$,l)}function Rf(l,f){return f>>>=0,l=Cr(l>>>0),(f=Jp(f,"emval::as")).toWireType(null,l)}var Zp=l=>{try{l()}catch(f){ei(f)}},ni=0,fn=null,Zm=0,eh=[],e_={},t_={},Nf=0,Rh=null,jf=[];function s_(l){return function(f){if(!zr){if(ni===0){var $=!1,B=!1;f((H=0)=>{if(!zr&&(Zm=H,$=!0,B)){ni=2,Zp(()=>I_(fn)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),H=!1;try{var ye=function(){var wt=o()[fn+8>>>2>>>0];return wt=jt[t_[wt]],--Vi,wt()}()}catch(wt){ye=wt,H=!0}var Ye=!1;if(!fn){var nt=Rh;nt&&(Rh=null,(H?nt.reject:nt.resolve)(ye),Ye=!0)}if(H&&!Ye)throw ye}}),B=!0,$||(ni=1,fn=function(){var H=oh(65548),ye=H+12;u()[H>>>2>>>0]=ye,u()[H+4>>>2>>>0]=ye+65536,ye=eh[0];var Ye=e_[ye];return Ye===void 0&&(Ye=Nf++,e_[ye]=Ye,t_[Ye]=ye),ye=Ye,o()[H+8>>>2>>>0]=ye,H}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),Zp(()=>k_(fn)))}else ni===2?(ni=0,Zp(O_),gn(fn),fn=null,jf.forEach(Ym)):ei(`invalid state: ${ni}`);return Zm}}(f=>{l().then(f)})}function Uf(l){return l>>>=0,s_(()=>(l=Cr(l)).then(Br))}var th=[];function Vf(l,f,$,B){return $>>>=0,B>>>=0,(l=th[l>>>0])(null,f=Cr(f>>>0),$,B)}var Wf={},sh=l=>{var f=Wf[l];return f===void 0?_n(l):f};function Gf(l,f,$,B,H){return $>>>=0,B>>>=0,H>>>=0,(l=th[l>>>0])(f=Cr(f>>>0),f[$=sh($)],B,H)}var r_=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Kf(l){return(l>>>=0)==0?Br(r_()):(l=sh(l),Br(r_()[l]))}var Hf=l=>{var f=th.length;return th.push(l),f},qf=(l,f)=>{for(var $=Array(l),B=0;B<l;++B)$[B]=Jp(u()[f+4*B>>>2>>>0],"parameter "+B);return $},n_=(l,f)=>Object.defineProperty(f,"name",{value:l});function Qf(l,f,$){var B=(f=qf(l,f>>>0)).shift();l--;var H=`return function (obj, func, destructorsRef, args) {
`,ye=0,Ye=[];$===0&&Ye.push("obj");for(var nt=["retType"],wt=[B],Ct=0;Ct<l;++Ct)Ye.push("arg"+Ct),nt.push("argType"+Ct),wt.push(f[Ct]),H+=`  var arg${Ct} = argType${Ct}.readValueFromPointer(args${ye?"+"+ye:""});
`,ye+=f[Ct].argPackAdvance;return H+=`  var rv = ${$===1?"new func":"func.call"}(${Ye.join(", ")});
`,B.Ub||(nt.push("emval_returnValue"),wt.push(Jm),H+=`  return emval_returnValue(retType, destructorsRef, rv);
`),nt.push(H+`};
`),l=function(Vt){var ms=Function;if(!(ms instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof ms} which is not a function`);var vs=n_(ms.name||"unknownFunctionName",function(){});return vs.prototype=ms.prototype,vs=new vs,(Vt=ms.apply(vs,Vt))instanceof Object?Vt:vs}(nt)(...wt),$=`methodCaller<(${f.map(Vt=>Vt.name).join(", ")}) => ${B.name}>`,Hf(n_($,l))}function Xf(l){return l=sh(l>>>0),Br(d[l])}function Yf(l,f){return f>>>=0,l=Cr(l>>>0),f=Cr(f),Br(l[f])}function Jf(l){9<(l>>>=0)&&(An[l+1]+=1)}function Zf(){return Br([])}function eg(l){l=Cr(l>>>0);for(var f=Array(l.length),$=0;$<l.length;$++)f[$]=l[$];return Br(f)}function tg(l){return Br(sh(l>>>0))}function sg(){return Br({})}function rg(l){for(var f=Cr(l>>>=0);f.length;){var $=f.pop();f.pop()($)}Dh(l)}function ng(l,f,$){f>>>=0,$>>>=0,l=Cr(l>>>0),f=Cr(f),$=Cr($),l[f]=$}function ig(l,f){return f>>>=0,l=(l=Jp(l>>>0,"_emval_take_value")).readValueFromPointer(f),Br(l)}function og(l,f){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),f>>>=0,l=new Date(1e3*l),o()[f>>>2>>>0]=l.getUTCSeconds(),o()[f+4>>>2>>>0]=l.getUTCMinutes(),o()[f+8>>>2>>>0]=l.getUTCHours(),o()[f+12>>>2>>>0]=l.getUTCDate(),o()[f+16>>>2>>>0]=l.getUTCMonth(),o()[f+20>>>2>>>0]=l.getUTCFullYear()-1900,o()[f+24>>>2>>>0]=l.getUTCDay(),l=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[f+28>>>2>>>0]=l}var Ka=l=>l%4==0&&(l%100!=0||l%400==0),i_=[0,31,60,91,121,152,182,213,244,274,305,335],o_=[0,31,59,90,120,151,181,212,243,273,304,334];function ag(l,f){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),f>>>=0,l=new Date(1e3*l),o()[f>>>2>>>0]=l.getSeconds(),o()[f+4>>>2>>>0]=l.getMinutes(),o()[f+8>>>2>>>0]=l.getHours(),o()[f+12>>>2>>>0]=l.getDate(),o()[f+16>>>2>>>0]=l.getMonth(),o()[f+20>>>2>>>0]=l.getFullYear()-1900,o()[f+24>>>2>>>0]=l.getDay();var $=(Ka(l.getFullYear())?i_:o_)[l.getMonth()]+l.getDate()-1|0;o()[f+28>>>2>>>0]=$,o()[f+36>>>2>>>0]=-60*l.getTimezoneOffset(),$=new Date(l.getFullYear(),6,1).getTimezoneOffset();var B=new Date(l.getFullYear(),0,1).getTimezoneOffset();l=0|($!=B&&l.getTimezoneOffset()==Math.min(B,$)),o()[f+32>>>2>>>0]=l}function lg(l){l>>>=0;var f=new Date(o()[l+20>>>2>>>0]+1900,o()[l+16>>>2>>>0],o()[l+12>>>2>>>0],o()[l+8>>>2>>>0],o()[l+4>>>2>>>0],o()[l>>>2>>>0],0),$=o()[l+32>>>2>>>0],B=f.getTimezoneOffset(),H=new Date(f.getFullYear(),6,1).getTimezoneOffset(),ye=new Date(f.getFullYear(),0,1).getTimezoneOffset(),Ye=Math.min(ye,H);return 0>$?o()[l+32>>>2>>>0]=+(H!=ye&&Ye==B):0<$!=(Ye==B)&&(H=Math.max(ye,H),f.setTime(f.getTime()+6e4*((0<$?Ye:H)-B))),o()[l+24>>>2>>>0]=f.getDay(),$=(Ka(f.getFullYear())?i_:o_)[f.getMonth()]+f.getDate()-1|0,o()[l+28>>>2>>>0]=$,o()[l>>>2>>>0]=f.getSeconds(),o()[l+4>>>2>>>0]=f.getMinutes(),o()[l+8>>>2>>>0]=f.getHours(),o()[l+12>>>2>>>0]=f.getDate(),o()[l+16>>>2>>>0]=f.getMonth(),o()[l+20>>>2>>>0]=f.getYear(),l=f.getTime(),BigInt(isNaN(l)?-1:l/1e3)}function a_(l,f,$,B,H,ye,Ye){return Z?Rs(16,1,l,f,$,B,H,ye,Ye):-52}function l_(l,f,$,B,H,ye){if(Z)return Rs(17,1,l,f,$,B,H,ye)}function ug(l,f,$,B){l>>>=0,f>>>=0,$>>>=0,B>>>=0;var H=new Date().getFullYear(),ye=new Date(H,0,1),Ye=new Date(H,6,1);H=ye.getTimezoneOffset();var nt=Ye.getTimezoneOffset(),wt=Math.max(H,nt);u()[l>>>2>>>0]=60*wt,o()[f>>>2>>>0]=+(H!=nt),ye=(l=Ct=>Ct.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(ye),Ye=l(Ye),nt<H?(Ga(ye,$,17),Ga(Ye,B,17)):(Ga(ye,B,17),Ga(Ye,$,17))}var Nh=[],u_=(l,f)=>{Nh.length=0;for(var $;$=n()[l++>>>0];){var B=$!=105;f+=(B&=$!=112)&&f%8?4:0,Nh.push($==112?u()[f>>>2>>>0]:$==106?qs[f>>>3]:$==105?o()[f>>>2>>>0]:_()[f>>>3>>>0]),f+=B?8:4}return Nh};function dg(l,f,$){return l>>>=0,f=u_(f>>>0,$>>>0),Ph[l](...f)}function cg(l,f,$){return l>>>=0,f=u_(f>>>0,$>>>0),Ph[l](...f)}var pg=()=>{},hg=()=>Date.now();function mg(l,f){return Bt(Qs(l>>>0,f>>>0))}var d_,_g=()=>{throw Vi+=1,"unwind"};function fg(){return 4294901760}d_=()=>performance.timeOrigin+performance.now();var gg=()=>navigator.hardwareConcurrency;function yg(){return ei("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function wg(l){l>>>=0;var f=n().length;if(l<=f||4294901760<l)return!1;for(var $=1;4>=$;$*=2){var B=f*(1+.2/$);B=Math.min(B,l+100663296);var H=Math;B=Math.max(l,B);e:{H=(H.min.call(H,4294901760,B+(65536-B%65536)%65536)-yt.buffer.byteLength+65535)/65536;try{yt.grow(H),Cs();var ye=1;break e}catch{}ye=void 0}if(ye)return!0}return!1}var rh=()=>(ei("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Qc={},c_=l=>{l.forEach(f=>{rh()})};function bg(){var l=Error().stack.toString().split(`
`);return l[0]=="Error"&&l.shift(),c_(l),Qc.Qb=rh(),Qc.fc=l,Qc.Qb}function Mg(l,f,$){if(l>>>=0,f>>>=0,Qc.Qb==l)var B=Qc.fc;else(B=Error().stack.toString().split(`
`))[0]=="Error"&&B.shift(),c_(B);for(var H=3;B[H]&&rh()!=l;)++H;for(l=0;l<$&&B[l+H];++l)o()[f+4*l>>>2>>>0]=rh();return l}var jh,Uh={},p_=()=>{if(!jh){var l,f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(l in Uh)Uh[l]===void 0?delete f[l]:f[l]=Uh[l];var $=[];for(l in f)$.push(`${l}=${f[l]}`);jh=$}return jh};function h_(l,f){if(Z)return Rs(18,1,l,f);l>>>=0,f>>>=0;var $=0;return p_().forEach((B,H)=>{var ye=f+$;for(H=u()[l+4*H>>>2>>>0]=ye,ye=0;ye<B.length;++ye)r()[H++>>>0]=B.charCodeAt(ye);r()[H>>>0]=0,$+=B.length+1}),0}function m_(l,f){if(Z)return Rs(19,1,l,f);l>>>=0,f>>>=0;var $=p_();u()[l>>>2>>>0]=$.length;var B=0;return $.forEach(H=>B+=H.length+1),u()[f>>>2>>>0]=B,0}function __(l){return Z?Rs(20,1,l):52}function f_(l,f,$,B){return Z?Rs(21,1,l,f,$,B):52}function g_(l,f,$,B){return Z?Rs(22,1,l,f,$,B):70}var vg=[null,[],[]];function y_(l,f,$,B){if(Z)return Rs(23,1,l,f,$,B);f>>>=0,$>>>=0,B>>>=0;for(var H=0,ye=0;ye<$;ye++){var Ye=u()[f>>>2>>>0],nt=u()[f+4>>>2>>>0];f+=8;for(var wt=0;wt<nt;wt++){var Ct=n()[Ye+wt>>>0],Vt=vg[l];Ct===0||Ct===10?((l===1?qt:Bt)(Om(Vt,0)),Vt.length=0):Vt.push(Ct)}H+=nt}return u()[B>>>2>>>0]=H,0}var w_=[31,29,31,30,31,30,31,31,30,31,30,31],b_=[31,28,31,30,31,30,31,31,30,31,30,31],xg=(l,f)=>{r().set(l,f>>>0)};function M_(l,f,$,B){function H(He,ls,js){for(He=typeof He=="number"?He.toString():He||"";He.length<ls;)He=js[0]+He;return He}function ye(He,ls){return H(He,ls,"0")}function Ye(He,ls){function js(D_){return 0>D_?-1:0<D_?1:0}var Gi;return(Gi=js(He.getFullYear()-ls.getFullYear()))===0&&(Gi=js(He.getMonth()-ls.getMonth()))===0&&(Gi=js(He.getDate()-ls.getDate())),Gi}function nt(He){switch(He.getDay()){case 0:return new Date(He.getFullYear()-1,11,29);case 1:return He;case 2:return new Date(He.getFullYear(),0,3);case 3:return new Date(He.getFullYear(),0,2);case 4:return new Date(He.getFullYear(),0,1);case 5:return new Date(He.getFullYear()-1,11,31);case 6:return new Date(He.getFullYear()-1,11,30)}}function wt(He){var ls=He.Cb;for(He=new Date(new Date(He.Db+1900,0,1).getTime());0<ls;){var js=He.getMonth(),Gi=(Ka(He.getFullYear())?w_:b_)[js];if(!(ls>Gi-He.getDate())){He.setDate(He.getDate()+ls);break}ls-=Gi-He.getDate()+1,He.setDate(1),11>js?He.setMonth(js+1):(He.setMonth(0),He.setFullYear(He.getFullYear()+1))}return js=new Date(He.getFullYear()+1,0,4),ls=nt(new Date(He.getFullYear(),0,4)),js=nt(js),0>=Ye(ls,He)?0>=Ye(js,He)?He.getFullYear()+1:He.getFullYear():He.getFullYear()-1}l>>>=0,f>>>=0,$>>>=0,B>>>=0;var Ct=u()[B+40>>>2>>>0];for(var Vt in B={lc:o()[B>>>2>>>0],kc:o()[B+4>>>2>>>0],Ib:o()[B+8>>>2>>>0],Mb:o()[B+12>>>2>>>0],Jb:o()[B+16>>>2>>>0],Db:o()[B+20>>>2>>>0],vb:o()[B+24>>>2>>>0],Cb:o()[B+28>>>2>>>0],sc:o()[B+32>>>2>>>0],jc:o()[B+36>>>2>>>0],mc:Ct?Qs(Ct):""},$=Qs($),Ct={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})$=$.replace(new RegExp(Vt,"g"),Ct[Vt]);var ms="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),vs="January February March April May June July August September October November December".split(" ");for(Vt in Ct={"%a":He=>ms[He.vb].substring(0,3),"%A":He=>ms[He.vb],"%b":He=>vs[He.Jb].substring(0,3),"%B":He=>vs[He.Jb],"%C":He=>ye((He.Db+1900)/100|0,2),"%d":He=>ye(He.Mb,2),"%e":He=>H(He.Mb,2," "),"%g":He=>wt(He).toString().substring(2),"%G":wt,"%H":He=>ye(He.Ib,2),"%I":He=>((He=He.Ib)==0?He=12:12<He&&(He-=12),ye(He,2)),"%j":He=>{for(var ls=0,js=0;js<=He.Jb-1;ls+=(Ka(He.Db+1900)?w_:b_)[js++]);return ye(He.Mb+ls,3)},"%m":He=>ye(He.Jb+1,2),"%M":He=>ye(He.kc,2),"%n":()=>`
`,"%p":He=>0<=He.Ib&&12>He.Ib?"AM":"PM","%S":He=>ye(He.lc,2),"%t":()=>"	","%u":He=>He.vb||7,"%U":He=>ye(Math.floor((He.Cb+7-He.vb)/7),2),"%V":He=>{var ls=Math.floor((He.Cb+7-(He.vb+6)%7)/7);if(2>=(He.vb+371-He.Cb-2)%7&&ls++,ls)ls==53&&((js=(He.vb+371-He.Cb)%7)==4||js==3&&Ka(He.Db)||(ls=1));else{ls=52;var js=(He.vb+7-He.Cb-1)%7;(js==4||js==5&&Ka(He.Db%400-1))&&ls++}return ye(ls,2)},"%w":He=>He.vb,"%W":He=>ye(Math.floor((He.Cb+7-(He.vb+6)%7)/7),2),"%y":He=>(He.Db+1900).toString().substring(2),"%Y":He=>He.Db+1900,"%z":He=>{var ls=0<=(He=He.jc);return He=Math.abs(He)/60,(ls?"+":"-")+("0000"+(He/60*100+He%60)).slice(-4)},"%Z":He=>He.mc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0"),Ct)$.includes(Vt)&&($=$.replace(new RegExp(Vt,"g"),Ct[Vt](B)));return Vt=function(He){var ls=Array(Ah(He)+1);return Lm(He,ls,0,ls.length),ls}($=$.replace(/\0\0/g,"%")),Vt.length>f?0:(xg(Vt,l),Vt.length-1)}function Tg(l,f,$,B){return M_(l>>>0,f>>>0,$>>>0,B>>>0)}Z||function(){for(var l=d.numThreads-1;l--;)Sm();Js.unshift(()=>{Ui++,function(f){Z?f():Promise.all(ti.map($m)).then(f)}(()=>gm())})}();for(var v_=Array(256),nh=0;256>nh;++nh)v_[nh]=String.fromCharCode(nh);qm=v_,si=d.BindingError=class extends Error{constructor(l){super(l),this.name="BindingError"}},d.InternalError=class extends Error{constructor(l){super(l),this.name="InternalError"}},An.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>An.length/2-5-Fh.length;var Eg=[Sh,Tm,km,Fm,Dm,zm,Bm,Rm,Nm,jm,Um,Vm,Wm,Gm,Km,Hm,a_,l_,h_,m_,__,f_,g_,y_],jt=function(){function l($,B){return jt=$.exports,jt=function(){var H=jt,ye={};for(let[Ye,nt]of Object.entries(H))ye[Ye]=typeof nt=="function"?(...wt)=>{eh.push(Ye);try{return nt(...wt)}finally{zr||(eh.pop(),fn&&ni===1&&eh.length===0&&(ni=0,Vi+=1,Zp(A_),typeof Fibers<"u"&&Fibers.tc()))}}:nt;return ye}(),jt=function(){var H=jt,ye=nt=>wt=>nt(wt)>>>0,Ye=nt=>()=>nt()>>>0;return(H=Object.assign({},H)).Da=ye(H.Da),H.gb=Ye(H.gb),H.ib=ye(H.ib),H.emscripten_main_runtime_thread_id=Ye(H.emscripten_main_runtime_thread_id),H.tb=ye(H.tb),H.ub=Ye(H.ub),H}(),Em.push(jt.jb),Sn.unshift(jt.Ca),Ht=B,gm(),jt}var f=vm();if(Ui++,d.instantiateWasm)try{return d.instantiateWasm(f,l)}catch($){Bt(`Module.instantiateWasm callback failed with error: ${$}`),k($)}return Eh||(Eh=d.locateFile?ym("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":d.locateFile?d.locateFile("ort-wasm-simd-threaded.jsep.wasm",Le):Le+"ort-wasm-simd-threaded.jsep.wasm":new URL(s("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),s.b).href),function($,B){var H=Eh;return et||typeof WebAssembly.instantiateStreaming!="function"||ym(H)||wm(H)||typeof fetch!="function"?Mm(H,$,B):fetch(H,{credentials:"same-origin"}).then(ye=>WebAssembly.instantiateStreaming(ye,$).then(B,function(Ye){return Bt(`wasm streaming compile failed: ${Ye}`),Bt("falling back to ArrayBuffer instantiation"),Mm(H,$,B)}))}(f,function($){l($.instance,$.module)}).catch(k),{}}(),x_=l=>(x_=jt.Da)(l),T_=()=>(T_=jt.Ea)();d._OrtInit=(l,f)=>(d._OrtInit=jt.Fa)(l,f),d._OrtGetLastError=(l,f)=>(d._OrtGetLastError=jt.Ga)(l,f),d._OrtCreateSessionOptions=(l,f,$,B,H,ye,Ye,nt,wt,Ct)=>(d._OrtCreateSessionOptions=jt.Ha)(l,f,$,B,H,ye,Ye,nt,wt,Ct),d._OrtAppendExecutionProvider=(l,f)=>(d._OrtAppendExecutionProvider=jt.Ia)(l,f),d._OrtAddFreeDimensionOverride=(l,f,$)=>(d._OrtAddFreeDimensionOverride=jt.Ja)(l,f,$),d._OrtAddSessionConfigEntry=(l,f,$)=>(d._OrtAddSessionConfigEntry=jt.Ka)(l,f,$),d._OrtReleaseSessionOptions=l=>(d._OrtReleaseSessionOptions=jt.La)(l),d._OrtCreateSession=(l,f,$)=>(d._OrtCreateSession=jt.Ma)(l,f,$),d._OrtReleaseSession=l=>(d._OrtReleaseSession=jt.Na)(l),d._OrtGetInputOutputCount=(l,f,$)=>(d._OrtGetInputOutputCount=jt.Oa)(l,f,$),d._OrtGetInputName=(l,f)=>(d._OrtGetInputName=jt.Pa)(l,f),d._OrtGetOutputName=(l,f)=>(d._OrtGetOutputName=jt.Qa)(l,f),d._OrtFree=l=>(d._OrtFree=jt.Ra)(l),d._OrtCreateTensor=(l,f,$,B,H,ye)=>(d._OrtCreateTensor=jt.Sa)(l,f,$,B,H,ye),d._OrtGetTensorData=(l,f,$,B,H)=>(d._OrtGetTensorData=jt.Ta)(l,f,$,B,H),d._OrtReleaseTensor=l=>(d._OrtReleaseTensor=jt.Ua)(l),d._OrtCreateRunOptions=(l,f,$,B)=>(d._OrtCreateRunOptions=jt.Va)(l,f,$,B),d._OrtAddRunConfigEntry=(l,f,$)=>(d._OrtAddRunConfigEntry=jt.Wa)(l,f,$),d._OrtReleaseRunOptions=l=>(d._OrtReleaseRunOptions=jt.Xa)(l),d._OrtCreateBinding=l=>(d._OrtCreateBinding=jt.Ya)(l),d._OrtBindInput=(l,f,$)=>(d._OrtBindInput=jt.Za)(l,f,$),d._OrtBindOutput=(l,f,$,B)=>(d._OrtBindOutput=jt._a)(l,f,$,B),d._OrtClearBoundOutputs=l=>(d._OrtClearBoundOutputs=jt.$a)(l),d._OrtReleaseBinding=l=>(d._OrtReleaseBinding=jt.ab)(l),d._OrtRunWithBinding=(l,f,$,B,H)=>(d._OrtRunWithBinding=jt.bb)(l,f,$,B,H),d._OrtRun=(l,f,$,B,H,ye,Ye,nt)=>(d._OrtRun=jt.cb)(l,f,$,B,H,ye,Ye,nt),d._OrtEndProfiling=l=>(d._OrtEndProfiling=jt.db)(l),d._JsepOutput=(l,f,$)=>(d._JsepOutput=jt.eb)(l,f,$),d._JsepGetNodeName=l=>(d._JsepGetNodeName=jt.fb)(l);var ih,Ha=()=>(Ha=jt.gb)(),gn=d._free=l=>(gn=d._free=jt.hb)(l),oh=d._malloc=l=>(oh=d._malloc=jt.ib)(l),Vh=(l,f,$,B,H,ye)=>(Vh=jt.lb)(l,f,$,B,H,ye),E_=()=>(E_=jt.mb)(),P_=(l,f,$,B,H)=>(P_=jt.nb)(l,f,$,B,H),Wh=l=>(Wh=jt.ob)(l),ah=l=>(ah=jt.pb)(l),C_=()=>(C_=jt.qb)(),$_=(l,f)=>($_=jt.rb)(l,f),lh=l=>(lh=jt.sb)(l),Gh=l=>(Gh=jt.tb)(l),Kh=()=>(Kh=jt.ub)(),S_=d.dynCall_ii=(l,f)=>(S_=d.dynCall_ii=jt.wb)(l,f),k_=l=>(k_=jt.xb)(l),A_=()=>(A_=jt.yb)(),I_=l=>(I_=jt.zb)(l),O_=()=>(O_=jt.Ab)();function F_(){0<Ui||(Z?(S(d),Z||Xp(Sn),startWorker(d)):(Xp(Js),0<Ui||ih||(ih=!0,d.calledRun=!0,zr||(Z||Xp(Sn),S(d),Z||Xp(Th)))))}return d.___start_em_js=932469,d.___stop_em_js=932715,d.stackSave=()=>Kh(),d.stackRestore=l=>lh(l),d.stackAlloc=l=>Gh(l),d.setValue=function(l,f,$="i8"){switch($.endsWith("*")&&($="*"),$){case"i1":case"i8":r()[l>>>0]=f;break;case"i16":i()[l>>>1>>>0]=f;break;case"i32":o()[l>>>2>>>0]=f;break;case"i64":qs[l>>>3]=BigInt(f);break;case"float":m()[l>>>2>>>0]=f;break;case"double":_()[l>>>3>>>0]=f;break;case"*":u()[l>>>2>>>0]=f;break;default:ei(`invalid type for setValue: ${$}`)}},d.getValue=function(l,f="i8"){switch(f.endsWith("*")&&(f="*"),f){case"i1":case"i8":return r()[l>>>0];case"i16":return i()[l>>>1>>>0];case"i32":return o()[l>>>2>>>0];case"i64":return qs[l>>>3];case"float":return m()[l>>>2>>>0];case"double":return _()[l>>>3>>>0];case"*":return u()[l>>>2>>>0];default:ei(`invalid type for getValue: ${f}`)}},d.UTF8ToString=Qs,d.stringToUTF8=Ga,d.lengthBytesUTF8=Ah,qc=function l(){ih||F_(),ih||(qc=l)},F_(),d.PTR_SIZE=4,N}),Ls=$s,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&$s()}),$r,Jr,Us,xr,Nt,Zr,Sr,kr,en,cr,Rr,Ar,Nr,jr=g(()=>{qe(),$r=typeof location>"u"?void 0:location.origin,Jr=()=>{var e;return(e=import.meta.url)!=null&&e.startsWith("file:")?new URL(new URL(s("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),s.b).href,$r).href:import.meta.url},Us=Jr(),xr=()=>{if(Us&&!Us.startsWith("blob:"))return Us.substring(0,Us.lastIndexOf("/")+1)},Nt=(e,t)=>{try{let r=t??Us;return(r?new URL(e,r):new URL(e)).origin===$r}catch{return!1}},Zr=(e,t)=>{let r=t??Us;try{return(r?new URL(e,r):new URL(e)).href}catch{return}},Sr=(e,t)=>`${t??"./"}${e}`,kr=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},en=async e=>(await import(e)).default,cr=(kt(),M(at)).default,Rr=async()=>{if(!Us)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Nt(Us))return[void 0,cr()];let e=await kr(Us);return[e,cr(e)]},Ar=(sr(),M(is)).default,Nr=async(e,t,r)=>{if(!e&&!t&&Ar&&Us&&Nt(Us))return[void 0,Ar];{let n="ort-wasm-simd-threaded.jsep.mjs",i=e??Zr(n,t),a=r&&i&&!Nt(i,t),o=a?await kr(i):i??Sr(n,t);return[a?o:void 0,await en(o)]}}}),ar,it,xt,Ft,Vs,Ur,Ir,Ms,lr=g(()=>{jr(),it=!1,xt=!1,Ft=!1,Vs=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Ur=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ir=async e=>{if(it)return Promise.resolve();if(xt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ft)throw new Error("previous call to 'initializeWebAssembly()' failed.");xt=!0;let t=e.initTimeout,r=e.numThreads;if(!Ur())throw new Error("WebAssembly SIMD is not supported in the current environment.");let n=Vs();r>1&&!n&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,a=typeof i=="string"?i:void 0,o=i==null?void 0:i.mjs,u=(o==null?void 0:o.href)??o,m=i==null?void 0:i.wasm,_=(m==null?void 0:m.href)??m,S=e.wasmBinary,[k,d]=await Nr(u,a,r>1),N=!1,j=[];if(t>0&&j.push(new Promise(W=>{setTimeout(()=>{N=!0,W()},t)})),j.push(new Promise((W,Z)=>{let ee={numThreads:r};if(S)ee.wasmBinary=S;else if(_||a)ee.locateFile=Y=>_??a+Y;else if(u&&u.indexOf("blob:")!==0)ee.locateFile=Y=>new URL(Y,u).href;else if(k){let Y=xr();Y&&(ee.locateFile=_e=>Y+_e)}d(ee).then(Y=>{xt=!1,it=!0,ar=Y,W(),k&&URL.revokeObjectURL(k)},Y=>{xt=!1,Ft=!0,Z(Y)})})),await Promise.race(j),N)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ms=()=>{if(it&&ar)return ar;throw new Error("WebAssembly is not initialized yet.")}}),Os,Tr,ss,wn=g(()=>{lr(),Os=(e,t)=>{let r=Ms(),n=r.lengthBytesUTF8(e)+1,i=r._malloc(n);return r.stringToUTF8(e,i,n),t.push(i),i},Tr=(e,t,r,n)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,a])=>{let o=t?t+i:i;if(typeof a=="object")Tr(a,o+".",r,n);else if(typeof a=="string"||typeof a=="number")n(o,a.toString());else if(typeof a=="boolean")n(o,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},ss=e=>{let t=Ms(),r=t.stackSave();try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetLastError(i,i+n);let a=Number(t.getValue(i,n===4?"i32":"i64")),o=t.getValue(i+n,"*"),u=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}}}),Vr,li=g(()=>{lr(),wn(),Vr=e=>{let t=Ms(),r=0,n=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let a=0;return(e==null?void 0:e.tag)!==void 0&&(a=Os(e.tag,n)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,a),r===0&&ss("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&Tr(e.extra,"",new WeakSet,(o,u)=>{let m=Os(o,n),_=Os(u,n);t._OrtAddRunConfigEntry(r,m,_)!==0&&ss(`Can't set a run config entry: ${o} - ${u}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseRunOptions(r),n.forEach(o=>t._free(o)),a}}}),On,Fn,Dn,Wr,Ln,ui=g(()=>{lr(),wn(),On=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Fn=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Dn=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Wr=(e,t,r)=>{for(let n of t){let i=typeof n=="string"?n:n.name;switch(i){case"webnn":if(i="WEBNN",typeof n!="string"){let o=n==null?void 0:n.deviceType;if(o){let u=Os("deviceType",r),m=Os(o,r);Ms()._OrtAddSessionConfigEntry(e,u,m)!==0&&ss(`Can't set a session config entry: 'deviceType' - ${o}.`)}}break;case"webgpu":if(i="JS",typeof n!="string"){let o=n;if(o!=null&&o.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let u=Os("preferredLayout",r),m=Os(o.preferredLayout,r);Ms()._OrtAddSessionConfigEntry(e,u,m)!==0&&ss(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let a=Os(i,r);Ms()._OrtAppendExecutionProvider(e,a)!==0&&ss(`Can't append execution provider: ${i}.`)}},Ln=e=>{let t=Ms(),r=0,n=[],i=e||{};Dn(i);try{let a=On(i.graphOptimizationLevel??"all"),o=Fn(i.executionMode??"sequential"),u=typeof i.logId=="string"?Os(i.logId,n):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let _=i.logVerbosityLevel??0;if(!Number.isInteger(_)||_<0||_>4)throw new Error(`log verbosity level is not valid: ${_}`);let S=typeof i.optimizedModelFilePath=="string"?Os(i.optimizedModelFilePath,n):0;if(r=t._OrtCreateSessionOptions(a,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,u,m,_,S),r===0&&ss("Can't create session options."),i.executionProviders&&Wr(r,i.executionProviders,n),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let k=Os("enableGraphCapture",n),d=Os(i.enableGraphCapture.toString(),n);t._OrtAddSessionConfigEntry(r,k,d)!==0&&ss(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[k,d]of Object.entries(i.freeDimensionOverrides)){if(typeof k!="string")throw new Error(`free dimension override name must be a string: ${k}`);if(typeof d!="number"||!Number.isInteger(d)||d<0)throw new Error(`free dimension override value must be a non-negative integer: ${d}`);let N=Os(k,n);t._OrtAddFreeDimensionOverride(r,N,d)!==0&&ss(`Can't set a free dimension override: ${k} - ${d}.`)}return i.extra!==void 0&&Tr(i.extra,"",new WeakSet,(k,d)=>{let N=Os(k,n),j=Os(d,n);t._OrtAddSessionConfigEntry(r,N,j)!==0&&ss(`Can't set a session config entry: ${k} - ${d}.`)}),[r,n]}catch(a){throw r!==0&&t._OrtReleaseSessionOptions(r)!==0&&ss("Can't release session options."),n.forEach(o=>t._free(o)),a}}}),Gr,_r,ur,bn,tn,Mn,vn,xn,Lt=g(()=>{Gr=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},_r=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},ur=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],n=typeof t=="number"?t:t.reduce((i,a)=>i*a,1);return r>0?Math.ceil(n*r):void 0},bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},tn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Mn=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",vn=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",xn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Tn,zn=g(()=>{qe(),Tn=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),a;try{a=new ArrayBuffer(n)}catch(u){if(u instanceof RangeError){let m=Math.ceil(n/65536);a=new WebAssembly.Memory({initial:m,maximum:m}).buffer}else throw u}let o=0;for(;;){let{done:u,value:m}=await i.read();if(u)break;let _=m.byteLength;new Uint8Array(a,o,_).set(m),o+=_}return new Uint8Array(a,0,n)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Bn,Rn,Kr,Nn,En,jn,os,Pe=g(()=>{Lt(),Bn=["V","I","W","E","F"],Rn=(e,t)=>{console.log(`[${Bn[e]},${new Date().toISOString()}]${t}`)},En=(e,t)=>{Kr=e,Nn=t},jn=(e,t)=>{let r=tn(e),n=tn(Kr);r>=n&&Rn(r,typeof t=="function"?t():t)},os=(...e)=>{Nn&&jn(...e)}}),C,X=g(()=>{Lt(),C=(e,t)=>new(bn(t))(e)}),de=g(()=>{}),xe,Ae,Xe,ht,gt,_t,Tt,Kt,_s,us=g(()=>{Pe(),de(),xe=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ae=[],Xe=e=>Math.ceil(Number(e)/16)*16,ht=e=>{for(let t=0;t<Ae.length;t++){let r=Ae[t];if(e<=r)return r}return Math.ceil(e/16)*16},gt=1,_t=()=>gt++,Tt=async(e,t,r,n)=>{let i=Xe(r),a=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,a,0,i),e.flush(),await a.mapAsync(GPUMapMode.READ);let u=a.getMappedRange();if(n){let m=n();return m.set(new Uint8Array(u,0,r)),m}else return new Uint8Array(u.slice(0,r))}finally{a.destroy()}},Kt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of xe)Ae.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,n=t.byteOffset,i=t.byteLength,a=Xe(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=u.getMappedRange();new Uint8Array(m).set(new Uint8Array(r,n,i)),u.unmap();let _=this.backend.device.createCommandEncoder();_.copyBufferToBuffer(u,0,o.gpuData.buffer,0,a),this.backend.device.queue.submit([_.finish()]),u.destroy(),os("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(t);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Xe(r.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let n;if(r){if(n=r[0],e===r[1])return os("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else n=_t();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:e},originalSize:t}),os("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${n}, registered.`),n}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),os("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=ht(e),n,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||a){let u=(i?this.freeBuffers:this.freeUniformBuffers).get(r);u?u.length>0?n=u.pop():n=this.backend.device.createBuffer({size:r,usage:t}):n=this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let o={id:_t(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),os("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=typeof e=="bigint"?Number(e):e,r=this.storageCache.get(t);if(!r){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return os("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(e,t){let r=this.storageCache.get(Number(e));if(!r)throw new Error("data does not exist");await Tt(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=xe.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(os("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},_s=(...e)=>new Kt(...e)}),Fs,zt,rs=g(()=>{Fs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},zt=e=>new Fs(e)}),rr,Ws,ze,Zs,Or,Ss,Xs,Ot=g(()=>{rr=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Ws=class{static calcShape(e,t,r=!1){let n=e.length,i=t.length;if(n===0)return t;if(i===0)return e;let a=Math.max(e.length,t.length),o=new Array(a);if(r){if(n<2||i<2)return;let u=rr.calcMatMulShape([e[n-2],e[n-1]],[t[i-2],t[i-1]]);if(u===void 0)return;[o[a-2],o[a-1]]=u}for(let u=r?3:1;u<=a;u++){let m=n-u<0?1:e[n-u],_=i-u<0?1:t[i-u];if(m!==_&&m>1&&_>1)return;let S=Math.max(m,_);if(m&&_)o[a-u]=Math.max(m,_);else{if(S>1)return;o[a-u]=0}}return o}static isValidBroadcast(e,t){let r=e.length,n=t.length;if(r>n)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[n-i])return!1;return!0}},ze=class dh{static size(t){return dh.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let n=t.length;if(n===0)return[];let i=new Array(n),a=n-1;for(;a>=0;){if(t[a]%r===0){i[a]=t[a]/r;break}if(r%t[a]!==0)throw new Error("cannot convert shape");i[a]=1,r/=t[a],a--}for(a--;a>=0;a--)i[a]=t[a];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return dh.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return dh.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,n){let i=1;for(let a=r;a<n;a++){if(t[a]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[a])}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=t[r-1];for(let i=r-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(n=>this.normalizeAxis(n,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(n=>t[n]):t.slice().reverse()}static padShape(t,r){let n=t.length;return t.map((i,a)=>i+r[a]+r[a+n])}static areEqual(t,r){return t.length!==r.length?!1:t.every((n,i)=>n===r[i])}},Zs=class Yc{static adjustPoolAttributes(t,r,n,i,a,o){if(!t&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let u=0;u<r.length-2;u++)u>=n.length?n.push(r[u+2]):n[u]=r[u+2];for(let u=0;u<n.length;u++)if(u<i.length){if(i[u]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let u=0;u<n.length;u++)if(u<a.length){if(a[u]<0)throw new Error("dilations should be greater than or equal to 1")}else a.push(1);for(let u=0;u<n.length*2;u++)if(u<o.length){if(o[u]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let u=0;u<n.length;u++){if(n[u]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[u]>=n[u]||o[u+n.length]>=n[u])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,n,i,a,o,u){if(u){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)Yc.adjustPadAndReturnShape(t[m+(o?1:2)],r[m],n[m],i[m],a,m,m+t.length-2,u)}}static computePoolOutputShape(t,r,n,i,a,o,u){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return Yc.computeShapeHelper(t,r,m,n,i,a,o,u),m}static computeConvOutputShape(t,r,n,i,a,o,u){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return Yc.computeShapeHelper(!1,t,m,n,i,a,o,u),m}static computeShapeHelper(t,r,n,i,a,o,u,m){if(t)for(let _=0;_<r.length-2;_++)n.push(1);else for(let _=0;_<r.length-2;_++)n.push(Yc.adjustPadAndReturnShape(r[_+2],i[_],a[_],o[_],u,_,_+r.length-2,m))}static adjustPadAndReturnShape(t,r,n,i,a,o,u,m){let _=n*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return a[o]=0,a[u]=0,Math.floor((t-_)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let S=((t+r-1)/r-1)*r+i-t;return a[o]=Math.floor(m==="SAME_LOWER"?(S+1)/2:S/2),a[u]=S-a[o],Math.floor((t+S-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+a[o]+a[u]-_)/r+1)}},Or=class{static getShapeOfGemmResult(e,t,r,n,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let a,o,u;t?(a=e[1],o=e[0]):(a=e[0],o=e[1]);let m=-1;if(n?(u=r[0],m=1):(u=r[1],m=0),r[m]!==o)throw new Error("dimension mismatch");if(a<=0||u<=0||o<=0)throw new Error("invalid shape specified");if(i&&!Ws.isValidBroadcast(i,[a,u]))throw new Error("gemm: invalid bias shape for broadcast");return[a,u,o]}},Ss=-34028234663852886e22,Xs=34028234663852886e22}),or,fr,fs,ks,bt,Xt,zs,As,Gs,St,sn,Qe,At,Ja,Ji,Za,el,Jt=g(()=>{Lt(),Ot(),or=64,fr=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},fs=(e,t=1)=>{let r=fr(e,t);return typeof r=="string"?r:r[0]},ks=(e,t=1)=>{let r=fr(e,t);return typeof r=="string"?r:r[1]},bt=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:ze.computeStrides(r)})}),t},Xt=e=>e%4===0?4:e%2===0?2:1,zs=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,As=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Gs=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,St=(e,t,r,n)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?n==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:n==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,sn=(e,t,r,n,i)=>{let a=typeof r=="number",o=a?r:r.length,u=[...new Array(o).keys()],m=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,_=fr(t,i),S=typeof _=="string"?_:_[1],k=typeof _=="string"?_:_[0],d={indices:m,value:S,storage:k,tensor:t},N=ot=>typeof ot=="string"?ot:`${ot}u`,j={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},W=a?"uniforms.":"",Z=`${W}${e}_shape`,ee=`${W}${e}_strides`,Y="";for(let ot=0;ot<o-1;ot++)Y+=`
    let dim${ot} = current / ${St(ee,ot,o)};
    let rest${ot} = current % ${St(ee,ot,o)};
    indices[${ot}] = dim${ot};
    current = rest${ot};
    `;Y+=`indices[${o-1}] = current;`;let _e=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${d.indices} {
    var indices: ${d.indices};
    var current = offset;
    ${Y}
    return indices;
  }`,he=ot=>(j.offsetToIndices=!0,o<2?ot:`o2i_${e}(${ot})`),Me=[];if(o>=2)for(let ot=o-1;ot>=0;ot--)Me.push(`${St(ee,ot,o)} * (indices[${ot}])`);let Ie=o<2?"":`
  fn i2o_${e}(indices: ${d.indices}) -> u32 {
    return ${Me.join("+")};
  }`,Le=ot=>(j.indicesToOffset=!0,o<2?ot:`i2o_${e}(${ot})`),et=(...ot)=>o===0?"0u":`${d.indices}(${ot.map(N).join(",")})`,dt=(ot,Pt)=>o<2?`${ot}`:`${St(ot,Pt,o)}`,Et=(ot,Pt,hs)=>o<2?`${ot}=${hs};`:`${St(ot,Pt,o)}=${hs};`,qt={},Bt=(ot,Pt)=>{j.broadcastedIndicesToOffset=!0;let hs=`${Pt.name}broadcastedIndicesTo${e}Offset`;if(hs in qt)return`${hs}(${ot})`;let Ns=[];for(let qs=o-1;qs>=0;qs--){let Lr=Pt.indicesGet("outputIndices",qs+Pt.rank-o);Ns.push(`${dt(ee,qs)} * (${Lr} % ${dt(Z,qs)})`)}return qt[hs]=`fn ${hs}(outputIndices: ${Pt.type.indices}) -> u32 {
             return ${Ns.length>0?Ns.join("+"):"0u"};
           }`,`${hs}(${ot})`},It=(ot,Pt)=>(()=>{if(d.storage===d.value)return`${e}[${ot}]=${Pt};`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`${e}[${ot}]=vec2<u32>(u32(${Pt}), select(0u, 0xFFFFFFFFu, ${Pt} < 0));`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`${e}[${ot}]=vec2<u32>(u32(${Pt}), 0u);`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`${e}[${ot}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Pt}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),ts=ot=>(()=>{if(d.storage===d.value)return`${e}[${ot}]`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`i32(${e}[${ot}].x)`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`u32(${e}[${ot}].x)`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ot}] & 0xFFu), bool(${e}[${ot}] & 0xFF00u), bool(${e}[${ot}] & 0xFF0000u), bool(${e}[${ot}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),yt=o<2?"":`
  fn get_${e}ByIndices(indices: ${d.indices}) -> ${S} {
    return ${ts(`i2o_${e}(indices)`)};
  }`,Ht=o<2?"":(()=>{let ot=u.map(hs=>`d${hs}: u32`).join(", "),Pt=u.map(hs=>`d${hs}`).join(", ");return`
  fn get_${e}(${ot}) -> ${S} {
    return get_${e}ByIndices(${et(Pt)});
  }`})(),ps=(...ot)=>{if(ot.length!==o)throw new Error(`indices length must be ${o}`);let Pt=ot.map(N).join(",");return o===0?ts("0u"):o===1?ts(Pt[0]):(j.get=!0,j.getByIndices=!0,j.indicesToOffset=!0,`get_${e}(${Pt})`)},Ut=ot=>o<2?ts(ot):(j.getByIndices=!0,j.indicesToOffset=!0,`get_${e}ByIndices(${ot})`),Qt=o<2?"":`
  fn set_${e}ByIndices(indices: ${d.indices}, value: ${S}) {
    ${It(`i2o_${e}(indices)`,"value")}
  }`,gs=o<2?"":(()=>{let ot=u.map(hs=>`d${hs}: u32`).join(", "),Pt=u.map(hs=>`d${hs}`).join(", ");return`
  fn set_${e}(${ot}, value: ${S}) {
    set_${e}ByIndices(${et(Pt)}, value);
  }`})();return{impl:()=>{let ot=[],Pt=!1;return j.offsetToIndices&&(ot.push(_e),Pt=!0),j.indicesToOffset&&(ot.push(Ie),Pt=!0),j.broadcastedIndicesToOffset&&(Object.values(qt).forEach(hs=>ot.push(hs)),Pt=!0),j.set&&(ot.push(gs),Pt=!0),j.setByIndices&&(ot.push(Qt),Pt=!0),j.get&&(ot.push(Ht),Pt=!0),j.getByIndices&&(ot.push(yt),Pt=!0),!a&&Pt&&ot.unshift(`const ${Z} = ${d.indices}(${r.join(",")});`,`const ${ee} = ${d.indices}(${ze.computeStrides(r).join(",")});`),ot.join(`
`)},type:d,offsetToIndices:he,indicesToOffset:Le,broadcastedIndicesToOffset:Bt,indices:et,indicesGet:dt,indicesSet:Et,set:(...ot)=>{if(ot.length!==o+1)throw new Error(`indices length must be ${o}`);let Pt=ot[o];if(typeof Pt!="string")throw new Error("value must be string");let hs=ot.slice(0,o).map(N).join(",");return o===0?It("0u",Pt):o===1?It(hs[0],Pt):(j.set=!0,j.setByIndices=!0,j.indicesToOffset=!0,`set_${e}(${hs}, ${Pt})`)},setByOffset:It,setByIndices:(ot,Pt)=>o<2?It(ot,Pt):(j.setByIndices=!0,j.indicesToOffset=!0,`set_${e}ByIndices(${ot}, ${Pt});`),get:ps,getByOffset:ts,getByIndices:Ut,usage:n,name:e,strides:ee,shape:Z,rank:o}},Qe=(e,t,r,n=1)=>sn(e,t,r,"input",n),At=(e,t,r,n=1)=>sn(e,t,r,"output",n),Ja=(e,t,r)=>sn(e,t,r,"atomicOutput",1),Ji=(e,t,r,n=1)=>sn(e,t,r,"internal",n),Za=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=or){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],n=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*n}u + local_idx;`;return`@compute @workgroup_size(${t}, ${r}, ${n})
  fn main(${a}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",n=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${n}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let i=n==null||n===1?r:`vec${n}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},el=(e,t)=>new Za(e,t)}),tl,Zi,eo,sl,rl,to,pr,nl,so,Hr=g(()=>{Lt(),Ot(),rs(),Jt(),tl=(e,t)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(t.length!==0&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},Zi=(e,t)=>t.length!==0?t:[...new Array(e).keys()].reverse(),eo=(e,t)=>ze.sortBasedOnPerm(e,Zi(e.length,t)),sl=(e,t,r,n)=>{let i=`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let a=0;a<t;++a)i+=`a[${e[a]}]=i[${a}];`;return i+="return a;}"},rl=(e,t)=>{let r=[],n=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&n.push(t[i]);return{newShape:r,newPerm:n}},to=(e,t)=>{let r=0;for(let n=0;n<e.length;++n)if(t[e[n]]!==1){if(e[n]<r)return!1;r=e[n]}return!0},pr=(e,t)=>{let r=e.dataType,n=e.dims.length,i=Zi(n,t),a=eo(e.dims,i),o=e.dims,u=a,m=n<2||to(i,e.dims),_;if(m)return _=j=>{let W=Qe("input",r,o,4),Z=At("output",r,u,4);return`
  ${j.registerUniform("output_size","u32").declareVariables(W,Z)}
  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let j=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(j/64/4)},programUniforms:[{type:12,data:Math.ceil(j/4)}]}},getShaderSource:_};let{newShape:S,newPerm:k}=rl(e.dims,i),d=ze.areEqual(k,[2,3,1]),N=ze.areEqual(k,[3,1,2]);if(S.length===2||d||N){o=d?[S[0],S[1]*S[2]]:N?[S[0]*S[1],S[2]]:S,u=[o[1],o[0]];let j=16;return _=W=>{let Z=Qe("a",r,o.length),ee=At("output",r,u.length);return`
  ${W.registerUniform("output_size","u32").declareVariables(Z,ee)}
  var<workgroup> tile : array<array<${ee.type.value}, ${j+1}>, ${j}>;
  ${W.mainStart([j,j,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${j} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${j}u + local_id.x;
    let input_row = workgroup_id_x * ${j}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${Z.getByIndices(`${Z.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${j}u + local_id.x;
    let output_row = workgroup_id_y * ${j}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${ee.setByIndices(`${ee.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let W=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u[1]/j),y:Math.ceil(u[0]/j)},programUniforms:[{type:12,data:W},...bt(o,u)]}},getShaderSource:_}}return _=j=>{let W=Qe("a",r,o.length),Z=At("output",r,u.length);return`
  ${j.registerUniform("output_size","u32").declareVariables(W,Z)}

  ${sl(i,n,W,Z)}

  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Z.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let j=ze.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:[{type:12,data:j},...bt(o,u)]}},getShaderSource:_}},nl=(e,t)=>{tl(e.inputs,t.perm),e.compute(pr(e.inputs[0],t.perm))},so=e=>zt({perm:e.perm})}),di,il,ol,al,ll,ul,dl,cl,ro,pl,hr,rn,hl,ip,ml,op,_l,no,fl,gl,yl,ap=g(()=>{Lt(),Ot(),Jt(),hi(),Hr(),di={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},il={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},al={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ll=(e,t)=>{let r=[];for(let n=t-e;n<t;++n)r.push(n);return r},ul=(e,t)=>{let r=[],n=e.length;for(let a=0;a<n;a++)t.indexOf(a)===-1&&r.push(e[a]);let i=t.map(a=>e[a]);return[r,i]},dl=(e,t)=>{let r=e.length+t.length,n=[],i=0;for(let a=0;a<r;a++)t.indexOf(a)===-1?n.push(e[i++]):n.push(1);return n},cl=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},ro=(e,t)=>{let r=[];if(!cl(e,t)){for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);e.forEach(n=>r.push(n))}return r},pl=(e,t,r,n,i,a,o)=>{let u=r[0].dims,m=ze.size(a),_=ze.size(o),S=Qe("_A",r[0].dataType,u),k=At("output",i,a),d=64;m===1&&(d=256);let N=`
          var<workgroup> aBestValues : array<f32, ${d}>;
       `,j=W=>`
        ${W.registerUniform("reduceSize","u32").declareVariables(S,k)}
        ${N}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${W.mainStart(d)}

          let outputIndex = global_idx / ${d};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ol[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${d}) {
           let candidate = f32(${S.getByOffset("offset + k")});
           bestValue = ${di[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${d}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${il[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${k.setByOffset("outputIndex",`${n==="mean"?`${k.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${k.type.storage}(${al[n]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${t};${d}`,inputDependencies:["type"]},getShaderSource:j,getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:12,data:_}]})}},hr=(e,t,r,n)=>{let i=e.inputs.length===1?r:io(e.inputs,r),a=i.axes;a.length===0&&!i.noopWithEmptyAxes&&(a=e.inputs[0].dims.map((N,j)=>j));let o=ze.normalizeAxes(a,e.inputs[0].dims.length),u=o,m=e.inputs[0],_=ro(u,e.inputs[0].dims.length);_.length>0&&(m=e.compute(pr(e.inputs[0],_),{inputs:[0],outputs:[-1]})[0],u=ll(u.length,m.dims.length));let[S,k]=ul(m.dims,u),d=S;i.keepDims&&(d=dl(S,o)),e.compute(pl(t,i.cacheKey,[m],n,e.inputs[0].dataType,d,k),{inputs:[m]})},rn=(e,t)=>{hr(e,"ReduceMeanShared",t,"mean")},hl=(e,t)=>{hr(e,"ReduceL1Shared",t,"l1")},ip=(e,t)=>{hr(e,"ReduceL2Shared",t,"l2")},ml=(e,t)=>{hr(e,"ReduceLogSumExpShared",t,"logSumExp")},op=(e,t)=>{hr(e,"ReduceMaxShared",t,"max")},_l=(e,t)=>{hr(e,"ReduceMinShared",t,"min")},no=(e,t)=>{hr(e,"ReduceProdShared",t,"prod")},fl=(e,t)=>{hr(e,"ReduceSumShared",t,"sum")},gl=(e,t)=>{hr(e,"ReduceSumSquareShared",t,"sumSquare")},yl=(e,t)=>{hr(e,"ReduceLogSumShared",t,"logSum")}}),gr,ci,pi,io,yr,oo,wl,bl,ao,Ml,vl,lo,xl,Tl,uo,wr,El,co,Pl,Cl,po,$l,Sl,ho,kl,Al,hi=g(()=>{Lt(),Ot(),rs(),Jt(),ap(),gr=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},ci=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],pi=(e,t,r,n,i,a,o=!1,u=!1)=>{let m=[],_=r[0].dims,S=_.length,k=ze.normalizeAxes(i,S),d=!u&&k.length===0;_.forEach((W,Z)=>{d||k.indexOf(Z)>=0?o&&m.push(1):m.push(W)});let N=m.length,j=ze.size(m);return{name:e,shaderCache:t,getShaderSource:W=>{let Z=[],ee=Qe("_A",r[0].dataType,S),Y=At("output",a,N),_e=n(ee,Y,k),he=_e[2];for(let Me=0,Ie=0;Me<S;Me++)d||k.indexOf(Me)>=0?(o&&Ie++,he=`for(var j${Me}: u32 = 0; j${Me} < ${_[Me]}; j${Me}++) {
                  ${_e[2].includes("last_index")?`let last_index = j${Me};`:""}
                  ${ee.indicesSet("input_indices",Me,`j${Me}`)}
                  ${he}
                }`):(Z.push(`${ee.indicesSet("input_indices",Me,Y.indicesGet("output_indices",Ie))};`),Ie++);return`

        ${W.registerUniform("output_size","u32").declareVariables(ee,Y)}

        ${W.mainStart()}
          ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${ee.type.indices};
          let output_indices = ${Y.offsetToIndices("global_idx")};

          ${Z.join(`
`)}
          ${_e[0]}       // init ops for reduce max/min
          ${_e[1]}
          ${he}
          ${_e[3]}
          ${_e.length===4?Y.setByOffset("global_idx","value"):_e.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:[{type:12,data:j},...bt(_,m)]})}},io=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),zt({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},yr=(e,t,r,n)=>{let i=e.inputs,a=i.length===1?r:io(i,r);e.compute(pi(t,{hint:a.cacheKey,inputDependencies:["rank"]},[i[0]],a.noopWithEmptyAxes&&a.axes.length===0?ci:n,a.axes,i[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},oo=(e,t)=>{gr(e.inputs),yr(e,"ReduceLogSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},wl=(e,t)=>{gr(e.inputs),yr(e,"ReduceL1",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},bl=(e,t)=>{gr(e.inputs),yr(e,"ReduceL2",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},ao=(e,t)=>{gr(e.inputs),yr(e,"ReduceLogSumExp",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Ml=(e,t)=>{gr(e.inputs),yr(e,"ReduceMax",t,(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(r.indicesSet("input_indices",o,0));return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},vl=(e,t)=>{gr(e.inputs),yr(e,"ReduceMean",t,(r,n,i)=>{let a=1;for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(a*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${a});`]})},lo=(e,t)=>{gr(e.inputs),yr(e,"ReduceMin",t,(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},xl=(e,t)=>{gr(e.inputs),yr(e,"ReduceProd",t,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Tl=(e,t)=>{gr(e.inputs),yr(e,"ReduceSum",t,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},uo=(e,t)=>{gr(e.inputs),yr(e,"ReduceSumSquare",t,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},wr=(e,t,r)=>{if(t.length===0)return r;let n=1,i=1;for(let a=0;a<t.length;a++)t.indexOf(a)===-1?n*=e[a]:i*=e[a];return i<32&&n>1024},El=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vl(e,t):rn(e,t)},co=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wl(e,t):hl(e,t)},Pl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bl(e,t):ip(e,t)},Cl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ao(e,t):ml(e,t)},po=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ml(e,t):op(e,t)},$l=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?lo(e,t):_l(e,t)},Sl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xl(e,t):no(e,t)},ho=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tl(e,t):fl(e,t)},kl=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?uo(e,t):gl(e,t)},Al=(e,t)=>{wr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?oo(e,t):yl(e,t)}}),mo,Il,_o,fo,lp=g(()=>{Lt(),rs(),hi(),mo=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Il=(e,t)=>{mo(e.inputs);let r=(n,i,a)=>{let o=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(pi("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},_o=(e,t)=>{mo(e.inputs);let r=(n,i,a)=>{let o=[];for(let u=0;u<n.rank;u++)(a.indexOf(u)>=0||a.length===0)&&o.push(`input_indices[${u}] = 0;`);return[`${o.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(pi("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},fo=e=>zt(e)}),go,mi,Ol,yo,Fl,Un,wo,Dl,bo=g(()=>{Lt(),Ot(),de(),Jt(),go=(e,t)=>{let r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],u=e[5];if(o&&u)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let m=r.dims[0],_=r.dims[1],S=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==S)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let k=i.dims[0]/3,d=k,N=d;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let _e of t.qkvHiddenSizes)if(_e%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");k=t.qkvHiddenSizes[0],d=t.qkvHiddenSizes[1],N=t.qkvHiddenSizes[2]}let j=_;if(k!==d)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==k+d+N)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let W=0;if(o){if(d!==N)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==m)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==d/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(W=o.dims[3])}let Z=j+W,ee=-1,Y=0;if(a)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(u){if(u.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(u.dims[0]!==m||u.dims[1]!==t.numHeads||u.dims[2]!==_||u.dims[3]!==Z)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:m,sequenceLength:_,pastSequenceLength:W,kvSequenceLength:j,totalSequenceLength:Z,maxSequenceLength:ee,inputHiddenSize:S,hiddenSize:k,vHiddenSize:N,headSize:Math.floor(k/t.numHeads),vHeadSize:Math.floor(N/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:Y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},mi=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Ol=(e,t,r,n,i,a,o,u)=>{let m=Xt(o?1:a),_=64,S=a/m;S<_&&(_=32);let k=Math.ceil(a/m/_),d=[{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:S},{type:12,data:k}],N=fs(e.dataType,m),j=ks(1,m),W=["type"];o&&W.push("type"),u&&W.push("type");let Z=ee=>{let Y=At("x",e.dataType,e.dims,m),_e=[Y],he=o?Qe("seq_lens",o.dataType,o.dims):void 0;he&&_e.push(he);let Me=u?Qe("total_sequence_length_input",u.dataType,u.dims):void 0;Me&&_e.push(Me);let Ie=ks(e.dataType),Le=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${_}>;
  var<workgroup> thread_sum: array<f32, ${_}>;
  ${ee.registerUniforms(Le).declareVariables(..._e)}
  ${ee.mainStart([_,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${mi(he,Me,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${_}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${j}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${j}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(m){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${m}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${_}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${j}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${j}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(m){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${m}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${_}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${Y.type.value}(${Ie}(1.0) / ${Ie}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${j}(x[offset + i]);
        x[offset + i] = ${Y.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${Y.type.value}(${Ie}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${_};${N};${m}`,inputDependencies:W},getShaderSource:Z,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(a/_),y:i,z:t*r},programUniforms:d})}},yo=(e,t,r,n,i,a,o,u,m)=>{let _=o+a.kvSequenceLength,S=[a.batchSize,a.numHeads,a.sequenceLength,_],k=e>1&&n,d=a.kvNumHeads?a.kvNumHeads:a.numHeads,N=k?[a.batchSize,d,_,a.headSize]:void 0,j=a.nReps?a.nReps:1,W=a.scale===0?1/Math.sqrt(a.headSize):a.scale,Z=Xt(a.headSize),ee=a.headSize/Z,Y=12,_e={x:Math.ceil(_/Y),y:Math.ceil(a.sequenceLength/Y),z:a.batchSize*a.numHeads},he=[{type:12,data:a.sequenceLength},{type:12,data:ee},{type:12,data:_},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:1,data:W},{type:12,data:o},{type:12,data:a.kvSequenceLength},{type:12,data:j}],Me=k&&n&&ze.size(n.dims)>0,Ie=["type","type"];Me&&Ie.push("type"),i&&Ie.push("type"),u&&Ie.push("type"),m&&Ie.push("type");let Le=[{dims:S,dataType:t.dataType,gpuDataType:0}];k&&Le.push({dims:N,dataType:t.dataType,gpuDataType:0});let et=dt=>{let Et=Qe("q",t.dataType,t.dims,Z),qt=Qe("key",r.dataType,r.dims,Z),Bt=[Et,qt];if(Me){let Qt=Qe("past_key",n.dataType,n.dims,Z);Bt.push(Qt)}i&&Bt.push(Qe("attention_bias",i.dataType,i.dims));let It=u?Qe("seq_lens",u.dataType,u.dims):void 0;It&&Bt.push(It);let ts=m?Qe("total_sequence_length_input",m.dataType,m.dims):void 0;ts&&Bt.push(ts);let yt=At("output",t.dataType,S),Ht=[yt];k&&Ht.push(At("present_key",t.dataType,N,Z));let ps=ks(1,Z),Ut=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${Y}u;

  var<workgroup> tileQ: array<${Et.type.storage}, ${Y*Y}>;
  var<workgroup> tileK: array<${Et.type.storage}, ${Y*Y}>;
  ${dt.registerUniforms(Ut).declareVariables(...Bt,...Ht)}
  ${dt.mainStart([Y,Y,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${j===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${j===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${mi(It,ts,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Me&&k?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${k?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${ps}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Me&&k?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${k?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${ps}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Z){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Z}`)}})()};
        output[outputIdx] = ${yt.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Z};${i!==void 0};${n!==void 0};${e}`,inputDependencies:Ie},getRunData:()=>({outputs:Le,dispatchGroup:_e,programUniforms:he}),getShaderSource:et}},Fl=(e,t,r,n,i,a,o=void 0,u=void 0)=>{let m=a+i.kvSequenceLength,_=i.nReps?i.nReps:1,S=i.vHiddenSize*_,k=e>1&&n,d=i.kvNumHeads?i.kvNumHeads:i.numHeads,N=k?[i.batchSize,d,m,i.headSize]:void 0,j=[i.batchSize,i.sequenceLength,S],W=12,Z={x:Math.ceil(i.vHeadSize/W),y:Math.ceil(i.sequenceLength/W),z:i.batchSize*i.numHeads},ee=[{type:12,data:i.sequenceLength},{type:12,data:m},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:S},{type:12,data:a},{type:12,data:i.kvSequenceLength},{type:12,data:_}],Y=k&&n&&ze.size(n.dims)>0,_e=["type","type"];Y&&_e.push("type"),o&&_e.push("type"),u&&_e.push("type");let he=[{dims:j,dataType:t.dataType,gpuDataType:0}];k&&he.push({dims:N,dataType:t.dataType,gpuDataType:0});let Me=Ie=>{let Le=Qe("probs",t.dataType,t.dims),et=Qe("v",r.dataType,r.dims),dt=[Le,et];Y&&dt.push(Qe("past_value",n.dataType,n.dims));let Et=o?Qe("seq_lens",o.dataType,o.dims):void 0;o&&dt.push(Et);let qt=u?Qe("total_sequence_length_input",u.dataType,u.dims):void 0;u&&dt.push(qt);let Bt=[At("output",t.dataType,j)];k&&Bt.push(At("present_value",t.dataType,N));let It=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${W}u;
  var<workgroup> tileQ: array<${Le.type.value}, ${W*W}>;
  var<workgroup> tileV: array<${Le.type.value}, ${W*W}>;
  ${Ie.registerUniforms(It).declareVariables(...dt,...Bt)}
  ${Ie.mainStart([W,W,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${_===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${_===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${mi(Et,qt,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Y&&k?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${k?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Le.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Y&&k?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${k?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${n!==void 0};${e}`,inputDependencies:_e},getRunData:()=>({outputs:he,dispatchGroup:Z,programUniforms:ee}),getShaderSource:Me}},Un=(e,t,r,n,i,a,o,u,m,_,S=void 0,k=void 0)=>{let d=Math.min(e.outputCount,1+(o?1:0)+(u?1:0)),N=d>1?_.pastSequenceLength:0,j=N+_.kvSequenceLength,W=m&&ze.size(m.dims)>0?m:void 0,Z=[t,r];d>1&&o&&ze.size(o.dims)>0&&Z.push(o),W&&Z.push(W),S&&Z.push(S),k&&Z.push(k);let ee=e.compute(yo(d,t,r,o,W,_,N,S,k),{inputs:Z,outputs:d>1?[-1,1]:[-1]})[0];e.compute(Ol(ee,_.batchSize,_.numHeads,N,_.sequenceLength,j,S,k),{inputs:S&&k?[ee,S,k]:[ee],outputs:[]});let Y=[ee,n];d>1&&u&&ze.size(u.dims)>0&&Y.push(u),S&&Y.push(S),k&&Y.push(k),e.compute(Fl(d,ee,n,u,_,N,S,k),{inputs:Y,outputs:d>1?[0,2]:[0]})},wo=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],n=t.sequenceLength,i=t.inputHiddenSize,a=t.headSize,o=12,u={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],_=[{type:12,data:n},{type:12,data:i},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],S=k=>{let d=At("output_q",m[0].dataType,r),N=At("output_k",m[0].dataType,r),j=At("output_v",m[0].dataType,r),W=Qe("input",m[0].dataType,m[0].dims),Z=Qe("weight",m[1].dataType,m[1].dims),ee=Qe("bias",m[2].dataType,m[2].dims),Y=W.type.storage,_e=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${Y}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${Y}, ${o*o}>;
  var<workgroup> tileWeightK: array<${Y}, ${o*o}>;
  var<workgroup> tileWeightV: array<${Y}, ${o*o}>;
  ${k.registerUniforms(_e).declareVariables(W,Z,ee,d,N,j)}
  ${k.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Y}(0);
    var valueK = ${Y}(0);
    var valueV = ${Y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:_}),getShaderSource:S},{inputs:m,outputs:[-1,-1,-1]})},Dl=(e,t)=>{let r=go(e.inputs,t),[n,i,a]=wo(e,r);return Un(e,n,i,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),Mo,Ll,zl,vo,up=g(()=>{Re(),Lt(),Ot(),rs(),Jt(),Mo=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,i,a)=>{let o=i.length;if(o!==n.length)throw new Error(`${a}: num dimensions != ${o}`);i.forEach((u,m)=>{if(u!==n[m])throw new Error(`${a}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let n=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,n,"Invalid input scale"),r(e[2].dims,n,"Invalid input B"),r(e[3].dims,n,"Invalid input mean"),r(e[4].dims,n,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ll=(e,t)=>{let{epsilon:r,spatial:n,format:i}=t,a=e[0].dims,o=n?Xt(a[a.length-1]):1,u=i==="NHWC"&&a.length>1?o:1,m=ze.size(a)/o,_=n,S=_?a.length:a,k=Qe("x",e[0].dataType,e[0].dims,o),d=Qe("scale",e[1].dataType,e[1].dims,u),N=Qe("bias",e[2].dataType,e[2].dims,u),j=Qe("inputMean",e[3].dataType,e[3].dims,u),W=Qe("inputVar",e[4].dataType,e[4].dims,u),Z=At("y",e[0].dataType,S,o),ee=()=>{let _e="";if(n)_e=`let cOffset = ${a.length===1?"0u":i==="NHWC"?`outputIndices[${a.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")_e=`
            ${Z.indicesSet("outputIndices","0","0")}
            let cOffset = ${Z.indicesToOffset("outputIndices")};`;else{_e=`var cIndices = ${d.type.indices}(0);
                       cIndices[0] = outputIndices[${a.length-1}];`;for(let he=1;he<d.rank;he++)_e+=`cIndices[${he}] = outputIndices[${he}];`;_e+=`let cOffset = ${d.indicesToOffset("cIndices")};`}return _e},Y=_e=>`
  const epsilon = ${r};
  ${_e.registerUniform("outputSize","u32").declareVariables(k,d,N,j,W,Z)}
  ${_e.mainStart()}
  ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Z.offsetToIndices(`global_idx * ${o}`)};
    ${ee()}
    let scale = ${d.getByOffset("cOffset")};
    let bias = ${N.getByOffset("cOffset")};
    let inputMean = ${j.getByOffset("cOffset")};
    let inputVar = ${W.getByOffset("cOffset")};
    let x = ${k.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Z.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${n}_${o}`,inputDependencies:_?["rank","type","type","type","type"]:void 0},getShaderSource:Y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:_?[{type:12,data:m},...bt(a)]:[{type:12,data:m}]})}},zl=e=>zt(e),vo=(e,t)=>{let{inputs:r,outputCount:n}=e,i=zl({...t,outputCount:n});if(L.webgpu.validateInputContent&&Mo(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ll(r,i))}}),Bl,xo,Rl,dp=g(()=>{Ot(),Jt(),Bl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},xo=e=>{let t=e[0].dims,r=e[0].dims[2],n=ze.size(t)/4,i=e[0].dataType,a=Qe("input",i,t,4),o=Qe("bias",i,[r],4),u=Qe("residual",i,t,4),m=At("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:_=>`
  const channels = ${r}u / 4;
  ${_.declareVariables(a,o,u,m)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${a.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${u.getByOffset("global_idx")};
    ${m.setByOffset("global_idx","value")}
  }`}},Rl=e=>{Bl(e.inputs),e.compute(xo(e.inputs))}}),To,ds,Nl,Eo,jl,Ul,Po,Vl,Wl,Co,Gl,Kl,$o,Hl,ql,So,Vn,Ql,_i,Xl,ko,Yl,Jl,Ao,Zl,eu,Io,tu,su,Oo,ru,nu,Fo,iu,ou,fi,au,Do,gi,lu,uu,du,cu,Lo,pu,zo=g(()=>{Lt(),Ot(),rs(),Jt(),To=(e,t,r,n,i,a,o)=>{let u=Math.ceil(t/4),m="";typeof i=="string"?m=`${i}(a)`:m=i("a");let _=Qe("inputData",r,[u],4),S=At("outputData",n,[u],4),k=[{name:"vec_size",type:"u32"}];return o&&k.push(...o),`
      ${e.registerUniforms(k).declareVariables(_,S)}

  ${a??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${_.getByOffset("global_idx")};
    ${S.setByOffset("global_idx",m)}
  }`},ds=(e,t,r,n,i,a=e.dataType,o,u)=>{let m=[{type:12,data:Math.ceil(ze.size(e.dims)/4)}];return o&&m.push(...o),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:_=>To(_,ze.size(e.dims),e.dataType,a,r,n,u),getRunData:_=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil(ze.size(_[0].dims)/64/4)},programUniforms:m})}},Nl=e=>{e.compute(ds(e.inputs[0],"Abs","abs"))},Eo=e=>{e.compute(ds(e.inputs[0],"Acos","acos"))},jl=e=>{e.compute(ds(e.inputs[0],"Acosh","acosh"))},Ul=e=>{e.compute(ds(e.inputs[0],"Asin","asin"))},Po=e=>{e.compute(ds(e.inputs[0],"Asinh","asinh"))},Vl=e=>{e.compute(ds(e.inputs[0],"Atan","atan"))},Wl=e=>{e.compute(ds(e.inputs[0],"Atanh","atanh"))},Co=e=>zt(e),Gl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ds(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Kl=e=>{let t,r,n=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=n?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=n?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return zt({min:t,max:r})},$o=(e,t)=>{let r=t||Kl(e.inputs),n=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${n}>(uniforms.min), vec4<${n}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:n},{name:"max",type:n}]),{inputs:[0]})},Hl=e=>{e.compute(ds(e.inputs[0],"Ceil","ceil"))},ql=e=>{e.compute(ds(e.inputs[0],"Cos","cos"))},So=e=>{e.compute(ds(e.inputs[0],"Cosh","cosh"))},Vn=e=>zt(e),Ql=(e,t)=>{let r=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},_i=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Xl=e=>{let t=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,_i(t)))},ko=e=>{e.compute(ds(e.inputs[0],"Exp","exp"))},Yl=e=>{e.compute(ds(e.inputs[0],"Floor","floor"))},Jl=e=>{let t=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,_i(t)))},Ao=(e,t)=>{let r=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Zl=e=>{e.compute(ds(e.inputs[0],"Not",t=>`!${t}`))},eu=e=>{e.compute(ds(e.inputs[0],"Neg",t=>`-${t}`))},Io=e=>{e.compute(ds(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},tu=e=>{let t=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},su=e=>{e.compute(ds(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Oo=e=>zt(e),ru=(e,t)=>{let r=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${n} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},nu=e=>{e.compute(ds(e.inputs[0],"Sin","sin"))},Fo=e=>{e.compute(ds(e.inputs[0],"Sinh","sinh"))},iu=e=>{e.compute(ds(e.inputs[0],"Sqrt","sqrt"))},ou=e=>{e.compute(ds(e.inputs[0],"Tan","tan"))},fi=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,au=e=>{e.compute(ds(e.inputs[0],"Tanh",fi))},Do=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${fi("v")};
}
`,gi=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,lu=e=>{let t=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"FastGelu",gi,Do(t),void 0,e.inputs[0].dataType))},uu=(e,t)=>{let r=ks(e.inputs[0].dataType);return e.compute(ds(e.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},du=e=>{e.compute(ds(e.inputs[0],"Log","log"))},cu=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Lo=e=>`quick_gelu_impl(${e})`,pu=(e,t)=>{let r=ks(e.inputs[0].dataType);e.compute(ds(e.inputs[0],"QuickGelu",Lo,cu(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),hu,mu,Bo,cp=g(()=>{Ot(),Jt(),zo(),hu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Qe("input",e[0].dataType,e[0].dims,4),n=Qe("bias",e[0].dataType,[e[0].dims[2]],4),i=At("output",e[0].dataType,t,4),a=ze.size(t)/4,o=fs(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${u.declareVariables(r,n,i)}

  ${_i(o)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Bo=e=>{hu(e.inputs),e.compute(mu(e.inputs))}}),_u,fu,br,Ro,gu,yu,wu,bu,No,Mu,vu,jo,xu,pp=g(()=>{Lt(),Ot(),Jt(),_u=(e,t,r,n,i,a,o,u,m,_,S,k)=>{let d,N;typeof u=="string"?d=N=(Y,_e)=>`${u}((${Y}),(${_e}))`:typeof u=="function"?d=N=u:(d=u.scalar,N=u.vector);let j=At("outputData",S,n.length,4),W=Qe("aData",m,t.length,4),Z=Qe("bData",_,r.length,4),ee;if(i)if(a){let Y=ze.size(t)===1,_e=ze.size(r)===1,he=t.length>0&&t[t.length-1]%4===0,Me=r.length>0&&r[r.length-1]%4===0;Y||_e?ee=j.setByOffset("global_idx",N(Y?`${W.type.value}(${W.getByOffset("0")}.x)`:W.getByOffset("global_idx"),_e?`${Z.type.value}(${Z.getByOffset("0")}.x)`:Z.getByOffset("global_idx"))):ee=`
            let outputIndices = ${j.offsetToIndices("global_idx * 4u")};
            let offsetA = ${W.broadcastedIndicesToOffset("outputIndices",j)};
            let offsetB = ${Z.broadcastedIndicesToOffset("outputIndices",j)};
            ${j.setByOffset("global_idx",N(o||he?W.getByOffset("offsetA / 4u"):`${W.type.value}(${W.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||Me?Z.getByOffset("offsetB / 4u"):`${Z.type.value}(${Z.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else ee=j.setByOffset("global_idx",N(W.getByOffset("global_idx"),Z.getByOffset("global_idx")));else{if(!a)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Y=(_e,he,Me="")=>{let Ie=`aData[indexA${he}][componentA${he}]`,Le=`bData[indexB${he}][componentB${he}]`;return`
            let outputIndices${he} = ${j.offsetToIndices(`global_idx * 4u + ${he}u`)};
            let offsetA${he} = ${W.broadcastedIndicesToOffset(`outputIndices${he}`,j)};
            let offsetB${he} = ${Z.broadcastedIndicesToOffset(`outputIndices${he}`,j)};
            let indexA${he} = offsetA${he} / 4u;
            let indexB${he} = offsetB${he} / 4u;
            let componentA${he} = offsetA${he} % 4u;
            let componentB${he} = offsetB${he} % 4u;
            ${_e}[${he}] = ${Me}(${d(Ie,Le)});
          `};S===9?ee=`
            var data = vec4<u32>(0);
            ${Y("data",0,"u32")}
            ${Y("data",1,"u32")}
            ${Y("data",2,"u32")}
            ${Y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:ee=`
            ${Y("outputData[global_idx]",0)}
            ${Y("outputData[global_idx]",1)}
            ${Y("outputData[global_idx]",2)}
            ${Y("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(W,Z,j)}

        ${k??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${ee}
      }`},fu=(e,t,r,n,i,a,o=r.dataType)=>{let u=r.dims.map(W=>Number(W)??1),m=n.dims.map(W=>Number(W)??1),_=!ze.areEqual(u,m),S=u,k=ze.size(u),d=!1,N=!1,j=[_];if(_){let W=Ws.calcShape(u,m,!1);if(!W)throw new Error("Can't perform binary op on the given tensors");S=W.slice(),k=ze.size(S);let Z=ze.size(u)===1,ee=ze.size(m)===1,Y=u.length>0&&u[u.length-1]%4===0,_e=m.length>0&&m[m.length-1]%4===0;j.push(Z),j.push(ee),j.push(Y),j.push(_e);let he=1;for(let Me=1;Me<S.length;Me++){let Ie=u[u.length-Me],Le=m[m.length-Me];if(Ie===Le)he*=Ie;else break}he%4===0?(N=!0,d=!0):(Z||ee||Y||_e)&&(d=!0)}else d=!0;return j.push(d),{name:e,shaderCache:{hint:t+j.map(W=>W.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:W=>_u(W,u,m,S,d,_,N,i,r.dataType,n.dataType,o,a),getRunData:()=>({outputs:[{dims:S,dataType:o}],dispatchGroup:{x:Math.ceil(k/64/4)},programUniforms:[{type:12,data:Math.ceil(ze.size(S)/4)},...bt(u,m,S)]})}},br=(e,t,r,n,i,a)=>{e.compute(fu(t,i??"",e.inputs[0],e.inputs[1],r,n,a))},Ro=e=>{br(e,"Add",(t,r)=>`${t}+${r}`)},gu=e=>{br(e,"Div",(t,r)=>`${t}/${r}`)},yu=e=>{br(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},wu=e=>{br(e,"Mul",(t,r)=>`${t}*${r}`)},bu=e=>{let t=Qe("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;br(e,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},No=e=>{br(e,"Sub",(t,r)=>`${t}-${r}`)},Mu=e=>{br(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},vu=e=>{br(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},jo=e=>{br(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},xu=e=>{br(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),Uo,Tu,Eu,Vo,Pu,Cu,$u=g(()=>{Lt(),Ot(),rs(),Jt(),Uo=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,n=e[r],i=n.dataType,a=n.dims.length;e.forEach((o,u)=>{if(u!==r){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==a)throw new Error("input tensors should have the same shape");o.dims.forEach((m,_)=>{if(_!==t&&m!==n.dims[_])throw new Error("non concat dimensions must match")})}})},Tu=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Eu=(e,t)=>{let r=e.length,n=[];for(let i=0;i<r;++i){let a=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?n.push(a):i===0?n.push(`if (inputIndex == ${i}u) { ${a} }`):i===r-1?n.push(`else { ${a} }`):n.push(`else if (inputIndex == ${i}) { ${a} }`)}return n.join(`
`)},Vo=(e,t,r,n)=>{let i=ze.size(r),a=new Array(e.length),o=new Array(e.length),u=0,m=[],_=[],S=[{type:12,data:i}];for(let W=0;W<e.length;++W)u+=e[W].dims[t],a[W]=u,_.push(e[W].dims.length),o[W]=Qe(`input${W}`,n,_[W]),m.push("rank"),S.push({type:12,data:a[W]});for(let W=0;W<e.length;++W)S.push(...bt(e[W].dims));S.push(...bt(r));let k=At("output",n,r.length),d=k.indicesGet("indices",t),N=Array.from(Array(a.length).keys()).map(W=>`uniforms.sizeInConcatAxis${W}`).join(","),j=W=>`

  ${(()=>{W.registerUniform("outputSize","u32");for(let Z=0;Z<e.length;Z++)W.registerUniform(`sizeInConcatAxis${Z}`,"u32");return W.declareVariables(...o,k)})()}

  ${Tu(a.length,N)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${k.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${d});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${a.length}u>(${N});
      ${d} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Eu(o,k)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:S}),getShaderSource:j}},Pu=(e,t)=>{let r=e.inputs,n=r[0].dims,i=ze.normalizeAxis(t.axis,n.length);Uo(r,i);let a=n.slice();a[i]=r.reduce((u,m)=>u+(m.dims.length>i?m.dims[i]:0),0);let o=r.filter(u=>ze.size(u.dims)>0);e.compute(Vo(o,i,a,r[0].dataType),{inputs:o})},Cu=e=>zt({axis:e.axis})}),nn,on,Fr,Wo,an=g(()=>{Lt(),Ot(),nn=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},on=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Fr=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Wo=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,n]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:n}}else if(t==="Clip"){let[r,n]=(e==null?void 0:e.activation_params)||[Ss,Xs];return{activation:t,clipMax:n,clipMin:r}}else if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),Ks,Go,Ko=g(()=>{Ks=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Go=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ho,hp=g(()=>{Ho=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Wn,qo,yi=g(()=>{Lt(),Ot(),Jt(),an(),Wn=(e,t,r,n,i)=>{let a=n-r;return`
      ${Array.from({length:r}).map((o,u)=>`
      if (${St(t.shape,u,t.rank)} != 1) {
        ${t.indicesSet(e,u,St(i,u+a,n))}
      } else {
        ${t.indicesSet(e,u,0)}
      }`).join("")}
`},qo=(e,t,r,n,i=!1,a)=>{let o=e[0].dims,u=e[1].dims,m=o[o.length-2],_=u[u.length-1],S=o[o.length-1],k=Xt(_),d=Xt(S),N=Xt(m),j=ze.size(r)/k/N,W=e.length>2,Z=n?n.slice(0,-2):r.slice(0,-2),ee=[ze.size(Z),m,_],Y=[{type:12,data:j},{type:12,data:m},{type:12,data:_},{type:12,data:S}];on(t,Y),Y.push(...bt(Z,o,u)),W&&Y.push(...bt(e[2].dims)),Y.push(...bt(ee));let _e=he=>{let Me=Ji("batch_dims",e[0].dataType,Z.length),Ie=Qe("a",e[0].dataType,o.length,d),Le=Qe("b",e[1].dataType,u.length,k),et=At("output",e[0].dataType,ee.length,k),dt=fs(et.type.tensor),Et=nn(t,et.type.value,dt),qt=[Ie,Le],Bt="";if(W){let yt=i?k:1;qt.push(Qe("bias",e[2].dataType,e[2].dims.length,yt)),Bt=`${i?`value += bias[col / ${yt}];`:`value += ${et.type.value}(bias[row + i]);`}`}let It=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Fr(t,It);let ts=()=>{let yt=`var a_data: ${Ie.type.value};`;for(let Ht=0;Ht<d;Ht++)yt+=`
              let b_data${Ht} = b[(b_offset + (k + ${Ht}) * uniforms.N + col) / ${k}];`;for(let Ht=0;Ht<N;Ht++){yt+=`a_data = a[(a_offset + (row + ${Ht}) * uniforms.K + k) / ${d}];`;for(let ps=0;ps<d;ps++)yt+=`
            values[${Ht}] = fma(${Le.type.value}(a_data${d===1?"":`[${ps}]`}), b_data${ps}, values[${Ht}]);
`}return yt};return`
  ${he.registerUniforms(It).registerInternalVariables(Me).declareVariables(...qt,et)}
  ${he.mainStart()}
    ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${k})) * ${k};
    var index1 = global_idx / (uniforms.N / ${k});
    let stride1 = uniforms.M / ${N};
    let row = (index1 % stride1) * ${N};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${Me.offsetToIndices("batch")};`}

    var a_indices: ${Ie.type.indices};
    ${Wn("a_indices",Ie,Ie.rank-2,Me.rank,"batch_indices")}
    ${Ie.indicesSet("a_indices",Ie.rank-2,0)}
    ${Ie.indicesSet("a_indices",Ie.rank-1,0)}
    let a_offset = ${Ie.indicesToOffset("a_indices")};

    var b_indices: ${Le.type.indices};
    ${Wn("b_indices",Le,Le.rank-2,Me.rank,"batch_indices")}
    ${Le.indicesSet("b_indices",Le.rank-2,0)}
    ${Le.indicesSet("b_indices",Le.rank-1,0)}
    let b_offset = ${Le.indicesToOffset("b_indices")};
    var values: array<${et.type.value}, ${N}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${d}) {
      ${ts()}
    }
    for (var i = 0u; i < ${N}u; i++) {
      var value = values[i];
      ${Bt}
      ${Et}
      let cur_indices = ${et.type.indices}(batch, row + i, col);
      let offset = ${et.indicesToOffset("cur_indices")};
      ${et.setByOffset(`offset / ${k}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${k};${d};${N};${i}`,inputDependencies:W?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:Y}),getShaderSource:_e}}}),Su,ku,Qo,wi,Au,Xo,Yo,bi,Jo=g(()=>{Lt(),Ot(),Jt(),an(),yi(),Ko(),Su=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,ku=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Qo=(e,t,r="f32",n,i=!1,a=32,o=!1,u=32)=>{let m=t[1]*e[1],_=t[0]*e[0],S=i?m:a,k=i?a:m,d=S/t[0],N=a/t[1];if(!((i&&d===4&&e[1]===4||!i&&(d===3||d===4))&&S%t[0]===0&&a%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${d} must be 3 or 4.
  tileAWidth ${S} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${d}<${r}>, ${S/d}>, ${k}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${_/e[0]}>, ${a}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${d};
const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${m};

  let num_tiles = ${o?`${Math.ceil(u/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${N};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Su(i,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${N}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${d===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${ku(i,d)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},wi=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Au=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Xo=(e,t,r="f32",n,i=!1,a=32,o=!1,u=32,m=!1)=>{let _=e[1]*t[1],S=e[0]*t[0],k=i?_:a,d=i?a:_;if(!(d%t[1]===0&&k%t[0]===0&&a%t[1]===0))throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${k} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let N=d/t[1],j=k/t[0],W=a/t[1],Z=m?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${_};
    let globalColStart = i32(workgroupId.x) * ${S};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${k}; inputCol = inputCol + ${t[0]}) {
          ${wi(i,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${S}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${_};

let tileRowA = i32(localId.y) * ${N};
let tileColA = i32(localId.x) * ${j};
let tileRowB = i32(localId.y) * ${W};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${N}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${j}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${wi(i,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${W}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Au(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${k}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${S}>, ${a}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${a};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(u/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${u}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${Z}
  }
`},Yo=(e,t,r,n,i=!1)=>{let[a,o,u,m]=n,_=fs(n[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Ks(e,_)} {
      var value = ${Ks(e,_)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${Wn("aIndices",o,o.rank-2,a.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${Ks(e,_)} {
      var value = ${Ks(e,_)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${u.type.indices};
        ${Wn("bIndices",u,u.rank-2,a.rank,"batchIndices")}
        ${u.indicesSet("bIndices",u.rank-2,"u32(row)")}
        ${u.indicesSet("bIndices",u.rank-1,"u32(colIn)")}
        value = ${u.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ks(e,_)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${i?"bias[colIn]":`${Ks(e,_)}(bias[row])`};`:""}
        ${r}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},bi=(e,t,r,n,i=!1,a)=>{let o=e[0].dims,u=e[1].dims,m=o.slice(0,-2),_=u.slice(0,-2),S=n?n.slice(0,-2):r.slice(0,-2),k=ze.size(S),d=o[o.length-2],N=o[o.length-1],j=u[u.length-1],W=N%4===0&&j%4===0,Z=d<=8?[4,1,1]:[4,4,1],ee=[8,8,1],Y=[Math.ceil(j/ee[0]/Z[0]),Math.ceil(d/ee[1]/Z[1]),Math.ceil(k/ee[2]/Z[2])],_e=W?4:1,he=[...m,d,N/_e],Me=he.length,Ie=[..._,N,j/_e],Le=Ie.length,et=[k,d,j/_e],dt=[{type:6,data:d},{type:6,data:j},{type:6,data:N}];on(t,dt),dt.push(...bt(S,he,Ie));let Et=["rank","rank"],qt=e.length>2;qt&&(dt.push(...bt(e[2].dims)),Et.push("rank")),dt.push(...bt(et));let Bt=It=>{let ts=S.length,yt=Ji("batchDims",e[0].dataType,ts,1),Ht=fs(e[0].dataType),ps=Qe("a",e[0].dataType,Me,_e),Ut=Qe("b",e[1].dataType,Le,_e),Qt=At("result",e[0].dataType,et.length,_e),gs=[ps,Ut];if(qt){let qs=i?_e:1;gs.push(Qe("bias",e[2].dataType,e[2].dims.length,qs))}let ot=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Fr(t,ot);let Pt=fs(Qt.type.tensor),hs=nn(t,Qt.type.value,Pt),Ns=Yo(_e,qt,hs,[yt,ps,Ut,Qt],i);return`
  ${It.registerUniforms(ot).registerInternalVariables(yt).declareVariables(...gs,Qt)}
  ${Ns}
  ${W?Qo(Z,ee,Ht,yt):Xo(Z,ee,Ht,yt)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Z};${t.activation};${W};${i}`,inputDependencies:Et},getRunData:()=>({outputs:[{dims:a?a(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Y[0],y:Y[1],z:Y[2]},programUniforms:dt}),getShaderSource:Bt}}}),Zo,Iu,mp=g(()=>{Lt(),Pe(),Jt(),an(),Ko(),hp(),Jo(),Zo=(e,t,r,n,i=!1,a,o=4,u=4,m=4,_="f32")=>{let S=dt=>{switch(dt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${_}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${dt} is not supported.`)}},k=dt=>{switch(dt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${dt} is not supported.`)}},d=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,N=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,j=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",W=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Z=e?"row":"col",ee=e?"col":"row",Y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Z} / outWidth;
    let outCol = ${Z} % outWidth;

    let WRow = ${ee} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${ee} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${ee} % inChannels;
    var resData = ${Ks(o,_)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${j} && xCol >= 0 && xCol < ${W}) {
      ${d}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${S(o)}
    }
    return resData;`,_e=e?t&&n?`
    let col = colIn * ${o};
    ${Y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Y}
    }
    return ${Ks(o,_)}(0.0);`:n&&r?`
    let col = colIn * ${o};
    ${Y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Y}
    }
    return ${Ks(o,_)}(0.0);`,he=e?n&&r?k(u):`
    let col = colIn * ${u};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${k(u)}
    }
    return ${Ks(u,_)}(0.0);`:`
    let col = colIn * ${u};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${k(u)}
    }
    return ${Ks(u,_)}(0.0);`,Me=Ks(m,_),Ie=Ks(e?o:u,_),Le=Ks(e?u:o,_),et=nn(a,Me,_);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ie} {
      ${e?_e:he}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Le} {
      ${e?he:_e}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${Me}) {
      let col = colIn * ${m};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${N}
      ${Go(i)}
      ${et}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Iu=(e,t,r,n,i,a,o,u,m)=>{let _=t.format==="NHWC",S=_?e[0].dims[3]:e[0].dims[1],k=r[0],d=_?r[2]:r[3],N=_?r[1]:r[2],j=_?r[3]:r[1],W=_&&(S%4===0||S%3===0)&&j%4===0,Z=_?j:d*N,ee=_?d*N:j,Y=[8,8,1],_e=n<=8?[4,1,1]:[4,4,1],he=[Math.ceil(Z/Y[0]/_e[0]),Math.ceil(ee/Y[1]/_e[1]),Math.ceil(k/Y[2]/_e[2])];os("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${he}`);let Me=W?_&&S%4!==0?3:4:1,Ie=Y[1]*_e[1],Le=Y[0]*_e[0],et=Math.max(Y[0]*Me,Y[1]),dt=n%Ie===0,Et=i%Le===0,qt=a%et===0,Bt=W?[Me,4,4]:[1,1,1],It=[{type:6,data:n},{type:6,data:i},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];on(t,It),It.push(...bt(e[0].dims,e[1].dims));let ts=["rank","rank"];o&&(It.push(...bt(e[2].dims)),ts.push("rank")),It.push(...bt(r));let yt=Ht=>{let ps=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Fr(t,ps);let Ut=W?4:1,Qt=fs(e[0].dataType),gs=`
      fn setOutputAtIndex(flatIndex : i32, value : ${W?`vec4<${Qt}>`:Qt}) {
        result[flatIndex] = ${W?`vec4<${Qt}>`:Qt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${W?`vec4<${Qt}>`:Qt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${W?"/ 4":""}, value);
      }`,ot=Qe("x",e[0].dataType,e[0].dims.length,Me===3?1:Me),Pt=Qe("w",e[1].dataType,e[1].dims.length,Ut),hs=[ot,Pt],Ns=At("result",e[0].dataType,r.length,Ut);if(o){let qs=Qe("bias",e[2].dataType,e[2].dims.length,Ut);hs.push(qs),gs+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${W?`vec4<${Qt}>`:Qt} {
          return bias[coords.${_?"w":"y"}${W?"/ 4":""}];
        }`}return`
        ${Ho("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ht.registerUniforms(ps).declareVariables(...hs,Ns)}
        ${gs}
        ${Zo(_,dt,Et,qt,o,t,Bt[0],Bt[1],Bt[2],Qt)}
        ${W?Qo(_e,Y,Qt,void 0,!_,et):Xo(_e,Y,Qt,void 0,!_,et,!1,void 0,u)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${Me};${W};${dt};${Et};${qt};${Ie};${Le};${et}`,inputDependencies:ts},getRunData:()=>({outputs:[{dims:m?m(r):r,dataType:e[0].dataType}],dispatchGroup:{x:he[0],y:he[1],z:he[2]},programUniforms:It}),getShaderSource:yt}}}),ea,ta,Gn,sa,ra,Ou,na,Fu,_p=g(()=>{Lt(),Pe(),Ot(),Jt(),an(),Ko(),ea=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},ta=e=>typeof e=="number"?[e,e,e]:e,Gn=(e,t)=>t<=1?e:e+(e-1)*(t-1),sa=(e,t,r,n=1)=>{let i=Gn(t,n);return Math.floor((e[0]*(r-1)-r+i)/2)},ra=(e,t,r,n,i)=>{i==null&&(i=sa(e,t[0],n[0]));let a=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*i>=t[o]&&(a[o]=Math.trunc((e[o]-t[o]+2*i)/n[o]+1));return a},Ou=(e,t,r,n,i,a,o,u,m,_)=>{let S,k,d,N;if(e==="VALID"&&(e=0),typeof e=="number"){S={top:e,bottom:e,left:e,right:e,front:e,back:e};let j=ra([t,r,n,1],[u,m,_],1,[i,a,o],e);k=j[0],d=j[1],N=j[2]}else if(Array.isArray(e)){if(!e.every((W,Z,ee)=>W===ee[0]))throw Error(`Unsupported padding parameter: ${e}`);S={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let j=ra([t,r,n,1],[u,m,_],1,[i,a,o],e[0]);k=j[0],d=j[1],N=j[2]}else if(e==="SAME_UPPER"){k=Math.ceil(t/i),d=Math.ceil(r/a),N=Math.ceil(n/o);let j=(k-1)*i+u-t,W=(d-1)*a+m-r,Z=(N-1)*o+_-n,ee=Math.floor(j/2),Y=j-ee,_e=Math.floor(W/2),he=W-_e,Me=Math.floor(Z/2),Ie=Z-Me;S={top:_e,bottom:he,left:Me,right:Ie,front:ee,back:Y}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:S,outDepth:k,outHeight:d,outWidth:N}},na=(e,t,r,n,i,a=!1,o="channelsLast")=>{let u,m,_,S,k;if(o==="channelsLast")[u,m,_,S,k]=e;else if(o==="channelsFirst")[u,k,m,_,S]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,,N,j,W]=t,[Z,ee,Y]=ta(r),[_e,he,Me]=ta(n),Ie=Gn(N,_e),Le=Gn(j,he),et=Gn(W,Me),{padInfo:dt,outDepth:Et,outHeight:qt,outWidth:Bt}=Ou(i,m,_,S,Z,ee,Y,Ie,Le,et),It=a?d*k:d,ts=[0,0,0,0,0];return o==="channelsFirst"?ts=[u,It,Et,qt,Bt]:o==="channelsLast"&&(ts=[u,Et,qt,Bt,It]),{batchSize:u,dataFormat:o,inDepth:m,inHeight:_,inWidth:S,inChannels:k,outDepth:Et,outHeight:qt,outWidth:Bt,outChannels:It,padInfo:dt,strideDepth:Z,strideHeight:ee,strideWidth:Y,filterDepth:N,filterHeight:j,filterWidth:W,effectiveFilterDepth:Ie,effectiveFilterHeight:Le,effectiveFilterWidth:et,dilationDepth:_e,dilationHeight:he,dilationWidth:Me,inShape:e,outShape:ts,filterShape:t}},Fu=(e,t,r,n,i,a)=>{let o=a==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let u=[64,1,1],m={x:r.map((Z,ee)=>ee)},_=[Math.ceil(ea(m.x.map(Z=>r[Z]))/u[0]),1,1];os("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${_}`);let S=1,k=ze.size(r),d=[{type:12,data:k},{type:12,data:n},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];on(t,d),d.push(...bt(e[0].dims,e[1].dims));let N=["rank","rank"],j=e.length===3;j&&(d.push(...bt(e[2].dims)),N.push("rank")),d.push(...bt(r));let W=Z=>{let ee=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:n.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Fr(t,ee);let Y=1,_e=fs(e[0].dataType),he=Qe("x",e[0].dataType,e[0].dims.length,S),Me=Qe("W",e[1].dataType,e[1].dims.length,Y),Ie=[he,Me],Le=At("result",e[0].dataType,r.length,Y),et="";if(j){let qt=Qe("bias",e[2].dataType,e[2].dims.length,Y);Ie.push(qt),et+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${_e} {
          return bias[${o?St("coords",4,5):St("coords",1,5)}];
        }`}let dt=Ks(S,_e),Et=nn(t,dt,_e);return`
            ${et}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${he.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${Me.getByIndices("aIndices")};
            }
          ${Z.registerUniforms(ee).declareVariables(...Ie,Le)}
          ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Le.offsetToIndices("global_idx")};
              let batch = ${St("coords",0,he.rank)};
              let d2 = ${o?St("coords",he.rank-1,he.rank):St("coords",1,he.rank)};
              let xFRCCorner = vec3<u32>(${o?St("coords",1,he.rank):St("coords",2,he.rank)},
              ${o?St("coords",2,he.rank):St("coords",3,he.rank)},
              ${o?St("coords",3,he.rank):St("coords",4,he.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?St("uniforms.x_shape",1,he.rank):St("uniforms.x_shape",2,he.rank)};
              let xShapeZ = ${o?St("uniforms.x_shape",2,he.rank):St("uniforms.x_shape",3,he.rank)};
              let xShapeW = ${o?St("uniforms.x_shape",3,he.rank):St("uniforms.x_shape",4,he.rank)};
              let xShapeU = ${o?St("uniforms.x_shape",4,he.rank):St("uniforms.x_shape",1,he.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${j?"value = value + getBiasByOutputCoords(coords)":""};
              ${Et}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${o};${S};${j}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]},programUniforms:d}),getShaderSource:W}}}),Du,Lu,ia=g(()=>{Lt(),Ot(),Jt(),an(),Du=(e,t,r,n)=>{let i=e.length>2,a=i?"value += b[output_channel];":"",o=e[0].dims,u=e[1].dims,m=t.format==="NHWC",_=m?r[3]:r[1],S=_/t.group,k=m&&S>=4?Xt(_):1,d=ze.size(r)/k,N=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:S}];on(t,N),N.push(...bt(o,[u[0],u[1],u[2],u[3]/k]));let j=i?["rank","rank","rank"]:["rank","rank"];N.push(...bt([r[0],r[1],r[2],r[3]/k]));let W=Z=>{let ee=At("output",e[0].dataType,r.length,k),Y=fs(ee.type.tensor),_e=nn(t,ee.type.value,Y),he=Qe("x",e[0].dataType,o.length),Me=Qe("w",e[1].dataType,u.length,k),Ie=[he,Me];i&&Ie.push(Qe("b",e[2].dataType,e[2].dims,k));let Le=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Fr(t,Le);let et=m?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${he.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${Me.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${he.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${Me.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Z.registerUniforms(Le).declareVariables(...Ie,ee)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${ee.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${m?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${k} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${m?2:1}];

    var value: ${ee.type.value} = ${ee.type.value}(0);
    ${et}
    ${a}
    ${_e}
    ${ee.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${k}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:N}),getShaderSource:W}},Lu=(e,t,r,n)=>{let i=e.length>2,a=Xt(r[3]),o=Xt(r[2]),u=ze.size(r)/a/o,m=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/a],_=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/a],S=[r[0],r[1],r[2],r[3]/a],k=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];on(t,k),k.push(...bt(m,_,S));let d=(o-1)*t.strides[1]+_[1],N=j=>{let W=At("output",e[0].dataType,S.length,a),Z=fs(W.type.tensor),ee=nn(t,W.type.value,Z),Y=Qe("x",e[0].dataType,m.length,a),_e=Qe("w",e[1].dataType,_.length,a),he=[Y,_e];i&&he.push(Qe("b",e[2].dataType,e[2].dims,a));let Me=i?"value += b[output_channel];":"",Ie=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Fr(t,Ie),`
  ${j.registerUniforms(Ie).declareVariables(...he,W)}
  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Y.type.value}, ${d}>;
    var values: array<${W.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${_[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${d}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Y.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Y.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${_[1]}; w_width++) {
          let w_val = ${_e.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${Me}
      ${ee}
      ${W.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${a};${o};${d};${_[0]};${_[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:k}),getShaderSource:N}}}),zu,Mi,Bu,vi,oa,xi,Ru,Nu,Ti,fp=g(()=>{Ot(),mp(),_p(),Jo(),ia(),an(),yi(),Hr(),zu=(e,t,r,n,i,a)=>{let o=e[0],u=e.slice(a?1:2,a?3:4),m=u.length,_=t[0],S=t.slice(2).map((d,N)=>d+(d-1)*(r[N]-1)),k=u.map((d,N)=>d+n[N]+n[N+m]).map((d,N)=>Math.floor((d-S[N]+i[N])/i[N]));return k.splice(0,0,o),k.splice(a?3:1,0,_),k},Mi=[2,3,1,0],Bu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[1]*t.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},vi=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let a=2;a<t[1].dims.length;++a)r[a-2]===0&&(r[a-2]=t[1].dims[a]);let n=e.pads.slice();Zs.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,n,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:n}),i},oa=e=>{let t=Wo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,a=e.group,o=e.kernel_shape,u=e.pads,m=e.strides,_=e.w_is_const();return{autoPad:n,format:r,dilations:i,group:a,kernelShape:o,pads:u,strides:m,wIsConst:_,...t,cacheKey:`${e.format};${t.activation};`}},xi=(e,t,r,n)=>{let i=r.format==="NHWC",a=zu(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let Ie=[t[0]];if(i){let Le=e.kernelCustomData.wT??e.compute(pr(t[1],Mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Le),Ie.push(Le)}else Ie.push(t[1]);t.length===3&&Ie.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(Lu(Ie,r,a,n),{inputs:Ie}):e.compute(Du(Ie,r,a,n),{inputs:Ie});return}let o=t.length===3,u=t[0].dims[i?1:2],m=t[0].dims[i?2:3],_=t[0].dims[i?3:1],S=t[1].dims[2],k=t[1].dims[3],d=a[i?1:2],N=a[i?2:3],j=a[i?3:1],W=i&&S===u&&k===m&&r.pads[0]===0&&r.pads[1]===0;if(W||S===1&&k===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let Ie=a[0],Le,et,dt,Et=[];if(i){let It=e.kernelCustomData.wT??e.compute(pr(t[1],Mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=It),W){let ts=u*m*_;Le=t[0].reshape([1,Ie,ts]),et=It.reshape([1,ts,j]),dt=[1,Ie,j]}else Le=t[0].reshape([Ie,u*m,_]),et=It.reshape([1,_,j]),dt=[Ie,d*N,j];Et.push(Le),Et.push(et)}else Le=t[0].reshape([Ie,_,u*m]),et=t[1].reshape([1,j,_]),dt=[Ie,j,d*N],Et.push(et),Et.push(Le);o&&Et.push(t[2]);let qt=dt[2],Bt=Et[0].dims[Et[0].dims.length-1];qt<8&&Bt<8?e.compute(qo(Et,r,a,dt,i,n),{inputs:Et}):e.compute(bi(Et,r,a,dt,i,n),{inputs:Et});return}let Z=!0,ee=e.kernelCustomData.wT??e.compute(pr(t[1],Mi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ee);let Y=[t[0],ee];o&&Y.push(t[2]);let _e=i?d*N:j,he=i?j:d*N,Me=S*k*_;e.compute(Iu(Y,r,a,_e,he,Me,o,Z,n),{inputs:Y})},Ru=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),o=[1].concat(t.dilations),u=[1].concat(t.kernelShape),m=vi({...t,pads:i,strides:a,dilations:o,kernelShape:u},n);xi(e,n,m,_=>r?[_[0],_[2],_[3]]:[_[0],_[1],_[3]])},Nu=(e,t,r)=>{let n=r.format==="NHWC"?"channelsLast":"channelsFirst",i=vi(r,t),a=r.autoPad==="NOTSET"?r.pads:r.autoPad,o=na(t[0].dims,t[1].dims,r.strides,r.dilations,a,!1,n);e.compute(Fu(t,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],n))},Ti=(e,t)=>{if(Bu(e.inputs,t),e.inputs[0].dims.length===3)Ru(e,t);else if(e.inputs[0].dims.length===5)Nu(e,e.inputs,t);else{let r=vi(t,e.inputs);xi(e,e.inputs,r)}}}),ju,gp=g(()=>{Lt(),Pe(),Ot(),Jt(),ju=(e,t,r)=>{let n=e.length>2,i=t.outputShape,a=t.format==="NHWC",o=t.group,u=e[1].dims,m=u[2]/o,_=u[3],S=a?Xt(m):1,k=a?Xt(_):1,d=a?_===1?S:k:1,N=ze.size(i)/k,j=[Math.ceil(N/64),1,1];os("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${j}`);let W=["rank","rank"],Z=[t.strides[0],t.strides[1]],ee=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],Y=[t.dilations[0],t.dilations[1]],_e=[ee[0]+(t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)),ee[1]+(t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1))],he=[_e[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),_e[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Me=[{type:12,data:N},{type:12,data:Z},{type:12,data:ee},{type:12,data:Y},{type:12,data:_e},{type:6,data:he},{type:12,data:m},{type:12,data:_},...bt(e[0].dims,e[1].dims)];n&&(Me.push(...bt(e[2].dims)),W.push("rank")),Me.push(...bt(i));let Ie=Le=>{let et=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:Z.length},{name:"filter_dims",type:"u32",length:ee.length},{name:"dilations",type:"u32",length:ee.length},{name:"effective_filter_dims",type:"u32",length:_e.length},{name:"pads",type:"i32",length:he.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],dt=fs(e[0].dataType),Et=a?1:2,qt=a?2:3,Bt=a?3:1,It=Qe("W",e[1].dataType,e[1].dims.length,d),ts=Qe("Dy",e[0].dataType,e[0].dims.length,S),yt=[ts,It];n&&yt.push(Qe("bias",e[2].dataType,[i[Bt]].length,k));let Ht=At("result",e[0].dataType,i.length,k),ps=()=>{let Qt="";if(S===1)Qt+=`
        let w_offset = ${It.indicesToOffset(`${It.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${It.getByOffset(`w_offset / ${d}`)};
        dotProd = dotProd + xValue * wValue;`;else if(_===1)Qt+=`
          let wValue = ${It.getByOffset(`${It.indicesToOffset(`${It.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${d}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let gs=0;gs<S;gs++)Qt+=`
            let wValue${gs} = ${It.getByOffset(`${It.indicesToOffset(`${It.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${gs}, wOutChannel)`)} / ${d}`)};
            dotProd = dotProd + xValue[${gs}] * wValue${gs};`;return Qt},Ut=`
            let outputIndices = ${Ht.offsetToIndices(`global_idx * ${k}`)};
            let batch = ${Ht.indicesGet("outputIndices",0)};
            let d1 = ${Ht.indicesGet("outputIndices",Bt)};
            let r = ${Ht.indicesGet("outputIndices",Et)};
            let c = ${Ht.indicesGet("outputIndices",qt)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${Ht.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${dt}(dyRCorner) + ${dt}(wR)) / ${dt}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${dt}(uniforms.Dy_shape[${Et}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${dt}(dyCCorner) + ${dt}(wC)) / ${dt}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${dt}(uniforms.Dy_shape[${qt}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${S}) {
                  let xValue = ${a?ts.getByOffset(`${ts.indicesToOffset(`${ts.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${S}`):ts.get("batch","inputChannel","idyR","idyC")};
                  ${ps()}
                  inputChannel = inputChannel + ${S};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${n?` + bias[d1 / ${k}]`:""};
            ${Ht.setByOffset("global_idx","value")};
          `;return`
    ${Le.registerUniforms(et).declareVariables(...yt,Ht)}
      ${Le.mainStart()}
      ${Le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${Ut}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${S}${d}${k}${_===1}`,inputDependencies:W},getRunData:()=>({dispatchGroup:{x:j[0],y:j[1],z:j[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:Me}),getShaderSource:Ie}}}),Uu,aa,Vu,la,ua,Wu,da,ca,Gu,yp=g(()=>{gp(),an(),Hr(),Uu=(e,t,r,n,i,a)=>(e-1)*t+r+(n-1)*i+1-a,aa=(e,t,r,n,i)=>{let a=Math.floor(e/2);t==="SAME_UPPER"?(r[n]=a,r[i]=e-a):t==="SAME_LOWER"&&(r[n]=e-a,r[i]=a)},Vu=(e,t,r,n,i,a,o,u,m,_)=>{let S=e.length-2,k=_.length===0;m.length<S&&m.push(...Array(S-m.length).fill(0));let d=e[0],N=t[u?3:1]*i;for(let j=0,W=e.length-S-(u?1:0);j<S;++j,++W){let Z=e[W],ee=k?Z*o[j]:_[j],Y=Uu(Z,o[j],a[j],t[W],r[j],ee);aa(Y,n,a,j,j+S),k&&_.push(o[j]*(Z-1)+m[j]+(t[W]-1)*r[j]+1-a[j]-a[j+S])}_.splice(0,0,d),_.splice(u?3:1,0,N)},la=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((k,d)=>k*d,1)===0){r.length=0;for(let k=2;k<t[1].dims.length;++k)r.push(t[1].dims[k])}let n=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(n?3:1,0,t[1].dims[1]);let i=e.pads.slice(),a=e.outputShape.slice(),o=e.outputPadding.slice(),u=t[0].dims,m=e.dilations.slice();if(m.reduce((k,d)=>k+d,0)===0){let k=t[0].dims.length-2;m=new Array(k).fill(1)}let _=e.strides.slice();if(_.reduce((k,d)=>k+d,0)===0){let k=t[0].dims.length-2;_=new Array(k).fill(1)}Vu(u,r,m,e.autoPad,e.group,i,_,n,o,a);let S=Object.assign({},e);return Object.assign(S,{kernelShape:r,pads:i,outputPadding:o,outputShape:a,dilations:m,strides:_}),S},ua=e=>{let t=Wo(e),r=e.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,a=e.group,o=e.kernelShape,u=e.pads,m=e.strides,_=e.wIsConst(),S=e.outputPadding,k=e.outputShape;return{autoPad:n,format:r,dilations:i,group:a,kernelShape:o,outputPadding:S,outputShape:k,pads:u,strides:m,wIsConst:_,...t,cacheKey:`${e.format};${t.activation};`}},Wu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],n=e[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let a=e[0].dims.length-2;if(t.dilations.reduce((o,u)=>o+u,0)>0&&t.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(t.strides.reduce((o,u)=>o+u,0)>0&&t.strides.length!==a)throw new Error(`strides should be ${a}D`);if(t.pads.reduce((o,u)=>o+u,0)>0&&t.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(t.outputPadding.length!==a&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${a}D`);if(t.kernelShape.reduce((o,u)=>o+u,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},da=(e,t,r,n)=>{let i=e.kernelCustomData.wT??e.compute(pr(t[1],[2,3,0,1]),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let a=[t[0],i];t.length===3&&a.push(t[2]),e.compute(ju(a,r,n),{inputs:a})},ca=(e,t)=>{let r=t.format==="NHWC",n=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&n.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let a=t.dilations;(a.length===0||a[0]===0)&&(a=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let u=t.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],o=[1].concat(o),a=[1].concat(a),i=[1].concat(i);let m=t.outputPadding;m=[0].concat(m);let _=la({...t,pads:u,strides:o,dilations:a,kernelShape:i,outputPadding:m},n);da(e,n,_,S=>r?[S[0],S[2],S[3]]:[S[0],S[1],S[3]])},Gu=(e,t)=>{if(Wu(e.inputs,t),e.inputs[0].dims.length===3)ca(e,t);else{let r=la(t,e.inputs);da(e,e.inputs,r)}}}),pa,Ku,Hu,wp=g(()=>{Lt(),Ot(),rs(),Jt(),pa=(e,t,r,n)=>{let i=ze.size(t),a=t.length,o=Qe("input",e,a),u=At("output",e,a),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),_=ze.normalizeAxis(m,a),S=k=>{let d=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,N=St("uniforms.input_shape","uniforms.axis",a),j=n.reverse?d+(n.exclusive?" + 1":""):"0",W=n.reverse?N:d+(n.exclusive?"":" + 1");return`
                ${k.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,u)}
                ${k.mainStart()}
                  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${u.offsetToIndices("global_idx")};
                  var sum = ${u.type.value}(0);
                  let first : i32 = ${j};
                  let last : i32 = ${W};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${u.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:_},...bt(t,t)]}),getShaderSource:S}},Ku=(e,t)=>{let r=e.inputs[0].dims,n=e.inputs[0].dataType,i=e.inputs[1];e.compute(pa(n,r,i,t),{inputs:[0]})},Hu=e=>{let t=e.exclusive===1,r=e.reverse===1;return zt({exclusive:t,reverse:r})}}),qu,ha,Qu,Xu,Yu,bp=g(()=>{Lt(),Ot(),rs(),Jt(),qu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},ha=(e,t,r,n)=>{let i=[];i.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let a=0;a<t;++a)i.push(r.indicesSet("a",e[a],`i[${a}]`));return i.push("return a;}"),i.join(`
`)},Qu=(e,t)=>{let r,n,i,a,o,u,m=t.format==="NHWC",_=t.blocksize,S=t.mode==="DCR";m?([r,n,i,a]=e.dims,o=S?[r,n,i,_,_,a/_**2]:[r,n,i,a/_**2,_,_],u=S?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,i,a]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=S?[r,_,_,a/_**2,n,i]:[r,a/_**2,_,_,n,i],u=S?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let k=e.reshape(o),d=k.dims.length,N=e.dataType,j=Qe("a",N,d),W=At("output",N,d),Z=ee=>`
  ${ee.registerUniform("output_size","u32").declareVariables(j,W)}

  ${ha(u,d,j,W)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${W.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${W.setByOffset("global_idx",j.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:ee=>{let Y=m?[r,n*_,i*_,a/_**2]:[r,a/_**2,n*_,i*_],_e=ze.size(Y),he=k.dims,Me=ze.sortBasedOnPerm(he,u);return{outputs:[{dims:Y,dataType:ee[0].dataType}],dispatchGroup:{x:Math.ceil(_e/64)},programUniforms:[{type:12,data:_e},...bt(he,Me)]}},getShaderSource:Z}},Xu=(e,t)=>{qu(e.inputs),e.compute(Qu(e.inputs[0],t))},Yu=e=>zt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Ei,Kn,Pi,Ju,Zu,ma,ed,_a,qr,td,sd,Mp=g(()=>{Lt(),Ot(),rs(),Jt(),Ei="[a-zA-Z]|\\.\\.\\.",Kn="("+Ei+")+",Pi="^"+Kn+"$",Ju="("+Kn+",)*"+Kn,Zu="^"+Ju+"$",ma=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},ed=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(Zu)))throw new Error("Invalid LHS term");if(r.split(",").forEach((a,o)=>{let u=e[o].dims.slice();if(!a.match(RegExp(Pi)))throw new Error("Invalid LHS term");let m=this.processTerm(a,!0,u,o);this.lhs.push(m)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([a,o])=>o.count===1||a==="...").map(([a])=>a).join("");else if(!n.match(RegExp(Kn)))throw new Error("Invalid RHS");(i=n.match(RegExp(Ei,"g")))==null||i.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(a);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(e,t,r){let n=this.symbolToInfo.get(e);if(n!==void 0){if(n.dimValue!==t&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,n)}processTerm(e,t,r,n=-1){let i=r.length,a=!1,o=[],u=0;if(!e.match(RegExp(Pi))&&!t&&e!=="")throw new Error("Invalid LHS term");let m=e.match(RegExp(Ei,"g")),_=new ma(n);return m==null||m.forEach((S,k)=>{if(S==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let d=i-m.length+1;if(d<0)throw new Error("Ellipsis out of bounds");if(o=r.slice(u,u+d),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let N=0;N<o.length;N++){let j=String.fromCharCode(48+N);_.addSymbol(j,k+N),this.addSymbol(j,r[u++],n)}}else _.addSymbol(S,k+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(S,r[u++],n)}),_}},_a=e=>e+"_max",qr=(e,t,r,n)=>{let i=e.map(_=>_.length).map((_,S)=>Qe(`input${S}`,t,_)),a=ze.size(n),o=At("output",t,n.length),u=[...r.symbolToInfo.keys()].filter(_=>!r.rhs.symbolToIndices.has(_)),m=_=>{let S=[],k="var prod = 1.0;",d="var sum = 0.0;",N="sum += prod;",j=[],W=[],Z=[],ee=[],Y=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((he,Me)=>{var Ie;if(r.rhs.symbolToIndices.has(Me)){let Le=(Ie=r.rhs.symbolToIndices.get(Me))==null?void 0:Ie[0];Le!==void 0&&r.lhs.forEach((et,dt)=>{if(he.inputIndices.includes(dt)){let Et=et.symbolToIndices.get(Me);if(Et===void 0)throw new Error("Invalid symbol error");Et.forEach(qt=>{S.push(`${i[dt].indicesSet(`input${dt}Indices`,qt,o.indicesGet("outputIndices",Le))}`)})}})}else r.lhs.forEach((Le,et)=>{if(he.inputIndices.includes(et)){let dt=Le.symbolToIndices.get(Me);if(dt===void 0)throw new Error("Invalid symbol error");dt.forEach(Et=>{j.push(`${i[et].indicesSet(`input${et}Indices`,Et,`${Me}`)}`)}),ee.push(`prod *= ${i[et].getByIndices(`input${et}Indices`)};`)}}),W.push(`for(var ${Me}: u32 = 0; ${Me} < uniforms.${_a(Me)}; ${Me}++) {`),Z.push("}")});let _e=Y?[...S,`let sum = ${i.map((he,Me)=>he.getByIndices(`input${Me}Indices`)).join(" * ")};`]:[...S,d,...W,...j,k,...ee,N,...Z];return`
            ${_.registerUniforms(u.map(he=>({name:`${_a(he)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${_.mainStart()}
            ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((he,Me)=>`var input${Me}Indices: ${i[Me].type.indices};`).join(`
`)}
            ${_e.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let _=u.filter(k=>r.symbolToInfo.has(k)).map(k=>{var d;return{type:12,data:((d=r.symbolToInfo.get(k))==null?void 0:d.dimValue)||0}});_.push({type:12,data:a});let S=e.map((k,d)=>[...bt(k)]).reduce((k,d)=>k.concat(d),_);return S.push(...bt(n)),{outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:S}},getShaderSource:m}},td=(e,t)=>{let r=new ed(e.inputs,t.equation),n=r.outputDims,i=e.inputs.map((a,o)=>a.dims);e.compute(qr(i,e.inputs[0].dataType,r,n))},sd=e=>{let t=e.equation.replace(/\s+/g,"");return zt({equation:t})}}),rd,Ci,nd,id,od,vp=g(()=>{Lt(),Ot(),Jt(),rd=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;n<r.length&&i<t.length;++n,++i)if(r[n]!==t[i]&&r[n]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ci=(e,t)=>{let r=e.length-t.length,n=[];for(let i=0;i<r;++i)n.push(e[i]);for(let i=0;i<t.length;++i)n.push(t[i]===1?e[i+r]:t[i]);return n},nd=(e,t)=>e.length>t.length?Ci(e,t):Ci(t,e),id=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),n=nd(t,r),i=e[0].dataType,a=i===9||ze.size(t)===1,o=i===9||t.length>0&&t[t.length-1]%4===0?4:1,u=a||n.length>0&&n[n.length-1]%4===0?4:1,m=Math.ceil(ze.size(n)/u),_=k=>{let d=Qe("input",i,t.length,o),N=At("output",i,n.length,u),j;if(i===9){let W=(Z,ee,Y="")=>`
          let outputIndices${ee} = ${N.offsetToIndices(`outputOffset + ${ee}u`)};
          let offset${ee} = ${d.broadcastedIndicesToOffset(`outputIndices${ee}`,N)};
          let index${ee} = offset${ee} / 4u;
          let component${ee} = offset${ee} % 4u;
          ${Z}[${ee}] = ${Y}(${d.getByOffset(`index${ee}`)}[component${ee}]);
        `;j=`
        let outputOffset = global_idx * ${u};
        var data = vec4<u32>(0);
        ${W("data",0,"u32")}
        ${W("data",1,"u32")}
        ${W("data",2,"u32")}
        ${W("data",3,"u32")}
        ${N.setByOffset("global_idx","data")}
      }`}else j=`
        let outputIndices = ${N.offsetToIndices(`global_idx * ${u}`)};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",N)};
        let data = ${N.type.value}(${d.getByOffset(`inputOffset / ${o}`)});
        ${N.setByOffset("global_idx","data")}
      }`;return`
    ${k.registerUniform("vec_size","u32").declareVariables(d,N)}
    ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${j}`},S=[{type:12,data:m},...bt(t,n)];return{name:"Expand",shaderCache:{hint:`${n.length};${o}${u}`,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:S})}},od=e=>{rd(e.inputs),e.compute(id(e.inputs),{inputs:[0]})}}),$i,ad,xp=g(()=>{Lt(),Ot(),Jt(),zo(),$i=e=>{let t=e[0].dataType,r=ze.size(e[0].dims),n=ze.size(e[1].dims),i=n%4===0,a=o=>{let u=Qe("x",t,[1],4),m=Qe("bias",t,[1],4),_=At("y",t,[1],4),S=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],k=N=>`
      let bias${N}_offset: u32 = (global_idx * 4 + ${N}) % uniforms.bias_size;
      let bias${N} = ${m.getByOffset(`bias${N}_offset / 4`)}[bias${N}_offset % 4];`,d=i?`
      let bias = ${m.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${k(0)}${k(1)}${k(2)}${k(3)}
      let bias = ${u.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(S).declareVariables(u,m,_)}

    ${Do(ks(t))}

    ${o.mainStart(or)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${u.getByOffset("global_idx")};
      ${d}
      let x_in = x + bias;
      ${_.setByOffset("global_idx",gi("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:a,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},ad=e=>{e.inputs.length<2||ze.size(e.inputs[1].dims)===0?lu(e):e.compute($i(e.inputs))}}),ld,Hn,ud,dd,Tp=g(()=>{Lt(),Ot(),rs(),Jt(),ld=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Hn=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=ze.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(a,1,...n);let u=r[a],m=e[0].dataType===9?4:1,_=Math.ceil(ze.size(o)/m),S=[{type:12,data:_},{type:6,data:u},{type:12,data:a},...bt(e[0].dims,e[1].dims,o)],k=d=>{let N=Qe("data",e[0].dataType,e[0].dims.length,m),j=Qe("inputIndices",e[1].dataType,e[1].dims.length),W=At("output",e[0].dataType,o.length,m),Z=Y=>{let _e=n.length,he=`var indicesIndices${Y}  = ${j.type.indices}(0);`;for(let Me=0;Me<_e;Me++)he+=`${_e>1?`indicesIndices${Y}[${Me}]`:`indicesIndices${Y}`} = ${o.length>1?`outputIndices${Y}[uniforms.axis + ${Me}]`:`outputIndices${Y}`};`;he+=`
          var idx${Y} = ${j.getByIndices(`indicesIndices${Y}`)};
          if (idx${Y} < 0) {
            idx${Y} = idx${Y} + uniforms.axisDimLimit;
          }
          var dataIndices${Y} : ${N.type.indices};
        `;for(let Me=0,Ie=0;Me<i;Me++)Me===a?(he+=`${i>1?`dataIndices${Y}[${Me}]`:`dataIndices${Y}`} = u32(idx${Y});`,Ie+=_e):(he+=`${i>1?`dataIndices${Y}[${Me}]`:`dataIndices${Y}`} = ${o.length>1?`outputIndices${Y}[${Ie}]`:`outputIndices${Y}`};`,Ie++);return he},ee;if(e[0].dataType===9){let Y=(_e,he,Me="")=>`
          let outputIndices${he} = ${W.offsetToIndices(`outputOffset + ${he}u`)};
          ${Z(he)};
          let offset${he} = ${N.indicesToOffset(`dataIndices${he}`)};
          let index${he} = offset${he} / 4u;
          let component${he} = offset${he} % 4u;
          ${_e}[${he}] = ${Me}(${N.getByOffset(`index${he}`)}[component${he}]);
        `;ee=`
        let outputOffset = global_idx * ${m};
        var value = vec4<u32>(0);
        ${Y("value",0,"u32")}
        ${Y("value",1,"u32")}
        ${Y("value",2,"u32")}
        ${Y("value",3,"u32")}
        ${W.setByOffset("global_idx","value")}
      `}else ee=`
      let outputIndices = ${W.offsetToIndices("global_idx")};
      ${Z("")};
      let value = ${N.getByIndices("dataIndices")};
      ${W.setByOffset("global_idx","value")};
      `;return`
      ${d.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(N,j,W)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${ee}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:S}),getShaderSource:k}},ud=e=>zt({axis:e.axis}),dd=(e,t)=>{let r=e.inputs;ld(r),e.compute(Hn(e.inputs,t))}}),cd,Si,pd,Ep=g(()=>{Lt(),Ot(),Jt(),cd=(e,t,r,n,i,a,o,u,m)=>{let _=[{type:12,data:a},{type:12,data:n},{type:12,data:i},{type:12,data:r},{type:12,data:o},{type:12,data:u},{type:12,data:m}],S=[a];_.push(...bt(t.dims,S));let k=d=>{let N=Qe("indices_data",t.dataType,t.dims.length),j=At("input_slice_offsets_data",12,1,1),W=[N,j],Z=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:r.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${d.registerUniforms(Z).declareVariables(...W)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${r.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${r.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:S,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:_}),getShaderSource:k},{inputs:[t],outputs:[-1]})[0]},Si=(e,t)=>{let r=e.inputs,n=r[0].dims,i=r[0].dataType,a=r[1].dims,o=a[a.length-1],u=ze.sizeToDimension(a,a.length-1),m=ze.sizeFromDimension(n,t.batchDims+o),_=ze.sizeToDimension(n,t.batchDims),S=ze.sizeFromDimension(n,t.batchDims),k=u/_,d=new Array(o),N=m;for(let he=0;he<o;++he)d[o-1-he]=N,N*=n[t.batchDims+o-1-he];let j=cd(e,r[1],d,t.batchDims,n,u,k,S,o),W=t.batchDims+o;if(W>n.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let Z=a.slice(0,-1).concat(n.slice(W)),ee=ze.size(Z),Y=[{type:12,data:ee},{type:12,data:m},...bt(r[0].dims,j.dims,Z)],_e=he=>{let Me=Qe("data",r[0].dataType,r[0].dims.length),Ie=Qe("slice_offsets",12,j.dims.length),Le=At("output",r[0].dataType,Z.length);return`
          ${he.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(Me,Ie,Le)}
            ${he.mainStart()}
            ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:Z,dataType:i}],dispatchGroup:{x:Math.ceil(ee/64)},programUniforms:Y}),getShaderSource:_e},{inputs:[r[0],j]})},pd=e=>({batchDims:e.batch_dims,cacheKey:""})}),hd,Pp,md,_d,Cp=g(()=>{Lt(),Ot(),rs(),Jt(),hd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=ze.normalizeAxis(t.quantizeAxis,e[0].dims.length),n=t.blockSize,i=e[0],a=e[2],o=e.length===4?e[3]:void 0;if(a.dims.length!==i.dims.length||!i.dims.map((u,m)=>m===r?Math.ceil(u/n)===a.dims[m]:u===a.dims[m]).reduce((u,m)=>u&&m,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==a.dims.length||!o.dims.map((u,m)=>u===a.dims[m]).reduce((u,m)=>u&&m,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Pp=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r.length,a=ze.normalizeAxis(t.gatherAxis,i),o=ze.normalizeAxis(t.quantizeAxis,i),u=r.slice(0);u.splice(a,1,...n);let m=ze.size(u),_=e[2].dataType,S=e[0].dataType===22,k=[{type:12,data:m},{type:12,data:o},{type:12,data:a},{type:12,data:t.blockSize},...bt(...e.map((N,j)=>N.dims),u)],d=N=>{let j=Qe("data",e[0].dataType,e[0].dims.length),W=Qe("inputIndices",e[1].dataType,e[1].dims.length),Z=Qe("scales",e[2].dataType,e[2].dims.length),ee=e.length>3?Qe("zeroPoint",e[3].dataType,e[3].dims.length):void 0,Y=At("output",_,u.length),_e=[j,W,Z];ee&&_e.push(ee);let he=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${N.registerUniforms(he).declareVariables(..._e,Y)}
        ${N.mainStart()}
        let output_indices = ${Y.offsetToIndices("global_idx")};
        var indices_indices = ${W.type.indices}(0);
        ${n.length>1?`
          for (var i: u32 = 0; i < ${n.length}; i++) {
            let index = ${Y.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${W.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Y.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${j.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Y.indicesGet("output_indices","i")};
          ${j.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${W.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[a]};
        }
        ${j.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${u.length}; i++) {
          let index = ${Y.indicesGet("output_indices",`i + ${n.length} - 1`)};
          ${j.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${j.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${j.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${S?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Z.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Z.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Z.getByIndices("scale_indices")};
        ${ee?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${ee.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${ee.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${S?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${ks(_)}(quantized_data - zero_point) * scale;
        ${Y.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((N,j)=>j!==1).map(N=>N.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(N,j)=>"rank")},getRunData:()=>({outputs:[{dims:u,dataType:_}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:k}),getShaderSource:d}},md=(e,t)=>{let r=e.inputs;hd(r,t),e.compute(Pp(e.inputs,t))},_d=e=>zt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Pn,fd,gd,yd,$p=g(()=>{Lt(),Ot(),rs(),Jt(),Pn=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},fd=(e,t)=>{let r=e[0].dims,n=e[0].dataType,i=r.length,a=e[1].dims,o=e[1].dataType,u=ze.normalizeAxis(t.axis,i),m=r[u],_=a.slice(0),S=ze.size(_),k=Qe("input",n,i),d=Qe("indicesInput",o,a.length),N=At("output",n,_.length),j=[{type:12,data:S},{type:6,data:m},{type:12,data:u}];return j.push(...bt(r,a,_)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:j}),getShaderSource:W=>`
      ${W.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,d,N)}
      ${W.mainStart()}
      ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${N.offsetToIndices("global_idx")};

      var idx = ${d.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${k.type.indices}(outputIndices);
      ${k.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${k.getByIndices("inputIndices")};

      ${N.setByOffset("global_idx","value")};
  }`}},gd=e=>zt({axis:e.axis}),yd=(e,t)=>{let r=e.inputs;Pn(r),e.compute(fd(e.inputs,t))}}),wd,bd,Md,ki,fh=g(()=>{Lt(),Ot(),Jt(),wd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},bd=(e,t)=>{let r=e[0].dims.slice(),n=e[1].dims.slice(),[i,a,o]=Or.getShapeOfGemmResult(r,t.transA,n,t.transB,e.length===3?e[2].dims:void 0),u=[i,a];if(!u)throw new Error("Can't use gemm on the given tensors");let m=16,_=Math.ceil(a/m),S=Math.ceil(i/m),k=!0,d=ze.size(u),N=[{type:12,data:k?_:d},{type:12,data:i},{type:12,data:a},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],j=["type","type"];e.length===3&&(N.push(...bt(e[2].dims)),j.push("rank")),N.push(...bt(u));let W=ee=>{let Y="";t.transA&&t.transB?Y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?Y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?Y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(Y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let _e=t.alpha===1?"":"value *= uniforms.alpha;",he=Qe("a",e[0].dataType,e[0].dims),Me=Qe("b",e[1].dataType,e[1].dims),Ie=he.type.value,Le=null,et=[he,Me];e.length===3&&(Le=Qe("c",e[2].dataType,e[2].dims.length),et.push(Le));let dt=At("output",e[0].dataType,u.length);et.push(dt);let Et=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${ee.registerUniforms(Et).declareVariables(...et)}

  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${Ie}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${Y}
    }

    ${_e}
    ${Le!=null?`let cOffset = ${Le.broadcastedIndicesToOffset("vec2(m, n)",dt)}; value += ${Ie}(uniforms.beta) * ${Le.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},Z=ee=>{let Y=Qe("a",e[0].dataType,e[0].dims),_e=Qe("b",e[1].dataType,e[1].dims),he=null,Me=[Y,_e];e.length===3&&(he=Qe("c",e[2].dataType,e[2].dims.length),Me.push(he));let Ie=At("output",e[0].dataType,u.length);Me.push(Ie);let Le=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],et="",dt="";t.transA&&t.transB?(dt=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${_e.type.value}(0);
      }
      `,et="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(dt=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${_e.type.value}(0);
      }
      `,et="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(dt=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${_e.type.value}(0);
      }
      `,et="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(dt=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${_e.type.value}(0);
      }
      `,et="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Et=t.alpha===1?"":"value *= uniforms.alpha;";return`
  ${ee.registerUniforms(Le).declareVariables(...Me)}
  var<workgroup> tile_a: array<array<${Y.type.storage}, ${m}>, ${m}>;
  var<workgroup> tile_b: array<array<${_e.type.storage}, ${m}>, ${m}>;
  ${ee.mainStart([m,m,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${m};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${m};
    let num_tiles = (uniforms.K - 1) / ${m} + 1;
    var k_start = 0u;
    var value = ${Ie.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${dt}
      k_start = k_start + ${m};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${m}; k++) {
        ${et}
      }
      workgroupBarrier();
    }

    ${Et}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${he!=null?`let cOffset = ${he.broadcastedIndicesToOffset("vec2(m, n)",Ie)}; value += ${Ie.type.value}(uniforms.beta) * ${he.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return k?{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:_*S},programUniforms:N}),getShaderSource:Z}:{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:N}),getShaderSource:W}},Md=e=>{let t=e.transA,r=e.transB,n=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:n,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},ki=(e,t)=>{wd(e.inputs),e.compute(bd(e.inputs,t))}}),Er,Dr,ln,un,vd,fa,xd,Td,ga,Ed,Pd,ya,Cd,$d,wa=g(()=>{Lt(),Ot(),rs(),Jt(),[Er,Dr,ln,un]=[0,1,2,3],vd=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},fa=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,xd=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Td=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,ga=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Ed=(e,t,r)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {
     var pixel = ${t}(0);
     var indices = vec4<u32>(0);
     indices[${Er}] = batch;
     indices[${Dr}] = channel;`+(()=>{switch(r.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${ln}] = u32(r);
            indices[${un}] = u32(c);
          }
        `;case"border":return`
          indices[${ln}] = u32(clamp(r, 0, H - 1));
          indices[${un}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${ln}] = gs_reflect(r, border[1], border[3]);
          indices[${un}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${r.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,Pd=(e,t,r)=>(()=>{switch(r.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Er}], indices[${Dr}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Er}], indices[${Dr}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Er}], indices[${Dr}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Er}], indices[${Dr}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Er}], indices[${Dr}], border);

          let dx2 = ${t}(f32(x2) - x);
          let dx1 = ${t}(x - f32(x1));
          let dy2 = ${t}(f32(y2) - y);
          let dy1 = ${t}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${t}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Er}], indices[${Dr}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${r.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,ya=(e,t)=>{let r=Qe("x",e[0].dataType,e[0].dims.length),n=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=Qe("grid",e[1].dataType,n.length,2),a=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];t.format==="NHWC"&&(a=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Er,Dr,ln,un]=[0,3,1,2]);let o=At("output",e[0].dataType,a.length),u=r.type.value,m=ze.size(a),_=[{type:12,data:m},...bt(e[0].dims,n,a)],S=k=>`
  ${k.registerUniform("output_size","u32").declareVariables(r,i,o)}
  ${fa}
  ${xd(u)}
  ${Td(t)}
  ${ga(t)}
  ${Ed(r,u,t)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${ln}]);
      let W_in = i32(uniforms.x_shape[${un}]);

      ${t.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Er}], indices[${ln}], indices[${un}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${Pd(o,u,t)}
  }`;return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:k=>{let d=ze.size(a);return{outputs:[{dims:a,dataType:k[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}},getShaderSource:S}},Cd=(e,t)=>{vd(e.inputs),e.compute(ya(e.inputs,t))},$d=e=>zt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),nr,Sd,kd,ba,Ma,dn,Sp,Ad=g(()=>{Lt(),Ot(),rs(),de(),bo(),Jt(),Hr(),nr=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Sd=(e,t)=>{let r=e[0],n=nr(e,1),i=nr(e,2),a=nr(e,3),o=nr(e,4),u=nr(e,5),m=nr(e,6),_=nr(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let S=r.dims[0],k=r.dims[1],d=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],N=k,j=0,W=0,Z=Math.floor(d/t.numHeads);if(m&&_&&ze.size(m.dims)&&ze.size(_.dims)){if(m.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(m.dims[0]!==S||m.dims[1]!==t.numHeads||m.dims[3]!==Z)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(_.dims[0]!==S||_.dims[1]!==t.numHeads||_.dims[3]!==Z)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(m.dims[2]!==_.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(_.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');j=m.dims[2],W=m.dims[2]}else if(m&&ze.size(m.dims)||_&&ze.size(_.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let ee;if(n&&ze.size(n.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');ee=2,N=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==Z)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');ee=5,N=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==Z)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');ee=0,N=n.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ee=3}if(a&&ze.size(a.dims)>0){if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(n&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Y=j+N,_e=0;if(o&&ze.size(o.dims)>0){_e=8;let Le=o.dims;throw Le.length===1?Le[0]===S?_e=1:Le[0]===3*S+2&&(_e=3):Le.length===2&&Le[0]===S&&Le[1]===Y&&(_e=5),_e===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let he=!1,Me=d;if(i&&ze.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(N!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Me=i.dims[2]}else{if(N!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');Me=i.dims[1]*i.dims[3],he=!0}}let Ie=!1;if(o&&ze.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(u&&ze.size(u.dims)>0){if(u.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==S||u.dims[1]!==t.numHeads||u.dims[2]!==k||u.dims[3]!==Y)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:S,sequenceLength:k,pastSequenceLength:j,kvSequenceLength:N,totalSequenceLength:Y,maxSequenceLength:W,inputHiddenSize:0,hiddenSize:d,vHiddenSize:Me,headSize:Z,vHeadSize:Math.floor(Me/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:_e,scale:t.scale,broadcastResPosBias:Ie,passPastInKv:he,qkvFormat:ee}},kd=e=>zt({...e}),ba=zt({perm:[0,2,1,3]}),Ma=(e,t,r,n,i,a,o)=>{let u=[n,i,a],m=ze.size(u),_=[{type:12,data:m},{type:12,data:o},{type:12,data:a}],S=k=>{let d=At("qkv_with_bias",t.dataType,u),N=Qe("qkv",t.dataType,u),j=Qe("bias",r.dataType,u),W=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${k.registerUniforms(W).declareVariables(N,j,d)}
  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:_}),getShaderSource:S},{inputs:[t,r],outputs:[-1]})[0]},dn=(e,t,r,n,i,a,o,u)=>{let m=a;if(o&&ze.size(o.dims)>0){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Ma(e,a,o,t,n,r*i,u),m=m.reshape([t,n,r,i]),r===1||n===1?m:e.compute(pr(m,ba.perm),{inputs:[m],outputs:[-1]})[0]}else return a.dims.length===3&&(m=a.reshape([t,n,r,i])),r===1||n===1?m:e.compute(pr(m,ba.perm),{inputs:[m],outputs:[-1]})[0]},Sp=(e,t)=>{let r=Sd(e.inputs,t),n=e.inputs[0],i=nr(e.inputs,1),a=nr(e.inputs,2),o=nr(e.inputs,3),u=nr(e.inputs,4),m=nr(e.inputs,5),_=nr(e.inputs,6),S=nr(e.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let k=i&&a&&i.dims.length===4&&a.dims.length===4,d=dn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,o,0);if(k)return Un(e,d,i,a,u,void 0,_,S,m,r);if(!i||!a)throw new Error("key and value must be provided");let N=dn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,o,r.hiddenSize),j=dn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,a,o,2*r.hiddenSize);Un(e,d,N,j,u,void 0,_,S,m,r)}}),Id,va,Od,Fd,Ai,Dd,Ld,xa=g(()=>{Lt(),Ot(),rs(),Jt(),Id=e=>{if(!e||e.length<1)throw new Error("too few inputs")},va=(e,t)=>{let r=[],n=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),n=r.length),zt({numOutputs:n,axis:t.axis,splitSizes:r})},Od=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${St("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Fd=e=>{let t=e.length,r=[];for(let n=0;n<t;++n){let i=e[n].setByIndices("indices","input[global_idx]");t===1?r.push(i):n===0?r.push(`if (output_number == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${n}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Ai=(e,t)=>{let r=e[0].dims,n=ze.size(r),i=e[0].dataType,a=ze.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),u=Qe("input",i,r.length),m=new Array(t.numOutputs),_=[],S=[],k=0,d=[{type:12,data:n}];for(let j=0;j<t.numOutputs;j++){k+=t.splitSizes[j],m[j]=k;let W=r.slice();W[a]=t.splitSizes[j],S.push(W),o[j]=At(`output${j}`,i,W.length),_.push({dims:S[j],dataType:e[0].dataType})}d.push({type:12,data:m},...bt(r,...S));let N=j=>`
  ${j.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(u,...o)}
  ${Od(m.length)}
  ${Fd(o)}

  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${u.offsetToIndices("global_idx")};
    var index = ${u.indicesGet("indices",a)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${St("uniforms.size_in_split_axis","output_number - 1u",m.length)};
      ${u.indicesSet("indices",a,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:N,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:d})}},Dd=(e,t)=>{Id(e.inputs);let r=e.inputs.length===1?t:va(e.inputs,t);e.compute(Ai(e.inputs,r),{inputs:[0]})},Ld=e=>{let t=e.axis,r=e.splitSizes,n=e.numOutputs<0?r.length:e.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return zt({axis:t,numOutputs:n,splitSizes:r})}}),kp,Ap,Ii,Ta,Ip=g(()=>{rs(),bo(),Ad(),xa(),Hr(),kp=(e,t)=>{if(t.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],n=e[1],i=e[2],a=e[3],o=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let u=!1,m=r.dims[0],_=r.dims[1],S=r.dims.length===3?u?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],k=_,d=0,N=!n||n.dims.length===0,j=Math.floor(N?S/(t.numHeads+2*t.kvNumHeads):S/t.numHeads);N&&(S=j*t.numHeads);let W=a&&a.dims.length!==0,Z=o&&o.dims.length!==0;if(W&&a.dims.length===4&&a.dims[0]===m&&a.dims[1]!==t.kvNumHeads&&a.dims[2]===t.kvNumHeads&&a.dims[3]===j)throw new Error("BSNH pastKey/pastValue is not supported");if(W&&Z){if(a.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');d=a.dims[2]}else if(W||Z)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let ee=1;if(n&&n.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(r.dims[2]%n.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');k=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==t.numHeads||n.dims[3]!==2||n.dims[4]!==j)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');k=n.dims[1]}else{if(n.dims[1]!==t.numHeads||n.dims[3]!==j)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');k=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ee=3}let Y=0,_e=!1,he=t.kvNumHeads?j*t.kvNumHeads:S;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(k!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');he=i.dims[2]}else{if(k!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');he=i.dims[1]*i.dims[3],_e=!0}}let Me=e.length>4?e[5]:void 0;if(Me&&Me.dims.length!==1&&Me.dims[0]!==m)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:m,sequenceLength:_,pastSequenceLength:d,kvSequenceLength:k,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:S,vHiddenSize:he,headSize:j,vHeadSize:Math.floor(he/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:Y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:_e,qkvFormat:ee}},Ap=zt({perm:[0,2,1,3]}),Ii=(e,t,r)=>{let n=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(n=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),n=e.compute(pr(n,Ap.perm),{inputs:[n],outputs:[-1]})[0]),n},Ta=(e,t)=>{var Z;let r=kp(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((Z=e.inputs[1])==null?void 0:Z.dims.length)===5)throw new Error("Packed KV is not implemented");let n=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,a=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,u=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,m=e.inputs.length>4?e.inputs[5]:void 0,_=e.inputs.length>5?e.inputs[6]:void 0,S=r.kvNumHeads?r.kvNumHeads:r.numHeads,k=zt({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,S*r.headSize,S*r.headSize]}),[d,N,j]=!i&&!a?e.compute(Ai([n],k),{inputs:[n],outputs:[-1,-1,-1]}):[n,i,a],W=dn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,d,void 0,0);Un(e,W,Ii(e,N,r),Ii(e,j,r),void 0,void 0,o,u,void 0,r,m,_)}}),Ea,Pa,zd,Bd,Rd=g(()=>{Lt(),Ot(),Hr(),Jt(),Ea=(e,t,r,n,i,a,o,u)=>{let m=Xt(a),_=m===1?"f32":`vec${m}f`,S=m===1?"vec2f":`mat2x${m}f`,k=i*o,d=64;k===1&&(d=256);let N=[i,o,a/m],j=[i,o,2],W=["rank","type","type"],Z=[];Z.push(...bt(N,j));let ee=Y=>{let _e=Qe("x",t.dataType,3,m),he=Qe("scale",r.dataType,r.dims),Me=Qe("bias",n.dataType,n.dims),Ie=At("output",1,3,2),Le=[_e,he,Me,Ie];return`
  var<workgroup> workgroup_shared : array<${S}, ${d}>;
  const workgroup_size = ${d}u;
  ${Y.declareVariables(...Le)}
  ${Y.mainStart(d)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${_}(0);
    var squared_sum = ${_}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${_}(${_e.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${S}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Gs("workgroup_shared[0][0]",m)} / f32(hight * ${m});
      let squared_sum_final = ${Gs("workgroup_shared[0][1]",m)} / f32(hight * ${m});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${u}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${u};${d}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:j,dataType:1}],dispatchGroup:{x:k},programUniforms:Z}),getShaderSource:ee},{inputs:[t,r,n],outputs:[-1]})[0]},Pa=(e,t,r)=>{let n=t[0].dims,i=n,a=2,o=n[0],u=n[1],m=ze.sizeFromDimension(n,a),_=Xt(m),S=ze.size(i)/_,k=Ea(e,t[0],t[1],t[2],o,m,u,r.epsilon),d=[o,u,m/_],N=[o,u],j=["type","none"],W=Z=>{let ee=Qe("x",t[0].dataType,d.length,_),Y=Qe("scale_shift",1,N.length,2),_e=At("output",t[0].dataType,d.length,_),he=[ee,Y,_e];return`
  ${Z.registerUniform("output_size","u32").declareVariables(...he)}
  ${Z.mainStart()}
  ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${_e.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${Y.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${ee.getByOffset("global_idx")} * ${_e.type.value}(scale_shift.x) + ${_e.type.value}(scale_shift.y);
      ${_e.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${_}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},...bt(d,N,d)]}),getShaderSource:W},{inputs:[t[0],k]})},zd=(e,t,r)=>{let n=t[0].dims,i=n,a=n[0],o=n[n.length-1],u=ze.sizeFromDimension(n,1)/o,m=Xt(o),_=ze.size(i)/m,S=[{type:12,data:u},{type:12,data:Math.floor(o/m)}],k=["type","type"],d=!1,N=[0,n.length-1];for(let ee=0;ee<n.length-2;ee++)d=d||n[ee+1]!==1,N.push(ee+1);d=d&&n[n.length-1]!==1;let j=d?e.compute(pr(e.inputs[0],N),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:n.length},(ee,Y)=>n[N[Y]])),W=Ea(e,j,t[1],t[2],a,u,o,r.epsilon),Z=ee=>{let Y=fs(t[0].dataType),_e=m===1?"vec2f":`mat${m}x2f`,he=Le=>{let et=Le===0?"x":"y",dt=m===1?"f32":`vec${m}f`;switch(m){case 1:return`${Y}(${dt}(scale.${et}))`;case 2:return`vec2<${Y}>(${dt}(scale[0].${et}, scale[1].${et}))`;case 4:return`vec4<${Y}>(${dt}(scale[0].${et}, scale[1].${et}, scale[2].${et}, scale[3].${et}))`;default:throw new Error(`Not supported compoents ${m}`)}},Me=Qe("input",t[0].dataType,t[0].dims,m),Ie=At("output",t[0].dataType,i,m);return`
  @group(0) @binding(0) var<storage, read> input : array<${Me.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${_e}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${Ie.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${ee.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${he(0)}, ${he(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:S}),getShaderSource:Z},{inputs:[t[0],W]})},Bd=(e,t)=>{t.format==="NHWC"?zd(e,e.inputs,t):Pa(e,e.inputs,t)}}),Nd,jd,Ca,Op=g(()=>{Lt(),Ot(),Jt(),Nd=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},jd=(e,t,r)=>{let n=t.simplified,i=e[0].dims,a=e[1],o=!n&&e[2],u=i,m=ze.normalizeAxis(t.axis,i.length),_=ze.sizeToDimension(i,m),S=ze.sizeFromDimension(i,m),k=ze.size(a.dims),d=o?ze.size(o.dims):0;if(k!==S||o&&d!==S)throw new Error(`Size of X.shape()[axis:] == ${S}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${k} and bias size of ${d}`);let N=[];for(let Me=0;Me<i.length;++Me)Me<m?N.push(i[Me]):N.push(1);let j=Xt(S),W=["type","type"],Z=[{type:12,data:_},{type:1,data:S},{type:12,data:Math.floor(S/j)},{type:1,data:t.epsilon}];o&&W.push("type");let ee=r>1,Y=r>2,_e=Me=>{let Ie=fs(e[0].dataType),Le=[Qe("x",e[0].dataType,e[0].dims,j),Qe("scale",a.dataType,a.dims,j)];o&&Le.push(Qe("bias",o.dataType,o.dims,j)),Le.push(At("output",e[0].dataType,u,j)),ee&&Le.push(At("mean_data_output",1,N)),Y&&Le.push(At("inv_std_output",1,N));let et=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${Me.registerUniforms(et).declareVariables(...Le)}
  ${Me.mainStart()}
    ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${zs("f32",j)};
    var mean_square_vector = ${zs("f32",j)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${As(Ie,j,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Gs("mean_vector",j)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Gs("mean_square_vector",j)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${As(Ie,j,"x[j + offset]")};
      let f32scale = ${As(Ie,j,"scale[j]")};
      output[j + offset] = ${Le[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${As(Ie,j,"bias[j]")}`:""}
      );
    }

    ${ee?"mean_data_output[global_idx] = mean":""};
    ${Y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},he=[{dims:u,dataType:e[0].dataType}];return ee&&he.push({dims:N,dataType:1}),Y&&he.push({dims:N,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${j};${r};${n}`,inputDependencies:W},getRunData:()=>({outputs:he,dispatchGroup:{x:Math.ceil(_/64)},programUniforms:Z}),getShaderSource:_e}},Ca=(e,t)=>{Nd(e.inputs),e.compute(jd(e.inputs,t,e.outputCount))}}),Ud,Vd,Fp=g(()=>{Ot(),yi(),Jo(),Ud=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Vd=e=>{Ud(e.inputs);let t=Ws.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],n=e.inputs[0].dims[e.inputs[0].dims.length-1];if(r<8&&n<8)e.compute(qo(e.inputs,{activation:""},t));else{let i=t[t.length-2],a=ze.size(e.inputs[0].dims.slice(0,-2)),o=ze.size(e.inputs[1].dims.slice(0,-2));if(a!==1&&i===1&&o===1){let u=e.inputs[0].reshape([1,a,n]),m=e.inputs[1].reshape([1,n,r]),_=[1,a,r],S=[u,m];e.compute(bi(S,{activation:""},t,_),{inputs:S})}else e.compute(bi(e.inputs,{activation:""},t))}}}),Wd,Gd,Kd,Hd,qd,Qd=g(()=>{Lt(),Ot(),rs(),Jt(),Wd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],n=r.dims.length;if(r.dims[n-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,o=e[1];if(!ze.areEqual(o.dims,[t.n,i,a]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=e[2].dims;if(ze.size(u)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let m=e[3].dims,_=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(ze.size(m)!==_)throw new Error("zeroPoints input size error.")}},Gd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],a=t.k,o=t.n,u=r.slice(0,n-2),m=ze.size(u),_=e[1].dims[2]/4,S=e[0].dataType,k=Xt(t.k),d=Xt(_),N=Xt(o),j=u.concat([i,o]),W=i>1&&o/N%2===0?2:1,Z=ze.size(j)/N/W,ee=64,Y=[],_e=[m,i,a/k],he=ze.convertShape(e[1].dims).slice();he.splice(-1,1,_/d),Y.push(...bt(_e)),Y.push(...bt(he)),Y.push(...bt(e[2].dims)),e.length===4&&Y.push(...bt(ze.convertShape(e[3].dims)));let Me=[m,i,o/N];Y.push(...bt(Me));let Ie=Le=>{let et=_e.length,dt=Qe("a",e[0].dataType,et,k),Et=Qe("b",12,he.length,d),qt=Qe("scales",e[2].dataType,e[2].dims.length),Bt=[dt,Et,qt],It=e.length===4?Qe("zero_points",12,e[3].dims.length):void 0;It&&Bt.push(It);let ts=Me.length,yt=At("output",e[0].dataType,ts,N),Ht=fs(e[0].dataType),ps=(()=>{switch(k){case 1:return`array<${Ht}, 8>`;case 2:return`mat4x2<${Ht}>`;case 4:return`mat2x4<${Ht}>`;default:throw new Error(`${k}-component is not supported.`)}})(),Ut=()=>{let ot=`
          // reuse a data
            var input_offset = ${dt.indicesToOffset(`${dt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${ps};
            for (var j: u32 = 0; j < ${8/k}; j++) {
              a_data[j] = ${dt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Pt=0;Pt<N*W;Pt++)ot+=`
            b_value = ${d===1?`b${Pt}_data`:`b${Pt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${ps}(${Array.from({length:4},(hs,Ns)=>`${Ht}(b_value_lower[${Ns}]), ${Ht}(b_value_upper[${Ns}])`).join(", ")});
            b_dequantized_values = ${k===1?`${ps}(${Array.from({length:8},(hs,Ns)=>`(b_quantized_values[${Ns}] - ${It?`zero_point${Pt}`:"zero_point"}) * scale${Pt}`).join(", ")});`:`(b_quantized_values - ${ps}(${Array(8).fill(`${It?`zero_point${Pt}`:"zero_point"}`).join(",")})) * scale${Pt};`};
            workgroup_shared[local_id.x * ${W} + ${Math.floor(Pt/N)}]${N>1?`[${Pt%N}]`:""} += ${Array.from({length:8/k},(hs,Ns)=>`${k===1?`a_data[${Ns}] * b_dequantized_values[${Ns}]`:`dot(a_data[${Ns}], b_dequantized_values[${Ns}])`}`).join(" + ")};
          `;return ot},Qt=()=>{let ot=`
            var col_index = col * ${N};
            ${It?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ht}(8);`}
            `;for(let Pt=0;Pt<N*W;Pt++)ot+=`
            let scale${Pt} = ${qt.getByOffset("col_index * nBlocksPerCol + block")};
            ${It?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${It.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Pt} = ${Ht}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return ot},gs=()=>{let ot=`col_index = col * ${N};`;for(let Pt=0;Pt<N*W;Pt++)ot+=`
            let b${Pt}_data = ${Et.getByIndices(`${Et.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return ot+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${ps};
            var b_dequantized_values: ${ps};`,ot};return`
        var<workgroup> workgroup_shared: array<${yt.type.value}, ${W*ee}>;
        ${Le.declareVariables(...Bt,yt)}
        ${Le.mainStart([ee,1,1])}
          let output_indices = ${yt.offsetToIndices(`(global_idx / ${ee}) * ${W}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${ee}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/k};
            ${Qt()}
            for (var word: u32 = 0; word < ${_}; word += ${d}) {
              ${gs()}
              for (var i: u32 = 0; i < ${d}; i++) {
                ${Ut()}
                word_offset += ${8/k};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${W}) {
            var output_value: ${yt.type.value} = ${yt.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${ee}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${W};
            }
            ${yt.setByIndices(`${yt.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${k};${d};${N};${W};${ee}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:j,dataType:S}],dispatchGroup:{x:Z},programUniforms:Y}),getShaderSource:Ie}},Kd=(e,t)=>{let r=e[0].dims,n=r.length,i=r[n-2],a=t.k,o=t.n,u=r.slice(0,n-2),m=ze.size(u),_=e[1].dims[2]/4,S=e[0].dataType,k=Xt(t.k),d=Xt(_),N=u.concat([i,o]),j=128,W=o%8===0?8:o%4===0?4:1,Z=j/W,ee=Z*d*8,Y=ee/k,_e=ee/t.blockSize,he=ze.size(N)/W,Me=[],Ie=[m,i,a/k],Le=ze.convertShape(e[1].dims).slice();Le.splice(-1,1,_/d),Me.push(...bt(Ie)),Me.push(...bt(Le)),Me.push(...bt(e[2].dims)),e.length===4&&Me.push(...bt(ze.convertShape(e[3].dims)));let et=[m,i,o];Me.push(...bt(et));let dt=Et=>{let qt=Ie.length,Bt=Qe("a",e[0].dataType,qt,k),It=Qe("b",12,Le.length,d),ts=Qe("scales",e[2].dataType,e[2].dims.length),yt=[Bt,It,ts],Ht=e.length===4?Qe("zero_points",12,e[3].dims.length):void 0;Ht&&yt.push(Ht);let ps=et.length,Ut=At("output",e[0].dataType,ps),Qt=fs(e[0].dataType),gs=()=>{switch(k){case 1:return`
          let a_data0 = vec4<${Qt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Qt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Qt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Qt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${k}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Bt.type.value}, ${Y}>;
        var<workgroup> inter_results: array<array<${Ut.type.value}, ${Z}>, ${W}>;
        ${Et.declareVariables(...yt,Ut)}
        ${Et.mainStart([Z,W,1])}
          let output_indices = ${Ut.offsetToIndices(`workgroup_index * ${W}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${_e} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Y}; a_offset += ${j})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Bt.getByIndices(`${Bt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Bt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${_e} + local_id.x;
            ${Ht?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ht.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Qt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Qt}(8);`}
            let scale = ${ts.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${It.getByIndices(`${It.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/k};
            for (var i: u32 = 0; i < ${d}; i++) {
              ${gs()}
              let b_value = ${d===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Qt}>(${Array.from({length:4},(ot,Pt)=>`${Qt}(b_value_lower[${Pt}]), ${Qt}(b_value_upper[${Pt}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Qt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(ot,Pt)=>`${`dot(a_data${Pt}, b_dequantized_values[${Pt}])`}`).join(" + ")};
              word_offset += ${8/k};
            }
            workgroupBarrier();
          }

          if (local_idx < ${W}) {
            var output_value: ${Ut.type.value} = ${Ut.type.value}(0);
            for (var b = 0u; b < ${Z}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Ut.setByIndices(`${Ut.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${k};${d};${Z};${W}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:N,dataType:S}],dispatchGroup:{x:he},programUniforms:Me}),getShaderSource:dt}},Hd=(e,t)=>{Wd(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Kd(e.inputs,t)):e.compute(Gd(e.inputs,t))},qd=e=>zt(e)}),Xd,Yd,$a,Jd,Zd,ys,Dp,Lp,zp,ec=g(()=>{Lt(),Ot(),Jt(),Xd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Yd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
            k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${St("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${St("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},$a=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${St("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${St("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${St("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Jd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${St("uniforms.x_shape",i,t)})) {
                  k = i32(${St("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${St("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Zd=(e,t,r)=>{let n="";for(let i=t-1;i>=0;--i)n+=`
                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${St("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${St("uniforms.x_shape",i,t)})) {
                  k -= i32(${St("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${St("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},ys=(e,t,r)=>{switch(r.mode){case 0:return Yd(e,t,r.pads.length);case 1:return $a(e,t,r.pads.length);case 2:return Jd(e,t,r.pads.length);case 3:return Zd(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Dp=(e,t)=>{let r=ze.padShape(e[0].dims.slice(),t.pads),n=e[0].dims,i=ze.size(r),a=[{type:12,data:i},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;t.mode===0&&a.push({type:o?e[2].dataType:1,data:t.value}),a.push(...bt(e[0].dims,r));let u=["rank"],m=_=>{let S=At("output",e[0].dataType,r.length),k=Qe("x",e[0].dataType,n.length),d=k.type.value,N=ys(S,n.length,t),j=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&j.push({name:"constant_value",type:o?d:"f32"}),`
            ${_.registerUniforms(j).declareVariables(k,S)}
            ${_.mainStart()}
            ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${S.offsetToIndices("global_idx")};

            var value = ${d}(0);
            ${N}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ze.size(r)/64)},programUniforms:a}),getShaderSource:m}},Lp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),n=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,a=new Int32Array(2*i).fill(0);if(e.length>=4){let u=e[3].getBigInt64Array();for(let m=0;m<u.length;m++)a[Number(u[m])]=Number(r[m]),a[Number(u[m])+i]=Number(r[m+u.length])}else r.forEach((u,m)=>a[Number(m)]=Number(u));let o=[];return a.forEach(u=>o.push(u)),{mode:t.mode,value:n,pads:o}}else return t},zp=(e,t)=>{Xd(e.inputs);let r=Lp(e.inputs,t);e.compute(Dp(e.inputs,r),{inputs:[0]})}}),qn,Sa,ka,Aa,Oi,Ia,Bp,Oa,Fa,Da,Rp,tc,sc,rc,La,nc,ic,oc,ac,Np=g(()=>{Re(),Lt(),Ot(),Jt(),qn=e=>{if(L.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Sa=(e,t,r)=>{let n=t.format==="NHWC",i=e.dims.slice();n&&i.splice(1,0,i.pop());let a=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),u=t.strides.slice(),m=a?t.dilations.slice():[],_=t.pads.slice();Zs.adjustPoolAttributes(r,i,o,u,m,_);let S=Zs.computePoolOutputShape(r,i,u,m,o,_,t.autoPad),k=Object.assign({},t);a?Object.assign(k,{kernelShape:o,strides:u,pads:_,dilations:m,cacheKey:t.cacheKey}):Object.assign(k,{kernelShape:o,strides:u,pads:_,cacheKey:t.cacheKey});let d=S.slice();return d.push(d.splice(1,1)[0]),[k,n?d:S]},ka=(e,t)=>{let r=t.format==="NHWC",n=ze.size(e),i=ze.size(t.kernelShape),a=[{type:12,data:n},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let u=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],_=t.pads[t.pads.length/2-1],S=t.pads[t.pads.length-1],k=!!(_+S);a.push({type:12,data:u},{type:12,data:m},{type:12,data:_},{type:12,data:S}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let d=!1;if(t.kernelShape.length===2){let N=t.kernelShape[t.kernelShape.length-2],j=t.strides[t.strides.length-2],W=t.pads[t.pads.length/2-2],Z=t.pads[t.pads.length-2];d=!!(W+Z),a.push({type:12,data:N},{type:12,data:j},{type:12,data:W},{type:12,data:Z}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[a,o,!0,k,d]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let u=ze.computeStrides(t.kernelShape);a.push({type:12,data:u},{type:12,data:t.pads},{type:12,data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:u.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((_,S)=>_+S);return[a,o,!!m,!1,!1]}},Aa=(e,t,r,n,i,a,o,u,m,_,S,k)=>{let d=i.format==="NHWC",N=t.type.value,j=At("output",t.type.tensor,n);if(i.kernelShape.length<=2){let W="",Z="",ee="",Y=r-(d?2:1);if(S?W=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Y}] = indices[${Y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Y}] < 0 || xIndices[${Y}]
                      >= uniforms.x_shape[${Y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`:W=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Y}] = indices[${Y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${a}
                }`,i.kernelShape.length===2){let _e=r-(d?3:2);k?Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${_e}] = indices[${_e}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${_e}] < 0 || xIndices[${_e}] >= uniforms.x_shape[${_e}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${_e}] = indices[${_e}] * uniforms.sh - uniforms.phStart + j;
                `,ee=`
              }
            `}return`
            ${e.registerUniforms(m).declareVariables(t,j)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${j.offsetToIndices("global_idx")};
              var xIndices = ${j.offsetToIndices("global_idx")};

              var value = ${N}(${u});
              var pad = 0;
              ${Z}
              ${W}
              ${ee}
              ${o}

              output[global_idx] = value;
            }`}else{if(d)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let W=i.kernelShape.length,Z=i.pads.length,ee="";return _?ee=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${a}
              }`:ee=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${a}
            `,`
            ${e.registerUniforms(m).declareVariables(t,j)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${j.offsetToIndices("global_idx")};
              var xIndices = ${j.offsetToIndices("global_idx")};

              var offsets: array<u32, ${W}>;

              var value = ${N}(${u});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${W-1}u; j++) {
                  offsets[j] = offset / ${St("uniforms.kernelStrides","j",W)};
                  offset -= offsets[j] * ${St("uniforms.kernelStrides","j",W)};
                }
                offsets[${W-1}] = offset;

                isPad = false;
                for (var j = ${r-W}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${St("uniforms.strides",`j - ${r-W}u`,W)}
                    + offsets[j - ${r-W}u] - ${St("uniforms.pads","j - 2u",Z)};
                  ${ee}
              }
              ${o}

              output[global_idx] = value;
            }`}},Oi=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ia=e=>`${Oi(e)};${e.countIncludePad}`,Bp=e=>`${Oi(e)};${e.storageOrder};${e.dilations}`,Oa=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Fa=(e,t,r,n)=>{let[i,a]=Sa(t,n,r),o=Qe("x",t.dataType,t.dims.length),u=o.type.value,m="value += x_val;",_="";i.countIncludePad?_+=`value /= ${u}(uniforms.kernelSize);`:_+=`value /= ${u}(i32(uniforms.kernelSize) - pad);`;let[S,k,d,N,j]=ka(a,i);S.push(...bt(t.dims,a));let W=["rank"];return{name:e,shaderCache:{hint:`${n.cacheKey};${d};${N};${j}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ze.size(a)/64)},programUniforms:S}),getShaderSource:Z=>Aa(Z,o,t.dims.length,a.length,i,m,_,0,k,d,N,j)}},Da=e=>{let t=e.count_include_pad!==0,r=Oa(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:t,...r,cacheKey:""};return{...n,cacheKey:Ia(n)}},Rp=(e,t)=>{qn(e.inputs),e.compute(Fa("AveragePool",e.inputs[0],!1,t))},tc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},sc=e=>{let t=e.format;return{format:t,...tc,cacheKey:t}},rc=(e,t)=>{qn(e.inputs),e.compute(Fa("GlobalAveragePool",e.inputs[0],!0,t))},La=(e,t,r,n)=>{let[i,a]=Sa(t,n,r),o=`
      value = max(x_val, value);
    `,u="",m=Qe("x",t.dataType,t.dims.length),_=["rank"],[S,k,d,N,j]=ka(a,i);return S.push(...bt(t.dims,a)),{name:e,shaderCache:{hint:`${n.cacheKey};${d};${N};${j}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ze.size(a)/64)},programUniforms:S}),getShaderSource:W=>Aa(W,m,t.dims.length,a.length,i,o,u,t.dataType===10?-65504:-1e5,k,d,N,j)}},nc=(e,t)=>{qn(e.inputs),e.compute(La("MaxPool",e.inputs[0],!1,t))},ic=e=>{let t=e.storage_order,r=e.dilations,n=Oa(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...n,cacheKey:""};return{...i,cacheKey:Bp(i)}},oc=e=>{let t=e.format;return{format:t,...tc,cacheKey:t}},ac=(e,t)=>{qn(e.inputs),e.compute(La("GlobalMaxPool",e.inputs[0],!0,t))}}),lc,uc,dc,cc,gh=g(()=>{Lt(),Ot(),rs(),Jt(),lc=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,n)=>r===e[2].dims[n]).reduce((r,n)=>r&&n,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,a)=>a===t.axis||i===e[0].dims[a]).reduce((i,a)=>i&&a,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],n=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/n)||t.blockSize>Math.ceil(r/(n-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},uc=(e,t)=>{let r=ze.normalizeAxis(t.axis,e[0].dims.length),n=e[0].dataType,i=n===3,a=e[0].dims,o=e[1].dataType,u=ze.size(a),m=n===3||n===2,_=m?[Math.ceil(ze.size(e[0].dims)/4)]:e[0].dims,S=e[1].dims,k=e.length>2?e[2]:void 0,d=k?m?[Math.ceil(ze.size(k.dims)/4)]:k.dims:void 0,N=S.length===0||S.length===1&&S[0]===1,j=N===!1&&S.length===1,W=Xt(u),Z=N&&(!m||W===4),ee=Z?W:1,Y=Z&&!m?W:1,_e=Qe("input",m?12:n,_.length,Y),he=Qe("scale",o,S.length),Me=k?Qe("zero_point",m?12:n,d.length):void 0,Ie=At("output",o,a.length,ee),Le=[_e,he];Me&&Le.push(Me);let et=[_,S];k&&et.push(d);let dt=[{type:12,data:u/ee},{type:12,data:r},{type:12,data:t.blockSize},...bt(...et,a)],Et=qt=>{let Bt=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${qt.registerUniforms(Bt).declareVariables(...Le,Ie)}
      ${qt.mainStart()}
          ${qt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Ie.offsetToIndices("global_idx")};

          // Set input x
          ${m?`
            let input = ${_e.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${ee===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${_e.getByOffset("global_idx")};`};

          // Set scale input
          ${N?`let scale_value= ${he.getByOffset("0")}`:j?`
            let scale_index = ${Ie.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${he.getByOffset("scale_index")};`:`
            var scale_indices: ${he.type.indices} = output_indices;
            let index = ${he.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${he.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${he.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${Me?N?m?`
                let zero_point_input = ${Me.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${Me.getByOffset("0")}`:j?m?`
                let zero_point_index = ${Ie.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${Me.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Ie.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${Me.getByOffset("zero_point_index")};`:m?`
                let zero_point_offset = ${he.indicesToOffset("scale_indices")};
                let zero_point_input = ${Me.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${Me.getByIndices("scale_indices")};`:`let zero_point_value = ${m?i?"i32":"u32":_e.type.value}(0);`};
      // Compute and write output
      ${Ie.setByOffset("global_idx",`${Ie.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:Me?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Et,getRunData:()=>({outputs:[{dims:a,dataType:o}],dispatchGroup:{x:Math.ceil(u/ee/64),y:1,z:1},programUniforms:dt})}},dc=(e,t)=>{lc(e.inputs,t),e.compute(uc(e.inputs,t))},cc=e=>zt({axis:e.axis,blockSize:e.blockSize})}),pc,hc,mc,jp=g(()=>{Re(),Lt(),Jt(),pc=(e,t,r)=>{let n=e===t,i=e<t&&r<0,a=e>t&&r>0;if(n||i||a)throw new Error("Range these inputs' contents are invalid.")},hc=(e,t,r,n)=>{let i=Math.abs(Math.ceil((t-e)/r)),a=[i],o=i,u=[{type:12,data:o},{type:n,data:e},{type:n,data:r},...bt(a)],m=_=>{let S=At("output",n,a.length),k=S.type.value,d=[{name:"outputSize",type:"u32"},{name:"start",type:k},{name:"delta",type:k}];return`
        ${_.registerUniforms(d).declareVariables(S)}
        ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${k}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:m,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u})}},mc=e=>{let t=0,r=0,n=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],n=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],n=e.inputs[2].getFloat32Array()[0]),L.webgpu.validateInputContent&&pc(t,r,n),e.compute(hc(t,r,n,e.inputs[0].dataType),{inputs:[]})}}),_c,fc,Up,za,Vp=g(()=>{Lt(),Ot(),rs(),Jt(),_c=(e,t,r,n)=>{if(e!=="none"&&n!=="i32"&&n!=="u32"&&n!=="f32")throw new Error(`Input ${n} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,a=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${t}=${r};`;case"add":return n==="i32"||n==="u32"?`atomicAdd(&${t}, bitcast<${n}>(${r}));`:`
              ${i}bitcast<${n}>(oldValue) + (${r})${a}`;case"max":return n==="i32"||n==="u32"?`atomicMax(&${t}, bitcast<${n}>(${r}));`:`
                ${i}max(bitcast<f32>(oldValue), (${r}))${a}`;case"min":return n==="i32"||n==="u32"?`atomicMin(&${t}, bitcast<${n}>(${r}));`:`${i}min(bitcast<${n}>(oldValue), (${r}))${a}`;case"mul":return`${i}(bitcast<${n}>(oldValue) * (${r}))${a}`;default:throw new Error(`Reduction ${e} is not supported.`)}},fc=(e,t)=>{let r=e[0].dims,n=e[1].dims,i=r,a=1,o=Math.ceil(ze.size(n)/a),u=n[n.length-1],m=ze.sizeFromDimension(r,u),_=[{type:12,data:o},{type:12,data:u},{type:12,data:m},...bt(e[1].dims,e[2].dims,i)],S=k=>{let d=Qe("indices",e[1].dataType,e[1].dims.length),N=Qe("updates",e[2].dataType,e[2].dims.length,a),j=t.reduction!=="none"&&t.reduction!==""?Ja("output",e[0].dataType,i.length):At("output",e[0].dataType,i.length,a);return`
      ${k.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(d,N,j)}
      ${k.mainStart()}
        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${_c(t.reduction,"output[data_offset + i]","value",j.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:_}),getShaderSource:S}},Up=e=>zt({reduction:e.reduction}),za=(e,t)=>{e.compute(fc(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),gc,yc,wc,Ba,bc,Mc,vc,xc,Tc,Ec,Pc,Cc,Ra,$c,Sc,kc,Ac,Ic,Oc,Fc,Wp=g(()=>{Lt(),Ot(),rs(),Jt(),gc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},yc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return t.forEach((i,a)=>n[i]=e[a]),n},wc=(e,t,r,n,i,a)=>{let[o,u,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],_=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(S=>a.push(S));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(u>0&&e.length>u&&e[u].dims.length===1&&e[u].dims[0]>0){if(e[u].getFloat32Array().forEach(S=>n.push(S)),n.length!==0&&n.length!==_&&r>=18&&n.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");gc(n,t),t.axes.length>0&&yc(n,t.axes,_).forEach((S,k)=>n[k]=S)}if(m>0&&e.length>m&&e[m].dims.length===1&&e[m].dims[0]>0&&(e[m].getBigInt64Array().forEach(S=>i.push(Number(S))),i.length!==0&&i.length!==_&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(n.length!==0&&n.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof i<"u"&&n.length>0&&i.length>_)throw new Error("Resize requires only of scales or sizes to be specified")},Ba=(e,t,r,n)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${t});
  let whole = ${n}(big / (${r}));
  let fract = ${n}(big % (${r})) / ${n}(${r});
  return whole + fract;
`,bc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${t}(xResized) / ${t}(xScale);
          } else {
            ${Ba("xResized","lengthOriginal","lengthResized",t)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ba("xResized","lengthOriginal - 1","lengthResized - 1",t)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Mc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",vc=(e,t,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?n:e.slice();return t.length>0?(t.forEach((a,o)=>{n[a]=i[o],n[o+r]=i[t.length+o]}),n):i},xc=(e,t,r,n)=>{let i=[];if(r.length>0)if(n.length>0){if(e.forEach(a=>i.push(a)),Math.max(...n)>e.length)throw new Error("axes is out of bound");n.forEach((a,o)=>i[a]=r[o])}else r.forEach(a=>i.push(a));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((a,o)=>Math.round(a*t[o]))}return i},Tc=(e,t,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(a=>t[a]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(a=>t[a]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(a=>t[a]=n),r.axes.forEach(a=>i[a]=Math.round(e[a]*t[a]))):(t.fill(n,0,t.length),i.forEach((a,o)=>i[o]=Math.round(a*t[o]))),i},Ec=(e,t,r,n,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${St("uniforms.scales","i",n)};
        var roi_low = ${St("uniforms.roi","i",i)};
        var roi_hi = ${St("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${St("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${St("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Pc=(e,t,r,n,i,a,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${St("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${St("uniforms.roi","i",a)};
          var roi_hi = ${St("uniforms.roi",`i + ${r.length}`,a)};
          var input_shape_i = ${St("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${St("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Cc=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${St("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Ra=(e,t,r,n)=>e.rank>n?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",$c=(e,t,r,n,i)=>{let[a,o,u,m]=r.length===2?[-1,0,1,-1]:[0,2,3,1],_=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${_} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(col, ${r[u]} - 1))`)};
      ${Ra(e,m,a,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${_} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${_} = originalIndices[${o}];
      var col:${_} = originalIndices[${u}];
      ${n?`if (row < 0 || row > (${r[o]} - 1) || col < 0 || col > (${r[u]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${m}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};
      var x11: ${_} = getInputValue(batch, channel, row1, col1);
      var x12: ${_} = getInputValue(batch, channel, row1, col2);
      var x21: ${_} = getInputValue(batch, channel, row2, col1);
      var x22: ${_} = getInputValue(batch, channel, row2, col2);
      var dx1: ${_} = abs(row - ${_}(row1));
      var dx2: ${_} = abs(${_}(row2) - row);
      var dy1: ${_} = abs(col - ${_}(col1));
      var dy2: ${_} = abs(${_}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Sc=(e,t,r,n,i,a,o,u,m,_)=>{let S=r.length===2,[k,d]=S?[0,1]:[2,3],N=e.type.value,j=W=>{let Z=W===k?"row":"col";return`
      fn ${Z}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${N} {
        var output_index = ${t.indicesGet("output_indices",W)};
        var originalIdx: ${N} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[W]},
        ${n[W]}, ${r[W]}, ${a[W]}, ${a[W]} + ${r.length});
        var fractOriginalIdx: ${N} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${u} && (originalIdx < 0 || originalIdx > (${r[W]} - 1))) {
          return ${m};
        }
        var data: array<${N}, 4> = array<${N}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Z}: ${N} = originalIdx + ${N}(i);
          if (${Z} < 0 || ${Z} >= ${r[W]}) {
            ${_?`coefs[i + 1] = 0.0;
                        continue;`:u?`return ${m};`:`${Z} = max(0, min(${Z}, ${r[W]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",W,`u32(${Z})`)};
          data[i + 1] = ${W===k?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${j(k)};
    ${j(d)};
  fn getCubicInterpolationCoefs(s: ${N}) -> array<${N}, 4> {
    var absS = abs(s);
    var coeffs: array<${N}, 4> = array<${N}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${N} = 1.0 - absS;
    var twoMinusAbsS: ${N} = 2.0 - absS;
    var onePlusAbsS: ${N} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${N}, 4>, coefs: array<${N}, 4>) -> ${N} {
    var coefsSum: ${N} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${N} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},kc=(e,t,r,n,i)=>{let[a,o,u,m,_]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],S=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${S} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${r[o]} - 1))`)};
      ${e.indicesSet("input_indices",u,`max(0, min(height, ${r[u]} - 1))`)};
      ${e.indicesSet("input_indices",m,`max(0, min(width, ${r[m]} - 1))`)};
      ${Ra(e,_,a,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${S} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${S} = originalIndices[${o}];
      var height:${S} = originalIndices[${u}];
      var width:${S} = originalIndices[${m}];
      ${n?`if (depth < 0 || depth > (${r[o]} - 1) || height < 0 || height > (${r[u]} - 1) || width < 0 || (width > ${r[m]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[o]} - 1));
      height = max(0, min(height, ${r[u]} - 1));
      width = max(0, min(width, ${r[m]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${_}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};

      var x111: ${S} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${S} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${S} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${S} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${S} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${S} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${S} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${S} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${S} = abs(depth - ${S}(depth1));
      var dx2: ${S} = abs(${S}(depth2) - depth);
      var dy1: ${S} = abs(height - ${S}(height1));
      var dy2: ${S} = abs(${S}(height2) - height);
      var dz1: ${S} = abs(width - ${S}(width1));
      var dz2: ${S} = abs(${S}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Ac=(e,t,r,n,i,a)=>{let o=e.dims,u=vc(a,t.axes,o.length),m=xc(o,n,i,t.axes),_=n.slice();n.length===0&&(_=o.map((Y,_e)=>Y===0?1:m[_e]/Y),t.keepAspectRatioPolicy!=="stretch"&&(m=Tc(o,_,t)));let S=At("output",e.dataType,m.length),k=Qe("input",e.dataType,o.length),d=ze.size(m),N=o.length===m.length&&o.every((Y,_e)=>Y===m[_e]),j=t.coordinateTransformMode==="tf_crop_and_resize",W=t.extrapolationValue,Z=k.type.value,ee=Y=>`
      ${N?"":`
      ${bc(t.coordinateTransformMode,Z)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Cc(k,o)};
              ${Mc(t.nearestMode,r,Z)};
              ${Pc(k,S,o,m,_.length,u.length,j)};
              `;case"linear":return`
              ${Ec(S,o,m,_.length,u.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${$c(k,S,o,j,W)}`;if(o.length===3||o.length===5)return`${kc(k,S,o,j,W)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${Sc(k,S,o,m,_,u,t.cubicCoeffA,j,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Y.registerUniform("output_size","u32").registerUniform("scales","f32",_.length).registerUniform("roi","f32",u.length).declareVariables(k,S)}
      ${Y.mainStart()}
        ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${N?"output[global_idx] = input[global_idx];":`
        let output_indices = ${S.offsetToIndices("global_idx")};
        var input_indices: ${k.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${k.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${_.length>0?t.mode==="cubic"?_:_.length:""}|${i.length>0?i:""}|${u.length>0?u:""}|${N}|${t.mode==="nearest"?o.length:o}`,inputDependencies:["rank"]},getShaderSource:ee,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},{type:1,data:_},{type:1,data:u},...bt(o,m)]})}},Ic=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Oc=(e,t)=>{let r=[],n=[],i=[],a=Ic(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");wc(e.inputs,t,a,r,n,i),e.compute(Ac(e.inputs[0],t,a,r,n,i),{inputs:[0]})},Fc=e=>{let t=e.antialias,r=e.axes,n=e.coordinateTransformMode,i=e.cubicCoeffA,a=e.excludeOutside!==0,o=e.extrapolationValue,u=e.keepAspectRatioPolicy,m=e.mode,_=e.nearestMode===""?"simple":e.nearestMode;return zt({antialias:t,axes:r,coordinateTransformMode:n,cubicCoeffA:i,excludeOutside:a,extrapolationValue:o,keepAspectRatioPolicy:u,mode:m,nearestMode:_})}}),Dc,Lc,zc,Gp=g(()=>{Lt(),Ot(),rs(),Jt(),Dc=(e,t)=>{let[r,n,i,a]=e,{numHeads:o,rotaryEmbeddingDim:u}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!ze.areEqual(n.dims,[])&&!ze.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!ze.areEqual(i.dims,a.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(u>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let m=r.dims[0],_=r.dims[r.dims.length-2],S=i.dims[0],k=ze.sizeFromDimension(r.dims,1)/_,d=u===0?i.dims[1]*2:k/o;if(u>d)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(m!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(_!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(d/2!==i.dims[1]&&u/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(_>S)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Lc=(e,t)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:i,scale:a}=t,o=e[0].dims[0],u=ze.sizeFromDimension(e[0].dims,1),m=e[0].dims[e[0].dims.length-2],_=u/m,S=e[2].dims[1],k=i===0?S*2:_/n,d=new Array(o,m,_/k,k-S),N=ze.computeStrides(d),j=[{type:1,data:a},{type:12,data:d},{type:12,data:N},...e[0].dims.length===3?new Array({type:12,data:[u,_,k,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[u,k,m*k,1]}):[],...bt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],W=Z=>{let ee=Qe("input",e[0].dataType,e[0].dims.length),Y=Qe("position_ids",e[1].dataType,e[1].dims.length),_e=Qe("cos_cache",e[2].dataType,e[2].dims.length),he=Qe("sin_cache",e[3].dataType,e[3].dims.length),Me=At("output",e[0].dataType,e[0].dims.length);return Z.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:d.length},{name:"global_strides",type:"u32",length:N.length},{name:"input_output_strides",type:"u32",length:N.length}]),`
        ${Z.declareVariables(ee,Y,_e,he,Me)}

        ${Z.mainStart(or)}
          let half_rotary_emb_dim = uniforms.${_e.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Y.broadcastedIndicesToOffset("bsnh.xy",At("",Y.type.tensor,2))};
            let position_id =
                u32(${Y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${ee.getByOffset("i")} * ${_e.get("position_id","bsnh[3]")} -
                ${ee.getByOffset("j")} * ${he.get("position_id","bsnh[3]")};
            ${Me.setByOffset("i","re")}
            let im = ${ee.getByOffset("i")} * ${he.get("position_id","bsnh[3]")} +
                ${ee.getByOffset("j")} * ${_e.get("position_id","bsnh[3]")};
            ${Me.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${Me.setByOffset("k",ee.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:zt({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:W,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ze.size(d)/or)},programUniforms:j})}},zc=(e,t)=>{Dc(e.inputs,t),e.compute(Lc(e.inputs,t))}}),Bc,Rc,Kp,Zt=g(()=>{Lt(),Ot(),Jt(),Bc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],n=e[2];if(t.dataType!==r.dataType||t.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Rc=(e,t,r,n)=>{let i=t.simplified,a=e[0].dims,o=ze.size(a),u=a,m=o,_=a.slice(-1)[0],S=n?a.slice(0,-1).concat(1):[],k=!i&&e.length>3,d=e.length>4,N=n&&r>1,j=n&&r>2,W=r>3,Z=64,ee=Xt(_),Y=[{type:12,data:m},{type:12,data:ee},{type:12,data:_},{type:1,data:t.epsilon}],_e=Me=>{let Ie=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Le=[Qe("x",e[0].dataType,e[0].dims,ee),Qe("skip",e[1].dataType,e[1].dims,ee),Qe("gamma",e[2].dataType,e[2].dims,ee)];k&&Le.push(Qe("beta",e[3].dataType,e[3].dims,ee)),d&&Le.push(Qe("bias",e[4].dataType,e[4].dims,ee)),Le.push(At("output",e[0].dataType,u,ee)),N&&Le.push(At("mean_output",1,S)),j&&Le.push(At("inv_std_output",1,S)),W&&Le.push(At("input_skip_bias_sum",e[0].dataType,u,ee));let et=fs(e[0].dataType),dt=fs(1,ee);return`

      ${Me.registerUniforms(Ie).declareVariables(...Le)}
      var<workgroup> sum_shared : array<${dt}, ${Z}>;
      var<workgroup> sum_squared_shared : array<${dt}, ${Z}>;

      ${Me.mainStart([Z,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Z};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Z};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Z-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${d?"bias[offset1d + i]":et+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${W?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${As(et,ee,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Z};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Gs("sum",ee)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Gs("square_sum",ee)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${N?"mean_output[global_idx] = mean;":""}
        ${j?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${et}(mean)`}) *
            ${et}(inv_std_dev) * gamma[offset1d + i]
            ${k?"+ beta[offset1d + i]":""};
        }
      }`},he=[{dims:u,dataType:e[0].dataType}];return r>1&&he.push({dims:S,dataType:1}),r>2&&he.push({dims:S,dataType:1}),r>3&&he.push({dims:a,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${ee};${N};${j};${W}`,inputDependencies:e.map((Me,Ie)=>"type")},getShaderSource:_e,getRunData:()=>({outputs:he,dispatchGroup:{x:Math.ceil(m/_)},programUniforms:Y})}},Kp=(e,t)=>{Bc(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(Rc(e.inputs,t,e.outputCount,!1),{outputs:r})}}),Nc,Ds,Ys,er,cn,Hp,jc,Uc,y=g(()=>{Lt(),Ot(),rs(),Jt(),Nc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,n)=>{if(e[n+1].dataType!==6&&e[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Ds=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Ys=(e,t)=>{if(e.length>1){let r=Ds(e,1),n=Ds(e,2),i=Ds(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),zt({starts:r,ends:n,axes:i})}else return t},er=(e,t,r,n,i)=>{let a=e;return e<0&&(a+=r[n[t]]),i[t]<0?Math.max(0,Math.min(a,r[n[t]]-1)):Math.max(0,Math.min(a,r[n[t]]))},cn=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${St("uniforms.input_shape","i",r.length)};
            let steps_i = ${St("uniforms.steps","i",r.length)};
            let signs_i = ${St("uniforms.signs","i",r.length)};
            let starts_i = ${St("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Hp=(e,t)=>{let r=e[0].dims,n=ze.size(r),i=t.axes.length>0?ze.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],a=Ds(e,4);a.forEach(ee=>ee!==0||(()=>{throw new Error("step cannot be 0")})),a.length===0&&(a=Array(i.length).fill(1));let o=t.starts.map((ee,Y)=>er(ee,Y,r,i,a)),u=t.ends.map((ee,Y)=>er(ee,Y,r,i,a));if(i.length!==o.length||i.length!==u.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let ee=0;ee<r.length;++ee)i.includes(ee)||(o.splice(ee,0,0),u.splice(ee,0,r[ee]),a.splice(ee,0,1));let m=a.map(ee=>Math.sign(ee));a.forEach((ee,Y,_e)=>{if(ee<0){let he=(u[Y]-o[Y])/ee,Me=o[Y],Ie=Me+he*a[Y];o[Y]=Ie,u[Y]=Me,_e[Y]=-ee}});let _=r.slice(0);i.forEach((ee,Y)=>{_[ee]=Math.ceil((u[ee]-o[ee])/a[ee])});let S={dims:_,dataType:e[0].dataType},k=At("output",e[0].dataType,_.length),d=Qe("input",e[0].dataType,e[0].dims.length),N=ze.size(_),j=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:a.length}],W=[{type:12,data:N},{type:12,data:o},{type:6,data:m},{type:12,data:a},...bt(e[0].dims,_)],Z=ee=>`
      ${ee.registerUniforms(j).declareVariables(d,k)}
        ${cn(d,k,r)}
        ${ee.mainStart()}
          ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${k.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${k.setByOffset("global_idx",d.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${o.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:Z,getRunData:()=>({outputs:[S],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:W})}},jc=(e,t)=>{Nc(e.inputs,t);let r=Ys(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},Uc=e=>{let t=e.starts,r=e.ends,n=e.axes;return zt({starts:t,ends:r,axes:n})}}),P,U,ge,Fe,De=g(()=>{Lt(),Ot(),rs(),Hr(),Jt(),P=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},U=(e,t)=>{let r=e.inputs[0],n=r.dims,i=ze.size(n),a=n.length,o=ze.normalizeAxis(t.axis,a),u=o<n.length-1,m,_=[];u?(_=Array.from({length:a},(Le,et)=>et),_[o]=a-1,_[a-1]=o,m=e.compute(pr(r,_),{inputs:[r],outputs:[-1]})[0]):m=r;let S=m.dims,k=S[a-1],d=i/k,N=Xt(k),j=k/N,W=64;d===1&&(W=256);let Z=(Le,et)=>et===4?`max(max(${Le}.x, ${Le}.y), max(${Le}.z, ${Le}.w))`:et===2?`max(${Le}.x, ${Le}.y)`:et===3?`max(max(${Le}.x, ${Le}.y), ${Le}.z)`:Le,ee=Qe("x",m.dataType,m.dims,N),Y=At("result",m.dataType,m.dims,N),_e=ee.type.value,he=fs(m.dataType)==="f32"?`var threadMax = ${_e}(-3.402823e+38f);`:`var threadMax = ${_e}(-65504.0h);`,Me=Le=>`
      var<workgroup> rowMaxShared : ${_e};
      var<workgroup> rowSumShared : ${_e};
      var<workgroup> threadShared : array<${_e}, ${W}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_e} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_e}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Le.registerUniform("packedCols","i32").declareVariables(ee,Y)}
      ${Le.mainStart(W)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${W};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${he}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${_e}(${Z("threadShared[0]",N)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${_e}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${_e}(${Gs("threadShared[0]",N)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Ie=e.compute({name:"Softmax",shaderCache:{hint:`${N};${W}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:S,dataType:m.dataType}],dispatchGroup:{x:d},programUniforms:[{type:6,data:j}]}),getShaderSource:Me},{inputs:[m],outputs:[u?-1:0]})[0];u&&e.compute(pr(Ie,_),{inputs:[Ie]})},ge=(e,t)=>{P(e.inputs),U(e,t)},Fe=e=>zt({axis:e.axis})}),Ze,rt,ft,Mt,Rt,Wt=g(()=>{Lt(),Ot(),Jt(),Ze=e=>Array.from(e.getBigInt64Array(),Number),rt=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Ze(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ft=(e,t)=>{let r=[];for(let n=0;n<e.length;++n)r.push(e[n]*t[n]);return r},Mt=(e,t)=>{let r=e[0].dims,n=t??Ze(e[1]),i=ft(r,n),a=ze.size(i),o=e[0].dataType,u=Qe("input",o,r.length),m=At("output",o,i.length),_=S=>`
      const inputShape = ${u.indices(...r)};
      ${S.registerUniform("output_size","u32").declareVariables(u,m)}
      ${S.mainStart()}
      ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${m.offsetToIndices("global_idx")};
      var input_indices: ${u.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${m.indicesGet("output_indices","i")}  % input_dim_i;

        ${u.indicesSet("input_indices","i","input_dim_value")}
      }
      ${m.setByOffset("global_idx",u.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...bt(e[0].dims,i)]}),getShaderSource:_}},Rt=e=>{rt(e.inputs),e.compute(Mt(e.inputs),{inputs:[0]})}}),Dt,Gt,es,ns=g(()=>{Lt(),Ot(),Jt(),Dt=(e,t,r,n,i)=>{let a=At("output_data",i,r.length,4),o=Qe("a_data",t[1].dataType,t[1].dims.length,4),u=Qe("b_data",t[2].dataType,t[2].dims.length,4),m=Qe("c_data",t[0].dataType,t[0].dims.length,4),_,S=(k,d,N)=>`select(${d}, ${k}, ${N})`;if(!n)_=a.setByOffset("global_idx",S(o.getByOffset("global_idx"),u.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let k=(d,N,j="")=>{let W=`a_data[index_a${N}][component_a${N}]`,Z=`b_data[index_b${N}][component_b${N}]`,ee=`bool(c_data[index_c${N}] & (0xffu << (component_c${N} * 8)))`;return`
            let output_indices${N} = ${a.offsetToIndices(`global_idx * 4u + ${N}u`)};
            let offset_a${N} = ${o.broadcastedIndicesToOffset(`output_indices${N}`,a)};
            let offset_b${N} = ${u.broadcastedIndicesToOffset(`output_indices${N}`,a)};
            let offset_c${N} = ${m.broadcastedIndicesToOffset(`output_indices${N}`,a)};
            let index_a${N} = offset_a${N} / 4u;
            let index_b${N} = offset_b${N} / 4u;
            let index_c${N} = offset_c${N} / 4u;
            let component_a${N} = offset_a${N} % 4u;
            let component_b${N} = offset_b${N} % 4u;
            let component_c${N} = offset_c${N} % 4u;
            ${d}[${N}] = ${j}(${S(W,Z,ee)});
          `};i===9?_=`
            var data = vec4<u32>(0);
            ${k("data",0,"u32")}
            ${k("data",1,"u32")}
            ${k("data",2,"u32")}
            ${k("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:_=`
            ${k("output_data[global_idx]",0)}
            ${k("output_data[global_idx]",1)}
            ${k("output_data[global_idx]",2)}
            ${k("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(m,o,u,a)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${_}
      }`},Gt=e=>{let t=e[1].dims,r=e[2].dims,n=e[0].dims,i=e[1].dataType,a=!(ze.areEqual(t,r)&&ze.areEqual(r,n)),o=t,u=ze.size(t);if(a){let _=Ws.calcShape(Ws.calcShape(t,r,!1),n,!1);if(!_)throw new Error("Can't perform where op on the given tensors");o=_,u=ze.size(o)}let m=Math.ceil(u/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:_=>Dt(_,e,o,a,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:m},...bt(n,t,r,o)]})}},es=e=>{e.compute(Gt(e.inputs))}}),Yt,as=g(()=>{lp(),bo(),up(),dp(),cp(),pp(),$u(),fp(),yp(),wp(),bp(),Mp(),vp(),xp(),Tp(),Ep(),Cp(),$p(),fh(),wa(),Ip(),Rd(),Op(),Fp(),Qd(),Ad(),ec(),Np(),gh(),jp(),Vp(),hi(),Wp(),Gp(),Zt(),y(),De(),xa(),Wt(),Hr(),zo(),ns(),Yt=new Map([["Abs",[Nl]],["Acos",[Eo]],["Acosh",[jl]],["Add",[Ro]],["ArgMax",[_o,fo]],["ArgMin",[Il,fo]],["Asin",[Ul]],["Asinh",[Po]],["Atan",[Vl]],["Atanh",[Wl]],["Attention",[Dl]],["AveragePool",[Rp,Da]],["BatchNormalization",[vo]],["BiasAdd",[Rl]],["BiasSplitGelu",[Bo]],["Cast",[Gl,Co]],["Ceil",[Hl]],["Clip",[$o]],["Concat",[Pu,Cu]],["Conv",[Ti,oa]],["ConvTranspose",[Gu,ua]],["Cos",[ql]],["Cosh",[So]],["CumSum",[Ku,Hu]],["DepthToSpace",[Xu,Yu]],["DequantizeLinear",[dc,cc]],["Div",[gu]],["Einsum",[td,sd]],["Elu",[Ql,Vn]],["Equal",[yu]],["Erf",[Xl]],["Exp",[ko]],["Expand",[od]],["FastGelu",[ad]],["Floor",[Yl]],["FusedConv",[Ti,oa]],["Gather",[dd,ud]],["GatherElements",[yd,gd]],["GatherBlockQuantized",[md,_d]],["GatherND",[Si,pd]],["Gelu",[Jl]],["Gemm",[ki,Md]],["GlobalAveragePool",[rc,sc]],["GlobalMaxPool",[ac,oc]],["Greater",[Mu]],["GreaterOrEqual",[jo]],["GridSample",[Cd,$d]],["GroupQueryAttention",[Ta]],["HardSigmoid",[ru,Oo]],["InstanceNormalization",[Bd]],["LayerNormalization",[Ca]],["LeakyRelu",[Ao,Vn]],["Less",[vu]],["LessOrEqual",[xu]],["Log",[du]],["MatMul",[Vd]],["MatMulNBits",[Hd,qd]],["MaxPool",[nc,ic]],["Mul",[wu]],["MultiHeadAttention",[Sp,kd]],["Neg",[eu]],["Not",[Zl]],["Pad",[zp]],["Pow",[bu]],["QuickGelu",[pu,Vn]],["Range",[mc]],["Reciprocal",[Io]],["ReduceMin",[$l]],["ReduceMean",[El]],["ReduceMax",[po]],["ReduceSum",[ho]],["ReduceProd",[Sl]],["ReduceL1",[co]],["ReduceL2",[Pl]],["ReduceLogSum",[Al]],["ReduceLogSumExp",[Cl]],["ReduceSumSquare",[kl]],["Relu",[tu]],["Resize",[Oc,Fc]],["RotaryEmbedding",[zc]],["ScatterND",[za,Up]],["Sigmoid",[su]],["Sin",[nu]],["Sinh",[Fo]],["Slice",[jc,Uc]],["SkipLayerNormalization",[Kp]],["Split",[Dd,Ld]],["Sqrt",[iu]],["Softmax",[ge,Fe]],["Sub",[No]],["Tan",[ou]],["Tanh",[au]],["ThresholdedRelu",[uu,Vn]],["Tile",[Rt]],["Transpose",[nl,so]],["Where",[es]]])}),Es,xs=g(()=>{Re(),Pe(),Jt(),Es=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,n,i){Ne(e.programInfo.name);let a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let _ of t)u.push({binding:u.length,resource:{buffer:_.buffer}});for(let _ of r)u.push({binding:u.length,resource:{buffer:_.buffer}});i&&u.push({binding:u.length,resource:i});let m=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let _={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:m,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(_)}o.setPipeline(e.computePipeline),o.setBindGroup(0,m),o.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),je(e.programInfo.name)}dispose(){}build(e,t){Ne(e.name);let r=this.backend.device,n=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(_=>{r.features.has(_.feature)&&n.push(`enable ${_.extension};`)});let i=el(t,this.backend.device.limits),a=e.getShaderSource(i),o=`${n.join(`
`)}
${i.additionalImplementations}
${a}`,u=r.createShaderModule({code:o,label:e.name});os("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let m=r.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return je(e.name),{programInfo:e,computePipeline:m,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,n=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&n<=i)return[t,r,n];let a=t*r*n,o=Math.ceil(Math.sqrt(a));if(o>i){if(o=Math.ceil(Math.cbrt(a)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),cs,Ts,Is,tr,Hs,Pr=g(()=>{Re(),Lt(),Pe(),X(),us(),as(),xs(),cs=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let n=0;n<e.length;++n){let i=e[n].dataType;switch(t[n]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let a=e[n].dims.length;r.push(`${i};${a}`);break}case"dims":{let a=e[n].dims.join(",");r.push(`${i};${a}`);break}default:throw new Error(`unsupported input dependency: ${t[n]}`)}}return r.join("|")},Ts=(e,t,r)=>{var i,a;let n=e.name;return(i=e.shaderCache)!=null&&i.hint&&(n+="["+e.shaderCache.hint+"]"),n+=":"+r+`:${cs(t,((a=e.shaderCache)==null?void 0:a.inputDependencies)??new Array(t.length).fill("dims"))}`,n},Is=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},tr=class{constructor(e){this.subgroupsSupported=e.features.has("subgroups"),this.subgroupsF16Supported=e.features.has("subgroups");let t=e.limits;!this.subgroupsSupported||!t.minSubgroupSize||!t.maxSubgroupSize?this.subgroupSizeRange=void 0:this.subgroupSizeRange=[t.minSubgroupSize,t.maxSubgroupSize]}},Hs=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r},i=a=>t.features.has(a)&&r.push(a)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups")&&i("subgroups-f16"),this.device=await t.requestDevice(n),this.deviceInfo=new tr(this.device),this.adapterInfo=new Is(t.info||await t.requestAdapterInfo()),this.gpuDataManager=_s(this),this.programManager=new Es(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,En(e.logLevel,!!e.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ne(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var n;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let a=r[i],o=a.kernelId,u=this.kernels.get(o),m=u.kernelType,_=u.kernelName,S=a.programName,k=a.inputTensorViews,d=a.outputTensorViews,N=t[i*2],j=t[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=N);let W=Number(N-this.queryTimeBase),Z=Number(j-this.queryTimeBase);if(!Number.isSafeInteger(W)||!Number.isSafeInteger(Z))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:k.map(ee=>({dims:ee.dims,dataType:_r(ee.dataType)})),outputsMetadata:d.map(ee=>({dims:ee.dims,dataType:_r(ee.dataType)})),kernelId:o,kernelType:m,kernelName:_,programName:S,startTime:W,endTime:Z});else{let ee="";k.forEach((_e,he)=>{ee+=`input[${he}]: [${_e.dims}] | ${_r(_e.dataType)}, `});let Y="";d.forEach((_e,he)=>{Y+=`output[${he}]: [${_e.dims}] | ${_r(_e.dataType)}, `}),console.log(`[profiling] kernel "${o}|${m}|${_}|${S}" ${ee}${Y}execution time: ${Z-W} ns`)}Ve("GPU",`${S}::${N}::${j}`)}e.unmap(),this.pendingQueries.delete(e)}),je()}run(e,t,r,n,i,a){Ne(e.name);let o=[];for(let Y=0;Y<t.length;++Y){let _e=t[Y].data;if(_e===0)continue;let he=this.gpuDataManager.get(_e);if(!he)throw new Error(`no GPU data for input: ${_e}`);o.push(he)}let{outputs:u,dispatchGroup:m,programUniforms:_}=e.getRunData(t),S=r.length===0?u.map((Y,_e)=>_e):r;if(S.length!==u.length)throw new Error(`Output size ${S.length} must be equal to ${u.length}.`);let k=[],d=[];for(let Y=0;Y<u.length;++Y){if(!Number.isInteger(S[Y])||S[Y]<-3||S[Y]>=a)throw new Error(`Invalid output index: ${S[Y]}`);if(S[Y]===-3)continue;let _e=S[Y]===-1,he=S[Y]===-2,Me=_e||he?i(u[Y].dataType,u[Y].dims):n(S[Y],u[Y].dataType,u[Y].dims);if(k.push(Me),Me.data===0)continue;let Ie=this.gpuDataManager.get(Me.data);if(!Ie)throw new Error(`no GPU data for output: ${Me.data}`);if(_e&&this.temporaryData.push(Ie),he){let Le=this.kernelPersistentData.get(this.currentKernelId);Le||(Le=[],this.kernelPersistentData.set(this.currentKernelId,Le)),Le.push(Ie)}d.push(Ie)}if(o.length!==t.length||d.length!==k.length){if(d.length===0)return je(e.name),k;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let N;if(_){let Y=0,_e=[];_.forEach(Le=>{let et=typeof Le.data=="number"?[Le.data]:Le.data;if(et.length===0)return;let dt=Le.type===10?2:4,Et,qt;Le.type===10?(qt=et.length>4?16:et.length>2?8:et.length*dt,Et=et.length>4?16:dt*et.length):(qt=et.length<=2?et.length*dt:16,Et=16),Y=Math.ceil(Y/qt)*qt,_e.push(Y);let Bt=Le.type===10?8:4;Y+=et.length>4?Math.ceil(et.length/Bt)*Et:et.length*dt});let he=16;Y=Math.ceil(Y/he)*he;let Me=new ArrayBuffer(Y);_.forEach((Le,et)=>{let dt=_e[et],Et=typeof Le.data=="number"?[Le.data]:Le.data;if(Le.type===6)new Int32Array(Me,dt,Et.length).set(Et);else if(Le.type===12)new Uint32Array(Me,dt,Et.length).set(Et);else if(Le.type===10)new Uint16Array(Me,dt,Et.length).set(Et);else if(Le.type===1)new Float32Array(Me,dt,Et.length).set(Et);else throw new Error(`Unsupported uniform type: ${_r(Le.type)}`)});let Ie=this.gpuDataManager.create(Y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Ie.buffer,0,Me,0,Y),this.gpuDataManager.release(Ie.id),N={offset:0,size:Y,buffer:Ie.buffer}}let j=this.programManager.normalizeDispatchGroupSize(m),W=j[1]===1&&j[2]===1,Z=Ts(e,t,W),ee=this.programManager.getArtifact(Z);if(ee||(ee=this.programManager.build(e,j),this.programManager.setArtifact(Z,ee),os("info",()=>`[artifact] key: ${Z}, programName: ${e.name}`)),_&&ee.uniformVariablesInfo){if(_.length!==ee.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${ee.uniformVariablesInfo.length}, got ${_.length} in program "${ee.programInfo.name}".`);for(let Y=0;Y<_.length;Y++){let _e=_[Y],he=_e.type,Me=typeof _e.data=="number"?1:_e.data.length,[Ie,Le]=ee.uniformVariablesInfo[Y];if(he!==Ie||Me!==Le)throw new Error(`Uniform variable ${Y} mismatch: expect type ${Ie} with size ${Le}, got type ${he} with size ${Me} in program "${ee.programInfo.name}".`)}}if(os("info",()=>`[ProgramManager] run "${e.name}" (key=${Z}) with ${j[0]}x${j[1]}x${j[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Y={kernelId:this.currentKernelId,programName:ee.programInfo.name,inputTensorViews:t,outputTensorViews:k};this.pendingKernels.push(Y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Y)}return this.programManager.run(ee,o,d,j,N),je(e.name),k}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,n){let i=Yt.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:n,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);let i=n.kernelType,a=n.kernelName,o=n.kernelEntry,u=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${a}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),os("info",()=>`[WebGPU] Start to run kernel "[${i}] ${a}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),o(t,u[1]),0}catch(_){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${a}" failed. ${_}`)),1}finally{m&&r.push(this.device.popErrorScope().then(_=>_?`GPU validation error for kernel "[${i}] ${a}": ${_.message}`:null));for(let _ of this.temporaryData)this.gpuDataManager.release(_.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,n){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let a=i.get(t),o=this.gpuDataManager.registerExternalBuffer(r,n,a);return i.set(t,[o,r]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let n=await Tt(this,e,t);return C(n.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){os("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){os("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){os("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let n=0;n<r;n++){let i=this.getComputePassEncoder(),a=e[n];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(a.computePipeline),i.setBindGroup(0,a.bindGroup),i.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Cn,Fi,dr,Mr,Di,Qn,Li,zi,Ps=g(()=>{Pe(),Cn=1,Fi=()=>Cn++,dr=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Mr=(e,t)=>{let r=dr.get(e);if(!r)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((n,i)=>n*i)*r/8):0},Di=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Mr(this.dataType,this.tensorShape)}destroy(){os("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,r){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===r.length&&this.tensorShape.every((n,i)=>n===r[i])}},Qn=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,r,n){if(this.wrapper){if(this.wrapper.canReuseTensor(e,t,r))return this.wrapper.tensor;if(n){if(this.wrapper.byteLength!==Mr(t,r))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let i=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,r,i,!0,!0),n&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else os("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Li=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Fi();return this.tensorTrackersById.set(e,new Qn(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,n){os("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(this.backend.currentContext,t,r,n)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){os("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,n){let i=Fi(),a=new Di({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:n});return this.tensorTrackersById.set(i,new Qn(this,a)),this.externalTensors.add(a),i}async getCachedTensor(e,t,r,n,i){let a=this.backend.currentSessionId,o=this.backend.currentContext;for(let[m,_]of this.freeTensors.entries())if(_.canReuseTensor(o,e,t)){os("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let S=this.freeTensors.splice(m,1)[0];return S.sessionId=a,S}os("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let u=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new Di({sessionId:a,context:o,tensor:u,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},zi=(...e)=>new Li(...e)}),Bs,Qr,pn,Xn=g(()=>{Lt(),lr(),X(),Ps(),Pe(),Bs=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Qr=(e,t)=>{if(e===t)return!0;if(e===void 0||t===void 0)return!1;let r=Object.keys(e).sort(),n=Object.keys(t).sort();return r.length===n.length&&r.every((i,a)=>i===n[a]&&e[i]===t[i])},pn=class{constructor(e){this.tensorManager=zi(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],En(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}async createMLContext(e){if(e instanceof GPUDevice){let r=this.mlContextCache.findIndex(n=>n.gpuDevice===e);if(r!==-1)return this.mlContextCache[r].mlContext;{let n=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:n}),n}}else if(e===void 0){let r=this.mlContextCache.findIndex(n=>n.options===void 0&&n.gpuDevice===void 0);if(r!==-1)return this.mlContextCache[r].mlContext;{let n=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:n}),n}}let t=this.mlContextCache.findIndex(r=>Qr(r.options,e));if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:r}),r}}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);if(r.delete(e),r.size===0){this.sessionIdsByMLContext.delete(t);let n=this.mlContextCache.findIndex(i=>i.mlContext===t);n!==-1&&this.mlContextCache.splice(n,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){os("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,n){let i=Bs.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,n)}uploadTensor(e,t){if(!Ms().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");os("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return C(r,t)}}registerMLTensor(e,t,r){let n=Bs.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,n,r);return os("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,n,i,a){if(!a)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let u=a.get(o);if(!u)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+r>u.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let m=u.slice(t,t+r).buffer,_;switch(i.dataType){case"float32":_=new Float32Array(m);break;case"float16":_=new Uint16Array(m);break;case"int32":_=new Int32Array(m);break;case"uint32":_=new Uint32Array(m);break;case"int64":_=new BigInt64Array(m);break;case"uint64":_=new BigUint64Array(m);break;case"int8":_=new Int8Array(m);break;case"int4":case"uint4":case"uint8":_=new Uint8Array(m);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return os("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),n.constant(i,_)}flush(){}}}),Bi={};x(Bi,{init:()=>ja});var Yn,Na,ja,yh=g(()=>{Lt(),Pr(),Pe(),Ot(),Xn(),Yn=class sf{constructor(t,r,n,i){this.module=t,this.dataType=r,this.data=n,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=ze.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(ze.size(t)!==ze.size(this.dims))throw new Error("Invalid new shape");return new sf(this.module,this.dataType,this.data,t)}},Na=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo,this.deviceInfo=t.deviceInfo;let n=e.PTR_SIZE,i=r/e.PTR_SIZE,a=n===4?"i32":"i64";this.opKernelContext=Number(e.getValue(n*i++,a));let o=Number(e.getValue(n*i++,a));this.outputCount=Number(e.getValue(n*i++,a)),this.customDataOffset=Number(e.getValue(n*i++,"*")),this.customDataSize=Number(e.getValue(n*i++,a));let u=[];for(let m=0;m<o;m++){let _=Number(e.getValue(n*i++,a)),S=Number(e.getValue(n*i++,"*")),k=Number(e.getValue(n*i++,a)),d=[];for(let N=0;N<k;N++)d.push(Number(e.getValue(n*i++,a)));u.push(new Yn(e,_,S,d))}this.inputs=u}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var o;let r=((o=t==null?void 0:t.inputs)==null?void 0:o.map(u=>typeof u=="number"?this.inputs[u]:u))??this.inputs,n=(t==null?void 0:t.outputs)??[],i=(u,m,_)=>new Yn(this.module,m,this.output(u,_),_),a=(u,m)=>{let _=ur(u,m);if(!_)throw new Error(`Unsupported data type: ${u}`);let S=_>0?this.backend.gpuDataManager.create(_).id:0;return new Yn(this.module,u,S,m)};return this.backend.run(e,r,n,i,a,this.outputCount)}output(e,t){let r=this.module.stackSave();try{let n=this.module.PTR_SIZE,i=n===4?"i32":"i64",a=this.module.stackAlloc((1+t.length)*n);this.module.setValue(a,t.length,i);for(let o=0;o<t.length;o++)this.module.setValue(a+n*(o+1),t[o],i);return this.module._JsepOutput(this.opKernelContext,e,a)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},ja=async(e,t,r,n)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let a=new Hs;await a.initialize(r,n),i("webgpu",[a,o=>a.alloc(Number(o)),o=>a.free(o),(o,u,m,_=!1)=>{if(_)os("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(o)}, dst=${Number(u)}, size=${Number(m)}`),a.memcpy(Number(o),Number(u));else{os("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(o)}, gpuDataId=${Number(u)}, size=${Number(m)}`);let S=t.HEAPU8.subarray(Number(o>>>0),Number(o>>>0)+Number(m));a.upload(Number(u),S)}},async(o,u,m)=>{os("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${u}, size=${m}`),await a.download(Number(o),()=>t.HEAPU8.subarray(Number(u)>>>0,Number(u+m)>>>0))},(o,u,m)=>a.createKernel(o,Number(u),m,t.UTF8ToString(t._JsepGetNodeName(Number(u)))),o=>a.releaseKernel(o),(o,u,m,_)=>{os("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${m}, kernel=${o}, contextDataOffset=${u}`);let S=new Na(t,a,Number(u));return a.computeKernel(Number(o),S,_)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else{let a=new pn(r);i("webnn",[a,()=>a.reserveTensorId(),o=>a.releaseTensorId(o),async(o,u,m,_)=>a.ensureTensor(o,u,m,_),(o,u)=>{a.uploadTensor(o,u)},async(o,u)=>a.downloadTensor(o,u)])}}}),Ua,Jn,Ri,Xr,Va,$n,Vc,Wc,Gc,Yr,mr,wh,rm=g(()=>{li(),ui(),Lt(),lr(),wn(),zn(),Ua=(e,t)=>{Ms()._OrtInit(e,t)!==0&&ss("Can't initialize onnxruntime.")},Jn=async e=>{Ua(e.wasm.numThreads,tn(e.logLevel))},Ri=async(e,t)=>{{let r=(yh(),M(Bi)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",Ms(),e,n)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Ms(),e)}}},Xr=new Map,Va=e=>{let t=Ms(),r=t.stackSave();try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetInputOutputCount(e,i,i+n)!==0&&ss("Can't get session input/output count.");let a=n===4?"i32":"i64";return[Number(t.getValue(i,a)),Number(t.getValue(i+n,a))]}finally{t.stackRestore(r)}},$n=e=>{let t=Ms(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Vc=async(e,t)=>{var k,d,N;let r,n,i=Ms();Array.isArray(e)?[r,n]=e:e.buffer===i.HEAPU8.buffer?[r,n]=[e.byteOffset,e.byteLength]:[r,n]=$n(e);let a=0,o=0,u=0,m=[],_=[],S=[];try{if([o,m]=Ln(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let Me=[];for(let Ie of t.externalData){let Le=typeof Ie=="string"?Ie:Ie.path;Me.push(Tn(typeof Ie=="string"?Ie:Ie.data).then(et=>{i.mountExternalData(Le,et)}))}await Promise.all(Me)}for(let Me of(t==null?void 0:t.executionProviders)??[])if((typeof Me=="string"?Me:Me.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof Me!="string"){let Ie=Me,Le=Ie==null?void 0:Ie.context,et=Ie==null?void 0:Ie.gpuDevice,dt=Ie==null?void 0:Ie.deviceType,Et=Ie==null?void 0:Ie.powerPreference;Le?i.currentContext=Le:et?i.currentContext=await i.jsepCreateMLContext(et):i.currentContext=await i.jsepCreateMLContext({deviceType:dt,powerPreference:Et})}else i.currentContext=await i.jsepCreateMLContext();break}a=await i._OrtCreateSession(r,n,o),a===0&&ss("Can't create a session."),(k=i.jsepOnCreateSession)==null||k.call(i),i.currentContext&&(i.jsepRegisterMLContext(a,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[j,W]=Va(a),Z=!!(t!=null&&t.enableGraphCapture),ee=[],Y=[],_e=[];for(let Me=0;Me<j;Me++){let Ie=i._OrtGetInputName(a,Me);Ie===0&&ss("Can't get an input name."),_.push(Ie),ee.push(i.UTF8ToString(Ie))}for(let Me=0;Me<W;Me++){let Ie=i._OrtGetOutputName(a,Me);Ie===0&&ss("Can't get an output name."),S.push(Ie);let Le=i.UTF8ToString(Ie);Y.push(Le);{if(Z&&(t==null?void 0:t.preferredOutputLocation)===void 0){_e.push("gpu-buffer");continue}let et=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((d=t==null?void 0:t.preferredOutputLocation)==null?void 0:d[Le])??"cpu";if(et!=="cpu"&&et!=="cpu-pinned"&&et!=="gpu-buffer"&&et!=="ml-tensor")throw new Error(`Not supported preferred output location: ${et}.`);if(Z&&et!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${et}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);_e.push(et)}}let he=null;return _e.some(Me=>Me==="gpu-buffer"||Me==="ml-tensor")&&(u=i._OrtCreateBinding(a),u===0&&ss("Can't create IO binding."),he={handle:u,outputPreferredLocations:_e,outputPreferredLocationsEncoded:_e.map(Me=>xn(Me))}),Xr.set(a,[a,_,S,he,Z,!1]),[a,ee,Y]}catch(j){throw _.forEach(W=>i._OrtFree(W)),S.forEach(W=>i._OrtFree(W)),u!==0&&i._OrtReleaseBinding(u)!==0&&ss("Can't release IO binding."),a!==0&&i._OrtReleaseSession(a)!==0&&ss("Can't release session."),j}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o)!==0&&ss("Can't release session options."),m.forEach(j=>i._free(j)),(N=i.unmountExternalData)==null||N.call(i)}},Wc=e=>{var m;let t=Ms(),r=Xr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[n,i,a,o,u]=r;o&&(u&&t._OrtClearBoundOutputs(o.handle)!==0&&ss("Can't clear bound outputs."),t._OrtReleaseBinding(o.handle)!==0&&ss("Can't release IO binding.")),(m=t.jsepOnReleaseSession)==null||m.call(t,e),i.forEach(_=>t._OrtFree(_)),a.forEach(_=>t._OrtFree(_)),t._OrtReleaseSession(n)!==0&&ss("Can't release session."),Xr.delete(e)},Gc=(e,t,r,n,i,a=!1)=>{if(!e){t.push(0);return}let o=Ms(),u=o.PTR_SIZE,m=e[0],_=e[1],S=e[3],k,d;if(m==="string"&&(S==="gpu-buffer"||S==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&S!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(S==="gpu-buffer"){let W=e[2].gpuBuffer;d=ur(Gr(m),_);let Z=o.jsepRegisterBuffer;if(!Z)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');k=Z(n,i,W,d)}else if(S==="ml-tensor"){let W=e[2].mlTensor;d=ur(Gr(m),_);let Z=o.jsepRegisterMLTensor;if(!Z)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');k=Z(W,Gr(m),_)}else{let W=e[2];if(Array.isArray(W)){d=u*W.length,k=o._malloc(d),r.push(k);for(let Z=0;Z<W.length;Z++){if(typeof W[Z]!="string")throw new TypeError(`tensor data at index ${Z} is not a string`);o.setValue(k+Z*u,Os(W[Z],r),"*")}}else d=W.byteLength,k=o._malloc(d),r.push(k),o.HEAPU8.set(new Uint8Array(W.buffer,W.byteOffset,d),k)}let N=o.stackSave(),j=o.stackAlloc(4*_.length);try{_.forEach((Z,ee)=>o.setValue(j+ee*u,Z,u===4?"i32":"i64"));let W=o._OrtCreateTensor(Gr(m),k,d,j,_.length,xn(S));W===0&&ss(`Can't create tensor for input/output. session=${n}, index=${i}.`),t.push(W)}finally{o.stackRestore(N)}},Yr=async(e,t,r,n,i,a)=>{var qt,Bt;let o=Ms(),u=o.PTR_SIZE,m=Xr.get(e);if(!m)throw new Error(`cannot run inference. invalid session id: ${e}`);let _=m[0],S=m[1],k=m[2],d=m[3],N=m[4],j=m[5],W=t.length,Z=n.length,ee=0,Y=[],_e=[],he=[],Me=[],Ie=o.stackSave(),Le=o.stackAlloc(W*u),et=o.stackAlloc(W*u),dt=o.stackAlloc(Z*u),Et=o.stackAlloc(Z*u);try{(qt=o.jsepOnRunStart)==null||qt.call(o,_),[ee,Y]=Vr(a);for(let yt=0;yt<W;yt++)Gc(r[yt],_e,Me,e,t[yt],N);for(let yt=0;yt<Z;yt++)Gc(i[yt],he,Me,e,W+n[yt],N);for(let yt=0;yt<W;yt++)o.setValue(Le+yt*u,_e[yt],"*"),o.setValue(et+yt*u,S[t[yt]],"*");for(let yt=0;yt<Z;yt++)o.setValue(dt+yt*u,he[yt],"*"),o.setValue(Et+yt*u,k[n[yt]],"*");if(d&&!j){let{handle:yt,outputPreferredLocations:Ht,outputPreferredLocationsEncoded:ps}=d;if(S.length!==W)throw new Error(`input count from feeds (${W}) is expected to be always equal to model's input count (${S.length}).`);for(let Ut=0;Ut<W;Ut++){let Qt=t[Ut];await o._OrtBindInput(yt,S[Qt],_e[Ut])!==0&&ss(`Can't bind input[${Ut}] for session=${e}.`)}for(let Ut=0;Ut<Z;Ut++){let Qt=n[Ut];(Bt=i[Ut])!=null&&Bt[3]?o._OrtBindOutput(yt,k[Qt],he[Ut],0)!==0&&ss(`Can't bind pre-allocated output[${Ut}] for session=${e}.`):o._OrtBindOutput(yt,k[Qt],0,ps[Qt])!==0&&ss(`Can't bind output[${Ut}] to ${Ht[Ut]} for session=${e}.`)}Xr.set(e,[_,S,k,d,N,!0])}let It;d?It=await o._OrtRunWithBinding(_,d.handle,Z,dt,ee):It=await o._OrtRun(_,et,Le,W,Et,Z,dt,ee),It!==0&&ss("failed to call OrtRun().");let ts=[];for(let yt=0;yt<Z;yt++){let Ht=Number(o.getValue(dt+yt*u,"*"));if(Ht===he[yt]){ts.push(i[yt]);continue}let ps=o.stackSave(),Ut=o.stackAlloc(4*u),Qt=!1,gs,ot=0;try{o._OrtGetTensorData(Ht,Ut,Ut+u,Ut+2*u,Ut+3*u)!==0&&ss(`Can't access output tensor data on index ${yt}.`);let Pt=u===4?"i32":"i64",hs=Number(o.getValue(Ut,Pt));ot=o.getValue(Ut+u,"*");let Ns=o.getValue(Ut+u*2,"*"),qs=Number(o.getValue(Ut+u*3,Pt)),Lr=[];for(let Cs=0;Cs<qs;Cs++)Lr.push(Number(o.getValue(Ns+Cs*u,Pt)));o._OrtFree(Ns)!==0&&ss("Can't free memory for tensor dims.");let hn=Lr.reduce((Cs,Js)=>Cs*Js,1);gs=_r(hs);let zr=d==null?void 0:d.outputPreferredLocations[n[yt]];if(gs==="string"){if(zr==="gpu-buffer"||zr==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Cs=[];for(let Js=0;Js<hn;Js++){let Sn=o.getValue(ot+Js*u,"*"),Th=o.getValue(ot+(Js+1)*u,"*"),Ui=Js===hn-1?void 0:Th-Sn;Cs.push(o.UTF8ToString(Sn,Ui))}ts.push([gs,Lr,Cs,"cpu"])}else if(zr==="gpu-buffer"&&hn>0){let Cs=o.jsepGetBuffer;if(!Cs)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Js=Cs(ot),Sn=ur(hs,hn);if(Sn===void 0||!Mn(gs))throw new Error(`Unsupported data type: ${gs}`);Qt=!0,ts.push([gs,Lr,{gpuBuffer:Js,download:o.jsepCreateDownloader(Js,Sn,gs),dispose:()=>{o._OrtReleaseTensor(Ht)!==0&&ss("Can't release tensor.")}},"gpu-buffer"])}else if(zr==="ml-tensor"&&hn>0){let Cs=o.jsepEnsureTensor;if(!Cs)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(ur(hs,hn)===void 0||!vn(gs))throw new Error(`Unsupported data type: ${gs}`);let Js=await Cs(ot,hs,Lr,!1);Qt=!0,ts.push([gs,Lr,{mlTensor:Js,download:o.jsepCreateMLTensorDownloader(ot,gs),dispose:()=>{o.jsepReleaseTensorId(ot),o._OrtReleaseTensor(Ht)}},"ml-tensor"])}else{let Cs=bn(gs),Js=new Cs(hn);new Uint8Array(Js.buffer,Js.byteOffset,Js.byteLength).set(o.HEAPU8.subarray(ot,ot+Js.byteLength)),ts.push([gs,Lr,Js,"cpu"])}}finally{o.stackRestore(ps),gs==="string"&&ot&&o._free(ot),Qt||o._OrtReleaseTensor(Ht)}}return d&&!N&&(o._OrtClearBoundOutputs(d.handle)!==0&&ss("Can't clear bound outputs."),Xr.set(e,[_,S,k,d,N,!1])),ts}finally{o.stackRestore(Ie),_e.forEach(It=>o._OrtReleaseTensor(It)),he.forEach(It=>o._OrtReleaseTensor(It)),Me.forEach(It=>o._free(It)),ee!==0&&o._OrtReleaseRunOptions(ee),Y.forEach(It=>o._free(It))}},mr=e=>{let t=Ms(),r=Xr.get(e);if(!r)throw new Error("invalid session id");let n=r[0],i=t._OrtEndProfiling(n);i===0&&ss("Can't get an profile file name."),t._OrtFree(i)},wh=e=>{let t=[];for(let r of e){let n=r[2];!Array.isArray(n)&&"buffer"in n&&t.push(n.buffer)}return t}}),Zn,vr,Wa,Kc,Hc,qp,bh,Qp,Ni,ji,nm,im,om,am,lm,um,dm,cm,pm=g(()=>{Re(),rm(),lr(),jr(),Zn=()=>!!L.wasm.proxy&&typeof document<"u",Wa=!1,Kc=!1,Hc=!1,Qp=new Map,Ni=(e,t)=>{let r=Qp.get(e);r?r.push(t):Qp.set(e,[t])},ji=()=>{if(Wa||!Kc||Hc||!vr)throw new Error("worker not ready")},nm=e=>{switch(e.data.type){case"init-wasm":Wa=!1,e.data.err?(Hc=!0,bh[1](e.data.err)):(Kc=!0,bh[0]()),qp&&(URL.revokeObjectURL(qp),qp=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Qp.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},im=async()=>{if(!Kc){if(Wa)throw new Error("multiple calls to 'initWasm()' detected.");if(Hc)throw new Error("previous call to 'initWasm()' failed.");if(Wa=!0,Zn())return new Promise((e,t)=>{vr==null||vr.terminate(),Rr().then(([r,n])=>{var i;try{vr=n,vr.onerror=o=>t(o),vr.onmessage=nm,bh=[e,t];let a={type:"init-wasm",in:L};!a.in.wasm.wasmPaths&&(r||(i=import.meta.url)!=null&&i.startsWith("file:"))&&(a.in.wasm.wasmPaths={wasm:new URL(s("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),s.b).href}),vr.postMessage(a),qp=r}catch(a){t(a)}},t)});try{await Ir(L.wasm),await Jn(L),Kc=!0}catch(e){throw Hc=!0,e}finally{Wa=!1}}},om=async e=>{if(Zn())return ji(),new Promise((t,r)=>{Ni("init-ep",[t,r]);let n={type:"init-ep",in:{epName:e,env:L}};vr.postMessage(n)});await Ri(L,e)},am=async e=>Zn()?(ji(),new Promise((t,r)=>{Ni("copy-from",[t,r]);let n={type:"copy-from",in:{buffer:e}};vr.postMessage(n,[e.buffer])})):$n(e),lm=async(e,t)=>{if(Zn()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ji(),new Promise((r,n)=>{Ni("create",[r,n]);let i={type:"create",in:{model:e,options:{...t}}},a=[];e instanceof Uint8Array&&a.push(e.buffer),vr.postMessage(i,a)})}else return Vc(e,t)},um=async e=>{if(Zn())return ji(),new Promise((t,r)=>{Ni("release",[t,r]);let n={type:"release",in:e};vr.postMessage(n)});Wc(e)},dm=async(e,t,r,n,i,a)=>{if(Zn()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return ji(),new Promise((o,u)=>{Ni("run",[o,u]);let m=r,_={type:"run",in:{sessionId:e,inputIndices:t,inputs:m,outputIndices:n,options:a}};vr.postMessage(_,wh(m))})}else return Yr(e,t,r,n,i,a)},cm=async e=>{if(Zn())return ji(),new Promise((t,r)=>{Ni("end-profiling",[t,r]);let n={type:"end-profiling",in:e};vr.postMessage(n)});mr(e)}}),Mh,hm,mm,rf=g(()=>{Re(),pm(),Lt(),qe(),zn(),Mh=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},hm=e=>{switch(e[3]){case"cpu":return new ue(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Mn(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:i}=e[2];return ue.fromGpuBuffer(r,{dataType:t,dims:e[1],download:n,dispose:i})}case"ml-tensor":{let t=e[0];if(!vn(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:n,dispose:i}=e[2];return ue.fromMLTensor(r,{dataType:t,dims:e[1],download:n,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},mm=class{async fetchModelAndCopyToWasmMemory(e){return am(await Tn(e))}async loadModel(e,t){Ne();let r;typeof e=="string"?r=await this.fetchModelAndCopyToWasmMemory(e):r=e,[this.sessionId,this.inputNames,this.outputNames]=await lm(r,t),je()}async dispose(){return um(this.sessionId)}async run(e,t,r){Ne();let n=[],i=[];Object.entries(e).forEach(k=>{let d=k[0],N=k[1],j=this.inputNames.indexOf(d);if(j===-1)throw new Error(`invalid input '${d}'`);n.push(N),i.push(j)});let a=[],o=[];Object.entries(t).forEach(k=>{let d=k[0],N=k[1],j=this.outputNames.indexOf(d);if(j===-1)throw new Error(`invalid output '${d}'`);a.push(N),o.push(j)});let u=n.map((k,d)=>Mh(k,()=>`input "${this.inputNames[i[d]]}"`)),m=a.map((k,d)=>k?Mh(k,()=>`output "${this.outputNames[o[d]]}"`):null),_=await dm(this.sessionId,i,u,o,m,r),S={};for(let k=0;k<_.length;k++)S[this.outputNames[o[k]]]=a[k]??hm(_[k]);return je(),S}startProfiling(){}endProfiling(){cm(this.sessionId)}}}),_m={};x(_m,{OnnxruntimeWebAssemblyBackend:()=>xh,initializeFlags:()=>vh,wasmBackend:()=>fm});var vh,xh,fm,nf=g(()=>{Re(),pm(),rf(),vh=()=>{if((typeof L.wasm.initTimeout!="number"||L.wasm.initTimeout<0)&&(L.wasm.initTimeout=0),L.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof L.wasm.proxy!="boolean"&&(L.wasm.proxy=!1),typeof L.wasm.trace!="boolean"&&(L.wasm.trace=!1),typeof L.wasm.numThreads!="number"||!Number.isInteger(L.wasm.numThreads)||L.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)L.wasm.numThreads=1;else{let e=typeof navigator>"u"?z("node:os").cpus().length:navigator.hardwareConcurrency;L.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},xh=class{async init(e){vh(),await im(),await om(e)}async createInferenceSessionHandler(e,t){let r=new mm;return await r.loadModel(e,t),Promise.resolve(r)}},fm=new xh});Re(),Re(),Re();var of="1.21.0-dev.20250206-d981b153d3",af=Se;{let e=(nf(),M(_m)).wasmBackend;q("webgpu",e,5),q("webnn",e,5),q("cpu",e,10),q("wasm",e,10)}Object.defineProperty(L.versions,"web",{value:of,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(te,h,s)=>{var p;s.r(h),s.d(h,{Tensor:()=>z.Tensor,createInferenceSession:()=>ie,deviceToExecutionProviders:()=>q,isONNXProxy:()=>Q,isONNXTensor:()=>G});var w=s("./src/env.js"),A=s("?2ce3"),D=s("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),z=s("./node_modules/onnxruntime-common/dist/esm/index.js");const g=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),x=[];let v,M;const T=Symbol.for("onnxruntime");if(T in globalThis)M=globalThis[T];else if(w.apis.IS_NODE_ENV){switch(M=A??(p||(p=s.t(A,2))),process.platform){case"win32":x.push("dml");break;case"linux":process.arch==="x64"&&x.push("cuda");break}x.push("cpu"),v=["cpu"]}else M=D,w.apis.IS_WEBNN_AVAILABLE&&x.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),w.apis.IS_WEBGPU_AVAILABLE&&x.push("webgpu"),x.push("wasm"),v=["wasm"];const F=M.InferenceSession;function q(O=null){if(!O)return v;switch(O){case"auto":return x;case"gpu":return x.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(x.includes(O))return[g[O]??O];throw new Error(`Unsupported device: "${O}". Should be one of: ${x.join(", ")}.`)}let re=null;async function ie(O,I,b){re&&await re;const E=F.create(O,I);re??(re=E);const L=await E;return L.config=b,L}function G(O){return O instanceof M.Tensor}const V=M==null?void 0:M.env;V!=null&&V.wasm&&(V.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${w.env.version}/dist/`,V.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(V.wasm.numThreads=1)),V!=null&&V.webgpu&&(V.webgpu.powerPreference="high-performance");function Q(){var O;return(O=V==null?void 0:V.wasm)==null?void 0:O.proxy}w.env.backends.onnx=V},"./src/base/feature_extraction_utils.js":(te,h,s)=>{s.r(h),s.d(h,{FeatureExtractor:()=>D,validate_audio_inputs:()=>z});var p=s("./src/utils/constants.js"),w=s("./src/utils/generic.js"),A=s("./src/utils/hub.js");class D extends w.Callable{constructor(x){super(),this.config=x}static async from_pretrained(x,v){const M=await(0,A.getModelJSON)(x,p.FEATURE_EXTRACTOR_NAME,!0,v);return new this(M)}}function z(g,x){var v;if(!(g instanceof Float32Array||g instanceof Float64Array))throw new Error(`${x} expects input to be a Float32Array or a Float64Array, but got ${((v=g==null?void 0:g.constructor)==null?void 0:v.name)??typeof g} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(te,h,s)=>{s.r(h),s.d(h,{ImageProcessor:()=>O,center_to_corners_format:()=>M,post_process_instance_segmentation:()=>Q,post_process_object_detection:()=>T,post_process_panoptic_segmentation:()=>V,post_process_semantic_segmentation:()=>F});var p=s("./src/utils/generic.js"),w=s("./src/utils/tensor.js"),A=s("./src/utils/maths.js");s("./src/utils/image.js");var D=s("./src/utils/core.js"),z=s("./src/utils/hub.js"),g=s("./src/utils/constants.js");function x(I,b,E=0,L=null){const le=I/b;let oe=(0,A.bankers_round)(le)*b;return L!==null&&oe>L&&(oe=Math.floor(le)*b),oe<E&&(oe=Math.ceil(le)*b),oe}function v([I,b],E){return[Math.max(Math.floor(I/E),1)*E,Math.max(Math.floor(b/E),1)*E]}function M([I,b,E,L]){return[I-E/2,b-L/2,I+E/2,b+L/2]}function T(I,b=.5,E=null,L=!1){const le=I.logits,oe=I.pred_boxes,[Te,we,ne]=le.dims;if(E!==null&&E.length!==Te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ee=[];for(let pe=0;pe<Te;++pe){let ke=E!==null?E[pe]:null,Oe={boxes:[],classes:[],scores:[]},Ce=le[pe],tt=oe[pe];for(let Ge=0;Ge<we;++Ge){let be=Ce[Ge],J=[],ce;if(L){ce=be.sigmoid().data;for(let $e=0;$e<ce.length;++$e)ce[$e]>b&&J.push($e)}else{let $e=(0,A.max)(be.data)[1];if($e===ne-1||(ce=(0,A.softmax)(be.data),ce[$e]<b))continue;J.push($e)}for(const $e of J){let Be=tt[Ge].data;Be=M(Be),ke!==null&&(Be=Be.map((Je,se)=>Je*ke[(se+1)%2])),Oe.boxes.push(Be),Oe.classes.push($e),Oe.scores.push(ce[$e])}}Ee.push(Oe)}return Ee}function F(I,b=null){const E=I.logits,L=E.dims[0];if(b!==null&&b.length!==L)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const le=[];for(let oe=0;oe<L;++oe){const Te=b!==null?b[oe]:null;let we=E[oe];Te!==null&&(we=(0,w.interpolate)(we,Te,"bilinear",!1));const[ne,Ee]=Te??we.dims.slice(-2),pe=new w.Tensor("int32",new Int32Array(ne*Ee),[ne,Ee]),ke=we[0].data,Oe=pe.data;for(let Ge=1;Ge<we.dims[0];++Ge){const be=we[Ge].data;for(let J=0;J<be.length;++J)be[J]>ke[J]&&(ke[J]=be[J],Oe[J]=Ge)}const Ce=new Array(we.dims[0]);for(let Ge=0;Ge<Oe.length;++Ge){const be=Oe[Ge];Ce[be]=be}const tt=Ce.filter(Ge=>Ge!==void 0);le.push({segmentation:pe,labels:tt})}return le}function q(I,b,E,L){const le=[],oe=[],Te=[];for(let we=0;we<I.dims[0];++we){const ne=I[we],Ee=b[we],pe=(0,A.max)(ne.data)[1];if(pe===L)continue;const Oe=(0,A.softmax)(ne.data)[pe];Oe>E&&(le.push(Ee),oe.push(Oe),Te.push(pe))}return[le,oe,Te]}function re(I,b,E,L=.5,le=.8){const oe=[];let Te=0,we=0;const ne=b[E].data;for(let pe=0;pe<I.length;++pe)I[pe]===E&&(oe.push(pe),++Te),ne[pe]>=L&&++we;let Ee=Te>0&&we>0;return Ee&&(Ee=Te/we>le),[Ee,oe]}function ie(I,b,E,L,le,oe=null,Te=null){const[we,ne]=Te??I[0].dims,Ee=new w.Tensor("int32",new Int32Array(we*ne),[we,ne]),pe=[];if(Te!==null)for(let Ge=0;Ge<I.length;++Ge)I[Ge]=(0,w.interpolate)(I[Ge],Te,"bilinear",!1);const ke=new Int32Array(I[0].data.length),Oe=new Float32Array(I[0].data.length);for(let Ge=0;Ge<I.length;++Ge){let be=b[Ge];const J=I[Ge].data;for(let ce=0;ce<J.length;++ce)J[ce]*=be,J[ce]>Oe[ce]&&(ke[ce]=Ge,Oe[ce]=J[ce])}let Ce=0;const tt=Ee.data;for(let Ge=0;Ge<E.length;++Ge){const be=E[Ge],[J,ce]=re(ke,I,Ge,L,le);if(J){++Ce;for(const $e of ce)tt[$e]=Ce;pe.push({id:Ce,label_id:be,score:b[Ge]})}}return[Ee,pe]}function G(I,b,E=28,L=56*56,le=14*14*4*1280){if(I<E||b<E)throw new Error(`height:${I} or width:${b} must be larger than factor:${E}`);if(Math.max(I,b)/Math.min(I,b)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(I,b)/Math.min(I,b)}`);let oe=Math.round(I/E)*E,Te=Math.round(b/E)*E;if(oe*Te>le){const we=Math.sqrt(I*b/le);oe=Math.floor(I/we/E)*E,Te=Math.floor(b/we/E)*E}else if(oe*Te<L){const we=Math.sqrt(L/(I*b));oe=Math.ceil(I*we/E)*E,Te=Math.ceil(b*we/E)*E}return[oe,Te]}function V(I,b=.5,E=.5,L=.8,le=null,oe=null){le===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),le=new Set);const Te=I.class_queries_logits??I.logits,ne=(I.masks_queries_logits??I.pred_masks).sigmoid();let[Ee,pe,ke]=Te.dims;if(ke-=1,oe!==null&&oe.length!==Ee)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Oe=[];for(let Ce=0;Ce<Ee;++Ce){let tt=oe!==null?oe[Ce]:null,Ge=Te[Ce],be=ne[Ce],[J,ce,$e]=q(Ge,be,b,ke);if($e.length===0){let[se,Ke]=tt??be.dims.slice(-2),Ue=new w.Tensor("int32",new Int32Array(se*Ke).fill(-1),[se,Ke]);Oe.push({segmentation:Ue,segments_info:[]});continue}let[Be,Je]=ie(J,ce,$e,E,L,le,tt);Oe.push({segmentation:Be,segments_info:Je})}return Oe}function Q(I,b=.5,E=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class O extends p.Callable{constructor(b){super(),this.image_mean=b.image_mean??b.mean,this.image_std=b.image_std??b.std,this.resample=b.resample??2,this.do_rescale=b.do_rescale??!0,this.rescale_factor=b.rescale_factor??1/255,this.do_normalize=b.do_normalize,this.do_thumbnail=b.do_thumbnail,this.size=b.size??b.image_size,this.do_resize=b.do_resize??this.size!==void 0,this.size_divisibility=b.size_divisibility??b.size_divisor,this.do_center_crop=b.do_center_crop,this.crop_size=b.crop_size,this.do_convert_rgb=b.do_convert_rgb??!0,this.do_crop_margin=b.do_crop_margin,this.pad_size=b.pad_size,this.do_pad=b.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=b.do_flip_channel_order??!1,this.config=b}async thumbnail(b,E,L=2){const le=b.height,oe=b.width,Te=E.height,we=E.width;let ne=Math.min(le,Te),Ee=Math.min(oe,we);return ne===le&&Ee===oe?b:(le>oe?Ee=Math.floor(oe*ne/le):oe>le&&(ne=Math.floor(le*Ee/oe)),await b.resize(Ee,ne,{resample:L}))}async crop_margin(b,E=200){const L=b.clone().grayscale(),le=(0,A.min)(L.data)[0],Te=(0,A.max)(L.data)[0]-le;if(Te===0)return b;const we=E/255;let ne=L.width,Ee=L.height,pe=0,ke=0;const Oe=L.data;for(let Ce=0;Ce<L.height;++Ce){const tt=Ce*L.width;for(let Ge=0;Ge<L.width;++Ge)(Oe[tt+Ge]-le)/Te<we&&(ne=Math.min(ne,Ge),Ee=Math.min(Ee,Ce),pe=Math.max(pe,Ge),ke=Math.max(ke,Ce))}return b=await b.crop([ne,Ee,pe,ke]),b}pad_image(b,E,L,{mode:le="constant",center:oe=!1,constant_values:Te=0}={}){const[we,ne,Ee]=E;let pe,ke;if(typeof L=="number"?(pe=L,ke=L):L==="square"?pe=ke=Math.max(we,ne):(pe=L.width,ke=L.height),pe!==ne||ke!==we){const Oe=new Float32Array(pe*ke*Ee);if(Array.isArray(Te))for(let Ge=0;Ge<Oe.length;++Ge)Oe[Ge]=Te[Ge%Ee];else Te!==0&&Oe.fill(Te);const[Ce,tt]=oe?[Math.floor((pe-ne)/2),Math.floor((ke-we)/2)]:[0,0];for(let Ge=0;Ge<we;++Ge){const be=(Ge+tt)*pe,J=Ge*ne;for(let ce=0;ce<ne;++ce){const $e=(be+ce+Ce)*Ee,Be=(J+ce)*Ee;for(let Je=0;Je<Ee;++Je)Oe[$e+Je]=b[Be+Je]}}if(le==="symmetric"){if(oe)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Ge=we-1,be=ne-1;for(let J=0;J<ke;++J){const ce=J*pe,$e=(0,D.calculateReflectOffset)(J,Ge)*ne;for(let Be=0;Be<pe;++Be){if(J<we&&Be<ne)continue;const Je=(ce+Be)*Ee,se=($e+(0,D.calculateReflectOffset)(Be,be))*Ee;for(let Ke=0;Ke<Ee;++Ke)Oe[Je+Ke]=b[se+Ke]}}}b=Oe,E=[ke,pe,Ee]}return[b,E]}rescale(b){for(let E=0;E<b.length;++E)b[E]=this.rescale_factor*b[E]}get_resize_output_image_size(b,E){const[L,le]=b.size;let oe,Te;if(this.do_thumbnail){const{height:we,width:ne}=E;oe=Math.min(we,ne)}else Number.isInteger(E)?(oe=E,Te=this.config.max_size??oe):E!==void 0&&(oe=E.shortest_edge,Te=E.longest_edge);if(oe!==void 0||Te!==void 0){const we=oe===void 0?1:Math.max(oe/L,oe/le),ne=L*we,Ee=le*we,pe=Te===void 0?1:Math.min(Te/ne,Te/Ee);let ke=Math.floor(Number((ne*pe).toFixed(2))),Oe=Math.floor(Number((Ee*pe).toFixed(2)));return this.size_divisibility!==void 0&&([ke,Oe]=v([ke,Oe],this.size_divisibility)),[ke,Oe]}else if(E!==void 0&&E.width!==void 0&&E.height!==void 0){let we=E.width,ne=E.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ee=ne/le,pe=we/L;Math.abs(1-pe)<Math.abs(1-Ee)?Ee=pe:pe=Ee,ne=x(Ee*le,this.config.ensure_multiple_of),we=x(pe*L,this.config.ensure_multiple_of)}return[we,ne]}else{if(this.size_divisibility!==void 0)return v([L,le],this.size_divisibility);if(E.min_pixels!==void 0&&E.max_pixels!==void 0){const{min_pixels:we,max_pixels:ne}=E,Ee=this.config.patch_size*this.config.merge_size;return G(le,L,Ee,we,ne)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(E)}`)}}async resize(b){const[E,L]=this.get_resize_output_image_size(b,this.size);return await b.resize(E,L,{resample:this.resample})}async preprocess(b,{do_normalize:E=null,do_pad:L=null,do_convert_rgb:le=null,do_convert_grayscale:oe=null,do_flip_channel_order:Te=null}={}){this.do_crop_margin&&(b=await this.crop_margin(b));const[we,ne]=b.size;if(le??this.do_convert_rgb?b=b.rgb():oe&&(b=b.grayscale()),this.do_resize&&(b=await this.resize(b)),this.do_thumbnail&&(b=await this.thumbnail(b,this.size,this.resample)),this.do_center_crop){let Ce,tt;Number.isInteger(this.crop_size)?(Ce=this.crop_size,tt=this.crop_size):(Ce=this.crop_size.width,tt=this.crop_size.height),b=await b.center_crop(Ce,tt)}const Ee=[b.height,b.width];let pe=Float32Array.from(b.data),ke=[b.height,b.width,b.channels];if(this.do_rescale&&this.rescale(pe),E??this.do_normalize){let Ce=this.image_mean;Array.isArray(this.image_mean)||(Ce=new Array(b.channels).fill(Ce));let tt=this.image_std;if(Array.isArray(this.image_std)||(tt=new Array(b.channels).fill(Ce)),Ce.length!==b.channels||tt.length!==b.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Ce.length}) and \`image_std\` (${tt.length}) must match the number of channels in the image (${b.channels}).`);for(let Ge=0;Ge<pe.length;Ge+=b.channels)for(let be=0;be<b.channels;++be)pe[Ge+be]=(pe[Ge+be]-Ce[be])/tt[be]}if(L??this.do_pad){if(this.pad_size)[pe,ke]=this.pad_image(pe,[b.height,b.width,b.channels],this.pad_size);else if(this.size_divisibility){const[Ce,tt]=v([ke[1],ke[0]],this.size_divisibility);[pe,ke]=this.pad_image(pe,ke,{width:Ce,height:tt})}}if(Te??this.do_flip_channel_order){if(ke[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Ce=0;Ce<pe.length;Ce+=3){const tt=pe[Ce];pe[Ce]=pe[Ce+2],pe[Ce+2]=tt}}const Oe=new w.Tensor("float32",pe,ke).permute(2,0,1);return{original_size:[ne,we],reshaped_input_size:Ee,pixel_values:Oe}}async _call(b,...E){Array.isArray(b)||(b=[b]);const L=await Promise.all(b.map(oe=>this.preprocess(oe)));return{pixel_values:(0,w.stack)(L.map(oe=>oe.pixel_values),0),original_sizes:L.map(oe=>oe.original_size),reshaped_input_sizes:L.map(oe=>oe.reshaped_input_size)}}static async from_pretrained(b,E){const L=await(0,z.getModelJSON)(b,g.IMAGE_PROCESSOR_NAME,!0,E);return new this(L)}}},"./src/base/processing_utils.js":(te,h,s)=>{s.r(h),s.d(h,{Processor:()=>D});var p=s("./src/utils/constants.js"),w=s("./src/utils/generic.js"),A=s("./src/utils/hub.js");class D extends w.Callable{constructor(g,x){super(),this.config=g,this.components=x}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(g,x={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(g,{tokenize:!1,...x})}batch_decode(...g){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...g)}decode(...g){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...g)}async _call(g,...x){for(const v of[this.image_processor,this.feature_extractor,this.tokenizer])if(v)return v(g,...x);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(g,x){const[v,M]=await Promise.all([this.uses_processor_config?(0,A.getModelJSON)(g,p.PROCESSOR_NAME,!0,x):{},Promise.all(this.classes.filter(T=>T in this).map(async T=>{const F=await this[T].from_pretrained(g,x);return[T.replace(/_class$/,""),F]})).then(Object.fromEntries)]);return new this(v,M)}}fe(D,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),fe(D,"uses_processor_config",!1)},"./src/configs.js":(te,h,s)=>{s.r(h),s.d(h,{AutoConfig:()=>x,PretrainedConfig:()=>g,getKeyValueShapes:()=>z});var p=s("./src/utils/core.js"),w=s("./src/utils/hub.js");async function A(v,M){return await(0,w.getModelJSON)(v,"config.json",!0,M)}function D(v){const M={};let T={};switch(v.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":T=D(v.text_config);break;case"moondream1":T=D(v.phi_config);break;case"musicgen":T=D(v.decoder);break;case"multi_modality":T=D(v.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":M.num_heads="num_attention_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size",M.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.dim_kv="head_dim";break;case"openelm":M.num_heads="num_kv_heads",M.num_layers="num_transformer_layers",M.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":M.num_heads="num_heads",M.num_layers="num_layers",M.hidden_size="hidden_size";break;case"bloom":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="hidden_size";break;case"mpt":M.num_heads="n_heads",M.num_layers="n_layers",M.hidden_size="d_model";break;case"exaone":M.num_heads="num_key_value_heads",M.num_layers="num_layers",M.dim_kv="head_dim",M.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":M.num_decoder_layers="num_decoder_layers",M.num_decoder_heads="num_heads",M.decoder_dim_kv="d_kv",M.num_encoder_layers="num_layers",M.num_encoder_heads="num_heads",M.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="d_model",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="d_model";break;case"speecht5":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="hidden_size",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="hidden_size";break;case"trocr":M.num_encoder_layers=M.num_decoder_layers="decoder_layers",M.num_encoder_heads=M.num_decoder_heads="decoder_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="d_model";break;case"musicgen_decoder":M.num_encoder_layers=M.num_decoder_layers="num_hidden_layers",M.num_encoder_heads=M.num_decoder_heads="num_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"moonshine":M.num_decoder_layers="decoder_num_hidden_layers",M.num_decoder_heads="decoder_num_key_value_heads",M.num_encoder_layers="encoder_num_hidden_layers",M.num_encoder_heads="encoder_num_key_value_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const q=D(v.decoder),re="num_decoder_layers"in q,ie=(0,p.pick)(v,["model_type","is_encoder_decoder"]);return re?(ie.num_decoder_layers=q.num_decoder_layers,ie.num_decoder_heads=q.num_decoder_heads,ie.decoder_hidden_size=q.decoder_hidden_size,ie.num_encoder_layers=q.num_encoder_layers,ie.num_encoder_heads=q.num_encoder_heads,ie.encoder_hidden_size=q.encoder_hidden_size):(ie.num_layers=q.num_layers,ie.num_heads=q.num_heads,ie.hidden_size=q.hidden_size),ie}const F={...T,...(0,p.pick)(v,["model_type","multi_query","is_encoder_decoder"])};for(const q in M)F[q]=v[M[q]];return F}function z(v,{prefix:M="past_key_values",batch_size:T=1}={}){const F={},q=v.normalized_config;if(q.is_encoder_decoder&&"num_encoder_heads"in q&&"num_decoder_heads"in q){const re=q.encoder_dim_kv??q.encoder_hidden_size/q.num_encoder_heads,ie=q.decoder_dim_kv??q.decoder_hidden_size/q.num_decoder_heads,G=[T,q.num_encoder_heads,0,re],V=[T,q.num_decoder_heads,0,ie];for(let Q=0;Q<q.num_decoder_layers;++Q)F[`${M}.${Q}.encoder.key`]=G,F[`${M}.${Q}.encoder.value`]=G,F[`${M}.${Q}.decoder.key`]=V,F[`${M}.${Q}.decoder.value`]=V}else{const re=q.num_heads,ie=q.num_layers,G=q.dim_kv??q.hidden_size/(q.num_attention_heads??re);if(q.model_type==="falcon"){const V=[T*re,0,G];for(let Q=0;Q<ie;++Q)F[`${M}.${Q}.key`]=V,F[`${M}.${Q}.value`]=V}else if(q.multi_query){const V=[T*re,0,2*G];for(let Q=0;Q<ie;++Q)F[`${M}.${Q}.key_value`]=V}else if(q.model_type==="bloom"){const V=[T*re,G,0],Q=[T*re,0,G];for(let O=0;O<ie;++O)F[`${M}.${O}.key`]=V,F[`${M}.${O}.value`]=Q}else if(q.model_type==="openelm")for(let V=0;V<ie;++V){const Q=[T,re[V],0,G];F[`${M}.${V}.key`]=Q,F[`${M}.${V}.value`]=Q}else{const V=[T,re,0,G];for(let Q=0;Q<ie;++Q)F[`${M}.${Q}.key`]=V,F[`${M}.${Q}.value`]=V}}return F}class g{constructor(M){fe(this,"model_type",null);fe(this,"is_encoder_decoder",!1);fe(this,"max_position_embeddings");fe(this,"transformers.js_config");Object.assign(this,M),this.normalized_config=D(this)}static async from_pretrained(M,{progress_callback:T=null,config:F=null,cache_dir:q=null,local_files_only:re=!1,revision:ie="main"}={}){F&&!(F instanceof g)&&(F=new g(F));const G=F??await A(M,{progress_callback:T,config:F,cache_dir:q,local_files_only:re,revision:ie});return new this(G)}}class x{static async from_pretrained(...M){return g.from_pretrained(...M)}}},"./src/env.js":(te,h,s)=>{var L,le;s.r(h),s.d(h,{apis:()=>ie,env:()=>b});var p=s("?569f"),w=s("?3f59"),A=s("?154a");const D="3.3.3",z=typeof window<"u"&&typeof window.document<"u",g=typeof self<"u"&&((L=self.constructor)==null?void 0:L.name)==="DedicatedWorkerGlobalScope",x=typeof self<"u"&&"caches"in self,v=typeof navigator<"u"&&"gpu"in navigator,M=typeof navigator<"u"&&"ml"in navigator,T=typeof process<"u",F=T&&((le=process==null?void 0:process.release)==null?void 0:le.name)==="node",q=!E(p),re=!E(w),ie=Object.freeze({IS_BROWSER_ENV:z,IS_WEBWORKER_ENV:g,IS_WEB_CACHE_AVAILABLE:x,IS_WEBGPU_AVAILABLE:v,IS_WEBNN_AVAILABLE:M,IS_PROCESS_AVAILABLE:T,IS_NODE_ENV:F,IS_FS_AVAILABLE:q,IS_PATH_AVAILABLE:re}),G=q&&re;let V="./";if(G){const oe=Object(import.meta).url;oe?V=w.dirname(w.dirname(A.fileURLToPath(oe))):typeof __dirname<"u"&&(V=w.dirname(__dirname))}const Q=G?w.join(V,"/.cache/"):null,O="/models/",I=G?w.join(V,O):O,b={version:D,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(z||g),localModelPath:I,useFS:q,useBrowserCache:x,useFSCache:q,cacheDir:Q,useCustomCache:!1,customCache:null};function E(oe){return Object.keys(oe).length===0}},"./src/generation/configuration_utils.js":(te,h,s)=>{s.r(h),s.d(h,{GenerationConfig:()=>w});var p=s("./src/utils/core.js");class w{constructor(D){fe(this,"max_length",20);fe(this,"max_new_tokens",null);fe(this,"min_length",0);fe(this,"min_new_tokens",null);fe(this,"early_stopping",!1);fe(this,"max_time",null);fe(this,"do_sample",!1);fe(this,"num_beams",1);fe(this,"num_beam_groups",1);fe(this,"penalty_alpha",null);fe(this,"use_cache",!0);fe(this,"temperature",1);fe(this,"top_k",50);fe(this,"top_p",1);fe(this,"typical_p",1);fe(this,"epsilon_cutoff",0);fe(this,"eta_cutoff",0);fe(this,"diversity_penalty",0);fe(this,"repetition_penalty",1);fe(this,"encoder_repetition_penalty",1);fe(this,"length_penalty",1);fe(this,"no_repeat_ngram_size",0);fe(this,"bad_words_ids",null);fe(this,"force_words_ids",null);fe(this,"renormalize_logits",!1);fe(this,"constraints",null);fe(this,"forced_bos_token_id",null);fe(this,"forced_eos_token_id",null);fe(this,"remove_invalid_values",!1);fe(this,"exponential_decay_length_penalty",null);fe(this,"suppress_tokens",null);fe(this,"streamer",null);fe(this,"begin_suppress_tokens",null);fe(this,"forced_decoder_ids",null);fe(this,"guidance_scale",null);fe(this,"num_return_sequences",1);fe(this,"output_attentions",!1);fe(this,"output_hidden_states",!1);fe(this,"output_scores",!1);fe(this,"return_dict_in_generate",!1);fe(this,"pad_token_id",null);fe(this,"bos_token_id",null);fe(this,"eos_token_id",null);fe(this,"encoder_no_repeat_ngram_size",0);fe(this,"decoder_start_token_id",null);fe(this,"generation_kwargs",{});Object.assign(this,(0,p.pick)(D,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(te,h,s)=>{s.r(h),s.d(h,{ClassifierFreeGuidanceLogitsProcessor:()=>G,ForcedBOSTokenLogitsProcessor:()=>g,ForcedEOSTokenLogitsProcessor:()=>x,LogitsProcessor:()=>A,LogitsProcessorList:()=>z,LogitsWarper:()=>D,MinLengthLogitsProcessor:()=>q,MinNewTokensLengthLogitsProcessor:()=>re,NoBadWordsLogitsProcessor:()=>ie,NoRepeatNGramLogitsProcessor:()=>T,RepetitionPenaltyLogitsProcessor:()=>F,SuppressTokensAtBeginLogitsProcessor:()=>v,TemperatureLogitsWarper:()=>V,TopKLogitsWarper:()=>O,TopPLogitsWarper:()=>Q,WhisperTimeStampLogitsProcessor:()=>M});var p=s("./src/utils/generic.js");s("./src/utils/tensor.js");var w=s("./src/utils/maths.js");class A extends p.Callable{_call(b,E){throw Error("`_call` should be implemented in a subclass")}}class D extends p.Callable{_call(b,E){throw Error("`_call` should be implemented in a subclass")}}class z extends p.Callable{constructor(){super(),this.processors=[]}push(b){this.processors.push(b)}extend(b){this.processors.push(...b)}_call(b,E){let L=E;for(const le of this.processors)L=le(b,L);return L}[Symbol.iterator](){return this.processors.values()}}class g extends A{constructor(b){super(),this.bos_token_id=b}_call(b,E){for(let L=0;L<b.length;++L)if(b[L].length===1){const le=E[L].data;le.fill(-1/0),le[this.bos_token_id]=0}return E}}class x extends A{constructor(b,E){super(),this.max_length=b,this.eos_token_id=Array.isArray(E)?E:[E]}_call(b,E){for(let L=0;L<b.length;++L)if(b[L].length===this.max_length-1){const le=E[L].data;le.fill(-1/0);for(const oe of this.eos_token_id)le[oe]=0}return E}}class v extends A{constructor(b,E){super(),this.begin_suppress_tokens=b,this.begin_index=E}_call(b,E){for(let L=0;L<b.length;++L)if(b[L].length===this.begin_index){const le=E[L].data;for(const oe of this.begin_suppress_tokens)le[oe]=-1/0}return E}}class M extends A{constructor(b,E){super(),this.eos_token_id=Array.isArray(b.eos_token_id)?b.eos_token_id[0]:b.eos_token_id,this.no_timestamps_token_id=b.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=E.length,E.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=b.max_initial_timestamp_index}_call(b,E){for(let L=0;L<b.length;++L){const le=E[L].data;if(le[this.no_timestamps_token_id]=-1/0,b[L].length===this.begin_index-1){le.fill(-1/0),le[this.timestamp_begin]=0;continue}const oe=b[L].slice(this.begin_index),Te=oe.length>=1&&oe[oe.length-1]>=this.timestamp_begin,we=oe.length<2||oe[oe.length-2]>=this.timestamp_begin;if(Te&&(we?le.subarray(this.timestamp_begin).fill(-1/0):le.subarray(0,this.eos_token_id).fill(-1/0)),b[L].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ke=this.timestamp_begin+this.max_initial_timestamp_index;le.subarray(ke+1).fill(-1/0)}const ne=(0,w.log_softmax)(le),Ee=Math.log(ne.subarray(this.timestamp_begin).map(Math.exp).reduce((ke,Oe)=>ke+Oe)),pe=(0,w.max)(ne.subarray(0,this.timestamp_begin))[0];Ee>pe&&le.subarray(0,this.timestamp_begin).fill(-1/0)}return E}}class T extends A{constructor(b){super(),this.no_repeat_ngram_size=b}getNgrams(b){const E=b.length,L=[];for(let oe=0;oe<E+1-this.no_repeat_ngram_size;++oe){const Te=[];for(let we=0;we<this.no_repeat_ngram_size;++we)Te.push(b[oe+we]);L.push(Te.map(Number))}const le=new Map;for(const oe of L){const Te=oe.slice(0,oe.length-1),we=JSON.stringify(Te),ne=le.get(we)??[];ne.push(oe[oe.length-1]),le.set(we,ne)}return le}getGeneratedNgrams(b,E){const L=E.slice(E.length+1-this.no_repeat_ngram_size,E.length);return b.get(JSON.stringify(L.map(Number)))??[]}calcBannedNgramTokens(b){const E=[];if(b.length+1<this.no_repeat_ngram_size)return E;{const L=this.getNgrams(b);return this.getGeneratedNgrams(L,b)}}_call(b,E){for(let L=0;L<b.length;++L){const le=E[L].data,oe=this.calcBannedNgramTokens(b[L]);for(const Te of oe)le[Te]=-1/0}return E}}class F extends A{constructor(b){super(),this.penalty=b}_call(b,E){for(let L=0;L<b.length;++L){const le=E[L].data;for(const oe of new Set(b[L])){const Te=Number(oe);le[Te]<0?le[Te]*=this.penalty:le[Te]/=this.penalty}}return E}}class q extends A{constructor(b,E){super(),this.min_length=b,this.eos_token_id=Array.isArray(E)?E:[E]}_call(b,E){for(let L=0;L<b.length;++L)if(b[L].length<this.min_length){const le=E[L].data;for(const oe of this.eos_token_id)le[oe]=-1/0}return E}}class re extends A{constructor(b,E,L){super(),this.prompt_length_to_skip=b,this.min_new_tokens=E,this.eos_token_id=Array.isArray(L)?L:[L]}_call(b,E){for(let L=0;L<b.length;++L)if(b[L].length-this.prompt_length_to_skip<this.min_new_tokens){const oe=E[L].data;for(const Te of this.eos_token_id)oe[Te]=-1/0}return E}}class ie extends A{constructor(b,E){super(),this.bad_words_ids=b,this.eos_token_id=Array.isArray(E)?E:[E]}_call(b,E){for(let L=0;L<b.length;++L){const le=E[L].data,oe=b[L];for(const Te of this.bad_words_ids){let we=!0;for(let ne=1;ne<=Te.length-1&&Te.length<oe.length;++ne)if(Te.at(-ne-1)!=oe.at(-ne)){we=!1;break}we&&(le[Te.at(-1)]=-1/0)}}return E}}class G extends A{constructor(b){if(super(),b<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${b}.`);this.guidance_scale=b}_call(b,E){if(E.dims[0]!==2*b.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${E.dims[0]} for the logits and ${b.length} for the input ids.`);const L=b.length,le=E.slice([0,L],null),oe=E.slice([L,E.dims[0]],null);for(let Te=0;Te<oe.data.length;++Te)oe.data[Te]+=(le.data[Te]-oe.data[Te])*this.guidance_scale;return oe}}class V extends D{constructor(b){super(),this.temperature=b}_call(b,E){const L=E.data;for(let le=0;le<L.length;++le)L[le]/=this.temperature;return E}}class Q extends D{constructor(b,{filter_value:E=-1/0,min_tokens_to_keep:L=1}={}){if(super(),b<0||b>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${b}`);if(!Number.isInteger(L)||L<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${L}`);this.top_p=b,this.filter_value=E,this.min_tokens_to_keep=L}}class O extends D{constructor(b,{filter_value:E=-1/0,min_tokens_to_keep:L=1}={}){if(super(),!Number.isInteger(b)||b<0)throw new Error(`\`top_k\` must be a positive integer, but is ${b}`);this.top_k=Math.max(b,L),this.filter_value=E}}},"./src/generation/logits_sampler.js":(te,h,s)=>{s.r(h),s.d(h,{LogitsSampler:()=>D});var p=s("./src/utils/generic.js"),w=s("./src/utils/tensor.js"),A=s("./src/utils/maths.js");s("./src/generation/configuration_utils.js");class D extends p.Callable{constructor(M){super(),this.generation_config=M}async _call(M){return this.sample(M)}async sample(M){throw Error("sample should be implemented in subclasses.")}getLogits(M,T){let F=M.dims.at(-1),q=M.data;if(T===-1)q=q.slice(-F);else{let re=T*F;q=q.slice(re,re+F)}return q}randomSelect(M){let T=0;for(let q=0;q<M.length;++q)T+=M[q];let F=Math.random()*T;for(let q=0;q<M.length;++q)if(F-=M[q],F<=0)return q;return 0}static getSampler(M){if(M.do_sample)return new g(M);if(M.num_beams>1)return new x(M);if(M.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${M.num_return_sequences}.`);return new z(M)}}class z extends D{async sample(M){const T=(0,A.max)(M.data)[1];return[[BigInt(T),0]]}}class g extends D{async sample(M){let T=M.dims.at(-1);this.generation_config.top_k>0&&(T=Math.min(this.generation_config.top_k,T));const[F,q]=await(0,w.topk)(M,T),re=(0,A.softmax)(F.data);return Array.from({length:this.generation_config.num_beams},()=>{const ie=this.randomSelect(re);return[q.data[ie],Math.log(re[ie])]})}}class x extends D{async sample(M){let T=M.dims.at(-1);this.generation_config.top_k>0&&(T=Math.min(this.generation_config.top_k,T));const[F,q]=await(0,w.topk)(M,T),re=(0,A.softmax)(F.data);return Array.from({length:this.generation_config.num_beams},(ie,G)=>[q.data[G],Math.log(re[G])])}}},"./src/generation/stopping_criteria.js":(te,h,s)=>{s.r(h),s.d(h,{EosTokenCriteria:()=>z,InterruptableStoppingCriteria:()=>g,MaxLengthCriteria:()=>D,StoppingCriteria:()=>w,StoppingCriteriaList:()=>A});var p=s("./src/utils/generic.js");class w extends p.Callable{_call(v,M){throw Error("StoppingCriteria needs to be subclassed")}}class A extends p.Callable{constructor(){super(),this.criteria=[]}push(v){this.criteria.push(v)}extend(v){v instanceof A?v=v.criteria:v instanceof w&&(v=[v]),this.criteria.push(...v)}_call(v,M){const T=new Array(v.length).fill(!1);for(const F of this.criteria){const q=F(v,M);for(let re=0;re<T.length;++re)T[re]||(T[re]=q[re])}return T}[Symbol.iterator](){return this.criteria.values()}}class D extends w{constructor(v,M=null){super(),this.max_length=v,this.max_position_embeddings=M}_call(v){return v.map(M=>M.length>=this.max_length)}}class z extends w{constructor(v){super(),Array.isArray(v)||(v=[v]),this.eos_token_id=v}_call(v,M){return v.map(T=>{const F=T.at(-1);return this.eos_token_id.some(q=>F==q)})}}class g extends w{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(v,M){return new Array(v.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(te,h,s)=>{s.r(h),s.d(h,{BaseStreamer:()=>D,TextStreamer:()=>g,WhisperTextStreamer:()=>x});var p=s("./src/utils/core.js"),w=s("./src/tokenizers.js"),A=s("./src/env.js");class D{put(M){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const z=A.apis.IS_PROCESS_AVAILABLE?v=>process.stdout.write(v):v=>console.log(v);class g extends D{constructor(M,{skip_prompt:T=!1,callback_function:F=null,token_callback_function:q=null,skip_special_tokens:re=!0,decode_kwargs:ie={},...G}={}){super(),this.tokenizer=M,this.skip_prompt=T,this.callback_function=F??z,this.token_callback_function=q,this.decode_kwargs={skip_special_tokens:re,...ie,...G},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(M){var re;if(M.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const T=M[0];(re=this.token_callback_function)==null||re.call(this,T),this.token_cache=(0,p.mergeArrays)(this.token_cache,T);const F=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let q;F.endsWith(`
`)?(q=F.slice(this.print_len),this.token_cache=[],this.print_len=0):F.length>0&&(0,w.is_chinese_char)(F.charCodeAt(F.length-1))?(q=F.slice(this.print_len),this.print_len+=q.length):(q=F.slice(this.print_len,F.lastIndexOf(" ")+1),this.print_len+=q.length),this.on_finalized_text(q,!1)}end(){let M;this.token_cache.length>0?(M=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):M="",this.next_tokens_are_prompt=!0,this.on_finalized_text(M,!0)}on_finalized_text(M,T){var F,q;M.length>0&&((F=this.callback_function)==null||F.call(this,M)),T&&this.callback_function===z&&A.apis.IS_PROCESS_AVAILABLE&&((q=this.callback_function)==null||q.call(this,`
`))}}class x extends g{constructor(M,{skip_prompt:T=!1,callback_function:F=null,token_callback_function:q=null,on_chunk_start:re=null,on_chunk_end:ie=null,on_finalize:G=null,time_precision:V=.02,skip_special_tokens:Q=!0,decode_kwargs:O={}}={}){super(M,{skip_prompt:T,skip_special_tokens:Q,callback_function:F,token_callback_function:q,decode_kwargs:O}),this.timestamp_begin=M.timestamp_begin,this.on_chunk_start=re,this.on_chunk_end=ie,this.on_finalize=G,this.time_precision=V,this.waiting_for_timestamp=!1}put(M){var F,q;if(M.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const T=M[0];if(T.length===1){const re=Number(T[0])-this.timestamp_begin;if(re>=0){const ie=re*this.time_precision;this.waiting_for_timestamp?(F=this.on_chunk_end)==null||F.call(this,ie):(q=this.on_chunk_start)==null||q.call(this,ie),this.waiting_for_timestamp=!this.waiting_for_timestamp,M=[[]]}}return super.put(M)}end(){var M;super.end(),(M=this.on_finalize)==null||M.call(this)}}},"./src/models.js":(te,h,s)=>{s.r(h),s.d(h,{ASTForAudioClassification:()=>Zi,ASTModel:()=>tl,ASTPreTrainedModel:()=>Jt,AlbertForMaskedLM:()=>os,AlbertForQuestionAnswering:()=>jn,AlbertForSequenceClassification:()=>En,AlbertModel:()=>Nn,AlbertPreTrainedModel:()=>Kr,AutoModel:()=>za,AutoModelForAudioClassification:()=>Ic,AutoModelForAudioFrameClassification:()=>Fc,AutoModelForCTC:()=>Ac,AutoModelForCausalLM:()=>Mc,AutoModelForDepthEstimation:()=>zc,AutoModelForDocumentQuestionAnswering:()=>Wp,AutoModelForImageClassification:()=>Ec,AutoModelForImageFeatureExtraction:()=>Rc,AutoModelForImageMatting:()=>Dc,AutoModelForImageSegmentation:()=>Pc,AutoModelForImageToImage:()=>Lc,AutoModelForMaskGeneration:()=>kc,AutoModelForMaskedLM:()=>vc,AutoModelForNormalEstimation:()=>Gp,AutoModelForObjectDetection:()=>$c,AutoModelForPoseEstimation:()=>Bc,AutoModelForQuestionAnswering:()=>xc,AutoModelForSemanticSegmentation:()=>Cc,AutoModelForSeq2SeqLM:()=>yc,AutoModelForSequenceClassification:()=>Vp,AutoModelForSpeechSeq2Seq:()=>wc,AutoModelForTextToSpectrogram:()=>Ba,AutoModelForTextToWaveform:()=>bc,AutoModelForTokenClassification:()=>gc,AutoModelForUniversalSegmentation:()=>Ra,AutoModelForVision2Seq:()=>Tc,AutoModelForXVector:()=>Oc,AutoModelForZeroShotObjectDetection:()=>Sc,BartForConditionalGeneration:()=>Kt,BartForSequenceClassification:()=>_s,BartModel:()=>Tt,BartPretrainedModel:()=>_t,BaseModelOutput:()=>Ue,BeitForImageClassification:()=>on,BeitModel:()=>nn,BeitPreTrainedModel:()=>$u,BertForMaskedLM:()=>Ve,BertForQuestionAnswering:()=>je,BertForSequenceClassification:()=>We,BertForTokenClassification:()=>Ne,BertModel:()=>ve,BertPreTrainedModel:()=>ue,BlenderbotForConditionalGeneration:()=>Zs,BlenderbotModel:()=>ze,BlenderbotPreTrainedModel:()=>Ws,BlenderbotSmallForConditionalGeneration:()=>Xs,BlenderbotSmallModel:()=>Ss,BlenderbotSmallPreTrainedModel:()=>Or,BloomForCausalLM:()=>su,BloomModel:()=>tu,BloomPreTrainedModel:()=>Io,CLIPModel:()=>hl,CLIPPreTrainedModel:()=>rn,CLIPSegForImageSegmentation:()=>bl,CLIPSegModel:()=>wl,CLIPSegPreTrainedModel:()=>oo,CLIPTextModel:()=>ip,CLIPTextModelWithProjection:()=>ml,CLIPVisionModel:()=>op,CLIPVisionModelWithProjection:()=>_l,CamembertForMaskedLM:()=>Zr,CamembertForQuestionAnswering:()=>en,CamembertForSequenceClassification:()=>Sr,CamembertForTokenClassification:()=>kr,CamembertModel:()=>Nt,CamembertPreTrainedModel:()=>xr,CausalLMOutput:()=>cn,CausalLMOutputWithPast:()=>Hp,ChineseCLIPModel:()=>gr,ChineseCLIPPreTrainedModel:()=>ap,ClapAudioModelWithProjection:()=>kd,ClapModel:()=>nr,ClapPreTrainedModel:()=>wa,ClapTextModelWithProjection:()=>Sd,CodeGenForCausalLM:()=>Il,CodeGenModel:()=>mo,CodeGenPreTrainedModel:()=>hi,CohereForCausalLM:()=>Ul,CohereModel:()=>jl,CoherePreTrainedModel:()=>Eo,ConvBertForMaskedLM:()=>$t,ConvBertForQuestionAnswering:()=>bs,ConvBertForSequenceClassification:()=>kt,ConvBertForTokenClassification:()=>is,ConvBertModel:()=>vt,ConvBertPreTrainedModel:()=>ct,ConvNextForImageClassification:()=>la,ConvNextModel:()=>Vu,ConvNextPreTrainedModel:()=>aa,ConvNextV2ForImageClassification:()=>da,ConvNextV2Model:()=>Wu,ConvNextV2PreTrainedModel:()=>ua,DPTForDepthEstimation:()=>_p,DPTModel:()=>Fu,DPTPreTrainedModel:()=>na,DebertaForMaskedLM:()=>Ar,DebertaForQuestionAnswering:()=>ar,DebertaForSequenceClassification:()=>Nr,DebertaForTokenClassification:()=>jr,DebertaModel:()=>Rr,DebertaPreTrainedModel:()=>cr,DebertaV2ForMaskedLM:()=>Ft,DebertaV2ForQuestionAnswering:()=>Ir,DebertaV2ForSequenceClassification:()=>Vs,DebertaV2ForTokenClassification:()=>Ur,DebertaV2Model:()=>xt,DebertaV2PreTrainedModel:()=>it,DecisionTransformerModel:()=>Fp,DecisionTransformerPreTrainedModel:()=>Vd,DeiTForImageClassification:()=>Xo,DeiTModel:()=>Au,DeiTPreTrainedModel:()=>wi,DepthAnythingForDepthEstimation:()=>Lu,DepthAnythingPreTrainedModel:()=>Du,DepthProForDepthEstimation:()=>oa,DepthProPreTrainedModel:()=>vi,DetrForObjectDetection:()=>an,DetrForSegmentation:()=>Ks,DetrModel:()=>Wo,DetrObjectDetectionOutput:()=>Go,DetrPreTrainedModel:()=>Fr,DetrSegmentationOutput:()=>Ko,Dinov2ForImageClassification:()=>yp,Dinov2Model:()=>Gu,Dinov2PreTrainedModel:()=>ca,Dinov2WithRegistersForImageClassification:()=>Hu,Dinov2WithRegistersModel:()=>Ku,Dinov2WithRegistersPreTrainedModel:()=>pa,DistilBertForMaskedLM:()=>wn,DistilBertForQuestionAnswering:()=>ss,DistilBertForSequenceClassification:()=>Os,DistilBertForTokenClassification:()=>Tr,DistilBertModel:()=>lr,DistilBertPreTrainedModel:()=>Ms,DonutSwinModel:()=>Uu,DonutSwinPreTrainedModel:()=>gp,EfficientNetForImageClassification:()=>Ld,EfficientNetModel:()=>Dd,EfficientNetPreTrainedModel:()=>Ai,ElectraForMaskedLM:()=>sr,ElectraForQuestionAnswering:()=>Us,ElectraForSequenceClassification:()=>$r,ElectraForTokenClassification:()=>Jr,ElectraModel:()=>Ls,ElectraPreTrainedModel:()=>$s,EsmForMaskedLM:()=>On,EsmForSequenceClassification:()=>Fn,EsmForTokenClassification:()=>Dn,EsmModel:()=>li,EsmPreTrainedModel:()=>Vr,ExaoneForCausalLM:()=>bo,ExaoneModel:()=>Dl,ExaonePreTrainedModel:()=>wo,FalconForCausalLM:()=>$d,FalconModel:()=>Cd,FalconPreTrainedModel:()=>ya,FastViTForImageClassification:()=>yu,FastViTModel:()=>gu,FastViTPreTrainedModel:()=>Ro,Florence2ForConditionalGeneration:()=>ll,Florence2PreTrainedModel:()=>al,GLPNForDepthEstimation:()=>ju,GLPNModel:()=>fp,GLPNPreTrainedModel:()=>Ti,GPT2LMHeadModel:()=>vl,GPT2Model:()=>Ml,GPT2PreTrainedModel:()=>ao,GPTBigCodeForCausalLM:()=>Al,GPTBigCodeModel:()=>kl,GPTBigCodePreTrainedModel:()=>ho,GPTJForCausalLM:()=>Sl,GPTJModel:()=>$l,GPTJPreTrainedModel:()=>po,GPTNeoForCausalLM:()=>El,GPTNeoModel:()=>wr,GPTNeoPreTrainedModel:()=>uo,GPTNeoXForCausalLM:()=>Cl,GPTNeoXModel:()=>Pl,GPTNeoXPreTrainedModel:()=>co,Gemma2ForCausalLM:()=>Kl,Gemma2Model:()=>Gl,Gemma2PreTrainedModel:()=>Co,GemmaForCausalLM:()=>Wl,GemmaModel:()=>Vl,GemmaPreTrainedModel:()=>Po,GlmForCausalLM:()=>Un,GlmModel:()=>Fl,GlmPreTrainedModel:()=>yo,GraniteForCausalLM:()=>Nl,GraniteModel:()=>ds,GranitePreTrainedModel:()=>To,GroundingDinoForObjectDetection:()=>qu,GroundingDinoPreTrainedModel:()=>wp,GroupViTModel:()=>br,GroupViTPreTrainedModel:()=>fu,HeliumForCausalLM:()=>Ol,HeliumModel:()=>mi,HeliumPreTrainedModel:()=>go,HieraForImageClassification:()=>Jo,HieraModel:()=>bi,HieraPreTrainedModel:()=>Yo,HubertForCTC:()=>_d,HubertForSequenceClassification:()=>Cp,HubertModel:()=>md,HubertPreTrainedModel:()=>Pp,IJepaForImageClassification:()=>uu,IJepaModel:()=>lu,IJepaPreTrainedModel:()=>gi,Idefics3ForConditionalGeneration:()=>ro,Idefics3PreTrainedModel:()=>cl,ImageMattingOutput:()=>jc,JAISLMHeadModel:()=>Tl,JAISModel:()=>xl,JAISPreTrainedModel:()=>lo,JinaCLIPModel:()=>pi,JinaCLIPPreTrainedModel:()=>ci,JinaCLIPTextModel:()=>io,JinaCLIPVisionModel:()=>yr,LlamaForCausalLM:()=>lp,LlamaModel:()=>fo,LlamaPreTrainedModel:()=>_o,LlavaForConditionalGeneration:()=>di,LlavaOnevisionForConditionalGeneration:()=>il,LlavaPreTrainedModel:()=>Hr,LongT5ForConditionalGeneration:()=>Ae,LongT5Model:()=>xe,LongT5PreTrainedModel:()=>de,M2M100ForConditionalGeneration:()=>_a,M2M100Model:()=>ed,M2M100PreTrainedModel:()=>ma,MBartForCausalLM:()=>rr,MBartForConditionalGeneration:()=>zt,MBartForSequenceClassification:()=>rs,MBartModel:()=>Fs,MBartPreTrainedModel:()=>us,MPNetForMaskedLM:()=>tn,MPNetForQuestionAnswering:()=>xn,MPNetForSequenceClassification:()=>Mn,MPNetForTokenClassification:()=>vn,MPNetModel:()=>bn,MPNetPreTrainedModel:()=>ur,MT5ForConditionalGeneration:()=>gt,MT5Model:()=>ht,MT5PreTrainedModel:()=>Xe,MarianMTModel:()=>Zu,MarianModel:()=>Ju,MarianPreTrainedModel:()=>Pi,MaskFormerForInstanceSegmentation:()=>Nu,MaskFormerModel:()=>Ru,MaskFormerPreTrainedModel:()=>xi,MaskedLMOutput:()=>Ys,MgpstrForSceneTextRecognition:()=>qd,MgpstrModelOutput:()=>Kd,MgpstrPreTrainedModel:()=>Hd,MistralForCausalLM:()=>Td,MistralModel:()=>xd,MistralPreTrainedModel:()=>fa,MobileBertForMaskedLM:()=>ui,MobileBertForQuestionAnswering:()=>_r,MobileBertForSequenceClassification:()=>Gr,MobileBertModel:()=>Ln,MobileBertPreTrainedModel:()=>Wr,MobileLLMForCausalLM:()=>zl,MobileLLMModel:()=>Ll,MobileLLMPreTrainedModel:()=>Mo,MobileNetV1ForImageClassification:()=>Ea,MobileNetV1Model:()=>Ip,MobileNetV1PreTrainedModel:()=>Ta,MobileNetV2ForImageClassification:()=>Bd,MobileNetV2Model:()=>zd,MobileNetV2PreTrainedModel:()=>Pa,MobileNetV3ForImageClassification:()=>jd,MobileNetV3Model:()=>Nd,MobileNetV3PreTrainedModel:()=>Rd,MobileNetV4ForImageClassification:()=>Ud,MobileNetV4Model:()=>Op,MobileNetV4PreTrainedModel:()=>Ca,MobileViTForImageClassification:()=>vu,MobileViTModel:()=>Mu,MobileViTPreTrainedModel:()=>No,MobileViTV2ForImageClassification:()=>pp,MobileViTV2Model:()=>xu,MobileViTV2PreTrainedModel:()=>jo,ModelOutput:()=>Ke,ModernBertForMaskedLM:()=>pt,ModernBertForSequenceClassification:()=>lt,ModernBertForTokenClassification:()=>mt,ModernBertModel:()=>ut,ModernBertPreTrainedModel:()=>st,Moondream1ForConditionalGeneration:()=>ol,MoonshineForConditionalGeneration:()=>nl,MoonshineModel:()=>pr,MoonshinePreTrainedModel:()=>to,MptForCausalLM:()=>nu,MptModel:()=>ru,MptPreTrainedModel:()=>Oo,MultiModalityCausalLM:()=>Gd,MultiModalityPreTrainedModel:()=>Wd,MusicgenForCausalLM:()=>Ap,MusicgenForConditionalGeneration:()=>Ii,MusicgenModel:()=>kp,MusicgenPreTrainedModel:()=>xa,NomicBertModel:()=>ae,NomicBertPreTrainedModel:()=>R,OPTForCausalLM:()=>ou,OPTModel:()=>iu,OPTPreTrainedModel:()=>Fo,Olmo2ForCausalLM:()=>dp,Olmo2Model:()=>Rl,Olmo2PreTrainedModel:()=>xo,OlmoForCausalLM:()=>Bl,OlmoModel:()=>up,OlmoPreTrainedModel:()=>vo,OpenELMForCausalLM:()=>ql,OpenELMModel:()=>Hl,OpenELMPreTrainedModel:()=>$o,OwlViTForObjectDetection:()=>Eu,OwlViTModel:()=>Tu,OwlViTPreTrainedModel:()=>Uo,Owlv2ForObjectDetection:()=>Cu,Owlv2Model:()=>Pu,Owlv2PreTrainedModel:()=>Vo,PaliGemmaForConditionalGeneration:()=>dl,PaliGemmaPreTrainedModel:()=>ul,PatchTSMixerForPrediction:()=>Zd,PatchTSMixerModel:()=>Jd,PatchTSMixerPreTrainedModel:()=>$a,PatchTSTForPrediction:()=>Yd,PatchTSTModel:()=>Xd,PatchTSTPreTrainedModel:()=>Qd,Phi3ForCausalLM:()=>eu,Phi3Model:()=>Zl,Phi3PreTrainedModel:()=>Ao,Phi3VForCausalLM:()=>hr,Phi3VPreTrainedModel:()=>pl,PhiForCausalLM:()=>Jl,PhiModel:()=>Yl,PhiPreTrainedModel:()=>ko,PreTrainedModel:()=>se,PretrainedMixin:()=>ys,PvtForImageClassification:()=>zo,PvtModel:()=>pu,PvtPreTrainedModel:()=>Lo,PyAnnoteForAudioFrameClassification:()=>id,PyAnnoteModel:()=>nd,PyAnnotePreTrainedModel:()=>Ci,QuestionAnsweringModelOutput:()=>er,Qwen2ForCausalLM:()=>Ql,Qwen2Model:()=>Vn,Qwen2PreTrainedModel:()=>So,Qwen2VLForConditionalGeneration:()=>Xl,Qwen2VLPreTrainedModel:()=>_i,RTDetrForObjectDetection:()=>Wn,RTDetrModel:()=>hp,RTDetrObjectDetectionOutput:()=>qo,RTDetrPreTrainedModel:()=>Ho,ResNetForImageClassification:()=>mp,ResNetModel:()=>Iu,ResNetPreTrainedModel:()=>Zo,RoFormerForMaskedLM:()=>Se,RoFormerForQuestionAnswering:()=>at,RoFormerForSequenceClassification:()=>Re,RoFormerForTokenClassification:()=>qe,RoFormerModel:()=>me,RoFormerPreTrainedModel:()=>K,RobertaForMaskedLM:()=>fr,RobertaForQuestionAnswering:()=>bt,RobertaForSequenceClassification:()=>fs,RobertaForTokenClassification:()=>ks,RobertaModel:()=>or,RobertaPreTrainedModel:()=>Ot,SamImageSegmentationOutput:()=>Kn,SamModel:()=>Ei,SamPreTrainedModel:()=>bp,SapiensForDepthEstimation:()=>Mi,SapiensForNormalEstimation:()=>Bu,SapiensForSemanticSegmentation:()=>zu,SapiensPreTrainedModel:()=>ia,SegformerForImageClassification:()=>Ad,SegformerForSemanticSegmentation:()=>Id,SegformerModel:()=>Sp,SegformerPreTrainedModel:()=>dn,Seq2SeqLMOutput:()=>Kp,SequenceClassifierOutput:()=>Zt,SiglipModel:()=>fl,SiglipPreTrainedModel:()=>no,SiglipTextModel:()=>gl,SiglipVisionModel:()=>yl,SpeechT5ForSpeechToText:()=>Er,SpeechT5ForTextToSpeech:()=>Dr,SpeechT5HifiGan:()=>ln,SpeechT5Model:()=>fh,SpeechT5PreTrainedModel:()=>ki,SqueezeBertForMaskedLM:()=>zn,SqueezeBertForQuestionAnswering:()=>Rn,SqueezeBertForSequenceClassification:()=>Bn,SqueezeBertModel:()=>Tn,SqueezeBertPreTrainedModel:()=>Lt,StableLmForCausalLM:()=>Fd,StableLmModel:()=>Od,StableLmPreTrainedModel:()=>va,Starcoder2ForCausalLM:()=>Pd,Starcoder2Model:()=>Ed,Starcoder2PreTrainedModel:()=>ga,StyleTextToSpeech2Model:()=>Md,StyleTextToSpeech2PreTrainedModel:()=>bd,Swin2SRForImageSuperResolution:()=>Ou,Swin2SRModel:()=>ra,Swin2SRPreTrainedModel:()=>sa,SwinForImageClassification:()=>Gn,SwinModel:()=>ta,SwinPreTrainedModel:()=>ea,T5ForConditionalGeneration:()=>X,T5Model:()=>C,T5PreTrainedModel:()=>Pe,TableTransformerForObjectDetection:()=>ku,TableTransformerModel:()=>Su,TableTransformerObjectDetectionOutput:()=>Qo,TableTransformerPreTrainedModel:()=>yi,TokenClassifierOutput:()=>Ds,TrOCRForCausalLM:()=>vd,TrOCRPreTrainedModel:()=>un,UniSpeechForCTC:()=>xp,UniSpeechForSequenceClassification:()=>ld,UniSpeechModel:()=>ad,UniSpeechPreTrainedModel:()=>$i,UniSpeechSatForAudioFrameClassification:()=>cd,UniSpeechSatForCTC:()=>dd,UniSpeechSatForSequenceClassification:()=>Tp,UniSpeechSatModel:()=>ud,UniSpeechSatPreTrainedModel:()=>Hn,ViTForImageClassification:()=>Do,ViTMAEModel:()=>mu,ViTMAEPreTrainedModel:()=>hu,ViTMSNForImageClassification:()=>_u,ViTMSNModel:()=>cp,ViTMSNPreTrainedModel:()=>Bo,ViTModel:()=>au,ViTPreTrainedModel:()=>fi,VisionEncoderDecoderModel:()=>so,VitMatteForImageMatting:()=>bu,VitMattePreTrainedModel:()=>wu,VitPoseForPoseEstimation:()=>cu,VitPosePreTrainedModel:()=>du,VitsModel:()=>Ma,VitsModelOutput:()=>Uc,VitsPreTrainedModel:()=>ba,Wav2Vec2BertForCTC:()=>Ep,Wav2Vec2BertForSequenceClassification:()=>hd,Wav2Vec2BertModel:()=>pd,Wav2Vec2BertPreTrainedModel:()=>Si,Wav2Vec2ForAudioFrameClassification:()=>rd,Wav2Vec2ForCTC:()=>sd,Wav2Vec2ForSequenceClassification:()=>Mp,Wav2Vec2Model:()=>td,Wav2Vec2PreTrainedModel:()=>qr,WavLMForAudioFrameClassification:()=>wd,WavLMForCTC:()=>gd,WavLMForSequenceClassification:()=>yd,WavLMForXVector:()=>$p,WavLMModel:()=>fd,WavLMPreTrainedModel:()=>Pn,WeSpeakerResNetModel:()=>vp,WeSpeakerResNetPreTrainedModel:()=>od,WhisperForConditionalGeneration:()=>rl,WhisperModel:()=>sl,WhisperPreTrainedModel:()=>eo,XLMForQuestionAnswering:()=>sn,XLMForSequenceClassification:()=>Gs,XLMForTokenClassification:()=>St,XLMModel:()=>zs,XLMPreTrainedModel:()=>Xt,XLMRobertaForMaskedLM:()=>Ja,XLMRobertaForQuestionAnswering:()=>el,XLMRobertaForSequenceClassification:()=>Ji,XLMRobertaForTokenClassification:()=>Za,XLMRobertaModel:()=>At,XLMRobertaPreTrainedModel:()=>Qe,XLMWithLMHeadModel:()=>As,XVectorOutput:()=>Nc,YolosForObjectDetection:()=>Xu,YolosModel:()=>Qu,YolosObjectDetectionOutput:()=>Yu,YolosPreTrainedModel:()=>ha});var p=s("./src/configs.js"),w=s("./src/backends/onnx.js"),A=s("./src/utils/dtypes.js"),D=s("./src/utils/generic.js"),z=s("./src/utils/core.js"),g=s("./src/utils/hub.js"),x=s("./src/utils/constants.js"),v=s("./src/generation/logits_process.js"),M=s("./src/generation/configuration_utils.js"),T=s("./src/utils/tensor.js"),F=s("./src/utils/image.js"),q=s("./src/utils/maths.js"),re=s("./src/generation/stopping_criteria.js"),ie=s("./src/generation/logits_sampler.js"),G=s("./src/env.js"),V=s("./src/models/whisper/generation_whisper.js"),Q=s("./src/models/whisper/common_whisper.js");const O={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},I=new Map,b=new Map,E=new Map;async function L(y,P,U){var xs;const ge=((xs=U.config)==null?void 0:xs["transformers.js_config"])??{};let Fe=U.device??ge.device;Fe&&typeof Fe!="string"&&(Fe.hasOwnProperty(P)?Fe=Fe[P]:(console.warn(`device not specified for "${P}". Using the default device.`),Fe=null));const De=Fe??(G.apis.IS_NODE_ENV?"cpu":"wasm"),Ze=(0,w.deviceToExecutionProviders)(De);let rt=U.dtype??ge.dtype;if(typeof rt!="string"&&(rt&&rt.hasOwnProperty(P)?rt=rt[P]:(rt=A.DEFAULT_DEVICE_DTYPE_MAPPING[De]??A.DATA_TYPES.fp32,console.warn(`dtype not specified for "${P}". Using the default dtype (${rt}) for this device (${De}).`))),rt===A.DATA_TYPES.auto){let cs=ge.dtype;typeof cs!="string"&&(cs=cs[P]),cs&&cs!==A.DATA_TYPES.auto&&A.DATA_TYPES.hasOwnProperty(cs)?rt=cs:rt=A.DEFAULT_DEVICE_DTYPE_MAPPING[De]??A.DATA_TYPES.fp32}const ft=rt;if(A.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ft)){if(ft===A.DATA_TYPES.fp16&&De==="webgpu"&&!await(0,A.isWebGpuFp16Supported)())throw new Error(`The device (${De}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${ft}. Should be one of: ${Object.keys(A.DATA_TYPES).join(", ")}`);const Mt=ge.kv_cache_dtype?typeof ge.kv_cache_dtype=="string"?ge.kv_cache_dtype:ge.kv_cache_dtype[ft]??"float32":void 0;if(Mt&&!["float32","float16"].includes(Mt))throw new Error(`Invalid kv_cache_dtype: ${Mt}. Should be one of: float32, float16`);const Rt={dtype:ft,kv_cache_dtype:Mt},Wt=A.DEFAULT_DTYPE_SUFFIX_MAPPING[ft],Dt=`${U.subfolder??""}/${P}${Wt}.onnx`,Gt={...U.session_options};Gt.executionProviders??(Gt.executionProviders=Ze);const es=ge.free_dimension_overrides;es?Gt.freeDimensionOverrides??(Gt.freeDimensionOverrides=es):De.startsWith("webnn")&&!Gt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const ns=(0,g.getModelFile)(y,Dt,!0,U),Yt=U.use_external_data_format??ge.use_external_data_format;let as=[];if(Yt&&(Yt===!0||typeof Yt=="object"&&Yt.hasOwnProperty(P)&&Yt[P]===!0)){if(G.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const cs=`${P}${Wt}.onnx_data`,Ts=`${U.subfolder??""}/${cs}`;as.push(new Promise(async(Is,tr)=>{const Hs=await(0,g.getModelFile)(y,Ts,!0,U);Is({path:cs,data:Hs})}))}else Gt.externalData!==void 0&&(as=Gt.externalData.map(async cs=>{if(typeof cs.data=="string"){const Ts=await(0,g.getModelFile)(y,cs.data,!0,U);return{...cs,data:Ts}}return cs}));if(as.length>0&&(Gt.externalData=await Promise.all(as)),De==="webgpu"){const cs=(0,p.getKeyValueShapes)(U.config,{prefix:"present"});if(Object.keys(cs).length>0&&!(0,w.isONNXProxy)()){const Ts={};for(const Is in cs)Ts[Is]="gpu-buffer";Gt.preferredOutputLocation=Ts}}return{buffer:await ns,session_options:Gt,session_config:Rt}}async function le(y,P,U){return Object.fromEntries(await Promise.all(Object.keys(P).map(async ge=>{const{buffer:Fe,session_options:De,session_config:Ze}=await L(y,P[ge],U),rt=await(0,w.createInferenceSession)(Fe,De,Ze);return[ge,rt]})))}async function oe(y,P,U){return Object.fromEntries(await Promise.all(Object.keys(P).map(async ge=>{const Fe=await(0,g.getModelJSON)(y,P[ge],!1,U);return[ge,Fe]})))}function Te(y,P){const U=Object.create(null),ge=[];for(const Ze of y.inputNames){const rt=P[Ze];if(!(rt instanceof T.Tensor)){ge.push(Ze);continue}U[Ze]=(0,w.isONNXProxy)()?rt.clone():rt}if(ge.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ge.join(", ")}.`);const Fe=Object.keys(P).length,De=y.inputNames.length;if(Fe>De){let Ze=Object.keys(P).filter(rt=>!y.inputNames.includes(rt));console.warn(`WARNING: Too many inputs were provided (${Fe} > ${De}). The following inputs will be ignored: "${Ze.join(", ")}".`)}return U}async function we(y,P){const U=Te(y,P);try{const ge=Object.fromEntries(Object.entries(U).map(([De,Ze])=>[De,Ze.ort_tensor]));let Fe=await y.run(ge);return Fe=ne(Fe),Fe}catch(ge){const Fe=Object.fromEntries(Object.entries(U).map(([De,{type:Ze,dims:rt,data:ft}])=>[De,{type:Ze,dims:rt,data:ft}]));throw console.error(`An error occurred during model execution: "${ge}".`),console.error("Inputs given to model:",Fe),ge}}function ne(y){for(let P in y)(0,w.isONNXTensor)(y[P])?y[P]=new T.Tensor(y[P]):typeof y[P]=="object"&&ne(y[P]);return y}function Ee(y){if(y instanceof T.Tensor)return y;if(y.length===0)throw Error("items must be non-empty");if(Array.isArray(y[0])){if(y.some(P=>P.length!==y[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new T.Tensor("int64",BigInt64Array.from(y.flat().map(P=>BigInt(P))),[y.length,y[0].length])}else return new T.Tensor("int64",BigInt64Array.from(y.map(P=>BigInt(P))),[1,y.length])}function pe(y){return new T.Tensor("bool",[y],[1])}async function ke(y,P){let{encoder_outputs:U,input_ids:ge,decoder_input_ids:Fe,...De}=P;if(!U){const rt=(0,z.pick)(P,y.sessions.model.inputNames);U=(await Oe(y,rt)).last_hidden_state}return De.input_ids=Fe,De.encoder_hidden_states=U,y.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(De.encoder_attention_mask=P.attention_mask),await Ce(y,De,!0)}async function Oe(y,P){const U=y.sessions.model,ge=(0,z.pick)(P,U.inputNames);if(U.inputNames.includes("inputs_embeds")&&!ge.inputs_embeds){if(!P.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ge.inputs_embeds=await y.encode_text({input_ids:P.input_ids})}if(U.inputNames.includes("token_type_ids")&&!ge.token_type_ids){if(!ge.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ge.token_type_ids=(0,T.zeros_like)(ge.input_ids)}if(U.inputNames.includes("pixel_mask")&&!ge.pixel_mask){if(!ge.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Fe=ge.pixel_values.dims;ge.pixel_mask=(0,T.ones)([Fe[0],Fe[2],Fe[3]])}return await we(U,ge)}async function Ce(y,P,U=!1){const ge=y.sessions[U?"decoder_model_merged":"model"],{past_key_values:Fe,...De}=P;if(ge.inputNames.includes("use_cache_branch")&&(De.use_cache_branch=pe(!!Fe)),ge.inputNames.includes("position_ids")&&De.attention_mask&&!De.position_ids){const rt=y.config.model_type==="paligemma"?1:0;De.position_ids=J(De,Fe,rt)}y.addPastKeyValues(De,Fe);const Ze=(0,z.pick)(De,ge.inputNames);return await we(ge,Ze)}function tt({image_token_id:y,inputs_embeds:P,image_features:U,input_ids:ge,attention_mask:Fe}){const De=ge.tolist().map(Mt=>Mt.reduce((Rt,Wt,Dt)=>(Wt==y&&Rt.push(Dt),Rt),[])),Ze=De.reduce((Mt,Rt)=>Mt+Rt.length,0),rt=U.dims[0];if(Ze!==rt)throw new Error(`Image features and image tokens do not match: tokens: ${Ze}, features ${rt}`);let ft=0;for(let Mt=0;Mt<De.length;++Mt){const Rt=De[Mt],Wt=P[Mt];for(let Dt=0;Dt<Rt.length;++Dt)Wt[Rt[Dt]].data.set(U[ft++].data)}return{inputs_embeds:P,attention_mask:Fe}}async function Ge(y,{input_ids:P=null,attention_mask:U=null,pixel_values:ge=null,position_ids:Fe=null,inputs_embeds:De=null,past_key_values:Ze=null,generation_config:rt=null,logits_processor:ft=null,...Mt}){if(!De){if(De=await y.encode_text({input_ids:P,...Mt}),ge&&P.dims[1]!==1){const Wt=await y.encode_image({pixel_values:ge,...Mt});({inputs_embeds:De,attention_mask:U}=y._merge_input_ids_with_image_features({image_features:Wt,inputs_embeds:De,input_ids:P,attention_mask:U}))}else if(Ze&&ge&&P.dims[1]===1){const Wt=P.dims[1],Dt=Object.values(Ze)[0].dims.at(-2);U=(0,T.cat)([(0,T.ones)([P.dims[0],Dt]),U.slice(null,[U.dims[1]-Wt,U.dims[1]])],1)}}if(!Fe&&y.config.model_type==="qwen2_vl"){const{image_grid_thw:Wt,video_grid_thw:Dt}=Mt;[Fe]=y.get_rope_index(P,Wt,Dt,U)}return await Ce(y,{inputs_embeds:De,past_key_values:Ze,attention_mask:U,position_ids:Fe,generation_config:rt,logits_processor:ft},!0)}function be(y,P=0){const[U,ge]=y.dims,Fe=y.data,De=new BigInt64Array(Fe.length);for(let Ze=0;Ze<U;++Ze){const rt=Ze*ge;let ft=BigInt(P);for(let Mt=0;Mt<ge;++Mt){const Rt=rt+Mt;Fe[Rt]===0n?De[Rt]=BigInt(1):(De[Rt]=ft,ft+=Fe[Rt])}}return{data:De,dims:y.dims}}function J(y,P=null,U=0){const{input_ids:ge,inputs_embeds:Fe,attention_mask:De}=y,{data:Ze,dims:rt}=be(De,U);let ft=new T.Tensor("int64",Ze,rt);if(P){const Mt=-(ge??Fe).dims.at(1);ft=ft.slice(null,[Mt,null])}return ft}function ce(y,P,U,ge){if(U.past_key_values){const Fe=Object.values(U.past_key_values)[0].dims.at(-2),{input_ids:De,attention_mask:Ze}=U;if(!(Ze&&Ze.dims[1]>De.dims[1])){if(Fe<De.dims[1])U.input_ids=De.slice(null,[Fe,null]);else if(y.config.image_token_index!=null&&De.data.some(rt=>rt==y.config.image_token_index)){const rt=y.config.num_image_tokens;if(!rt)throw new Error("`num_image_tokens` is missing in the model configuration.");const ft=De.dims[1]-(Fe-rt);U.input_ids=De.slice(null,[-ft,null]),U.attention_mask=(0,T.ones)([1,Fe+ft])}}}return U}function $e(y,P,U,ge){return U.past_key_values&&(P=P.map(Fe=>[Fe.at(-1)])),{...U,decoder_input_ids:Ee(P)}}function Be(y,...P){return y.config.is_encoder_decoder?$e(y,...P):ce(y,...P)}function Je(y,P,U,ge){const Fe=!!U.past_key_values;return ge.guidance_scale!==null&&ge.guidance_scale>1&&(Fe?U.input_ids=(0,T.cat)([U.input_ids,U.input_ids],0):(U.input_ids=(0,T.cat)([U.input_ids,(0,T.full_like)(U.input_ids,BigInt(ge.pad_token_id))],0),U.attention_mask=(0,T.cat)([U.attention_mask,(0,T.full_like)(U.attention_mask,0n)],0))),(Fe||!U.pixel_values)&&(U.pixel_values=(0,T.full)([0,0,3,384,384],1)),Fe&&(U.images_seq_mask=new T.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),U.images_emb_mask=new T.Tensor("bool",new Array(0).fill(!1),[1,1,0])),U}class se extends D.Callable{constructor(U,ge,Fe){super();fe(this,"main_input_name","input_ids");fe(this,"forward_params",["input_ids","attention_mask"]);this.config=U,this.sessions=ge,this.configs=Fe;const De=E.get(this.constructor),Ze=I.get(De);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Ze){case O.DecoderOnly:this.can_generate=!0,this._forward=Ce,this._prepare_inputs_for_generation=ce;break;case O.Seq2Seq:case O.Vision2Seq:case O.Musicgen:this.can_generate=!0,this._forward=ke,this._prepare_inputs_for_generation=$e;break;case O.EncoderDecoder:this._forward=ke;break;case O.ImageTextToText:this.can_generate=!0,this._forward=Ge,this._prepare_inputs_for_generation=Be;break;case O.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=Be;break;case O.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Je;break;default:this._forward=Oe;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ge;const U=[];for(const Fe of Object.values(this.sessions))(ge=Fe==null?void 0:Fe.handler)!=null&&ge.dispose&&U.push(Fe.handler.dispose());return await Promise.all(U)}static async from_pretrained(U,{progress_callback:ge=null,config:Fe=null,cache_dir:De=null,local_files_only:Ze=!1,revision:rt="main",model_file_name:ft=null,subfolder:Mt="onnx",device:Rt=null,dtype:Wt=null,use_external_data_format:Dt=null,session_options:Gt={}}={}){let es={progress_callback:ge,config:Fe,cache_dir:De,local_files_only:Ze,revision:rt,model_file_name:ft,subfolder:Mt,device:Rt,dtype:Wt,use_external_data_format:Dt,session_options:Gt};const ns=E.get(this),Yt=I.get(ns);Fe=es.config=await p.AutoConfig.from_pretrained(U,es);let as;if(Yt===O.DecoderOnly)as=await Promise.all([le(U,{model:es.model_file_name??"model"},es),oe(U,{generation_config:"generation_config.json"},es)]);else if(Yt===O.Seq2Seq||Yt===O.Vision2Seq)as=await Promise.all([le(U,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},es),oe(U,{generation_config:"generation_config.json"},es)]);else if(Yt===O.MaskGeneration)as=await Promise.all([le(U,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},es)]);else if(Yt===O.EncoderDecoder)as=await Promise.all([le(U,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},es)]);else if(Yt===O.ImageTextToText){const Es={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Fe.is_encoder_decoder&&(Es.model="encoder_model"),as=await Promise.all([le(U,Es,es),oe(U,{generation_config:"generation_config.json"},es)])}else if(Yt===O.Musicgen)as=await Promise.all([le(U,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},es),oe(U,{generation_config:"generation_config.json"},es)]);else if(Yt===O.MultiModality)as=await Promise.all([le(U,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},es),oe(U,{generation_config:"generation_config.json"},es)]);else if(Yt===O.Phi3V)as=await Promise.all([le(U,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},es),oe(U,{generation_config:"generation_config.json"},es)]);else{if(Yt!==O.EncoderOnly){const Es=ns??(Fe==null?void 0:Fe.model_type);Es!=="custom"&&console.warn(`Model type for '${Es}' not found, assuming encoder-only architecture. Please report this at ${x.GITHUB_ISSUE_URL}.`)}as=await Promise.all([le(U,{model:es.model_file_name??"model"},es)])}return new this(Fe,...as)}async _call(U){return await this.forward(U)}async forward(U){return await this._forward(this,U)}get generation_config(){var U;return((U=this.configs)==null?void 0:U.generation_config)??null}_get_logits_warper(U){const ge=new v.LogitsProcessorList;return U.temperature!==null&&U.temperature!==1&&ge.push(new v.TemperatureLogitsWarper(U.temperature)),U.top_k!==null&&U.top_k!==0&&ge.push(new v.TopKLogitsWarper(U.top_k)),U.top_p!==null&&U.top_p<1&&ge.push(new v.TopPLogitsWarper(U.top_p)),ge}_get_logits_processor(U,ge,Fe=null){const De=new v.LogitsProcessorList;if(U.repetition_penalty!==null&&U.repetition_penalty!==1&&De.push(new v.RepetitionPenaltyLogitsProcessor(U.repetition_penalty)),U.no_repeat_ngram_size!==null&&U.no_repeat_ngram_size>0&&De.push(new v.NoRepeatNGramLogitsProcessor(U.no_repeat_ngram_size)),U.bad_words_ids!==null&&De.push(new v.NoBadWordsLogitsProcessor(U.bad_words_ids,U.eos_token_id)),U.min_length!==null&&U.eos_token_id!==null&&U.min_length>0&&De.push(new v.MinLengthLogitsProcessor(U.min_length,U.eos_token_id)),U.min_new_tokens!==null&&U.eos_token_id!==null&&U.min_new_tokens>0&&De.push(new v.MinNewTokensLengthLogitsProcessor(ge,U.min_new_tokens,U.eos_token_id)),U.forced_bos_token_id!==null&&De.push(new v.ForcedBOSTokenLogitsProcessor(U.forced_bos_token_id)),U.forced_eos_token_id!==null&&De.push(new v.ForcedEOSTokenLogitsProcessor(U.max_length,U.forced_eos_token_id)),U.begin_suppress_tokens!==null){const Ze=ge>1||U.forced_bos_token_id===null?ge:ge+1;De.push(new v.SuppressTokensAtBeginLogitsProcessor(U.begin_suppress_tokens,Ze))}return U.guidance_scale!==null&&U.guidance_scale>1&&De.push(new v.ClassifierFreeGuidanceLogitsProcessor(U.guidance_scale)),Fe!==null&&De.extend(Fe),De}_prepare_generation_config(U,ge,Fe=M.GenerationConfig){const De={...this.config};for(const rt of["decoder","generator","text_config"])rt in De&&Object.assign(De,De[rt]);const Ze=new Fe(De);return Object.assign(Ze,this.generation_config??{}),U&&Object.assign(Ze,U),ge&&Object.assign(Ze,(0,z.pick)(ge,Object.getOwnPropertyNames(Ze))),Ze}_get_stopping_criteria(U,ge=null){const Fe=new re.StoppingCriteriaList;return U.max_length!==null&&Fe.push(new re.MaxLengthCriteria(U.max_length,this.config.max_position_embeddings??null)),U.eos_token_id!==null&&Fe.push(new re.EosTokenCriteria(U.eos_token_id)),ge&&Fe.extend(ge),Fe}_validate_model_class(){if(!this.can_generate){const U=[Ia,Da,Oi,ec],ge=E.get(this.constructor),Fe=new Set,De=this.config.model_type;for(const rt of U){const ft=rt.get(De);ft&&Fe.add(ft[0])}let Ze=`The current model class (${ge}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Fe.size>0&&(Ze+=` Please use the following class instead: ${[...Fe].join(", ")}`),Error(Ze)}}prepare_inputs_for_generation(...U){return this._prepare_inputs_for_generation(this,...U)}_update_model_kwargs_for_generation({generated_input_ids:U,outputs:ge,model_inputs:Fe,is_encoder_decoder:De}){return Fe.past_key_values=this.getPastKeyValues(ge,Fe.past_key_values),Fe.input_ids=new T.Tensor("int64",U.flat(),[U.length,1]),De||(Fe.attention_mask=(0,T.cat)([Fe.attention_mask,(0,T.ones)([Fe.attention_mask.dims[0],1])],1)),Fe.position_ids=null,Fe}_prepare_model_inputs({inputs:U,bos_token_id:ge,model_kwargs:Fe}){const De=(0,z.pick)(Fe,this.forward_params),Ze=this.main_input_name;if(Ze in De){if(U)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else De[Ze]=U;return{inputs_tensor:De[Ze],model_inputs:De,model_input_name:Ze}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:U,model_inputs:ge,model_input_name:Fe,generation_config:De}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ge.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:rt,pixel_values:ft,attention_mask:Mt,...Rt}=ge,Wt=await this._prepare_inputs_embeds(ge);ge={...Rt,...(0,z.pick)(Wt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Ze}=await Oe(this,ge);if(De.guidance_scale!==null&&De.guidance_scale>1)Ze=(0,T.cat)([Ze,(0,T.full_like)(Ze,0)],0),"attention_mask"in ge&&(ge.attention_mask=(0,T.cat)([ge.attention_mask,(0,T.zeros_like)(ge.attention_mask)],0));else if(ge.decoder_input_ids){const rt=Ee(ge.decoder_input_ids).dims[0];if(rt!==Ze.dims[0]){if(Ze.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Ze.dims[0]}) than the decoder inputs (${rt}).`);Ze=(0,T.cat)(Array.from({length:rt},()=>Ze),0)}}return ge.encoder_outputs=Ze,ge}_prepare_decoder_input_ids_for_generation({batch_size:U,model_input_name:ge,model_kwargs:Fe,decoder_start_token_id:De,bos_token_id:Ze,generation_config:rt}){let{decoder_input_ids:ft,...Mt}=Fe;if(!(ft instanceof T.Tensor)){if(ft)Array.isArray(ft[0])||(ft=Array.from({length:U},()=>ft));else if(De??(De=Ze),this.config.model_type==="musicgen")ft=Array.from({length:U*this.config.decoder.num_codebooks},()=>[De]);else if(Array.isArray(De)){if(De.length!==U)throw new Error(`\`decoder_start_token_id\` expcted to have length ${U} but got ${De.length}`);ft=De}else ft=Array.from({length:U},()=>[De]);ft=Ee(ft)}return Fe.decoder_attention_mask=(0,T.ones_like)(ft),{input_ids:ft,model_inputs:Mt}}async generate({inputs:U=null,generation_config:ge=null,logits_processor:Fe=null,stopping_criteria:De=null,streamer:Ze=null,...rt}){this._validate_model_class(),ge=this._prepare_generation_config(ge,rt);let{inputs_tensor:ft,model_inputs:Mt,model_input_name:Rt}=this._prepare_model_inputs({inputs:U,model_kwargs:rt});const Wt=this.config.is_encoder_decoder;Wt&&("encoder_outputs"in Mt||(Mt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ft,model_inputs:Mt,model_input_name:Rt,generation_config:ge})));let Dt;Wt?{input_ids:Dt,model_inputs:Mt}=this._prepare_decoder_input_ids_for_generation({batch_size:Mt[Rt].dims.at(0),model_input_name:Rt,model_kwargs:Mt,decoder_start_token_id:ge.decoder_start_token_id,bos_token_id:ge.bos_token_id,generation_config:ge}):Dt=Mt[Rt];let Gt=Dt.dims.at(-1);ge.max_new_tokens!==null&&(ge.max_length=Gt+ge.max_new_tokens);const es=this._get_logits_processor(ge,Gt,Fe),ns=this._get_stopping_criteria(ge,De),Yt=Mt[Rt].dims.at(0),as=ie.LogitsSampler.getSampler(ge),Es=new Array(Yt).fill(0),xs=Dt.tolist();Ze&&Ze.put(xs);let cs,Ts={};for(;;){if(Mt=this.prepare_inputs_for_generation(xs,Mt,ge),cs=await this.forward(Mt),ge.output_attentions&&ge.return_dict_in_generate){const dr=this.getAttentions(cs);for(const Mr in dr)Mr in Ts||(Ts[Mr]=[]),Ts[Mr].push(dr[Mr])}const Hs=cs.logits.slice(null,-1,null),Pr=es(xs,Hs),Cn=[];for(let dr=0;dr<Pr.dims.at(0);++dr){const Mr=Pr[dr],Di=await as(Mr);for(const[Qn,Li]of Di){const zi=BigInt(Qn);Es[dr]+=Li,xs[dr].push(zi),Cn.push([zi]);break}}if(Ze&&Ze.put(Cn),ns(xs).every(dr=>dr))break;Mt=this._update_model_kwargs_for_generation({generated_input_ids:Cn,outputs:cs,model_inputs:Mt,is_encoder_decoder:Wt})}Ze&&Ze.end();const Is=this.getPastKeyValues(cs,Mt.past_key_values,!0),tr=new T.Tensor("int64",xs.flat(),[xs.length,xs[0].length]);if(ge.return_dict_in_generate)return{sequences:tr,past_key_values:Is,...Ts};for(const Hs of Object.values(cs))Hs.location==="gpu-buffer"&&Hs.dispose();return tr}getPastKeyValues(U,ge,Fe=!1){const De=Object.create(null);for(const Ze in U)if(Ze.startsWith("present")){const rt=Ze.replace("present","past_key_values"),ft=Ze.includes("encoder");if(ft&&ge?De[rt]=ge[rt]:De[rt]=U[Ze],ge&&(!ft||Fe)){const Mt=ge[rt];Mt.location==="gpu-buffer"&&Mt.dispose()}}return De}getAttentions(U){const ge={};for(const Fe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const De in U)De.startsWith(Fe)&&(Fe in ge||(ge[Fe]=[]),ge[Fe].push(U[De]));return ge}addPastKeyValues(U,ge){var Fe,De,Ze;if(ge)Object.assign(U,ge);else{const rt=this.sessions.decoder_model_merged??this.sessions.model,ft=((Fe=rt==null?void 0:rt.config)==null?void 0:Fe.kv_cache_dtype)??"float32",Mt=ft==="float16"?new Uint16Array:[],Rt=((Ze=(De=U[this.main_input_name]??U.attention_mask)==null?void 0:De.dims)==null?void 0:Ze[0])??1,Wt=(0,p.getKeyValueShapes)(this.config,{batch_size:Rt});for(const Dt in Wt)U[Dt]=new T.Tensor(ft,Mt,Wt[Dt])}}async encode_image({pixel_values:U}){const ge=(await we(this.sessions.vision_encoder,{pixel_values:U})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${ge.dims[1]}).`),this.config.num_image_tokens=ge.dims[1]),ge}async encode_text({input_ids:U}){return(await we(this.sessions.embed_tokens,{input_ids:U})).inputs_embeds}}class Ke{}class Ue extends Ke{constructor({last_hidden_state:P,hidden_states:U=null,attentions:ge=null}){super(),this.last_hidden_state=P,this.hidden_states=U,this.attentions=ge}}class ue extends se{}class ve extends ue{}class Ve extends ue{async _call(P){return new Ys(await super._call(P))}}class We extends ue{async _call(P){return new Zt(await super._call(P))}}class Ne extends ue{async _call(P){return new Ds(await super._call(P))}}class je extends ue{async _call(P){return new er(await super._call(P))}}class st extends se{}class ut extends st{}class pt extends st{async _call(P){return new Ys(await super._call(P))}}class lt extends st{async _call(P){return new Zt(await super._call(P))}}class mt extends st{async _call(P){return new Ds(await super._call(P))}}class R extends se{}class ae extends R{}class K extends se{}class me extends K{}class Se extends K{async _call(P){return new Ys(await super._call(P))}}class Re extends K{async _call(P){return new Zt(await super._call(P))}}class qe extends K{async _call(P){return new Ds(await super._call(P))}}class at extends K{async _call(P){return new er(await super._call(P))}}class ct extends se{}class vt extends ct{}class $t extends ct{async _call(P){return new Ys(await super._call(P))}}class kt extends ct{async _call(P){return new Zt(await super._call(P))}}class is extends ct{async _call(P){return new Ds(await super._call(P))}}class bs extends ct{async _call(P){return new er(await super._call(P))}}class $s extends se{}class Ls extends $s{}class sr extends $s{async _call(P){return new Ys(await super._call(P))}}class $r extends $s{async _call(P){return new Zt(await super._call(P))}}class Jr extends $s{async _call(P){return new Ds(await super._call(P))}}class Us extends $s{async _call(P){return new er(await super._call(P))}}class xr extends se{}class Nt extends xr{}class Zr extends xr{async _call(P){return new Ys(await super._call(P))}}class Sr extends xr{async _call(P){return new Zt(await super._call(P))}}class kr extends xr{async _call(P){return new Ds(await super._call(P))}}class en extends xr{async _call(P){return new er(await super._call(P))}}class cr extends se{}class Rr extends cr{}class Ar extends cr{async _call(P){return new Ys(await super._call(P))}}class Nr extends cr{async _call(P){return new Zt(await super._call(P))}}class jr extends cr{async _call(P){return new Ds(await super._call(P))}}class ar extends cr{async _call(P){return new er(await super._call(P))}}class it extends se{}class xt extends it{}class Ft extends it{async _call(P){return new Ys(await super._call(P))}}class Vs extends it{async _call(P){return new Zt(await super._call(P))}}class Ur extends it{async _call(P){return new Ds(await super._call(P))}}class Ir extends it{async _call(P){return new er(await super._call(P))}}class Ms extends se{}class lr extends Ms{}class Os extends Ms{async _call(P){return new Zt(await super._call(P))}}class Tr extends Ms{async _call(P){return new Ds(await super._call(P))}}class ss extends Ms{async _call(P){return new er(await super._call(P))}}class wn extends Ms{async _call(P){return new Ys(await super._call(P))}}class Vr extends se{}class li extends Vr{}class On extends Vr{async _call(P){return new Ys(await super._call(P))}}class Fn extends Vr{async _call(P){return new Zt(await super._call(P))}}class Dn extends Vr{async _call(P){return new Ds(await super._call(P))}}class Wr extends se{}class Ln extends Wr{}class ui extends Wr{async _call(P){return new Ys(await super._call(P))}}class Gr extends Wr{async _call(P){return new Zt(await super._call(P))}}class _r extends Wr{async _call(P){return new er(await super._call(P))}}class ur extends se{}class bn extends ur{}class tn extends ur{async _call(P){return new Ys(await super._call(P))}}class Mn extends ur{async _call(P){return new Zt(await super._call(P))}}class vn extends ur{async _call(P){return new Ds(await super._call(P))}}class xn extends ur{async _call(P){return new er(await super._call(P))}}class Lt extends se{}class Tn extends Lt{}class zn extends Lt{async _call(P){return new Ys(await super._call(P))}}class Bn extends Lt{async _call(P){return new Zt(await super._call(P))}}class Rn extends Lt{async _call(P){return new er(await super._call(P))}}class Kr extends se{}class Nn extends Kr{}class En extends Kr{async _call(P){return new Zt(await super._call(P))}}class jn extends Kr{async _call(P){return new er(await super._call(P))}}class os extends Kr{async _call(P){return new Ys(await super._call(P))}}class Pe extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class C extends Pe{}class X extends Pe{}class de extends se{}class xe extends de{}class Ae extends de{}class Xe extends se{}class ht extends Xe{}class gt extends Xe{}class _t extends se{}class Tt extends _t{}class Kt extends _t{}class _s extends _t{async _call(P){return new Zt(await super._call(P))}}class us extends se{}class Fs extends us{}class zt extends us{}class rs extends us{async _call(P){return new Zt(await super._call(P))}}class rr extends us{}class Ws extends se{}class ze extends Ws{}class Zs extends Ws{}class Or extends se{}class Ss extends Or{}class Xs extends Or{}class Ot extends se{}class or extends Ot{}class fr extends Ot{async _call(P){return new Ys(await super._call(P))}}class fs extends Ot{async _call(P){return new Zt(await super._call(P))}}class ks extends Ot{async _call(P){return new Ds(await super._call(P))}}class bt extends Ot{async _call(P){return new er(await super._call(P))}}class Xt extends se{}class zs extends Xt{}class As extends Xt{async _call(P){return new Ys(await super._call(P))}}class Gs extends Xt{async _call(P){return new Zt(await super._call(P))}}class St extends Xt{async _call(P){return new Ds(await super._call(P))}}class sn extends Xt{async _call(P){return new er(await super._call(P))}}class Qe extends se{}class At extends Qe{}class Ja extends Qe{async _call(P){return new Ys(await super._call(P))}}class Ji extends Qe{async _call(P){return new Zt(await super._call(P))}}class Za extends Qe{async _call(P){return new Ds(await super._call(P))}}class el extends Qe{async _call(P){return new er(await super._call(P))}}class Jt extends se{}class tl extends Jt{}class Zi extends Jt{}class eo extends se{constructor(){super(...arguments);fe(this,"requires_attention_mask",!1);fe(this,"main_input_name","input_features");fe(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class sl extends eo{}class rl extends eo{_prepare_generation_config(P,U){return super._prepare_generation_config(P,U,V.WhisperGenerationConfig)}_retrieve_init_tokens(P){const U=[P.decoder_start_token_id];let ge=P.language;const Fe=P.task;if(P.is_multilingual){ge||(console.warn("No language specified - defaulting to English (en)."),ge="en");const Ze=`<|${(0,Q.whisper_language_to_code)(ge)}|>`;U.push(P.lang_to_id[Ze]),U.push(P.task_to_id[Fe??"transcribe"])}else if(ge||Fe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!P.return_timestamps&&P.no_timestamps_token_id&&U.at(-1)!==P.no_timestamps_token_id?U.push(P.no_timestamps_token_id):P.return_timestamps&&U.at(-1)===P.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),U.pop()),U.filter(De=>De!=null)}async generate({inputs:P=null,generation_config:U=null,logits_processor:ge=null,stopping_criteria:Fe=null,...De}){U=this._prepare_generation_config(U,De);const Ze=De.decoder_input_ids??this._retrieve_init_tokens(U);if(U.return_timestamps&&(ge??(ge=new v.LogitsProcessorList),ge.push(new v.WhisperTimeStampLogitsProcessor(U,Ze))),U.begin_suppress_tokens&&(ge??(ge=new v.LogitsProcessorList),ge.push(new v.SuppressTokensAtBeginLogitsProcessor(U.begin_suppress_tokens,Ze.length))),U.return_token_timestamps){if(!U.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");U.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),U.output_attentions=!0,U.return_dict_in_generate=!0}const rt=await super.generate({inputs:P,generation_config:U,logits_processor:ge,decoder_input_ids:Ze,...De});return U.return_token_timestamps&&(rt.token_timestamps=this._extract_token_timestamps(rt,U.alignment_heads,U.num_frames)),rt}_extract_token_timestamps(P,U,ge=null,Fe=.02){if(!P.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ge==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let De=this.config.median_filter_width;De===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),De=7);const Ze=P.cross_attentions,rt=Array.from({length:this.config.decoder_layers},(ns,Yt)=>(0,T.cat)(Ze.map(as=>as[Yt]),2)),ft=(0,T.stack)(U.map(([ns,Yt])=>{if(ns>=rt.length)throw new Error(`Layer index ${ns} is out of bounds for cross attentions (length ${rt.length}).`);return ge?rt[ns].slice(null,Yt,null,[0,ge]):rt[ns].slice(null,Yt)})).transpose(1,0,2,3),[Mt,Rt]=(0,T.std_mean)(ft,-2,0,!0),Wt=ft.clone();for(let ns=0;ns<Wt.dims[0];++ns){const Yt=Wt[ns];for(let as=0;as<Yt.dims[0];++as){const Es=Yt[as],xs=Mt[ns][as][0].data,cs=Rt[ns][as][0].data;for(let Ts=0;Ts<Es.dims[0];++Ts){let Is=Es[Ts].data;for(let tr=0;tr<Is.length;++tr)Is[tr]=(Is[tr]-cs[tr])/xs[tr];Is.set((0,q.medianFilter)(Is,De))}}}const Dt=[(0,T.mean)(Wt,1)],Gt=P.sequences.dims,es=new T.Tensor("float32",new Float32Array(Gt[0]*Gt[1]),Gt);for(let ns=0;ns<Gt[0];++ns){const Yt=Dt[ns].neg().squeeze_(0),[as,Es]=(0,q.dynamic_time_warping)(Yt.tolist()),xs=Array.from({length:as.length-1},(Is,tr)=>as[tr+1]-as[tr]),cs=(0,z.mergeArrays)([1],xs).map(Is=>!!Is),Ts=[];for(let Is=0;Is<cs.length;++Is)cs[Is]&&Ts.push(Es[Is]*Fe);es[ns].data.set(Ts,1)}return es}}class to extends se{constructor(){super(...arguments);fe(this,"requires_attention_mask",!1);fe(this,"main_input_name","input_values");fe(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class pr extends to{}class nl extends to{}class so extends se{constructor(){super(...arguments);fe(this,"main_input_name","pixel_values");fe(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Hr extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class di extends Hr{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:U,input_ids:ge,attention_mask:Fe}){const De=this.config.image_token_index,rt=ge.tolist().map(Dt=>Dt.findIndex(Gt=>Gt==De)),ft=rt.every(Dt=>Dt===-1),Mt=rt.every(Dt=>Dt!==-1);if(!ft&&!Mt)throw new Error("Every input should contain either 0 or 1 image token.");if(ft)return{inputs_embeds:P,attention_mask:Fe};const Rt=[],Wt=[];for(let Dt=0;Dt<rt.length;++Dt){const Gt=rt[Dt],es=P[Dt],ns=U[Dt],Yt=Fe[Dt];Rt.push((0,T.cat)([es.slice([0,Gt]),ns,es.slice([Gt+1,es.dims[0]])],0)),Wt.push((0,T.cat)([Yt.slice([0,Gt]),(0,T.ones)([ns.dims[0]]),Yt.slice([Gt+1,Yt.dims[0]])],0))}return{inputs_embeds:(0,T.stack)(Rt,0),attention_mask:(0,T.stack)(Wt,0)}}}class il extends di{}class ol extends di{}class al extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);fe(this,"main_input_name","inputs_embeds")}}class ll extends al{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:U,input_ids:ge,attention_mask:Fe}){return{inputs_embeds:(0,T.cat)([U,P],1),attention_mask:(0,T.cat)([(0,T.ones)(U.dims.slice(0,2)),Fe],1)}}async _prepare_inputs_embeds({input_ids:P,pixel_values:U,inputs_embeds:ge,attention_mask:Fe}){if(!P&&!U)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let De,Ze;return P&&(De=await this.encode_text({input_ids:P})),U&&(Ze=await this.encode_image({pixel_values:U})),De&&Ze?{inputs_embeds:ge,attention_mask:Fe}=this._merge_input_ids_with_image_features({inputs_embeds:De,image_features:Ze,input_ids:P,attention_mask:Fe}):ge=De||Ze,{inputs_embeds:ge,attention_mask:Fe}}async forward({input_ids:P,pixel_values:U,attention_mask:ge,decoder_input_ids:Fe,decoder_attention_mask:De,encoder_outputs:Ze,past_key_values:rt,inputs_embeds:ft,decoder_inputs_embeds:Mt}){if(ft||({inputs_embeds:ft,attention_mask:ge}=await this._prepare_inputs_embeds({input_ids:P,pixel_values:U,inputs_embeds:ft,attention_mask:ge})),!Ze){let{last_hidden_state:Dt}=await Oe(this,{inputs_embeds:ft,attention_mask:ge});Ze=Dt}if(!Mt){if(!Fe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Mt=await this.encode_text({input_ids:Fe})}return await Ce(this,{inputs_embeds:Mt,attention_mask:De,encoder_attention_mask:ge,encoder_hidden_states:Ze,past_key_values:rt},!0)}}class ul extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class dl extends ul{_merge_input_ids_with_image_features(P){const U=P.image_features.dims.at(-1),ge=P.image_features.view(-1,U);return tt({image_token_id:this.config.image_token_index,...P,image_features:ge})}}class cl extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class ro extends cl{async encode_image({pixel_values:P,pixel_attention_mask:U}){return(await we(this.sessions.vision_encoder,{pixel_values:P,pixel_attention_mask:U})).image_features}_merge_input_ids_with_image_features(P){const U=P.image_features.dims.at(-1),ge=P.image_features.view(-1,U);return tt({image_token_id:this.config.image_token_id,...P,image_features:ge})}}class pl extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class hr extends pl{async forward({input_ids:P=null,attention_mask:U=null,pixel_values:ge=null,image_sizes:Fe=null,position_ids:De=null,inputs_embeds:Ze=null,past_key_values:rt=null,generation_config:ft=null,logits_processor:Mt=null,...Rt}){if(!Ze){let Dt;if(ge&&P.dims[1]!==1){if(!Fe)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Dt}=await we(this.sessions.vision_encoder,{pixel_values:ge,image_sizes:Fe}))}else{const Gt=this.config.normalized_config.hidden_size;Dt=new T.Tensor("float32",[],[0,Gt])}({inputs_embeds:Ze}=await we(this.sessions.prepare_inputs_embeds,{input_ids:P,image_features:Dt}))}return await Ce(this,{inputs_embeds:Ze,past_key_values:rt,attention_mask:U,position_ids:De,generation_config:ft,logits_processor:Mt},!1)}}class rn extends se{}class hl extends rn{}class ip extends rn{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"text_model"})}}class ml extends rn{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"text_model"})}}class op extends rn{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"vision_model"})}}class _l extends rn{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"vision_model"})}}class no extends se{}class fl extends no{}class gl extends no{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"text_model"})}}class yl extends rn{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"vision_model"})}}class ap extends se{}class gr extends ap{}class ci extends se{}class pi extends ci{async forward(P){const U=!P.input_ids,ge=!P.pixel_values;if(U&&ge)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(U&&(P.input_ids=(0,T.ones)([P.pixel_values.dims[0],1])),ge){const{image_size:Mt}=this.config.vision_config;P.pixel_values=(0,T.full)([0,3,Mt,Mt],0)}const{text_embeddings:Fe,image_embeddings:De,l2norm_text_embeddings:Ze,l2norm_image_embeddings:rt}=await super.forward(P),ft={};return U||(ft.text_embeddings=Fe,ft.l2norm_text_embeddings=Ze),ge||(ft.image_embeddings=De,ft.l2norm_image_embeddings=rt),ft}}class io extends ci{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"text_model"})}}class yr extends ci{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"vision_model"})}}class oo extends se{}class wl extends oo{}class bl extends oo{}class ao extends se{}class Ml extends ao{}class vl extends ao{}class lo extends se{}class xl extends lo{}class Tl extends lo{}class uo extends se{}class wr extends uo{}class El extends uo{}class co extends se{}class Pl extends co{}class Cl extends co{}class po extends se{}class $l extends po{}class Sl extends po{}class ho extends se{}class kl extends ho{}class Al extends ho{}class hi extends se{}class mo extends hi{}class Il extends hi{}class _o extends se{}class fo extends _o{}class lp extends _o{}class go extends se{}class mi extends go{}class Ol extends go{}class yo extends se{}class Fl extends yo{}class Un extends yo{}class wo extends se{}class Dl extends wo{}class bo extends wo{}class Mo extends se{}class Ll extends Mo{}class zl extends Mo{}class vo extends se{}class up extends vo{}class Bl extends vo{}class xo extends se{}class Rl extends xo{}class dp extends xo{}class To extends se{}class ds extends To{}class Nl extends To{}class Eo extends se{}class jl extends Eo{}class Ul extends Eo{}class Po extends se{}class Vl extends Po{}class Wl extends Po{}class Co extends se{}class Gl extends Co{}class Kl extends Co{}class $o extends se{}class Hl extends $o{}class ql extends $o{}class So extends se{}class Vn extends So{}class Ql extends So{}class _i extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Xl extends _i{get_rope_index(P,U,ge,Fe){const{vision_config:De,image_token_id:Ze,video_token_id:rt,vision_start_token_id:ft}=this.config,Mt=De.spatial_merge_size??2,Rt=[];if(U||ge){let Wt=P.tolist();Fe||(Fe=(0,T.ones_like)(P));const Dt=Fe.tolist(),Gt=Array.from({length:3},Es=>Array.from({length:P.dims[0]},xs=>Array.from({length:P.dims[1]},cs=>1))),es=U?U.tolist():[],ns=ge?ge.tolist():[];let Yt=0,as=0;for(let Es=0;Es<Wt.length;++Es){const xs=Wt[Es].filter((Ps,Bs)=>Dt[Es][Bs]==1),Ts=xs.reduce((Ps,Bs,Qr)=>(Bs==ft&&Ps.push(Qr),Ps),[]).map(Ps=>xs[Ps+1]),Is=Ts.filter(Ps=>Ps==Ze).length,tr=Ts.filter(Ps=>Ps==rt).length;let Hs=[],Pr=0,Cn=Is,Fi=tr;for(let Ps=0;Ps<Ts.length;++Ps){const Bs=xs.findIndex((Yr,mr)=>mr>Pr&&Yr==Ze),Qr=xs.findIndex((Yr,mr)=>mr>Pr&&Yr==rt),pn=Cn>0&&Bs!==-1?Bs:xs.length+1,Xn=Fi>0&&Qr!==-1?Qr:xs.length+1;let Bi,Yn,Na,ja;pn<Xn?([Yn,Na,ja]=es[Yt],++Yt,--Cn,Bi=pn):([Yn,Na,ja]=ns[as],++as,--Fi,Bi=Xn);const[yh,Ua,Jn]=[Number(Yn),Math.floor(Number(Na)/Mt),Math.floor(Number(ja)/Mt)],Ri=Bi-Pr,Xr=Hs.length>0?(0,q.max)(Hs.at(-1))[0]+1:0;Hs.push(Array.from({length:3*Ri},(Yr,mr)=>Xr+mr%Ri));const Va=Ri+Xr,$n=yh*Ua*Jn,Vc=Array.from({length:$n},(Yr,mr)=>Va+Math.floor(mr/(Ua*Jn))),Wc=Array.from({length:$n},(Yr,mr)=>Va+Math.floor(mr/Jn)%Ua),Gc=Array.from({length:$n},(Yr,mr)=>Va+mr%Jn);Hs.push([Vc,Wc,Gc].flat()),Pr=Bi+$n}if(Pr<xs.length){const Ps=Hs.length>0?(0,q.max)(Hs.at(-1))[0]+1:0,Bs=xs.length-Pr;Hs.push(Array.from({length:3*Bs},(Qr,pn)=>Ps+pn%Bs))}const dr=Hs.reduce((Ps,Bs)=>Ps+Bs.length,0),Mr=new Array(dr);let Di=0;for(let Ps=0;Ps<3;++Ps)for(let Bs=0;Bs<Hs.length;++Bs){const Qr=Hs[Bs],pn=Qr.length/3;for(let Xn=Ps*pn;Xn<(Ps+1)*pn;++Xn)Mr[Di++]=Qr[Xn]}let Qn=0;const Li=Dt[Es];for(let Ps=0;Ps<Li.length;++Ps)if(Li[Ps]==1){for(let Bs=0;Bs<3;++Bs)Gt[Bs][Es][Ps]=Mr[Bs*dr/3+Qn];++Qn}const zi=(0,q.max)(Mr)[0];Rt.push(zi+1-Wt[Es].length)}return[new T.Tensor("int64",Gt.flat(1/0),[3,P.dims[0],P.dims[1]]),new T.Tensor("int64",Rt,[Rt.length,1])]}else if(Fe){const{data:Wt,dims:Dt}=be(Fe),Gt=BigInt64Array.from({length:3*Wt.length},(ns,Yt)=>Wt[Yt%Wt.length]),es=Array.from({length:Dt[0]},(ns,Yt)=>(0,q.max)(Wt.subarray(Dt[1]*Yt,Dt[1]*(Yt+1)))[0]+1n+BigInt(Dt[1]));return[new T.Tensor("int64",Gt,[3,...Dt]),new T.Tensor("int64",es,[es.length,1])]}else{const[Wt,Dt]=P.dims,Gt=BigInt64Array.from({length:3*Wt*Dt},(es,ns)=>BigInt(Math.floor(ns%Dt/Wt)));return[new T.Tensor("int64",Gt,[3,...P.dims]),(0,T.zeros)([Wt,1])]}}async encode_image({pixel_values:P,image_grid_thw:U}){return(await we(this.sessions.vision_encoder,{pixel_values:P,grid_thw:U})).image_features}_merge_input_ids_with_image_features(P){return tt({image_token_id:this.config.image_token_id,...P})}prepare_inputs_for_generation(P,U,ge){if(U.attention_mask&&!U.position_ids)if(!U.past_key_values)[U.position_ids,U.rope_deltas]=this.get_rope_index(U.input_ids,U.image_grid_thw,U.video_grid_thw,U.attention_mask);else{U.pixel_values=null;const Fe=BigInt(Object.values(U.past_key_values)[0].dims.at(-2)),De=U.rope_deltas.map(Ze=>Fe+Ze);U.position_ids=(0,T.stack)([De,De,De],0)}return U}}class ko extends se{}class Yl extends ko{}class Jl extends ko{}class Ao extends se{}class Zl extends Ao{}class eu extends Ao{}class Io extends se{}class tu extends Io{}class su extends Io{}class Oo extends se{}class ru extends Oo{}class nu extends Oo{}class Fo extends se{}class iu extends Fo{}class ou extends Fo{}class fi extends se{}class au extends fi{}class Do extends fi{async _call(P){return new Zt(await super._call(P))}}class gi extends se{}class lu extends gi{}class uu extends gi{async _call(P){return new Zt(await super._call(P))}}class du extends se{}class cu extends du{}class Lo extends se{}class pu extends Lo{}class zo extends Lo{async _call(P){return new Zt(await super._call(P))}}class hu extends se{}class mu extends hu{}class Bo extends se{}class cp extends Bo{}class _u extends Bo{async _call(P){return new Zt(await super._call(P))}}class fu extends se{}class br extends fu{}class Ro extends se{}class gu extends Ro{}class yu extends Ro{async _call(P){return new Zt(await super._call(P))}}class wu extends se{}class bu extends wu{async _call(P){return new jc(await super._call(P))}}class No extends se{}class Mu extends No{}class vu extends No{async _call(P){return new Zt(await super._call(P))}}class jo extends se{}class xu extends jo{}class pp extends jo{async _call(P){return new Zt(await super._call(P))}}class Uo extends se{}class Tu extends Uo{}class Eu extends Uo{}class Vo extends se{}class Pu extends Vo{}class Cu extends Vo{}class $u extends se{}class nn extends $u{}class on extends $u{async _call(P){return new Zt(await super._call(P))}}class Fr extends se{}class Wo extends Fr{}class an extends Fr{async _call(P){return new Go(await super._call(P))}}class Ks extends Fr{async _call(P){return new Ko(await super._call(P))}}class Go extends Ke{constructor({logits:P,pred_boxes:U}){super(),this.logits=P,this.pred_boxes=U}}class Ko extends Ke{constructor({logits:P,pred_boxes:U,pred_masks:ge}){super(),this.logits=P,this.pred_boxes=U,this.pred_masks=ge}}class Ho extends se{}class hp extends Ho{}class Wn extends Ho{async _call(P){return new qo(await super._call(P))}}class qo extends Ke{constructor({logits:P,pred_boxes:U}){super(),this.logits=P,this.pred_boxes=U}}class yi extends se{}class Su extends yi{}class ku extends yi{async _call(P){return new Qo(await super._call(P))}}class Qo extends Go{}class wi extends se{}class Au extends wi{}class Xo extends wi{async _call(P){return new Zt(await super._call(P))}}class Yo extends se{}class bi extends Yo{}class Jo extends Yo{async _call(P){return new Zt(await super._call(P))}}class Zo extends se{}class Iu extends Zo{}class mp extends Zo{async _call(P){return new Zt(await super._call(P))}}class ea extends se{}class ta extends ea{}class Gn extends ea{async _call(P){return new Zt(await super._call(P))}}class sa extends se{}class ra extends sa{}class Ou extends sa{}class na extends se{}class Fu extends na{}class _p extends na{}class Du extends se{}class Lu extends Du{}class ia extends se{}class zu extends ia{}class Mi extends ia{}class Bu extends ia{}class vi extends se{}class oa extends vi{}class xi extends se{}class Ru extends xi{}class Nu extends xi{}class Ti extends se{}class fp extends Ti{}class ju extends Ti{}class gp extends se{}class Uu extends gp{}class aa extends se{}class Vu extends aa{}class la extends aa{async _call(P){return new Zt(await super._call(P))}}class ua extends se{}class Wu extends ua{}class da extends ua{async _call(P){return new Zt(await super._call(P))}}class ca extends se{}class Gu extends ca{}class yp extends ca{async _call(P){return new Zt(await super._call(P))}}class pa extends se{}class Ku extends pa{}class Hu extends pa{async _call(P){return new Zt(await super._call(P))}}class wp extends se{}class qu extends wp{}class ha extends se{}class Qu extends ha{}class Xu extends ha{async _call(P){return new Yu(await super._call(P))}}class Yu extends Ke{constructor({logits:P,pred_boxes:U}){super(),this.logits=P,this.pred_boxes=U}}class bp extends se{}class Ei extends bp{async get_image_embeddings({pixel_values:P}){return await Oe(this,{pixel_values:P})}async forward(P){if((!P.image_embeddings||!P.image_positional_embeddings)&&(P={...P,...await this.get_image_embeddings(P)}),!P.input_labels&&P.input_points){const ge=P.input_points.dims.slice(0,-1),Fe=ge.reduce((De,Ze)=>De*Ze,1);P.input_labels=new T.Tensor("int64",new BigInt64Array(Fe).fill(1n),ge)}const U={image_embeddings:P.image_embeddings,image_positional_embeddings:P.image_positional_embeddings};return P.input_points&&(U.input_points=P.input_points),P.input_labels&&(U.input_labels=P.input_labels),P.input_boxes&&(U.input_boxes=P.input_boxes),await we(this.sessions.prompt_encoder_mask_decoder,U)}async _call(P){return new Kn(await super._call(P))}}class Kn extends Ke{constructor({iou_scores:P,pred_masks:U}){super(),this.iou_scores=P,this.pred_masks=U}}class Pi extends se{}class Ju extends Pi{}class Zu extends Pi{}class ma extends se{}class ed extends ma{}class _a extends ma{}class qr extends se{}class td extends qr{}class sd extends qr{async _call(P){return new cn(await super._call(P))}}class Mp extends qr{async _call(P){return new Zt(await super._call(P))}}class rd extends qr{async _call(P){return new Ds(await super._call(P))}}class Ci extends se{}class nd extends Ci{}class id extends Ci{async _call(P){return new Ds(await super._call(P))}}class od extends se{}class vp extends od{}class $i extends se{}class ad extends $i{}class xp extends $i{async _call(P){return new cn(await super._call(P))}}class ld extends $i{async _call(P){return new Zt(await super._call(P))}}class Hn extends se{}class ud extends Hn{}class dd extends Hn{async _call(P){return new cn(await super._call(P))}}class Tp extends Hn{async _call(P){return new Zt(await super._call(P))}}class cd extends Hn{async _call(P){return new Ds(await super._call(P))}}class Si extends se{}class pd extends Si{}class Ep extends Si{async _call(P){return new cn(await super._call(P))}}class hd extends Si{async _call(P){return new Zt(await super._call(P))}}class Pp extends se{}class md extends qr{}class _d extends qr{async _call(P){return new cn(await super._call(P))}}class Cp extends qr{async _call(P){return new Zt(await super._call(P))}}class Pn extends se{}class fd extends Pn{}class gd extends Pn{async _call(P){return new cn(await super._call(P))}}class yd extends Pn{async _call(P){return new Zt(await super._call(P))}}class $p extends Pn{async _call(P){return new Nc(await super._call(P))}}class wd extends Pn{async _call(P){return new Ds(await super._call(P))}}class bd extends se{}class Md extends bd{}class ki extends se{}class fh extends ki{}class Er extends ki{}class Dr extends ki{async generate_speech(P,U,{threshold:ge=.5,minlenratio:Fe=0,maxlenratio:De=20,vocoder:Ze=null}={}){const rt={input_ids:P},{encoder_outputs:ft,encoder_attention_mask:Mt}=await Oe(this,rt),Rt=ft.dims[1]/this.config.reduction_factor,Wt=Math.floor(Rt*De),Dt=Math.floor(Rt*Fe),Gt=this.config.num_mel_bins;let es=[],ns=null,Yt=null,as=0;for(;;){++as;const cs=pe(!!Yt);let Ts;Yt?Ts=Yt.output_sequence_out:Ts=new T.Tensor("float32",new Float32Array(Gt),[1,1,Gt]);let Is={use_cache_branch:cs,output_sequence:Ts,encoder_attention_mask:Mt,speaker_embeddings:U,encoder_hidden_states:ft};this.addPastKeyValues(Is,ns),Yt=await we(this.sessions.decoder_model_merged,Is),ns=this.getPastKeyValues(Yt,ns);const{prob:tr,spectrum:Hs}=Yt;if(es.push(Hs),as>=Dt&&(Array.from(tr.data).filter(Pr=>Pr>=ge).length>0||as>=Wt))break}const Es=(0,T.cat)(es),{waveform:xs}=await we(Ze.sessions.model,{spectrogram:Es});return{spectrogram:Es,waveform:xs}}}class ln extends se{constructor(){super(...arguments);fe(this,"main_input_name","spectrogram")}}class un extends se{}class vd extends un{}class fa extends se{}class xd extends fa{}class Td extends fa{}class ga extends se{}class Ed extends ga{}class Pd extends ga{}class ya extends se{}class Cd extends ya{}class $d extends ya{}class wa extends se{}class nr extends wa{}class Sd extends wa{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"text_model"})}}class kd extends wa{static async from_pretrained(P,U={}){return super.from_pretrained(P,{...U,model_file_name:U.model_file_name??"audio_model"})}}class ba extends se{}class Ma extends ba{async _call(P){return new Uc(await super._call(P))}}class dn extends se{}class Sp extends dn{}class Ad extends dn{}class Id extends dn{}class va extends se{}class Od extends va{}class Fd extends va{}class Ai extends se{}class Dd extends Ai{}class Ld extends Ai{async _call(P){return new Zt(await super._call(P))}}class xa extends se{}class kp extends xa{}class Ap extends xa{}class Ii extends se{constructor(){super(...arguments);fe(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(U){const[ge,Fe]=U.dims,De=this.config.decoder.num_codebooks,Ze=Fe-De;let rt=0;for(let Rt=0;Rt<U.size;++Rt){if(U.data[Rt]===this.config.decoder.pad_token_id)continue;const Wt=Rt%Fe,Dt=Math.floor(Rt/Fe)%De,Gt=Wt-Dt;Gt>0&&Gt<=Ze&&(U.data[rt++]=U.data[Rt])}const ft=Math.floor(ge/De),Mt=rt/(ft*De);return new T.Tensor(U.type,U.data.slice(0,rt),[ft,De,Mt])}prepare_inputs_for_generation(U,ge,Fe){let De=structuredClone(U);for(let rt=0;rt<De.length;++rt)for(let ft=0;ft<De[rt].length;++ft)rt%this.config.decoder.num_codebooks>=ft&&(De[rt][ft]=BigInt(this.config.decoder.pad_token_id));return Fe.guidance_scale!==null&&Fe.guidance_scale>1&&(De=De.concat(De)),super.prepare_inputs_for_generation(De,ge,Fe)}async generate(U){const ge=await super.generate(U),Fe=this._apply_and_filter_by_delay_pattern_mask(ge).unsqueeze_(0),{audio_values:De}=await we(this.sessions.encodec_decode,{audio_codes:Fe});return De}}class Ta extends se{}class Ip extends Ta{}class Ea extends Ta{async _call(P){return new Zt(await super._call(P))}}class Pa extends se{}class zd extends Pa{}class Bd extends Pa{async _call(P){return new Zt(await super._call(P))}}class Rd extends se{}class Nd extends Rd{}class jd extends Rd{async _call(P){return new Zt(await super._call(P))}}class Ca extends se{}class Op extends Ca{}class Ud extends Ca{async _call(P){return new Zt(await super._call(P))}}class Vd extends se{}class Fp extends Vd{}class Wd extends se{}class Gd extends Wd{constructor(...U){super(...U);fe(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(U){const ge=this._generation_mode??"text";let Fe;if(ge==="text"||!U.past_key_values){const Mt=this.sessions.prepare_inputs_embeds,Rt=(0,z.pick)(U,Mt.inputNames);Fe=await we(Mt,Rt)}else{const Mt=this.sessions.gen_img_embeds,Rt=(0,z.pick)({image_ids:U.input_ids},Mt.inputNames);Fe=await we(Mt,Rt)}const De={...U,...Fe},Ze=await Ce(this,De),rt=this.sessions[ge==="text"?"lm_head":"gen_head"];if(!rt)throw new Error(`Unable to find "${rt}" generation head`);const ft=await we(rt,(0,z.pick)(Ze,rt.inputNames));return{...Fe,...Ze,...ft}}async generate(U){return this._generation_mode="text",super.generate(U)}async generate_images(U){this._generation_mode="image";const ge=(U.inputs??U[this.main_input_name]).dims[1],De=(await super.generate(U)).slice(null,[ge,null]),Ze=this.sessions.image_decode,{decoded_image:rt}=await we(Ze,{generated_tokens:De}),ft=rt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Mt=[];for(const Rt of ft){const Wt=F.RawImage.fromTensor(Rt);Mt.push(Wt)}return Mt}}class Kd extends Ke{constructor({char_logits:P,bpe_logits:U,wp_logits:ge}){super(),this.char_logits=P,this.bpe_logits=U,this.wp_logits=ge}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Hd extends se{}class qd extends Hd{async _call(P){return new Kd(await super._call(P))}}class Qd extends se{}class Xd extends Qd{}class Yd extends Qd{}class $a extends se{}class Jd extends $a{}class Zd extends $a{}class ys{static async from_pretrained(P,{progress_callback:U=null,config:ge=null,cache_dir:Fe=null,local_files_only:De=!1,revision:Ze="main",model_file_name:rt=null,subfolder:ft="onnx",device:Mt=null,dtype:Rt=null,use_external_data_format:Wt=null,session_options:Dt={}}={}){const Gt={progress_callback:U,config:ge,cache_dir:Fe,local_files_only:De,revision:Ze,model_file_name:rt,subfolder:ft,device:Mt,dtype:Rt,use_external_data_format:Wt,session_options:Dt};if(Gt.config=await p.AutoConfig.from_pretrained(P,Gt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const es of this.MODEL_CLASS_MAPPINGS){const ns=es.get(Gt.config.model_type);if(ns)return await ns[1].from_pretrained(P,Gt)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${Gt.config.model_type}", attempting to construct from base class.`),await se.from_pretrained(P,Gt);throw Error(`Unsupported model type: ${Gt.config.model_type}`)}}fe(ys,"MODEL_CLASS_MAPPINGS",null),fe(ys,"BASE_IF_FAIL",!1);const Dp=new Map([["bert",["BertModel",ve]],["modernbert",["ModernBertModel",ut]],["nomic_bert",["NomicBertModel",ae]],["roformer",["RoFormerModel",me]],["electra",["ElectraModel",Ls]],["esm",["EsmModel",li]],["convbert",["ConvBertModel",vt]],["camembert",["CamembertModel",Nt]],["deberta",["DebertaModel",Rr]],["deberta-v2",["DebertaV2Model",xt]],["mpnet",["MPNetModel",bn]],["albert",["AlbertModel",Nn]],["distilbert",["DistilBertModel",lr]],["roberta",["RobertaModel",or]],["xlm",["XLMModel",zs]],["xlm-roberta",["XLMRobertaModel",At]],["clap",["ClapModel",nr]],["clip",["CLIPModel",hl]],["clipseg",["CLIPSegModel",wl]],["chinese_clip",["ChineseCLIPModel",gr]],["siglip",["SiglipModel",fl]],["jina_clip",["JinaCLIPModel",pi]],["mobilebert",["MobileBertModel",Ln]],["squeezebert",["SqueezeBertModel",Tn]],["wav2vec2",["Wav2Vec2Model",td]],["wav2vec2-bert",["Wav2Vec2BertModel",pd]],["unispeech",["UniSpeechModel",ad]],["unispeech-sat",["UniSpeechSatModel",ud]],["hubert",["HubertModel",md]],["wavlm",["WavLMModel",fd]],["audio-spectrogram-transformer",["ASTModel",tl]],["vits",["VitsModel",Ma]],["pyannote",["PyAnnoteModel",nd]],["wespeaker-resnet",["WeSpeakerResNetModel",vp]],["detr",["DetrModel",Wo]],["rt_detr",["RTDetrModel",hp]],["table-transformer",["TableTransformerModel",Su]],["vit",["ViTModel",au]],["ijepa",["IJepaModel",lu]],["pvt",["PvtModel",pu]],["vit_msn",["ViTMSNModel",cp]],["vit_mae",["ViTMAEModel",mu]],["groupvit",["GroupViTModel",br]],["fastvit",["FastViTModel",gu]],["mobilevit",["MobileViTModel",Mu]],["mobilevitv2",["MobileViTV2Model",xu]],["owlvit",["OwlViTModel",Tu]],["owlv2",["Owlv2Model",Pu]],["beit",["BeitModel",nn]],["deit",["DeiTModel",Au]],["hiera",["HieraModel",bi]],["convnext",["ConvNextModel",Vu]],["convnextv2",["ConvNextV2Model",Wu]],["dinov2",["Dinov2Model",Gu]],["dinov2_with_registers",["Dinov2WithRegistersModel",Ku]],["resnet",["ResNetModel",Iu]],["swin",["SwinModel",ta]],["swin2sr",["Swin2SRModel",ra]],["donut-swin",["DonutSwinModel",Uu]],["yolos",["YolosModel",Qu]],["dpt",["DPTModel",Fu]],["glpn",["GLPNModel",fp]],["hifigan",["SpeechT5HifiGan",ln]],["efficientnet",["EfficientNetModel",Dd]],["decision_transformer",["DecisionTransformerModel",Fp]],["patchtst",["PatchTSTForPrediction",Xd]],["patchtsmixer",["PatchTSMixerForPrediction",Jd]],["mobilenet_v1",["MobileNetV1Model",Ip]],["mobilenet_v2",["MobileNetV2Model",zd]],["mobilenet_v3",["MobileNetV3Model",Nd]],["mobilenet_v4",["MobileNetV4Model",Op]],["maskformer",["MaskFormerModel",Ru]],["mgp-str",["MgpstrForSceneTextRecognition",qd]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Md]]]),Lp=new Map([["t5",["T5Model",C]],["longt5",["LongT5Model",xe]],["mt5",["MT5Model",ht]],["bart",["BartModel",Tt]],["mbart",["MBartModel",Fs]],["marian",["MarianModel",Ju]],["whisper",["WhisperModel",sl]],["m2m_100",["M2M100Model",ed]],["blenderbot",["BlenderbotModel",ze]],["blenderbot-small",["BlenderbotSmallModel",Ss]]]),zp=new Map([["bloom",["BloomModel",tu]],["jais",["JAISModel",xl]],["gpt2",["GPT2Model",Ml]],["gptj",["GPTJModel",$l]],["gpt_bigcode",["GPTBigCodeModel",kl]],["gpt_neo",["GPTNeoModel",wr]],["gpt_neox",["GPTNeoXModel",Pl]],["codegen",["CodeGenModel",mo]],["llama",["LlamaModel",fo]],["exaone",["ExaoneModel",Dl]],["olmo",["OlmoModel",up]],["olmo2",["Olmo2Model",Rl]],["mobilellm",["MobileLLMModel",Ll]],["granite",["GraniteModel",ds]],["cohere",["CohereModel",jl]],["gemma",["GemmaModel",Vl]],["gemma2",["Gemma2Model",Gl]],["helium",["HeliumModel",mi]],["glm",["GlmModel",Fl]],["openelm",["OpenELMModel",Hl]],["qwen2",["Qwen2Model",Vn]],["phi",["PhiModel",Yl]],["phi3",["Phi3Model",Zl]],["mpt",["MptModel",ru]],["opt",["OPTModel",iu]],["mistral",["MistralModel",xd]],["starcoder2",["Starcoder2Model",Ed]],["falcon",["FalconModel",Cd]],["stablelm",["StableLmModel",Od]]]),ec=new Map([["speecht5",["SpeechT5ForSpeechToText",Er]],["whisper",["WhisperForConditionalGeneration",rl]],["moonshine",["MoonshineForConditionalGeneration",nl]]]),qn=new Map([["speecht5",["SpeechT5ForTextToSpeech",Dr]]]),Sa=new Map([["vits",["VitsModel",Ma]],["musicgen",["MusicgenForConditionalGeneration",Ii]]]),ka=new Map([["bert",["BertForSequenceClassification",We]],["modernbert",["ModernBertForSequenceClassification",lt]],["roformer",["RoFormerForSequenceClassification",Re]],["electra",["ElectraForSequenceClassification",$r]],["esm",["EsmForSequenceClassification",Fn]],["convbert",["ConvBertForSequenceClassification",kt]],["camembert",["CamembertForSequenceClassification",Sr]],["deberta",["DebertaForSequenceClassification",Nr]],["deberta-v2",["DebertaV2ForSequenceClassification",Vs]],["mpnet",["MPNetForSequenceClassification",Mn]],["albert",["AlbertForSequenceClassification",En]],["distilbert",["DistilBertForSequenceClassification",Os]],["roberta",["RobertaForSequenceClassification",fs]],["xlm",["XLMForSequenceClassification",Gs]],["xlm-roberta",["XLMRobertaForSequenceClassification",Ji]],["bart",["BartForSequenceClassification",_s]],["mbart",["MBartForSequenceClassification",rs]],["mobilebert",["MobileBertForSequenceClassification",Gr]],["squeezebert",["SqueezeBertForSequenceClassification",Bn]]]),Aa=new Map([["bert",["BertForTokenClassification",Ne]],["modernbert",["ModernBertForTokenClassification",mt]],["roformer",["RoFormerForTokenClassification",qe]],["electra",["ElectraForTokenClassification",Jr]],["esm",["EsmForTokenClassification",Dn]],["convbert",["ConvBertForTokenClassification",is]],["camembert",["CamembertForTokenClassification",kr]],["deberta",["DebertaForTokenClassification",jr]],["deberta-v2",["DebertaV2ForTokenClassification",Ur]],["mpnet",["MPNetForTokenClassification",vn]],["distilbert",["DistilBertForTokenClassification",Tr]],["roberta",["RobertaForTokenClassification",ks]],["xlm",["XLMForTokenClassification",St]],["xlm-roberta",["XLMRobertaForTokenClassification",Za]]]),Oi=new Map([["t5",["T5ForConditionalGeneration",X]],["longt5",["LongT5ForConditionalGeneration",Ae]],["mt5",["MT5ForConditionalGeneration",gt]],["bart",["BartForConditionalGeneration",Kt]],["mbart",["MBartForConditionalGeneration",zt]],["marian",["MarianMTModel",Zu]],["m2m_100",["M2M100ForConditionalGeneration",_a]],["blenderbot",["BlenderbotForConditionalGeneration",Zs]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Xs]]]),Ia=new Map([["bloom",["BloomForCausalLM",su]],["gpt2",["GPT2LMHeadModel",vl]],["jais",["JAISLMHeadModel",Tl]],["gptj",["GPTJForCausalLM",Sl]],["gpt_bigcode",["GPTBigCodeForCausalLM",Al]],["gpt_neo",["GPTNeoForCausalLM",El]],["gpt_neox",["GPTNeoXForCausalLM",Cl]],["codegen",["CodeGenForCausalLM",Il]],["llama",["LlamaForCausalLM",lp]],["exaone",["ExaoneForCausalLM",bo]],["olmo",["OlmoForCausalLM",Bl]],["olmo2",["Olmo2ForCausalLM",dp]],["mobilellm",["MobileLLMForCausalLM",zl]],["granite",["GraniteForCausalLM",Nl]],["cohere",["CohereForCausalLM",Ul]],["gemma",["GemmaForCausalLM",Wl]],["gemma2",["Gemma2ForCausalLM",Kl]],["helium",["HeliumForCausalLM",Ol]],["glm",["GlmForCausalLM",Un]],["openelm",["OpenELMForCausalLM",ql]],["qwen2",["Qwen2ForCausalLM",Ql]],["phi",["PhiForCausalLM",Jl]],["phi3",["Phi3ForCausalLM",eu]],["mpt",["MptForCausalLM",nu]],["opt",["OPTForCausalLM",ou]],["mbart",["MBartForCausalLM",rr]],["mistral",["MistralForCausalLM",Td]],["starcoder2",["Starcoder2ForCausalLM",Pd]],["falcon",["FalconForCausalLM",$d]],["trocr",["TrOCRForCausalLM",vd]],["stablelm",["StableLmForCausalLM",Fd]],["phi3_v",["Phi3VForCausalLM",hr]]]),Bp=new Map([["multi_modality",["MultiModalityCausalLM",Gd]]]),Oa=new Map([["bert",["BertForMaskedLM",Ve]],["modernbert",["ModernBertForMaskedLM",pt]],["roformer",["RoFormerForMaskedLM",Se]],["electra",["ElectraForMaskedLM",sr]],["esm",["EsmForMaskedLM",On]],["convbert",["ConvBertForMaskedLM",$t]],["camembert",["CamembertForMaskedLM",Zr]],["deberta",["DebertaForMaskedLM",Ar]],["deberta-v2",["DebertaV2ForMaskedLM",Ft]],["mpnet",["MPNetForMaskedLM",tn]],["albert",["AlbertForMaskedLM",os]],["distilbert",["DistilBertForMaskedLM",wn]],["roberta",["RobertaForMaskedLM",fr]],["xlm",["XLMWithLMHeadModel",As]],["xlm-roberta",["XLMRobertaForMaskedLM",Ja]],["mobilebert",["MobileBertForMaskedLM",ui]],["squeezebert",["SqueezeBertForMaskedLM",zn]]]),Fa=new Map([["bert",["BertForQuestionAnswering",je]],["roformer",["RoFormerForQuestionAnswering",at]],["electra",["ElectraForQuestionAnswering",Us]],["convbert",["ConvBertForQuestionAnswering",bs]],["camembert",["CamembertForQuestionAnswering",en]],["deberta",["DebertaForQuestionAnswering",ar]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ir]],["mpnet",["MPNetForQuestionAnswering",xn]],["albert",["AlbertForQuestionAnswering",jn]],["distilbert",["DistilBertForQuestionAnswering",ss]],["roberta",["RobertaForQuestionAnswering",bt]],["xlm",["XLMForQuestionAnswering",sn]],["xlm-roberta",["XLMRobertaForQuestionAnswering",el]],["mobilebert",["MobileBertForQuestionAnswering",_r]],["squeezebert",["SqueezeBertForQuestionAnswering",Rn]]]),Da=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",so]],["idefics3",["Idefics3ForConditionalGeneration",ro]]]),Rp=new Map([["llava",["LlavaForConditionalGeneration",di]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",il]],["moondream1",["Moondream1ForConditionalGeneration",ol]],["florence2",["Florence2ForConditionalGeneration",ll]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Xl]],["idefics3",["Idefics3ForConditionalGeneration",ro]],["paligemma",["PaliGemmaForConditionalGeneration",dl]]]),tc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",so]]]),sc=new Map([["vit",["ViTForImageClassification",Do]],["ijepa",["IJepaForImageClassification",uu]],["pvt",["PvtForImageClassification",zo]],["vit_msn",["ViTMSNForImageClassification",_u]],["fastvit",["FastViTForImageClassification",yu]],["mobilevit",["MobileViTForImageClassification",vu]],["mobilevitv2",["MobileViTV2ForImageClassification",pp]],["beit",["BeitForImageClassification",on]],["deit",["DeiTForImageClassification",Xo]],["hiera",["HieraForImageClassification",Jo]],["convnext",["ConvNextForImageClassification",la]],["convnextv2",["ConvNextV2ForImageClassification",da]],["dinov2",["Dinov2ForImageClassification",yp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Hu]],["resnet",["ResNetForImageClassification",mp]],["swin",["SwinForImageClassification",Gn]],["segformer",["SegformerForImageClassification",Ad]],["efficientnet",["EfficientNetForImageClassification",Ld]],["mobilenet_v1",["MobileNetV1ForImageClassification",Ea]],["mobilenet_v2",["MobileNetV2ForImageClassification",Bd]],["mobilenet_v3",["MobileNetV3ForImageClassification",jd]],["mobilenet_v4",["MobileNetV4ForImageClassification",Ud]]]),rc=new Map([["detr",["DetrForObjectDetection",an]],["rt_detr",["RTDetrForObjectDetection",Wn]],["table-transformer",["TableTransformerForObjectDetection",ku]],["yolos",["YolosForObjectDetection",Xu]]]),La=new Map([["owlvit",["OwlViTForObjectDetection",Eu]],["owlv2",["Owlv2ForObjectDetection",Cu]],["grounding-dino",["GroundingDinoForObjectDetection",qu]]]),nc=new Map([["detr",["DetrForSegmentation",Ks]],["clipseg",["CLIPSegForImageSegmentation",bl]]]),ic=new Map([["segformer",["SegformerForSemanticSegmentation",Id]],["sapiens",["SapiensForSemanticSegmentation",zu]]]),oc=new Map([["detr",["DetrForSegmentation",Ks]],["maskformer",["MaskFormerForInstanceSegmentation",Nu]]]),ac=new Map([["sam",["SamModel",Ei]]]),Np=new Map([["wav2vec2",["Wav2Vec2ForCTC",sd]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Ep]],["unispeech",["UniSpeechForCTC",xp]],["unispeech-sat",["UniSpeechSatForCTC",dd]],["wavlm",["WavLMForCTC",gd]],["hubert",["HubertForCTC",_d]]]),lc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Mp]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",hd]],["unispeech",["UniSpeechForSequenceClassification",ld]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Tp]],["wavlm",["WavLMForSequenceClassification",yd]],["hubert",["HubertForSequenceClassification",Cp]],["audio-spectrogram-transformer",["ASTForAudioClassification",Zi]]]),uc=new Map([["wavlm",["WavLMForXVector",$p]]]),dc=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",cd]],["wavlm",["WavLMForAudioFrameClassification",wd]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",rd]],["pyannote",["PyAnnoteForAudioFrameClassification",id]]]),cc=new Map([["vitmatte",["VitMatteForImageMatting",bu]]]),gh=new Map([["patchtst",["PatchTSTForPrediction",Yd]],["patchtsmixer",["PatchTSMixerForPrediction",Zd]]]),pc=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Ou]]]),hc=new Map([["dpt",["DPTForDepthEstimation",_p]],["depth_anything",["DepthAnythingForDepthEstimation",Lu]],["glpn",["GLPNForDepthEstimation",ju]],["sapiens",["SapiensForDepthEstimation",Mi]],["depth_pro",["DepthProForDepthEstimation",oa]]]),mc=new Map([["sapiens",["SapiensForNormalEstimation",Bu]]]),jp=new Map([["vitpose",["VitPoseForPoseEstimation",cu]]]),_c=new Map([["clip",["CLIPVisionModelWithProjection",_l]],["siglip",["SiglipVisionModel",yl]],["jina_clip",["JinaCLIPVisionModel",yr]]]),fc=[[Dp,O.EncoderOnly],[Lp,O.EncoderDecoder],[zp,O.DecoderOnly],[ka,O.EncoderOnly],[Aa,O.EncoderOnly],[Oi,O.Seq2Seq],[ec,O.Seq2Seq],[Ia,O.DecoderOnly],[Bp,O.MultiModality],[Oa,O.EncoderOnly],[Fa,O.EncoderOnly],[Da,O.Vision2Seq],[Rp,O.ImageTextToText],[sc,O.EncoderOnly],[nc,O.EncoderOnly],[oc,O.EncoderOnly],[ic,O.EncoderOnly],[cc,O.EncoderOnly],[gh,O.EncoderOnly],[pc,O.EncoderOnly],[hc,O.EncoderOnly],[mc,O.EncoderOnly],[jp,O.EncoderOnly],[rc,O.EncoderOnly],[La,O.EncoderOnly],[ac,O.MaskGeneration],[Np,O.EncoderOnly],[lc,O.EncoderOnly],[qn,O.Seq2Seq],[Sa,O.EncoderOnly],[uc,O.EncoderOnly],[dc,O.EncoderOnly],[_c,O.EncoderOnly]];for(const[y,P]of fc)for(const[U,ge]of y.values())I.set(U,P),E.set(ge,U),b.set(U,ge);const Up=[["MusicgenForConditionalGeneration",Ii,O.Musicgen],["Phi3VForCausalLM",hr,O.Phi3V],["CLIPTextModelWithProjection",ml,O.EncoderOnly],["SiglipTextModel",gl,O.EncoderOnly],["JinaCLIPTextModel",io,O.EncoderOnly],["ClapTextModelWithProjection",Sd,O.EncoderOnly],["ClapAudioModelWithProjection",kd,O.EncoderOnly]];for(const[y,P,U]of Up)I.set(y,U),E.set(P,y),b.set(y,P);class za extends ys{}fe(za,"MODEL_CLASS_MAPPINGS",fc.map(P=>P[0])),fe(za,"BASE_IF_FAIL",!0);class Vp extends ys{}fe(Vp,"MODEL_CLASS_MAPPINGS",[ka]);class gc extends ys{}fe(gc,"MODEL_CLASS_MAPPINGS",[Aa]);class yc extends ys{}fe(yc,"MODEL_CLASS_MAPPINGS",[Oi]);class wc extends ys{}fe(wc,"MODEL_CLASS_MAPPINGS",[ec]);class Ba extends ys{}fe(Ba,"MODEL_CLASS_MAPPINGS",[qn]);class bc extends ys{}fe(bc,"MODEL_CLASS_MAPPINGS",[Sa]);class Mc extends ys{}fe(Mc,"MODEL_CLASS_MAPPINGS",[Ia]);class vc extends ys{}fe(vc,"MODEL_CLASS_MAPPINGS",[Oa]);class xc extends ys{}fe(xc,"MODEL_CLASS_MAPPINGS",[Fa]);class Tc extends ys{}fe(Tc,"MODEL_CLASS_MAPPINGS",[Da]);class Ec extends ys{}fe(Ec,"MODEL_CLASS_MAPPINGS",[sc]);class Pc extends ys{}fe(Pc,"MODEL_CLASS_MAPPINGS",[nc]);class Cc extends ys{}fe(Cc,"MODEL_CLASS_MAPPINGS",[ic]);class Ra extends ys{}fe(Ra,"MODEL_CLASS_MAPPINGS",[oc]);class $c extends ys{}fe($c,"MODEL_CLASS_MAPPINGS",[rc]);class Sc extends ys{}fe(Sc,"MODEL_CLASS_MAPPINGS",[La]);class kc extends ys{}fe(kc,"MODEL_CLASS_MAPPINGS",[ac]);class Ac extends ys{}fe(Ac,"MODEL_CLASS_MAPPINGS",[Np]);class Ic extends ys{}fe(Ic,"MODEL_CLASS_MAPPINGS",[lc]);class Oc extends ys{}fe(Oc,"MODEL_CLASS_MAPPINGS",[uc]);class Fc extends ys{}fe(Fc,"MODEL_CLASS_MAPPINGS",[dc]);class Wp extends ys{}fe(Wp,"MODEL_CLASS_MAPPINGS",[tc]);class Dc extends ys{}fe(Dc,"MODEL_CLASS_MAPPINGS",[cc]);class Lc extends ys{}fe(Lc,"MODEL_CLASS_MAPPINGS",[pc]);class zc extends ys{}fe(zc,"MODEL_CLASS_MAPPINGS",[hc]);class Gp extends ys{}fe(Gp,"MODEL_CLASS_MAPPINGS",[mc]);class Bc extends ys{}fe(Bc,"MODEL_CLASS_MAPPINGS",[jp]);class Rc extends ys{}fe(Rc,"MODEL_CLASS_MAPPINGS",[_c]);class Kp extends Ke{constructor({logits:P,past_key_values:U,encoder_outputs:ge,decoder_attentions:Fe=null,cross_attentions:De=null}){super(),this.logits=P,this.past_key_values=U,this.encoder_outputs=ge,this.decoder_attentions=Fe,this.cross_attentions=De}}class Zt extends Ke{constructor({logits:P,...U}){super(),this.logits=P;const ge=Object.values(U);ge.length>0&&(this.attentions=ge)}}class Nc extends Ke{constructor({logits:P,embeddings:U}){super(),this.logits=P,this.embeddings=U}}class Ds extends Ke{constructor({logits:P}){super(),this.logits=P}}class Ys extends Ke{constructor({logits:P}){super(),this.logits=P}}class er extends Ke{constructor({start_logits:P,end_logits:U}){super(),this.start_logits=P,this.end_logits=U}}class cn extends Ke{constructor({logits:P}){super(),this.logits=P}}class Hp extends Ke{constructor({logits:P,past_key_values:U}){super(),this.logits=P,this.past_key_values=U}}class jc extends Ke{constructor({alphas:P}){super(),this.alphas=P}}class Uc extends Ke{constructor({waveform:P,spectrogram:U}){super(),this.waveform=P,this.spectrogram=U}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(te,h,s)=>{s.r(h),s.d(h,{ASTFeatureExtractor:()=>A});var p=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var w=s("./src/utils/audio.js");class A extends p.FeatureExtractor{constructor(z){super(z);const g=this.config.sampling_rate,x=(0,w.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let v=0;v<x.length;++v)x[v].push(0);this.mel_filters=x,this.window=(0,w.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(z,g){return(0,w.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:g,transpose:!0})}async _call(z){(0,p.validate_audio_inputs)(z,"ASTFeatureExtractor");const g=await this._extract_fbank_features(z,this.config.max_length);if(this.config.do_normalize){const x=this.std*2,v=g.data;for(let M=0;M<v.length;++M)v[M]=(v[M]-this.mean)/x}return{input_values:g.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(te,h,s)=>{s.r(h),s.d(h,{AutoFeatureExtractor:()=>D});var p=s("./src/utils/constants.js"),w=s("./src/utils/hub.js");s("./src/base/feature_extraction_utils.js");var A=s("./src/models/feature_extractors.js");class D{static async from_pretrained(g,x={}){const v=await(0,w.getModelJSON)(g,p.FEATURE_EXTRACTOR_NAME,!0,x),M=v.feature_extractor_type,T=A[M];if(!T)throw new Error(`Unknown feature_extractor_type: '${M}'. Please report this at ${p.GITHUB_ISSUE_URL}.`);return new T(v)}}},"./src/models/auto/image_processing_auto.js":(te,h,s)=>{s.r(h),s.d(h,{AutoImageProcessor:()=>z});var p=s("./src/utils/constants.js"),w=s("./src/utils/hub.js"),A=s("./src/base/image_processors_utils.js"),D=s("./src/models/image_processors.js");class z{static async from_pretrained(x,v={}){const M=await(0,w.getModelJSON)(x,p.IMAGE_PROCESSOR_NAME,!0,v),T=M.image_processor_type??M.feature_extractor_type;let F=D[T];return F||(T!==void 0&&console.warn(`Image processor type '${T}' not found, assuming base ImageProcessor. Please report this at ${p.GITHUB_ISSUE_URL}.`),F=A.ImageProcessor),new F(M)}}},"./src/models/auto/processing_auto.js":(te,h,s)=>{s.r(h),s.d(h,{AutoProcessor:()=>x});var p=s("./src/utils/constants.js"),w=s("./src/utils/hub.js"),A=s("./src/base/processing_utils.js"),D=s("./src/models/processors.js"),z=s("./src/models/image_processors.js"),g=s("./src/models/feature_extractors.js");class x{static async from_pretrained(M,T={}){const F=await(0,w.getModelJSON)(M,p.IMAGE_PROCESSOR_NAME,!0,T),{image_processor_type:q,feature_extractor_type:re,processor_class:ie}=F;if(ie&&D[ie])return D[ie].from_pretrained(M,T);if(!q&&!re)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const G={};if(q){const Q=z[q];if(!Q)throw new Error(`Unknown image_processor_type: '${q}'.`);G.image_processor=new Q(F)}if(re){const Q=z[re];if(Q)G.image_processor=new Q(F);else{const O=g[re];if(!O)throw new Error(`Unknown feature_extractor_type: '${re}'.`);G.feature_extractor=new O(F)}}const V={};return new A.Processor(V,G)}}},"./src/models/beit/image_processing_beit.js":(te,h,s)=>{s.r(h),s.d(h,{BeitFeatureExtractor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(te,h,s)=>{s.r(h),s.d(h,{BitImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(te,h,s)=>{s.r(h),s.d(h,{ChineseCLIPFeatureExtractor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(te,h,s)=>{s.r(h),s.d(h,{ClapFeatureExtractor:()=>A});var p=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var w=s("./src/utils/audio.js");class A extends p.FeatureExtractor{constructor(z){super(z),this.mel_filters=(0,w.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,w.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,w.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(z,g,x,v){let M;const T=z.length-g;if(T>0)if(x==="rand_trunc"){const F=Math.floor(Math.random()*(T+1));z=z.subarray(F,F+g),M=await this._extract_fbank_features(z,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${x}" not implemented`);else{if(T<0){let F=new Float64Array(g);if(F.set(z),v==="repeat")for(let q=z.length;q<g;q+=z.length)F.set(z.subarray(0,Math.min(z.length,g-q)),q);else if(v==="repeatpad")for(let q=z.length;q<-T;q+=z.length)F.set(z,q);z=F}if(x==="fusion")throw new Error(`Truncation strategy "${x}" not implemented`);M=await this._extract_fbank_features(z,this.mel_filters_slaney,this.config.nb_max_samples)}return M.unsqueeze_(0)}async _extract_fbank_features(z,g,x=null){return(0,w.spectrogram)(z,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:g,log_mel:"dB",max_num_frames:x,do_pad:!1,transpose:!0})}async _call(z,{max_length:g=null}={}){return(0,p.validate_audio_inputs)(z,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(z,g??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(te,h,s)=>{s.r(h),s.d(h,{CLIPFeatureExtractor:()=>A,CLIPImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/convnext/image_processing_convnext.js":(te,h,s)=>{s.r(h),s.d(h,{ConvNextFeatureExtractor:()=>A,ConvNextImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{constructor(z){super(z),this.crop_pct=this.config.crop_pct??224/256}async resize(z){var x;const g=(x=this.size)==null?void 0:x.shortest_edge;if(g===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(g<384){const v=Math.floor(g/this.crop_pct),[M,T]=this.get_resize_output_image_size(z,{shortest_edge:v});z=await z.resize(M,T,{resample:this.resample}),z=await z.center_crop(g,g)}else z=await z.resize(g,g,{resample:this.resample});return z}}class A extends w{}},"./src/models/deit/image_processing_deit.js":(te,h,s)=>{s.r(h),s.d(h,{DeiTFeatureExtractor:()=>A,DeiTImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/detr/image_processing_detr.js":(te,h,s)=>{s.r(h),s.d(h,{DetrFeatureExtractor:()=>D,DetrImageProcessor:()=>A});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");class A extends p.ImageProcessor{async _call(g){const x=await super._call(g),v=[x.pixel_values.dims[0],64,64],M=(0,w.full)(v,1n);return{...x,pixel_mask:M}}post_process_object_detection(...g){return(0,p.post_process_object_detection)(...g)}post_process_panoptic_segmentation(...g){return(0,p.post_process_panoptic_segmentation)(...g)}post_process_instance_segmentation(...g){return(0,p.post_process_instance_segmentation)(...g)}}class D extends A{}},"./src/models/donut/image_processing_donut.js":(te,h,s)=>{s.r(h),s.d(h,{DonutFeatureExtractor:()=>A,DonutImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{pad_image(z,g,x,v={}){const[M,T,F]=g;let q=this.image_mean;Array.isArray(this.image_mean)||(q=new Array(F).fill(q));let re=this.image_std;Array.isArray(re)||(re=new Array(F).fill(q));const ie=q.map((G,V)=>-G/re[V]);return super.pad_image(z,g,x,{center:!0,constant_values:ie,...v})}}class A extends w{}},"./src/models/dpt/image_processing_dpt.js":(te,h,s)=>{s.r(h),s.d(h,{DPTFeatureExtractor:()=>A,DPTImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/efficientnet/image_processing_efficientnet.js":(te,h,s)=>{s.r(h),s.d(h,{EfficientNetImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{constructor(D){super(D),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(z=>z*z))}}},"./src/models/feature_extractors.js":(te,h,s)=>{s.r(h),s.d(h,{ASTFeatureExtractor:()=>p.ASTFeatureExtractor,ClapFeatureExtractor:()=>w.ClapFeatureExtractor,ImageFeatureExtractor:()=>T.ImageProcessor,MoonshineFeatureExtractor:()=>A.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>D.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>z.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>g.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>x.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>v.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>M.WhisperFeatureExtractor});var p=s("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),w=s("./src/models/clap/feature_extraction_clap.js"),A=s("./src/models/moonshine/feature_extraction_moonshine.js"),D=s("./src/models/pyannote/feature_extraction_pyannote.js"),z=s("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),g=s("./src/models/speecht5/feature_extraction_speecht5.js"),x=s("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),v=s("./src/models/wespeaker/feature_extraction_wespeaker.js"),M=s("./src/models/whisper/feature_extraction_whisper.js"),T=s("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(te,h,s)=>{s.r(h),s.d(h,{Florence2Processor:()=>D});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");class D extends p.Processor{constructor(g,x){super(g,x);const{tasks_answer_post_processing_type:v,task_prompts_without_inputs:M,task_prompts_with_input:T}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(v??{})),this.task_prompts_without_inputs=new Map(Object.entries(M??{})),this.task_prompts_with_input=new Map(Object.entries(T??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(g){typeof g=="string"&&(g=[g]);const x=[];for(const v of g)if(this.task_prompts_without_inputs.has(v))x.push(this.task_prompts_without_inputs.get(v));else{for(const[M,T]of this.task_prompts_with_input)if(v.includes(M)){x.push(T.replaceAll("{input}",v).replaceAll(M,""));break}x.length!==g.length&&x.push(v)}return x}post_process_generation(g,x,v){const M=this.tasks_answer_post_processing_type.get(x)??"pure_text";g=g.replaceAll("<s>","").replaceAll("</s>","");let T;switch(M){case"pure_text":T=g;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const F=M==="ocr"?"quad_boxes":"bboxes",q=g.matchAll(this.regexes[F]),re=[],ie=[];for(const[G,V,...Q]of q)re.push(V?V.trim():re.at(-1)??""),ie.push(Q.map((O,I)=>(Number(O)+.5)/this.size_per_bin*v[I%2]));T={labels:re,[F]:ie};break;default:throw new Error(`Task "${x}" (of type "${M}") not yet implemented.`)}return{[x]:T}}async _call(g,x=null,v={}){if(!g&&!x)throw new Error("Either text or images must be provided");const M=await this.image_processor(g,v),T=x?this.tokenizer(x,v):{};return{...M,...T}}}fe(D,"tokenizer_class",A.AutoTokenizer),fe(D,"image_processor_class",w.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(te,h,s)=>{s.r(h),s.d(h,{GLPNFeatureExtractor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(te,h,s)=>{s.r(h),s.d(h,{GroundingDinoImageProcessor:()=>A});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");class A extends p.ImageProcessor{async _call(z){const g=await super._call(z),x=g.pixel_values.dims,v=(0,w.ones)([x[0],x[2],x[3]]);return{...g,pixel_mask:v}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(te,h,s)=>{s.r(h),s.d(h,{GroundingDinoProcessor:()=>g});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js"),D=s("./src/base/image_processors_utils.js");function z(x,v){const T=x.dims.at(-1)-1,F=x.tolist();F.fill(!1,0,1),F.fill(!1,T);const q=v.tolist();return F.map((re,ie)=>re?ie:null).filter(re=>re!==null).map(re=>q[re])}class g extends p.Processor{async _call(v,M,T={}){const F=v?await this.image_processor(v,T):{};return{...M?this.tokenizer(M,T):{},...F}}post_process_grounded_object_detection(v,M,{box_threshold:T=.25,text_threshold:F=.25,target_sizes:q=null}={}){const{logits:re,pred_boxes:ie}=v,G=re.dims[0];if(q!==null&&q.length!==G)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const V=re.dims.at(1),Q=re.sigmoid(),O=Q.max(-1).tolist(),I=ie.tolist().map(E=>E.map(L=>(0,D.center_to_corners_format)(L))),b=[];for(let E=0;E<G;++E){const L=q!==null?q[E]:null;L!==null&&(I[E]=I[E].map(ne=>ne.map((Ee,pe)=>Ee*L[(pe+1)%2])));const le=O[E],oe=[],Te=[],we=[];for(let ne=0;ne<V;++ne){const Ee=le[ne];if(Ee<=T)continue;const pe=I[E][ne],ke=Q[E][ne];oe.push(Ee),we.push(pe);const Oe=z(ke.gt(F),M[E]);Te.push(Oe)}b.push({scores:oe,boxes:we,labels:this.batch_decode(Te)})}return b}}fe(g,"tokenizer_class",A.AutoTokenizer),fe(g,"image_processor_class",w.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(te,h,s)=>{s.r(h),s.d(h,{Idefics3ImageProcessor:()=>A});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");class A extends p.ImageProcessor{constructor(z){super(z),this.do_image_splitting=z.do_image_splitting??!0,this.max_image_size=z.max_image_size}get_resize_for_vision_encoder(z,g){let[x,v]=z.dims.slice(-2);const M=v/x;return v>=x?(v=Math.ceil(v/g)*g,x=Math.floor(v/M),x=Math.ceil(x/g)*g):(x=Math.ceil(x/g)*g,v=Math.floor(x*M),v=Math.ceil(v/g)*g),{height:x,width:v}}async _call(z,{do_image_splitting:g=null,return_row_col_info:x=!1}={}){let v;if(!Array.isArray(z))v=[[z]];else{if(z.length===0||!z[0])throw new Error("No images provided.");Array.isArray(z[0])?v=z:v=[z]}let M=[],T=[],F=[];const q=[],re=[];for(const E of v){let L=await Promise.all(E.map(Te=>this.preprocess(Te)));q.push(...L.map(Te=>Te.original_size)),re.push(...L.map(Te=>Te.reshaped_input_size)),L.forEach(Te=>Te.pixel_values.unsqueeze_(0));const{longest_edge:le}=this.max_image_size;let oe;if(g??this.do_image_splitting){let Te=new Array(L.length),we=new Array(L.length);oe=await Promise.all(L.map(async(ne,Ee)=>{const pe=this.get_resize_for_vision_encoder(ne.pixel_values,le),ke=await(0,w.interpolate_4d)(ne.pixel_values,{size:[pe.height,pe.width]}),{frames:Oe,num_splits_h:Ce,num_splits_w:tt}=await this.split_image(ke,this.max_image_size);return Te[Ee]=Ce,we[Ee]=tt,(0,w.cat)(Oe,0)})),T.push(Te),F.push(we)}else{const Te=[le,le];oe=await Promise.all(L.map(we=>(0,w.interpolate_4d)(we.pixel_values,{size:Te}))),T.push(new Array(L.length).fill(0)),F.push(new Array(L.length).fill(0))}M.push((0,w.cat)(oe,0))}const ie=M.length,[G,V,Q,O]=M[0].dims;let I,b;if(ie===1)I=M[0].unsqueeze_(0),b=(0,w.full)([ie,G,Q,O],!0);else{const E=Math.max(...M.map(oe=>oe.dims.at(0)));b=(0,w.full)([ie,E,Q,O],!0);const L=b.data,le=E*Q*O;for(let oe=0;oe<ie;++oe){const Te=M[oe].dims[0];if(Te<E){M[oe]=(0,w.cat)([M[oe],(0,w.full)([E-Te,V,Q,O],0)],0);const we=oe*le+Te*Q*O,ne=(oe+1)*le;L.fill(!1,we,ne)}}I=(0,w.stack)(M,0)}return{pixel_values:I,pixel_attention_mask:b,original_sizes:q,reshaped_input_sizes:re,...x?{rows:T,cols:F}:{}}}async split_image(z,{longest_edge:g}){const x=g,v=g,M=[],[T,F]=z.dims.slice(-2);let q=0,re=0;if(T>x||F>v){q=Math.ceil(T/x),re=Math.ceil(F/v);const ie=Math.ceil(T/q),G=Math.ceil(F/re);for(let O=0;O<q;++O)for(let I=0;I<re;++I){let b,E,L,le;O===q-1?(E=T-ie,le=T):(E=O*ie,le=(O+1)*ie),I===re-1?(b=F-G,L=F):(b=I*G,L=(I+1)*G);const oe=[E,b],Te=[le,L],we=await(0,w.slice)(z,oe,Te,[2,3]);M.push(we)}const V=x,Q=v;(T!==V||F!==Q)&&(z=await(0,w.interpolate_4d)(z,{size:[V,Q]}))}return M.push(z),{frames:M,num_splits_h:q,num_splits_w:re}}}},"./src/models/idefics3/processing_idefics3.js":(te,h,s)=>{s.r(h),s.d(h,{Idefics3Processor:()=>v});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");s("./src/utils/image.js");var D=s("./src/utils/core.js");function z(M,T,F,q,re,ie){let G="";for(let V=0;V<T;++V){for(let Q=0;Q<F;++Q)G+=q+`<row_${V+1}_col_${Q+1}>`+re.repeat(M);G+=`
`}return G+=`
${q}${ie}`+re.repeat(M)+`${q}`,G}function g(M,T,F,q){return`${T}${q}`+F.repeat(M)+`${T}`}function x(M,T,F,q,re,ie){return M===0&&T===0?g(F,q,re,ie):z(F,M,T,q,re,ie)}class v extends p.Processor{constructor(){super(...arguments);fe(this,"fake_image_token","<fake_token_around_image>");fe(this,"image_token","<image>");fe(this,"global_img_token","<global-img>")}async _call(F,q=null,re={}){re.return_row_col_info??(re.return_row_col_info=!0);let ie;q&&(ie=await this.image_processor(q,re)),Array.isArray(F)||(F=[F]);const G=ie.rows??[new Array(F.length).fill(0)],V=ie.cols??[new Array(F.length).fill(0)],Q=this.config.image_seq_len,O=[],I=[];for(let E=0;E<F.length;++E){const L=F[E],le=G[E],oe=V[E];O.push((0,D.count)(L,this.image_token));const Te=le.map((Ee,pe)=>x(Ee,oe[pe],Q,this.fake_image_token,this.image_token,this.global_img_token)),we=L.split(this.image_token);if(we.length===0)throw new Error("The image token should be present in the text.");let ne=we[0];for(let Ee=0;Ee<Te.length;++Ee)ne+=Te[Ee]+we[Ee+1];I.push(ne)}return{...this.tokenizer(I),...ie}}}fe(v,"image_processor_class",w.AutoImageProcessor),fe(v,"tokenizer_class",A.AutoTokenizer),fe(v,"uses_processor_config",!0)},"./src/models/image_processors.js":(te,h,s)=>{s.r(h),s.d(h,{BeitFeatureExtractor:()=>p.BeitFeatureExtractor,BitImageProcessor:()=>w.BitImageProcessor,CLIPFeatureExtractor:()=>D.CLIPFeatureExtractor,CLIPImageProcessor:()=>D.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>A.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>z.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>z.ConvNextImageProcessor,DPTFeatureExtractor:()=>M.DPTFeatureExtractor,DPTImageProcessor:()=>M.DPTImageProcessor,DeiTFeatureExtractor:()=>g.DeiTFeatureExtractor,DeiTImageProcessor:()=>g.DeiTImageProcessor,DetrFeatureExtractor:()=>x.DetrFeatureExtractor,DetrImageProcessor:()=>x.DetrImageProcessor,DonutFeatureExtractor:()=>v.DonutFeatureExtractor,DonutImageProcessor:()=>v.DonutImageProcessor,EfficientNetImageProcessor:()=>T.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>F.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>q.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>re.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>G.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>V.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>Q.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>O.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>O.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>I.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>I.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>b.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>b.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>E.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>E.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>L.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>L.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>le.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>le.MobileViTImageProcessor,NougatImageProcessor:()=>oe.NougatImageProcessor,OwlViTFeatureExtractor:()=>we.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>we.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Te.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ne.Phi3VImageProcessor,PvtImageProcessor:()=>Ee.PvtImageProcessor,Qwen2VLImageProcessor:()=>pe.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ke.RTDetrImageProcessor,SamImageProcessor:()=>Oe.SamImageProcessor,SegformerFeatureExtractor:()=>Ce.SegformerFeatureExtractor,SegformerImageProcessor:()=>Ce.SegformerImageProcessor,SiglipImageProcessor:()=>tt.SiglipImageProcessor,Swin2SRImageProcessor:()=>Ge.Swin2SRImageProcessor,VLMImageProcessor:()=>ie.VLMImageProcessor,ViTFeatureExtractor:()=>be.ViTFeatureExtractor,ViTImageProcessor:()=>be.ViTImageProcessor,VitMatteImageProcessor:()=>J.VitMatteImageProcessor,VitPoseImageProcessor:()=>ce.VitPoseImageProcessor,YolosFeatureExtractor:()=>$e.YolosFeatureExtractor,YolosImageProcessor:()=>$e.YolosImageProcessor});var p=s("./src/models/beit/image_processing_beit.js"),w=s("./src/models/bit/image_processing_bit.js"),A=s("./src/models/chinese_clip/image_processing_chinese_clip.js"),D=s("./src/models/clip/image_processing_clip.js"),z=s("./src/models/convnext/image_processing_convnext.js"),g=s("./src/models/deit/image_processing_deit.js"),x=s("./src/models/detr/image_processing_detr.js"),v=s("./src/models/donut/image_processing_donut.js"),M=s("./src/models/dpt/image_processing_dpt.js"),T=s("./src/models/efficientnet/image_processing_efficientnet.js"),F=s("./src/models/glpn/image_processing_glpn.js"),q=s("./src/models/grounding_dino/image_processing_grounding_dino.js"),re=s("./src/models/idefics3/image_processing_idefics3.js"),ie=s("./src/models/janus/image_processing_janus.js"),G=s("./src/models/jina_clip/image_processing_jina_clip.js"),V=s("./src/models/llava_onevision/image_processing_llava_onevision.js"),Q=s("./src/models/mask2former/image_processing_mask2former.js"),O=s("./src/models/maskformer/image_processing_maskformer.js"),I=s("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),b=s("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),E=s("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),L=s("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),le=s("./src/models/mobilevit/image_processing_mobilevit.js"),oe=s("./src/models/nougat/image_processing_nougat.js"),Te=s("./src/models/owlv2/image_processing_owlv2.js"),we=s("./src/models/owlvit/image_processing_owlvit.js"),ne=s("./src/models/phi3_v/image_processing_phi3_v.js"),Ee=s("./src/models/pvt/image_processing_pvt.js"),pe=s("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ke=s("./src/models/rt_detr/image_processing_rt_detr.js"),Oe=s("./src/models/sam/image_processing_sam.js"),Ce=s("./src/models/segformer/image_processing_segformer.js"),tt=s("./src/models/siglip/image_processing_siglip.js"),Ge=s("./src/models/swin2sr/image_processing_swin2sr.js"),be=s("./src/models/vit/image_processing_vit.js"),J=s("./src/models/vitmatte/image_processing_vitmatte.js"),ce=s("./src/models/vitpose/image_processing_vitpose.js"),$e=s("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(te,h,s)=>{s.r(h),s.d(h,{VLMImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{constructor(D){super({do_pad:!0,pad_size:{width:D.image_size,height:D.image_size},...D}),this.constant_values=this.config.background_color.map(z=>z*this.rescale_factor)}pad_image(D,z,g,x){return super.pad_image(D,z,g,{constant_values:this.constant_values,center:!0,...x})}}},"./src/models/janus/processing_janus.js":(te,h,s)=>{s.r(h),s.d(h,{VLChatProcessor:()=>x});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js"),D=s("./src/utils/core.js"),z=s("./src/utils/tensor.js"),g=s("./src/utils/image.js");class x extends p.Processor{constructor(M,T){super(M,T),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(M,{images:T=null,chat_template:F="default"}={}){T?Array.isArray(T)||(T=[T]):T=await Promise.all(M.filter(oe=>oe.images).flatMap(oe=>oe.images).map(oe=>g.RawImage.read(oe)));const q=this.tokenizer,re=q.apply_chat_template(M,{tokenize:!1,add_generation_prompt:!0,chat_template:F}),ie=oe=>q.encode(oe,{add_special_tokens:!1}),G=re.split(this.image_tag),V=G.length-1;if(T.length!==V)throw new Error(`Number of images provided (${T.length}) does not match number of "${this.image_tag}" image tags (${V})`);const[Q,O,I]=q.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let b=ie(G[0]),E=new Array(b.length).fill(!1);for(let oe=1;oe<G.length;++oe){const Te=new Array(this.num_image_tokens).fill(Q),we=ie(G[oe]);b=(0,D.mergeArrays)(b,[O],Te,[I],we);const ne=new Array(this.num_image_tokens).fill(!0);E=(0,D.mergeArrays)(E,[!1],ne,[!1],new Array(we.length).fill(!1))}const L=[1,b.length],le={input_ids:new z.Tensor("int64",b,L),attention_mask:new z.Tensor("int64",new Array(b.length).fill(1),L),images_seq_mask:new z.Tensor("bool",E,L),images_emb_mask:new z.Tensor("bool",new Array(V*this.num_image_tokens).fill(!0),[1,V,this.num_image_tokens])};if(T&&T.length>0){const oe=await this.image_processor(T);return oe.pixel_values.unsqueeze_(0),{...le,...oe}}return le}}fe(x,"image_processor_class",w.AutoImageProcessor),fe(x,"tokenizer_class",A.AutoTokenizer),fe(x,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(te,h,s)=>{s.r(h),s.d(h,{JinaCLIPImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{constructor(D){const{resize_mode:z,fill_color:g,interpolation:x,size:v,...M}=D,T=z==="squash"?{width:v,height:v}:z==="shortest"?{shortest_edge:v}:{longest_edge:v},F=x==="bicubic"?3:2;super({...M,size:T,resample:F,do_center_crop:!0,crop_size:v,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(te,h,s)=>{s.r(h),s.d(h,{JinaCLIPProcessor:()=>D});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");class D extends p.Processor{async _call(g=null,x=null,v={}){if(!g&&!x)throw new Error("Either text or images must be provided");const M=g?this.tokenizer(g,v):{},T=x?await this.image_processor(x,v):{};return{...M,...T}}}fe(D,"tokenizer_class",A.AutoTokenizer),fe(D,"image_processor_class",w.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(te,h,s)=>{s.r(h),s.d(h,{LlavaOnevisionImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(te,h,s)=>{s.r(h),s.d(h,{Mask2FormerImageProcessor:()=>w});var p=s("./src/models/maskformer/image_processing_maskformer.js");class w extends p.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(te,h,s)=>{s.r(h),s.d(h,{MaskFormerFeatureExtractor:()=>A,MaskFormerImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_panoptic_segmentation(...z){return(0,p.post_process_panoptic_segmentation)(...z)}post_process_instance_segmentation(...z){return(0,p.post_process_instance_segmentation)(...z)}}class A extends w{}},"./src/models/mgp_str/processing_mgp_str.js":(te,h,s)=>{s.r(h),s.d(h,{MgpstrProcessor:()=>g});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js"),D=s("./src/utils/maths.js");const z={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class g extends p.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(v,M){if(!z.hasOwnProperty(M))throw new Error(`Format ${M} is not supported.`);const[T,F]=z[M],q=this[T].bind(this),[re,ie]=v.dims,G=[],V=[],Q=v.tolist();for(let I=0;I<re;++I){const b=Q[I],E=[],L=[];for(let oe=1;oe<ie;++oe){const[Te,we]=(0,D.max)((0,D.softmax)(b[oe]));if(L.push(Te),we==F)break;E.push(we)}const le=L.length>0?L.reduce((oe,Te)=>oe*Te,1):0;V.push(E),G.push(le)}return[q(V),G]}char_decode(v){return this.char_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}bpe_decode(v){return this.bpe_tokenizer.batch_decode(v)}wp_decode(v){return this.wp_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}batch_decode([v,M,T]){const[F,q]=this._decode_helper(v,"char"),[re,ie]=this._decode_helper(M,"bpe"),[G,V]=this._decode_helper(T,"wp"),Q=[],O=[];for(let I=0;I<F.length;++I){const[b,E]=(0,D.max)([q[I],ie[I],V[I]]);Q.push([F[I],re[I],G[I]][E]),O.push(b)}return{generated_text:Q,scores:O,char_preds:F,bpe_preds:re,wp_preds:G}}static async from_pretrained(...v){const M=await super.from_pretrained(...v),T=await A.AutoTokenizer.from_pretrained("Xenova/gpt2"),F=await A.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return M.components={image_processor:M.image_processor,char_tokenizer:M.tokenizer,bpe_tokenizer:T,wp_tokenizer:F},M}async _call(v,M=null){const T=await this.image_processor(v);return M&&(T.labels=this.tokenizer(M).input_ids),T}}fe(g,"tokenizer_class",A.AutoTokenizer),fe(g,"image_processor_class",w.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(te,h,s)=>{s.r(h),s.d(h,{MobileNetV1FeatureExtractor:()=>A,MobileNetV1ImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(te,h,s)=>{s.r(h),s.d(h,{MobileNetV2FeatureExtractor:()=>A,MobileNetV2ImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(te,h,s)=>{s.r(h),s.d(h,{MobileNetV3FeatureExtractor:()=>A,MobileNetV3ImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(te,h,s)=>{s.r(h),s.d(h,{MobileNetV4FeatureExtractor:()=>A,MobileNetV4ImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/mobilevit/image_processing_mobilevit.js":(te,h,s)=>{s.r(h),s.d(h,{MobileViTFeatureExtractor:()=>A,MobileViTImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/moonshine/feature_extraction_moonshine.js":(te,h,s)=>{s.r(h),s.d(h,{MoonshineFeatureExtractor:()=>A});var p=s("./src/base/feature_extraction_utils.js"),w=s("./src/utils/tensor.js");class A extends p.FeatureExtractor{async _call(z){(0,p.validate_audio_inputs)(z,"MoonshineFeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));const g=[1,z.length];return{input_values:new w.Tensor("float32",z,g)}}}},"./src/models/moonshine/processing_moonshine.js":(te,h,s)=>{s.r(h),s.d(h,{MoonshineProcessor:()=>D});var p=s("./src/models/auto/feature_extraction_auto.js"),w=s("./src/tokenizers.js"),A=s("./src/base/processing_utils.js");class D extends A.Processor{async _call(g){return await this.feature_extractor(g)}}fe(D,"tokenizer_class",w.AutoTokenizer),fe(D,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(te,h,s)=>{s.r(h),s.d(h,{NougatImageProcessor:()=>w});var p=s("./src/models/donut/image_processing_donut.js");class w extends p.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(te,h,s)=>{s.r(h),s.d(h,{Owlv2ImageProcessor:()=>w});var p=s("./src/models/owlvit/image_processing_owlvit.js");class w extends p.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(te,h,s)=>{s.r(h),s.d(h,{OwlViTFeatureExtractor:()=>A,OwlViTImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_object_detection(...z){return(0,p.post_process_object_detection)(...z)}}class A extends w{}},"./src/models/owlvit/processing_owlvit.js":(te,h,s)=>{s.r(h),s.d(h,{OwlViTProcessor:()=>D});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");class D extends p.Processor{}fe(D,"tokenizer_class",A.AutoTokenizer),fe(D,"image_processor_class",w.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(te,h,s)=>{s.r(h),s.d(h,{PaliGemmaProcessor:()=>g});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");const D="<image>";function z(x,v,M,T,F){return`${T.repeat(M*F)}${v}${x}
`}class g extends p.Processor{async _call(v,M=null,T={}){M||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),M=""),Array.isArray(v)||(v=[v]),Array.isArray(M)||(M=[M]);const F=this.tokenizer.bos_token,q=this.image_processor.config.image_seq_length;let re;M.some(V=>V.includes(D))?re=M.map(V=>{const Q=V.replaceAll(D,D.repeat(q)),O=Q.lastIndexOf(D),I=O===-1?0:O+D.length;return Q.slice(0,I)+F+Q.slice(I)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),re=M.map(V=>z(V,F,q,D,v.length)));const ie=this.tokenizer(re,T);return{...await this.image_processor(v,T),...ie}}}fe(g,"tokenizer_class",A.AutoTokenizer),fe(g,"image_processor_class",w.AutoImageProcessor),fe(g,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(te,h,s)=>{s.r(h),s.d(h,{Phi3VImageProcessor:()=>v});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");const A=336,D=[2,3],{ceil:z,floor:g,sqrt:x}=Math;class v extends p.ImageProcessor{constructor(T){super({...T,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=T.num_crops}calc_num_image_tokens_from_image_size(T,F){const{num_img_tokens:q}=this.config;return g((g(F/A)*g(T/A)+1)*q+1+(g(F/A)+1)*x(q))}get_resize_output_image_size(T,F){const q=this._num_crops,[re,ie]=T.size;let G=re/ie,V=1;for(;V*Math.ceil(V/G)<=q;)V+=1;V-=1;const Q=Math.floor(V*336),O=Math.floor(Q/G);return[Q,O]}pad_image(T,F,q,re={}){const[ie,G]=F,V=A*z(ie/A),Q=A*z(G/A),O=[1,1,1].map((I,b)=>(I-this.image_mean[b])/this.image_std[b]);return super.pad_image(T,F,{width:Q,height:V},{center:!0,constant_values:O,...re})}async _call(T,{num_crops:F=null}={}){if(this._num_crops=F??(F=this.config.num_crops),F<4||x(F)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(T)||(T=[T]);const q=T.length,re=await Promise.all(T.map(E=>this.preprocess(E))),ie=re.map(E=>E.original_size),G=re.map(E=>E.reshaped_input_size),V=[];for(const{pixel_values:E}of re){E.unsqueeze_(0);const[L,le]=E.dims.slice(-2),oe=await(0,w.interpolate_4d)(E,{size:[A,A],mode:"bicubic"});if(F>0){const Te=[],we=x(F),ne=g(le/we),Ee=g(L/we);for(let ke=0;ke<we;++ke)for(let Oe=0;Oe<we;++Oe){let Ce,tt,Ge,be;ke===we-1?(tt=L-Ee,be=L):(tt=ke*Ee,be=(ke+1)*Ee),Oe===we-1?(Ce=le-ne,Ge=le):(Ce=Oe*ne,Ge=(Oe+1)*ne);const J=[tt,Ce],ce=[be,Ge],$e=await(0,w.slice)(E,J,ce,D);Te.push($e)}const pe=await(0,w.interpolate_4d)((0,w.cat)(Te,0),{size:[A,A],mode:"bicubic"});V.push((0,w.cat)([oe,pe],0))}else V.push(oe)}const Q=(0,w.stack)(V,0),O=G.map(E=>E.map(L=>A*z(L/A))),I=new w.Tensor("int64",O.flat(),[q,2]),b=O.map(([E,L])=>this.calc_num_image_tokens_from_image_size(L,E));return{pixel_values:Q,original_sizes:ie,reshaped_input_sizes:G,image_sizes:I,num_img_tokens:b}}}},"./src/models/phi3_v/processing_phi3_v.js":(te,h,s)=>{s.r(h),s.d(h,{Phi3VProcessor:()=>g});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");s("./src/utils/image.js");const D="<|image|>",z=/<\|image_\d+\|>/g;class g extends p.Processor{async _call(v,M=null,{padding:T=!0,truncation:F=!0,num_crops:q=null}={}){Array.isArray(v)||(v=[v]);let re,ie;if(M){ie=await this.image_processor(M,{num_crops:q});const{num_img_tokens:G}=ie,V=v.map((O,I)=>O.split(z).join(D.repeat(G[I])));re=this.tokenizer(V,{padding:T,truncation:F});const Q=this.tokenizer.model.convert_tokens_to_ids([D])[0];re.input_ids.map_(O=>O==Q?-O:O)}else re=this.tokenizer(v);return{...re,...ie}}}fe(g,"image_processor_class",w.AutoImageProcessor),fe(g,"tokenizer_class",A.AutoTokenizer)},"./src/models/processors.js":(te,h,s)=>{s.r(h),s.d(h,{Florence2Processor:()=>p.Florence2Processor,GroundingDinoProcessor:()=>w.GroundingDinoProcessor,Idefics3Processor:()=>A.Idefics3Processor,JinaCLIPProcessor:()=>z.JinaCLIPProcessor,MgpstrProcessor:()=>g.MgpstrProcessor,MoonshineProcessor:()=>x.MoonshineProcessor,OwlViTProcessor:()=>v.OwlViTProcessor,PaliGemmaProcessor:()=>T.PaliGemmaProcessor,Phi3VProcessor:()=>M.Phi3VProcessor,PyAnnoteProcessor:()=>F.PyAnnoteProcessor,Qwen2VLProcessor:()=>q.Qwen2VLProcessor,SamProcessor:()=>re.SamProcessor,SpeechT5Processor:()=>ie.SpeechT5Processor,VLChatProcessor:()=>D.VLChatProcessor,Wav2Vec2Processor:()=>G.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>V.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>Q.WhisperProcessor});var p=s("./src/models/florence2/processing_florence2.js"),w=s("./src/models/grounding_dino/processing_grounding_dino.js"),A=s("./src/models/idefics3/processing_idefics3.js"),D=s("./src/models/janus/processing_janus.js"),z=s("./src/models/jina_clip/processing_jina_clip.js"),g=s("./src/models/mgp_str/processing_mgp_str.js"),x=s("./src/models/moonshine/processing_moonshine.js"),v=s("./src/models/owlvit/processing_owlvit.js"),M=s("./src/models/phi3_v/processing_phi3_v.js"),T=s("./src/models/paligemma/processing_paligemma.js"),F=s("./src/models/pyannote/processing_pyannote.js"),q=s("./src/models/qwen2_vl/processing_qwen2_vl.js"),re=s("./src/models/sam/processing_sam.js"),ie=s("./src/models/speecht5/processing_speecht5.js"),G=s("./src/models/wav2vec2/processing_wav2vec2.js"),V=s("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),Q=s("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(te,h,s)=>{s.r(h),s.d(h,{PvtImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(te,h,s)=>{s.r(h),s.d(h,{PyAnnoteFeatureExtractor:()=>D});var p=s("./src/base/feature_extraction_utils.js"),w=s("./src/utils/tensor.js"),A=s("./src/utils/maths.js");class D extends p.FeatureExtractor{async _call(g){(0,p.validate_audio_inputs)(g,"PyAnnoteFeatureExtractor"),g instanceof Float64Array&&(g=new Float32Array(g));const x=[1,1,g.length];return{input_values:new w.Tensor("float32",g,x)}}samples_to_frames(g){return(g-this.config.offset)/this.config.step}post_process_speaker_diarization(g,x){const v=x/this.samples_to_frames(x)/this.config.sampling_rate,M=[];for(const T of g.tolist()){const F=[];let q=-1;for(let re=0;re<T.length;++re){const ie=(0,A.softmax)(T[re]),[G,V]=(0,A.max)(ie),[Q,O]=[re,re+1];V!==q?(q=V,F.push({id:V,start:Q,end:O,score:G})):(F.at(-1).end=O,F.at(-1).score+=G)}M.push(F.map(({id:re,start:ie,end:G,score:V})=>({id:re,start:ie*v,end:G*v,confidence:V/(G-ie)})))}return M}}},"./src/models/pyannote/processing_pyannote.js":(te,h,s)=>{s.r(h),s.d(h,{PyAnnoteProcessor:()=>A});var p=s("./src/base/processing_utils.js"),w=s("./src/models/pyannote/feature_extraction_pyannote.js");class A extends p.Processor{async _call(z){return await this.feature_extractor(z)}post_process_speaker_diarization(...z){return this.feature_extractor.post_process_speaker_diarization(...z)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}fe(A,"feature_extractor_class",w.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(te,h,s)=>{s.r(h),s.d(h,{Qwen2VLImageProcessor:()=>A});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");class A extends p.ImageProcessor{async _call(z,...g){const{pixel_values:x,original_sizes:v,reshaped_input_sizes:M}=await super._call(z,...g);let T=x;const{temporal_patch_size:F,merge_size:q,patch_size:re}=this.config;T.dims[0]===1&&(T=(0,w.cat)(Array.from({length:F},()=>T),0));const ie=T.dims[0]/F,G=T.dims[1],V=Math.floor(T.dims[2]/re),Q=Math.floor(T.dims[3]/re),O=T.view(ie,F,G,Math.floor(V/q),q,re,Math.floor(Q/q),q,re).permute(0,3,6,4,7,2,1,5,8).view(ie*V*Q,G*F*re*re),I=new w.Tensor("int64",[ie,V,Q],[1,3]);return{pixel_values:O,image_grid_thw:I,original_sizes:v,reshaped_input_sizes:M}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(te,h,s)=>{s.r(h),s.d(h,{Qwen2VLProcessor:()=>D});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js"),A=s("./src/tokenizers.js");s("./src/utils/image.js");class D extends p.Processor{async _call(g,x=null,...v){Array.isArray(g)||(g=[g]);let M,T;if(x&&(M=await this.image_processor(x),T=M.image_grid_thw),T){let q=this.image_processor.config.merge_size**2,re=0;const ie=T.tolist();g=g.map(G=>{for(;G.includes("<|image_pad|>");){const V=Number(ie[re++].reduce((Q,O)=>Q*O,1n));G=G.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(V/q)))}return G.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(g),...M}}}fe(D,"image_processor_class",w.AutoImageProcessor),fe(D,"tokenizer_class",A.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(te,h,s)=>{s.r(h),s.d(h,{RTDetrImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_object_detection(...D){return(0,p.post_process_object_detection)(...D)}}},"./src/models/sam/image_processing_sam.js":(te,h,s)=>{s.r(h),s.d(h,{SamImageProcessor:()=>D});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/core.js"),A=s("./src/utils/tensor.js");class D extends p.ImageProcessor{reshape_input_points(g,x,v,M=!1){g=structuredClone(g);let T=(0,w.calculateDimensions)(g);if(T.length===3)M||(T=[1,...T]),g=[g];else if(T.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let F=0;F<g.length;++F){let q=x[F],re=v[F],ie=[re[0]/q[0],re[1]/q[1]];for(let G=0;G<g[F].length;++G)for(let V=0;V<g[F][G].length;++V)for(let Q=0;Q<g[F][G][V].length;++Q)g[F][G][V][Q]*=ie[Q%2]}return new A.Tensor("float32",Float32Array.from(g.flat(1/0)),T)}add_input_labels(g,x){let v=(0,w.calculateDimensions)(g);if(v.length===2)v=[1,...v],g=[g];else if(v.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(v.some((M,T)=>M!==x.dims[T]))throw Error(`The first ${v.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new A.Tensor("int64",g.flat(1/0).map(BigInt),v)}async _call(g,{input_points:x=null,input_labels:v=null,input_boxes:M=null}={}){const T=await super._call(g);if(x&&(T.input_points=this.reshape_input_points(x,T.original_sizes,T.reshaped_input_sizes)),v){if(!T.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");T.input_labels=this.add_input_labels(v,T.input_points)}return M&&(T.input_boxes=this.reshape_input_points(M,T.original_sizes,T.reshaped_input_sizes,!0)),T}async post_process_masks(g,x,v,{mask_threshold:M=0,binarize:T=!0,pad_size:F=null}={}){const q=[];F=F??this.pad_size;const re=[F.height,F.width];for(let ie=0;ie<x.length;++ie){const G=x[ie],V=v[ie];let Q=await(0,A.interpolate_4d)(g[ie],{mode:"bilinear",size:re});if(Q=Q.slice(null,null,[0,V[0]],[0,V[1]]),Q=await(0,A.interpolate_4d)(Q,{mode:"bilinear",size:G}),T){const O=Q.data,I=new Uint8Array(O.length);for(let b=0;b<O.length;++b)O[b]>M&&(I[b]=1);Q=new A.Tensor("bool",I,Q.dims)}q.push(Q)}return q}generate_crop_boxes(g,x,{crop_n_layers:v=0,overlap_ratio:M=512/1500,points_per_crop:T=32,crop_n_points_downscale_factor:F=1}={}){}}},"./src/models/sam/processing_sam.js":(te,h,s)=>{s.r(h),s.d(h,{SamProcessor:()=>A});var p=s("./src/base/processing_utils.js"),w=s("./src/models/auto/image_processing_auto.js");class A extends p.Processor{async _call(...z){return await this.image_processor(...z)}post_process_masks(...z){return this.image_processor.post_process_masks(...z)}reshape_input_points(...z){return this.image_processor.reshape_input_points(...z)}}fe(A,"image_processor_class",w.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(te,h,s)=>{s.r(h),s.d(h,{SeamlessM4TFeatureExtractor:()=>D});var p=s("./src/base/feature_extraction_utils.js"),w=s("./src/utils/tensor.js"),A=s("./src/utils/audio.js");class D extends p.FeatureExtractor{constructor(g){super(g);const x=this.config.sampling_rate,v=(0,A.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(x/2),x,null,"kaldi",!0);for(let M=0;M<v.length;++M)v[M].push(0);this.mel_filters=v,this.window=(0,A.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(g,x){return g=g.map(v=>v*32768),(0,A.spectrogram)(g,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:x,transpose:!0})}async _call(g,{padding:x=!0,pad_to_multiple_of:v=2,do_normalize_per_mel_bins:M=!0,return_attention_mask:T=!0}={}){(0,p.validate_audio_inputs)(g,"SeamlessM4TFeatureExtractor");let F=await this._extract_fbank_features(g,this.config.max_length);if(M){const[I,b]=F.dims,E=F.data;for(let L=0;L<b;++L){let le=0;for(let ne=0;ne<I;++ne)le+=E[ne*b+L];const oe=le/I;let Te=0;for(let ne=0;ne<I;++ne)Te+=(E[ne*b+L]-oe)**2;Te/=I-1;const we=Math.sqrt(Te+1e-7);for(let ne=0;ne<I;++ne){const Ee=ne*b+L;E[Ee]=(E[Ee]-oe)/we}}}let q;if(x){const[I,b]=F.dims,E=F.data,L=I%v;if(L>0){const le=new Float32Array(b*(I+L));le.set(E),le.fill(this.config.padding_value,E.length);const oe=I+L;F=new w.Tensor(F.type,le,[oe,b]),T&&(q=new w.Tensor("int64",new BigInt64Array(oe),[1,oe]),q.data.fill(1n,0,I))}}const[re,ie]=F.dims,G=this.config.stride;if(re%G!==0)throw new Error(`The number of frames (${re}) must be a multiple of the stride (${G}).`);const Q=F.view(1,Math.floor(re/G),ie*G),O={input_features:Q};if(T){const I=Q.dims[1],b=new BigInt64Array(I);if(q){const E=q.data;for(let L=1,le=0;L<re;L+=G,++le)b[le]=E[L]}else b.fill(1n);O.attention_mask=new w.Tensor("int64",b,[1,I])}return O}}},"./src/models/segformer/image_processing_segformer.js":(te,h,s)=>{s.r(h),s.d(h,{SegformerFeatureExtractor:()=>A,SegformerImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_semantic_segmentation(...z){return(0,p.post_process_semantic_segmentation)(...z)}}class A extends w{}},"./src/models/siglip/image_processing_siglip.js":(te,h,s)=>{s.r(h),s.d(h,{SiglipImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(te,h,s)=>{s.r(h),s.d(h,{SpeechT5FeatureExtractor:()=>w});var p=s("./src/base/feature_extraction_utils.js");class w extends p.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(te,h,s)=>{s.r(h),s.d(h,{SpeechT5Processor:()=>D});var p=s("./src/base/processing_utils.js"),w=s("./src/tokenizers.js"),A=s("./src/models/auto/feature_extraction_auto.js");class D extends p.Processor{async _call(g){return await this.feature_extractor(g)}}fe(D,"tokenizer_class",w.AutoTokenizer),fe(D,"feature_extractor_class",A.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(te,h,s)=>{s.r(h),s.d(h,{Swin2SRImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{pad_image(D,z,g,x={}){const[v,M,T]=z;return super.pad_image(D,z,{width:M+(g-M%g)%g,height:v+(g-v%g)%g},{mode:"symmetric",center:!1,constant_values:-1,...x})}}},"./src/models/vit/image_processing_vit.js":(te,h,s)=>{s.r(h),s.d(h,{ViTFeatureExtractor:()=>A,ViTImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{}class A extends w{}},"./src/models/vitmatte/image_processing_vitmatte.js":(te,h,s)=>{s.r(h),s.d(h,{VitMatteImageProcessor:()=>A});var p=s("./src/base/image_processors_utils.js"),w=s("./src/utils/tensor.js");class A extends p.ImageProcessor{async _call(z,g){Array.isArray(z)||(z=[z]),Array.isArray(g)||(g=[g]);const x=await Promise.all(z.map(T=>this.preprocess(T))),v=await Promise.all(g.map(T=>this.preprocess(T,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,w.stack)(x.map((T,F)=>(0,w.cat)([T.pixel_values,v[F].pixel_values],0)),0),original_sizes:x.map(T=>T.original_size),reshaped_input_sizes:x.map(T=>T.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(te,h,s)=>{s.r(h),s.d(h,{VitPoseImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_pose_estimation(D,z,{threshold:g=null}={}){const x=D.tolist(),[v,M,T,F]=D.dims,q=[];for(let re=0;re<v;++re){const ie=x[re],G=z[re],V=[];for(let Q=0;Q<G.length;++Q){const O=G[Q],I=[],b=[],E=[],L=O.at(-2)/F,le=O.at(-1)/T;for(let oe=0;oe<ie.length;++oe){let[Te,we]=[0,0],ne=0,Ee=-1/0;const pe=ie[oe];for(let Oe=0;Oe<pe.length;++Oe){const Ce=pe[Oe];for(let tt=0;tt<Ce.length;++tt){const Ge=Ce[tt];ne+=Ge,Ee=Math.max(Ee,Ge),Te+=(tt+.5)*Ge,we+=Oe*Ge}}if(g!=null&&Ee<g)continue;const ke=[L*Te/ne,le*we/ne];I.push(ke),E.push(oe),b.push(Ee)}V.push({bbox:O,scores:b,labels:E,keypoints:I})}q.push(V)}return q}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(te,h,s)=>{s.r(h),s.d(h,{Wav2Vec2FeatureExtractor:()=>A});var p=s("./src/base/feature_extraction_utils.js"),w=s("./src/utils/tensor.js");class A extends p.FeatureExtractor{_zero_mean_unit_var_norm(z){const x=z.reduce((M,T)=>M+T,0)/z.length,v=z.reduce((M,T)=>M+(T-x)**2,0)/z.length;return z.map(M=>(M-x)/Math.sqrt(v+1e-7))}async _call(z){(0,p.validate_audio_inputs)(z,"Wav2Vec2FeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));let g=z;this.config.do_normalize&&(g=this._zero_mean_unit_var_norm(g));const x=[1,g.length];return{input_values:new w.Tensor("float32",g,x),attention_mask:new w.Tensor("int64",new BigInt64Array(g.length).fill(1n),x)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(te,h,s)=>{s.r(h),s.d(h,{Wav2Vec2Processor:()=>D});var p=s("./src/tokenizers.js"),w=s("./src/models/auto/feature_extraction_auto.js"),A=s("./src/base/processing_utils.js");class D extends A.Processor{async _call(g){return await this.feature_extractor(g)}}fe(D,"tokenizer_class",p.AutoTokenizer),fe(D,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(te,h,s)=>{s.r(h),s.d(h,{Wav2Vec2ProcessorWithLM:()=>D});var p=s("./src/tokenizers.js"),w=s("./src/models/auto/feature_extraction_auto.js"),A=s("./src/base/processing_utils.js");class D extends A.Processor{async _call(g){return await this.feature_extractor(g)}}fe(D,"tokenizer_class",p.AutoTokenizer),fe(D,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(te,h,s)=>{s.r(h),s.d(h,{WeSpeakerFeatureExtractor:()=>A});var p=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var w=s("./src/utils/audio.js");class A extends p.FeatureExtractor{constructor(z){super(z);const g=this.config.sampling_rate,x=(0,w.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(g/2),g,null,"kaldi",!0);for(let v=0;v<x.length;++v)x[v].push(0);this.mel_filters=x,this.window=(0,w.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(z){return z=z.map(g=>g*32768),(0,w.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(z){(0,p.validate_audio_inputs)(z,"WeSpeakerFeatureExtractor");const g=(await this._extract_fbank_features(z)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const x=g.mean(1).data,v=g.data,[M,T,F]=g.dims;for(let q=0;q<M;++q){const re=q*T*F,ie=q*F;for(let G=0;G<T;++G){const V=re+G*F;for(let Q=0;Q<F;++Q)v[V+Q]-=x[ie+Q]}}}return{input_features:g}}}},"./src/models/whisper/common_whisper.js":(te,h,s)=>{s.r(h),s.d(h,{WHISPER_LANGUAGE_MAPPING:()=>w,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>A,whisper_language_to_code:()=>D});const p=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],w=new Map(p),A=new Map([...p.map(([z,g])=>[g,z]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function D(z){z=z.toLowerCase();let g=A.get(z);if(g===void 0)if(w.has(z))g=z;else{const v=z.length===2?w.keys():w.values();throw new Error(`Language "${z}" is not supported. Must be one of: ${JSON.stringify(v)}`)}return g}},"./src/models/whisper/feature_extraction_whisper.js":(te,h,s)=>{s.r(h),s.d(h,{WhisperFeatureExtractor:()=>D});var p=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var w=s("./src/utils/audio.js"),A=s("./src/utils/maths.js");class D extends p.FeatureExtractor{constructor(g){var x;super(g),(x=this.config).mel_filters??(x.mel_filters=(0,w.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,w.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(g){const x=await(0,w.spectrogram)(g,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),v=x.data,M=(0,A.max)(v)[0];for(let T=0;T<v.length;++T)v[T]=(Math.max(v[T],M-8)+4)/4;return x}async _call(g){(0,p.validate_audio_inputs)(g,"WhisperFeatureExtractor");let x;return g.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),x=g.slice(0,this.config.n_samples)):(x=new Float32Array(this.config.n_samples),x.set(g)),{input_features:(await this._extract_fbank_features(x)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(te,h,s)=>{s.r(h),s.d(h,{WhisperGenerationConfig:()=>w});var p=s("./src/generation/configuration_utils.js");class w extends p.GenerationConfig{constructor(){super(...arguments);fe(this,"return_timestamps",null);fe(this,"return_token_timestamps",null);fe(this,"num_frames",null);fe(this,"alignment_heads",null);fe(this,"task",null);fe(this,"language",null);fe(this,"no_timestamps_token_id",null);fe(this,"prompt_ids",null);fe(this,"is_multilingual",null);fe(this,"lang_to_id",null);fe(this,"task_to_id",null);fe(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(te,h,s)=>{s.r(h),s.d(h,{WhisperProcessor:()=>D});var p=s("./src/models/auto/feature_extraction_auto.js"),w=s("./src/tokenizers.js"),A=s("./src/base/processing_utils.js");class D extends A.Processor{async _call(g){return await this.feature_extractor(g)}}fe(D,"tokenizer_class",w.AutoTokenizer),fe(D,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(te,h,s)=>{s.r(h),s.d(h,{YolosFeatureExtractor:()=>A,YolosImageProcessor:()=>w});var p=s("./src/base/image_processors_utils.js");class w extends p.ImageProcessor{post_process_object_detection(...z){return(0,p.post_process_object_detection)(...z)}}class A extends w{}},"./src/ops/registry.js":(te,h,s)=>{s.r(h),s.d(h,{TensorOpRegistry:()=>g});var p=s("./src/backends/onnx.js"),w=s("./src/utils/tensor.js"),A=s("./src/env.js");const D=A.apis.IS_BROWSER_ENV||A.apis.IS_WEBWORKER_ENV,z=async(x,v,M)=>{const T=await(0,p.createInferenceSession)(new Uint8Array(x),v);let F=Promise.resolve();return async q=>{const re=(0,p.isONNXProxy)(),ie=Object.fromEntries(Object.entries(q).map(([V,Q])=>[V,(re?Q.clone():Q).ort_tensor])),G=await(F=D?F.then(()=>T.run(ie)):T.run(ie));return Array.isArray(M)?M.map(V=>new w.Tensor(G[V])):new w.Tensor(G[M])}};class g{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=z([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=z([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=z([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=z([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=z([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=z([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=z([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=z([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}fe(g,"session_options",{})},"./src/pipelines.js":(te,h,s)=>{s.r(h),s.d(h,{AudioClassificationPipeline:()=>we,AutomaticSpeechRecognitionPipeline:()=>Ee,DepthEstimationPipeline:()=>$e,DocumentQuestionAnsweringPipeline:()=>be,FeatureExtractionPipeline:()=>oe,FillMaskPipeline:()=>Q,ImageClassificationPipeline:()=>ke,ImageFeatureExtractionPipeline:()=>Te,ImageSegmentationPipeline:()=>Oe,ImageToImagePipeline:()=>ce,ImageToTextPipeline:()=>pe,ObjectDetectionPipeline:()=>tt,Pipeline:()=>re,QuestionAnsweringPipeline:()=>V,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>O,TextClassificationPipeline:()=>ie,TextGenerationPipeline:()=>L,TextToAudioPipeline:()=>J,TokenClassificationPipeline:()=>G,TranslationPipeline:()=>b,ZeroShotAudioClassificationPipeline:()=>ne,ZeroShotClassificationPipeline:()=>le,ZeroShotImageClassificationPipeline:()=>Ce,ZeroShotObjectDetectionPipeline:()=>Ge,pipeline:()=>se});var p=s("./src/tokenizers.js"),w=s("./src/models.js"),A=s("./src/models/auto/processing_auto.js");s("./src/base/processing_utils.js");var D=s("./src/utils/generic.js"),z=s("./src/utils/core.js"),g=s("./src/utils/maths.js"),x=s("./src/utils/audio.js"),v=s("./src/utils/tensor.js"),M=s("./src/utils/image.js");async function T(Ue){return Array.isArray(Ue)||(Ue=[Ue]),await Promise.all(Ue.map(ue=>M.RawImage.read(ue)))}async function F(Ue,ue){return Array.isArray(Ue)||(Ue=[Ue]),await Promise.all(Ue.map(ve=>typeof ve=="string"||ve instanceof URL?(0,x.read_audio)(ve,ue):ve instanceof Float64Array?new Float32Array(ve):ve))}function q(Ue,ue){ue&&(Ue=Ue.map(je=>je|0));const[ve,Ve,We,Ne]=Ue;return{xmin:ve,ymin:Ve,xmax:We,ymax:Ne}}class re extends D.Callable{constructor({task:ue,model:ve,tokenizer:Ve=null,processor:We=null}){super(),this.task=ue,this.model=ve,this.tokenizer=Ve,this.processor=We}async dispose(){await this.model.dispose()}}class ie extends re{constructor(ue){super(ue)}async _call(ue,{top_k:ve=1}={}){const Ve=this.tokenizer(ue,{padding:!0,truncation:!0}),We=await this.model(Ve),Ne=this.model.config.problem_type==="multi_label_classification"?ut=>ut.sigmoid():ut=>new v.Tensor("float32",(0,g.softmax)(ut.data),ut.dims),je=this.model.config.id2label,st=[];for(const ut of We.logits){const pt=Ne(ut),lt=await(0,v.topk)(pt,ve),mt=lt[0].tolist(),ae=lt[1].tolist().map((K,me)=>({label:je?je[K]:`LABEL_${K}`,score:mt[me]}));ve===1?st.push(...ae):st.push(ae)}return Array.isArray(ue)||ve===1?st:st[0]}}class G extends re{constructor(ue){super(ue)}async _call(ue,{ignore_labels:ve=["O"]}={}){const Ve=Array.isArray(ue),We=this.tokenizer(Ve?ue:[ue],{padding:!0,truncation:!0}),je=(await this.model(We)).logits,st=this.model.config.id2label,ut=[];for(let pt=0;pt<je.dims[0];++pt){const lt=We.input_ids[pt],mt=je[pt],R=[];for(let ae=0;ae<mt.dims[0];++ae){const K=mt[ae],me=(0,g.max)(K.data)[1],Se=st?st[me]:`LABEL_${me}`;if(ve.includes(Se))continue;const Re=this.tokenizer.decode([lt[ae].item()],{skip_special_tokens:!0});if(Re==="")continue;const qe=(0,g.softmax)(K.data);R.push({entity:Se,score:qe[me],index:ae,word:Re})}ut.push(R)}return Ve?ut:ut[0]}}class V extends re{constructor(ue){super(ue)}async _call(ue,ve,{top_k:Ve=1}={}){const We=this.tokenizer(ue,{text_pair:ve,padding:!0,truncation:!0}),{start_logits:Ne,end_logits:je}=await this.model(We),st=We.input_ids.tolist(),ut=We.attention_mask.tolist(),pt=this.tokenizer.all_special_ids,lt=[];for(let mt=0;mt<Ne.dims[0];++mt){const R=st[mt],ae=R.findIndex(at=>at==this.tokenizer.sep_token_id);ut[mt].map((at,ct)=>at==1&&(ct===0||ct>ae&&pt.findIndex(vt=>vt==R[ct])===-1));const K=Ne[mt].tolist(),me=je[mt].tolist();for(let at=1;at<K.length;++at)(ut[mt]==0||at<=ae||pt.findIndex(ct=>ct==R[at])!==-1)&&(K[at]=-1/0,me[at]=-1/0);const Se=(0,g.softmax)(K).map((at,ct)=>[at,ct]),Re=(0,g.softmax)(me).map((at,ct)=>[at,ct]);Se[0][0]=0,Re[0][0]=0;const qe=(0,z.product)(Se,Re).filter(at=>at[0][1]<=at[1][1]).map(at=>[at[0][1],at[1][1],at[0][0]*at[1][0]]).sort((at,ct)=>ct[2]-at[2]);for(let at=0;at<Math.min(qe.length,Ve);++at){const[ct,vt,$t]=qe[at],kt=R.slice(ct,vt+1),is=this.tokenizer.decode(kt,{skip_special_tokens:!0});lt.push({answer:is,score:$t})}}return Ve===1?lt[0]:lt}}class Q extends re{constructor(ue){super(ue)}async _call(ue,{top_k:ve=5}={}){const Ve=this.tokenizer(ue,{padding:!0,truncation:!0}),{logits:We}=await this.model(Ve),Ne=[],je=Ve.input_ids.tolist();for(let st=0;st<je.length;++st){const ut=je[st],pt=ut.findIndex(K=>K==this.tokenizer.mask_token_id);if(pt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const lt=We[st][pt],mt=await(0,v.topk)(new v.Tensor("float32",(0,g.softmax)(lt.data),lt.dims),ve),R=mt[0].tolist(),ae=mt[1].tolist();Ne.push(ae.map((K,me)=>{const Se=ut.slice();return Se[pt]=K,{score:R[me],token:Number(K),token_str:this.tokenizer.decode([K]),sequence:this.tokenizer.decode(Se,{skip_special_tokens:!0})}}))}return Array.isArray(ue)?Ne:Ne[0]}}class O extends re{constructor(ve){super(ve);fe(this,"_key","generated_text")}async _call(ve,Ve={}){Array.isArray(ve)||(ve=[ve]),this.model.config.prefix&&(ve=ve.map(pt=>this.model.config.prefix+pt));const We=this.model.config.task_specific_params;We&&We[this.task]&&We[this.task].prefix&&(ve=ve.map(pt=>We[this.task].prefix+pt));const Ne=this.tokenizer,je={padding:!0,truncation:!0};let st;this instanceof b&&"_build_translation_inputs"in Ne?st=Ne._build_translation_inputs(ve,je,Ve):st=Ne(ve,je);const ut=await this.model.generate({...st,...Ve});return Ne.batch_decode(ut,{skip_special_tokens:!0}).map(pt=>({[this._key]:pt}))}}class I extends O{constructor(ve){super(ve);fe(this,"_key","summary_text")}}class b extends O{constructor(ve){super(ve);fe(this,"_key","translation_text")}}function E(Ue){return Array.isArray(Ue)&&Ue.every(ue=>"role"in ue&&"content"in ue)}class L extends re{constructor(ue){super(ue)}async _call(ue,ve={}){let Ve=!1,We=!1,Ne;if(typeof ue=="string")Ne=ue=[ue];else if(Array.isArray(ue)&&ue.every(ae=>typeof ae=="string"))Ve=!0,Ne=ue;else{if(E(ue))ue=[ue];else if(Array.isArray(ue)&&ue.every(E))Ve=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");We=!0,Ne=ue.map(ae=>this.tokenizer.apply_chat_template(ae,{tokenize:!1,add_generation_prompt:!0}))}const je=ve.add_special_tokens??!1,st=We?!1:ve.return_full_text??!0;this.tokenizer.padding_side="left";const ut=this.tokenizer(Ne,{add_special_tokens:je,padding:!0,truncation:!0}),pt=await this.model.generate({...ut,...ve}),lt=this.tokenizer.batch_decode(pt,{skip_special_tokens:!0});let mt;!st&&ut.input_ids.dims.at(-1)>0&&(mt=this.tokenizer.batch_decode(ut.input_ids,{skip_special_tokens:!0}).map(ae=>ae.length));const R=Array.from({length:ue.length},ae=>[]);for(let ae=0;ae<lt.length;++ae){const K=Math.floor(ae/pt.dims[0]*ue.length);mt&&(lt[ae]=lt[ae].slice(mt[K])),R[K].push({generated_text:We?[...ue[K],{role:"assistant",content:lt[ae]}]:lt[ae]})}return!Ve&&R.length===1?R[0]:R}}class le extends re{constructor(ue){super(ue),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ve,Ve])=>[ve.toLowerCase(),Ve])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(ue,ve,{hypothesis_template:Ve="This example is {}.",multi_label:We=!1}={}){const Ne=Array.isArray(ue);Ne||(ue=[ue]),Array.isArray(ve)||(ve=[ve]);const je=ve.map(pt=>Ve.replace("{}",pt)),st=We||ve.length===1,ut=[];for(const pt of ue){const lt=[];for(const ae of je){const K=this.tokenizer(pt,{text_pair:ae,padding:!0,truncation:!0}),me=await this.model(K);st?lt.push([me.logits.data[this.contradiction_id],me.logits.data[this.entailment_id]]):lt.push(me.logits.data[this.entailment_id])}const R=(st?lt.map(ae=>(0,g.softmax)(ae)[1]):(0,g.softmax)(lt)).map((ae,K)=>[ae,K]).sort((ae,K)=>K[0]-ae[0]);ut.push({sequence:pt,labels:R.map(ae=>ve[ae[1]]),scores:R.map(ae=>ae[0])})}return Ne?ut:ut[0]}}class oe extends re{constructor(ue){super(ue)}async _call(ue,{pooling:ve="none",normalize:Ve=!1,quantize:We=!1,precision:Ne="binary"}={}){const je=this.tokenizer(ue,{padding:!0,truncation:!0}),st=await this.model(je);let ut=st.last_hidden_state??st.logits??st.token_embeddings;if(ve!=="none")if(ve==="mean")ut=(0,v.mean_pooling)(ut,je.attention_mask);else if(ve==="cls")ut=ut.slice(null,0);else throw Error(`Pooling method '${ve}' not supported.`);return Ve&&(ut=ut.normalize(2,-1)),We&&(ut=(0,v.quantize_embeddings)(ut,Ne)),ut}}class Te extends re{constructor(ue){super(ue)}async _call(ue,{pool:ve=null}={}){const Ve=await T(ue),{pixel_values:We}=await this.processor(Ve),Ne=await this.model({pixel_values:We});let je;if(ve){if(!("pooler_output"in Ne))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");je=Ne.pooler_output}else je=Ne.last_hidden_state??Ne.logits??Ne.image_embeds;return je}}class we extends re{constructor(ue){super(ue)}async _call(ue,{top_k:ve=5}={}){const Ve=this.processor.feature_extractor.config.sampling_rate,We=await F(ue,Ve),Ne=this.model.config.id2label,je=[];for(const st of We){const ut=await this.processor(st),lt=(await this.model(ut)).logits[0],mt=await(0,v.topk)(new v.Tensor("float32",(0,g.softmax)(lt.data),lt.dims),ve),R=mt[0].tolist(),K=mt[1].tolist().map((me,Se)=>({label:Ne?Ne[me]:`LABEL_${me}`,score:R[Se]}));je.push(K)}return Array.isArray(ue)?je:je[0]}}class ne extends re{constructor(ue){super(ue)}async _call(ue,ve,{hypothesis_template:Ve="This is a sound of {}."}={}){const We=!Array.isArray(ue);We&&(ue=[ue]);const Ne=ve.map(lt=>Ve.replace("{}",lt)),je=this.tokenizer(Ne,{padding:!0,truncation:!0}),st=this.processor.feature_extractor.config.sampling_rate,ut=await F(ue,st),pt=[];for(const lt of ut){const mt=await this.processor(lt),R=await this.model({...je,...mt}),ae=(0,g.softmax)(R.logits_per_audio.data);pt.push([...ae].map((K,me)=>({score:K,label:ve[me]})))}return We?pt[0]:pt}}class Ee extends re{constructor(ue){super(ue)}async _call(ue,ve={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(ue,ve);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(ue,ve);case"moonshine":return this._call_moonshine(ue,ve);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(ue,ve){ve.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ve.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Ve=!Array.isArray(ue);Ve&&(ue=[ue]);const We=this.processor.feature_extractor.config.sampling_rate,Ne=await F(ue,We),je=[];for(const st of Ne){const ut=await this.processor(st),lt=(await this.model(ut)).logits[0],mt=[];for(const ae of lt)mt.push((0,g.max)(ae.data)[1]);const R=this.tokenizer.decode(mt);je.push({text:R})}return Ve?je[0]:je}async _call_whisper(ue,ve){const Ve=ve.return_timestamps??!1,We=ve.chunk_length_s??0,Ne=ve.force_full_sequences??!1;let je=ve.stride_length_s??null;const st={...ve};Ve==="word"&&(st.return_token_timestamps=!0,st.return_timestamps=!1);const ut=!Array.isArray(ue);ut&&(ue=[ue]);const pt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,lt=this.processor.feature_extractor.config.hop_length,mt=this.processor.feature_extractor.config.sampling_rate,R=await F(ue,mt),ae=[];for(const K of R){let me=[];if(We>0){if(je===null)je=We/6;else if(We<=je)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const qe=mt*We,at=mt*je,ct=qe-2*at;let vt=0;for(;;){const $t=vt+qe,kt=K.subarray(vt,$t),is=await this.processor(kt),bs=vt===0,$s=$t>=K.length;if(me.push({stride:[kt.length,bs?0:at,$s?0:at],input_features:is.input_features,is_last:$s}),$s)break;vt+=ct}}else me=[{stride:[K.length,0,0],input_features:(await this.processor(K)).input_features,is_last:!0}];for(const qe of me){st.num_frames=Math.floor(qe.stride[0]/lt);const at=await this.model.generate({inputs:qe.input_features,...st});Ve==="word"?(qe.tokens=at.sequences.tolist()[0],qe.token_timestamps=at.token_timestamps.tolist()[0].map(ct=>(0,g.round)(ct,2))):qe.tokens=at[0].tolist(),qe.stride=qe.stride.map(ct=>ct/mt)}const[Se,Re]=this.tokenizer._decode_asr(me,{time_precision:pt,return_timestamps:Ve,force_full_sequences:Ne});ae.push({text:Se,...Re})}return ut?ae[0]:ae}async _call_moonshine(ue,ve){const Ve=!Array.isArray(ue);Ve&&(ue=[ue]);const We=this.processor.feature_extractor.config.sampling_rate,Ne=await F(ue,We),je=[];for(const st of Ne){const ut=await this.processor(st),pt=Math.floor(st.length/We)*6,lt=await this.model.generate({max_new_tokens:pt,...ve,...ut}),mt=this.processor.batch_decode(lt,{skip_special_tokens:!0})[0];je.push({text:mt})}return Ve?je[0]:je}}class pe extends re{constructor(ue){super(ue)}async _call(ue,ve={}){const Ve=Array.isArray(ue),We=await T(ue),{pixel_values:Ne}=await this.processor(We),je=[];for(const st of Ne){st.dims=[1,...st.dims];const ut=await this.model.generate({inputs:st,...ve}),pt=this.tokenizer.batch_decode(ut,{skip_special_tokens:!0}).map(lt=>({generated_text:lt.trim()}));je.push(pt)}return Ve?je:je[0]}}class ke extends re{constructor(ue){super(ue)}async _call(ue,{top_k:ve=5}={}){const Ve=await T(ue),{pixel_values:We}=await this.processor(Ve),Ne=await this.model({pixel_values:We}),je=this.model.config.id2label,st=[];for(const ut of Ne.logits){const pt=await(0,v.topk)(new v.Tensor("float32",(0,g.softmax)(ut.data),ut.dims),ve),lt=pt[0].tolist(),R=pt[1].tolist().map((ae,K)=>({label:je?je[ae]:`LABEL_${ae}`,score:lt[K]}));st.push(R)}return Array.isArray(ue)?st:st[0]}}class Oe extends re{constructor(ue){super(ue),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(ue,{threshold:ve=.5,mask_threshold:Ve=.5,overlap_mask_area_threshold:We=.8,label_ids_to_fuse:Ne=null,target_sizes:je=null,subtask:st=null}={}){if(Array.isArray(ue)&&ue.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const pt=await T(ue),lt=pt.map(Re=>[Re.height,Re.width]),{pixel_values:mt,pixel_mask:R}=await this.processor(pt),ae=await this.model({pixel_values:mt,pixel_mask:R});let K=null;if(st!==null)K=this.subtasks_mapping[st];else for(let[Re,qe]of Object.entries(this.subtasks_mapping))if(qe in this.processor.image_processor){K=this.processor.image_processor[qe].bind(this.processor.image_processor),st=Re;break}const me=this.model.config.id2label,Se=[];if(st==="panoptic"||st==="instance"){const Re=K(ae,ve,Ve,We,Ne,je??lt)[0],qe=Re.segmentation;for(const at of Re.segments_info){const ct=new Uint8ClampedArray(qe.data.length);for(let $t=0;$t<qe.data.length;++$t)qe.data[$t]===at.id&&(ct[$t]=255);const vt=new M.RawImage(ct,qe.dims[1],qe.dims[0],1);Se.push({score:at.score,label:me[at.label_id],mask:vt})}}else if(st==="semantic"){const{segmentation:Re,labels:qe}=K(ae,je??lt)[0];for(const at of qe){const ct=new Uint8ClampedArray(Re.data.length);for(let $t=0;$t<Re.data.length;++$t)Re.data[$t]===at&&(ct[$t]=255);const vt=new M.RawImage(ct,Re.dims[1],Re.dims[0],1);Se.push({score:null,label:me[at],mask:vt})}}else throw Error(`Subtask ${st} not supported.`);return Se}}class Ce extends re{constructor(ue){super(ue)}async _call(ue,ve,{hypothesis_template:Ve="This is a photo of {}"}={}){const We=Array.isArray(ue),Ne=await T(ue),je=ve.map(R=>Ve.replace("{}",R)),st=this.tokenizer(je,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:ut}=await this.processor(Ne),pt=await this.model({...st,pixel_values:ut}),lt=this.model.config.model_type==="siglip"?R=>R.sigmoid().data:R=>(0,g.softmax)(R.data),mt=[];for(const R of pt.logits_per_image){const K=[...lt(R)].map((me,Se)=>({score:me,label:ve[Se]}));K.sort((me,Se)=>Se.score-me.score),mt.push(K)}return We?mt:mt[0]}}class tt extends re{constructor(ue){super(ue)}async _call(ue,{threshold:ve=.9,percentage:Ve=!1}={}){const We=Array.isArray(ue);if(We&&ue.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ne=await T(ue),je=Ve?null:Ne.map(ae=>[ae.height,ae.width]),{pixel_values:st,pixel_mask:ut}=await this.processor(Ne),pt=await this.model({pixel_values:st,pixel_mask:ut}),lt=this.processor.image_processor.post_process_object_detection(pt,ve,je),mt=this.model.config.id2label,R=lt.map(ae=>ae.boxes.map((K,me)=>({score:ae.scores[me],label:mt[ae.classes[me]],box:q(K,!Ve)})));return We?R:R[0]}}class Ge extends re{constructor(ue){super(ue)}async _call(ue,ve,{threshold:Ve=.1,top_k:We=null,percentage:Ne=!1}={}){const je=Array.isArray(ue),st=await T(ue),ut=this.tokenizer(ve,{padding:!0,truncation:!0}),pt=await this.processor(st),lt=[];for(let mt=0;mt<st.length;++mt){const R=st[mt],ae=Ne?null:[[R.height,R.width]],K=pt.pixel_values[mt].unsqueeze_(0),me=await this.model({...ut,pixel_values:K});let Se;if("post_process_grounded_object_detection"in this.processor){const Re=this.processor.post_process_grounded_object_detection(me,ut.input_ids,{box_threshold:Ve,text_threshold:Ve,target_sizes:ae})[0];Se=Re.boxes.map((qe,at)=>({score:Re.scores[at],label:Re.labels[at],box:q(qe,!Ne)}))}else{const Re=this.processor.image_processor.post_process_object_detection(me,Ve,ae,!0)[0];Se=Re.boxes.map((qe,at)=>({score:Re.scores[at],label:ve[Re.classes[at]],box:q(qe,!Ne)}))}Se.sort((Re,qe)=>qe.score-Re.score),We!==null&&(Se=Se.slice(0,We)),lt.push(Se)}return je?lt:lt[0]}}class be extends re{constructor(ue){super(ue)}async _call(ue,ve,Ve={}){const We=(await T(ue))[0],{pixel_values:Ne}=await this.processor(We),je=`<s_docvqa><s_question>${ve}</s_question><s_answer>`,st=this.tokenizer(je,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,ut=await this.model.generate({inputs:Ne,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:st,...Ve}),lt=this.tokenizer.batch_decode(ut)[0].match(/<s_answer>(.*?)<\/s_answer>/);let mt=null;return lt&&lt.length>=2&&(mt=lt[1].trim()),[{answer:mt}]}}class J extends re{constructor(ve){super(ve);fe(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=ve.vocoder??null}async _call(ve,{speaker_embeddings:Ve=null}={}){return this.processor?this._call_text_to_spectrogram(ve,{speaker_embeddings:Ve}):this._call_text_to_waveform(ve)}async _call_text_to_waveform(ve){const Ve=this.tokenizer(ve,{padding:!0,truncation:!0}),{waveform:We}=await this.model(Ve),Ne=this.model.config.sampling_rate;return new x.RawAudio(We.data,Ne)}async _call_text_to_spectrogram(ve,{speaker_embeddings:Ve}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await w.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Ve=="string"||Ve instanceof URL)&&(Ve=new Float32Array(await(await fetch(Ve)).arrayBuffer())),Ve instanceof Float32Array)Ve=new v.Tensor("float32",Ve,[1,Ve.length]);else if(!(Ve instanceof v.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:We}=this.tokenizer(ve,{padding:!0,truncation:!0}),{waveform:Ne}=await this.model.generate_speech(We,Ve,{vocoder:this.vocoder}),je=this.processor.feature_extractor.config.sampling_rate;return new x.RawAudio(Ne.data,je)}}class ce extends re{constructor(ue){super(ue)}async _call(ue){const ve=await T(ue),Ve=await this.processor(ve),We=await this.model(Ve),Ne=[];for(const je of We.reconstruction){const st=je.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ne.push(M.RawImage.fromTensor(st))}return Ne.length>1?Ne:Ne[0]}}class $e extends re{constructor(ue){super(ue)}async _call(ue){const ve=await T(ue),Ve=await this.processor(ve),{predicted_depth:We}=await this.model(Ve),Ne=[];for(let je=0;je<ve.length;++je){const st=We[je],[ut,pt]=st.dims.slice(-2),[lt,mt]=ve[je].size,R=(await(0,v.interpolate_4d)(st.view(1,1,ut,pt),{size:[mt,lt],mode:"bilinear"})).view(mt,lt),ae=R.min().item(),K=R.max().item(),me=R.sub(ae).div_(K-ae).mul_(255).to("uint8").unsqueeze(0),Se=M.RawImage.fromTensor(me);Ne.push({predicted_depth:R,depth:Se})}return Ne.length>1?Ne:Ne[0]}}const Be=Object.freeze({"text-classification":{tokenizer:p.AutoTokenizer,pipeline:ie,model:w.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:p.AutoTokenizer,pipeline:G,model:w.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:p.AutoTokenizer,pipeline:V,model:w.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:p.AutoTokenizer,pipeline:Q,model:w.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:p.AutoTokenizer,pipeline:I,model:w.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:p.AutoTokenizer,pipeline:b,model:w.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:p.AutoTokenizer,pipeline:O,model:w.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:p.AutoTokenizer,pipeline:L,model:w.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:p.AutoTokenizer,pipeline:le,model:w.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:we,model:w.AutoModelForAudioClassification,processor:A.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:p.AutoTokenizer,pipeline:ne,model:w.AutoModel,processor:A.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:p.AutoTokenizer,pipeline:Ee,model:[w.AutoModelForSpeechSeq2Seq,w.AutoModelForCTC],processor:A.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:p.AutoTokenizer,pipeline:J,model:[w.AutoModelForTextToWaveform,w.AutoModelForTextToSpectrogram],processor:[A.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:p.AutoTokenizer,pipeline:pe,model:w.AutoModelForVision2Seq,processor:A.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ke,model:w.AutoModelForImageClassification,processor:A.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Oe,model:[w.AutoModelForImageSegmentation,w.AutoModelForSemanticSegmentation,w.AutoModelForUniversalSegmentation],processor:A.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:p.AutoTokenizer,pipeline:Ce,model:w.AutoModel,processor:A.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:tt,model:w.AutoModelForObjectDetection,processor:A.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:p.AutoTokenizer,pipeline:Ge,model:w.AutoModelForZeroShotObjectDetection,processor:A.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:p.AutoTokenizer,pipeline:be,model:w.AutoModelForDocumentQuestionAnswering,processor:A.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ce,model:w.AutoModelForImageToImage,processor:A.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:$e,model:w.AutoModelForDepthEstimation,processor:A.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:p.AutoTokenizer,pipeline:oe,model:w.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:A.AutoProcessor,pipeline:Te,model:[w.AutoModelForImageFeatureExtraction,w.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Je=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function se(Ue,ue=null,{progress_callback:ve=null,config:Ve=null,cache_dir:We=null,local_files_only:Ne=!1,revision:je="main",device:st=null,dtype:ut=null,model_file_name:pt=null,session_options:lt={}}={}){Ue=Je[Ue]??Ue;const mt=Be[Ue.split("_",1)[0]];if(!mt)throw Error(`Unsupported pipeline: ${Ue}. Must be one of [${Object.keys(Be)}]`);ue||(ue=mt.default.model,console.log(`No model specified. Using default model: "${ue}".`));const R={progress_callback:ve,config:Ve,cache_dir:We,local_files_only:Ne,revision:je,device:st,dtype:ut,model_file_name:pt,session_options:lt},ae=new Map([["tokenizer",mt.tokenizer],["model",mt.model],["processor",mt.processor]]),K=await Ke(ae,ue,R);K.task=Ue,(0,z.dispatchCallback)(ve,{status:"ready",task:Ue,model:ue});const me=mt.pipeline;return new me(K)}async function Ke(Ue,ue,ve){const Ve=Object.create(null),We=[];for(const[Ne,je]of Ue.entries()){if(!je)continue;let st;Array.isArray(je)?st=new Promise(async(ut,pt)=>{var mt,R;let lt;for(const ae of je){if(ae===null){ut(null);return}try{ut(await ae.from_pretrained(ue,ve));return}catch(K){if((mt=K.message)!=null&&mt.includes("Unsupported model type"))lt=K;else if((R=K.message)!=null&&R.includes("Could not locate file"))lt=K;else{pt(K);return}}}pt(lt)}):st=je.from_pretrained(ue,ve),Ve[Ne]=st,We.push(st)}await Promise.all(We);for(const[Ne,je]of Object.entries(Ve))Ve[Ne]=await je;return Ve}},"./src/tokenizers.js":(te,h,s)=>{s.r(h),s.d(h,{AlbertTokenizer:()=>Sr,AutoTokenizer:()=>os,BartTokenizer:()=>Ir,BertTokenizer:()=>Zr,BlenderbotSmallTokenizer:()=>Bn,BlenderbotTokenizer:()=>zn,BloomTokenizer:()=>Tr,CLIPTokenizer:()=>vn,CamembertTokenizer:()=>it,CodeGenTokenizer:()=>Mn,CodeLlamaTokenizer:()=>Vr,CohereTokenizer:()=>En,ConvBertTokenizer:()=>Nr,DebertaTokenizer:()=>cr,DebertaV2Tokenizer:()=>Rr,DistilBertTokenizer:()=>ar,ElectraTokenizer:()=>Ft,EsmTokenizer:()=>Wr,FalconTokenizer:()=>Fn,GPT2Tokenizer:()=>Ur,GPTNeoXTokenizer:()=>Dn,GemmaTokenizer:()=>ui,Grok1Tokenizer:()=>Gr,HerbertTokenizer:()=>Ar,LlamaTokenizer:()=>wn,M2M100Tokenizer:()=>bn,MBart50Tokenizer:()=>lr,MBartTokenizer:()=>Ms,MPNetTokenizer:()=>On,MarianTokenizer:()=>Lt,MgpstrTokenizer:()=>jn,MobileBertTokenizer:()=>kr,NllbTokenizer:()=>ur,NougatTokenizer:()=>Kr,PreTrainedTokenizer:()=>Nt,Qwen2Tokenizer:()=>Ln,RoFormerTokenizer:()=>jr,RobertaTokenizer:()=>Os,SiglipTokenizer:()=>xn,SpeechT5Tokenizer:()=>Rn,SqueezeBertTokenizer:()=>en,T5Tokenizer:()=>Vs,TokenizerModel:()=>Te,VitsTokenizer:()=>Nn,Wav2Vec2CTCTokenizer:()=>Tn,WhisperTokenizer:()=>tn,XLMRobertaTokenizer:()=>li,XLMTokenizer:()=>xt,is_chinese_char:()=>Q});var p=s("./src/utils/generic.js"),w=s("./src/utils/core.js"),A=s("./src/utils/hub.js"),D=s("./src/utils/maths.js"),z=s("./src/utils/tensor.js"),g=s("./src/utils/data-structures.js"),x=s("./node_modules/@huggingface/jinja/dist/index.js"),v=s("./src/models/whisper/common_whisper.js");async function M(Pe,C){const X=await Promise.all([(0,A.getModelJSON)(Pe,"tokenizer.json",!0,C),(0,A.getModelJSON)(Pe,"tokenizer_config.json",!0,C)]);return C.legacy!==null&&(X[1].legacy=C.legacy),X}function T(Pe,C){const X=[];let de=0;for(const xe of Pe.matchAll(C)){const Ae=xe[0];de<xe.index&&X.push(Pe.slice(de,xe.index)),Ae.length>0&&X.push(Ae),de=xe.index+Ae.length}return de<Pe.length&&X.push(Pe.slice(de)),X}function F(Pe,C=!0){if(Pe.Regex!==void 0){let X=Pe.Regex.replace(/\\([#&~])/g,"$1");for(const[de,xe]of le)X=X.replaceAll(de,xe);return new RegExp(X,"gu")}else if(Pe.String!==void 0){const X=(0,w.escapeRegExp)(Pe.String);return new RegExp(C?X:`(${X})`,"gu")}else return console.warn("Unknown pattern type:",Pe),null}function q(Pe){return new Map(Object.entries(Pe))}function re(Pe){const C=Pe.dims;switch(C.length){case 1:return Pe.tolist();case 2:if(C[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${C.length}.`)}}function ie(Pe){return Pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function G(Pe){return Pe.replace(new RegExp("\\p{M}","gu"),"")}function V(Pe){return G(Pe.toLowerCase())}function Q(Pe){return Pe>=19968&&Pe<=40959||Pe>=13312&&Pe<=19903||Pe>=131072&&Pe<=173791||Pe>=173824&&Pe<=177983||Pe>=177984&&Pe<=178207||Pe>=178208&&Pe<=183983||Pe>=63744&&Pe<=64255||Pe>=194560&&Pe<=195103}function O(Pe,C,X){const de=[];let xe=0;for(;xe<Pe.length;){if(de.push(Pe[xe]),(C.get(Pe[xe])??X)!==X){++xe;continue}for(;++xe<Pe.length&&(C.get(Pe[xe])??X)===X;)C.get(de.at(-1))!==X&&(de[de.length-1]+=Pe[xe])}return de}function I(Pe){return Pe.match(/\S+/g)||[]}const b="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",E=new RegExp(`^[${b}]+$`,"gu"),L=".,!?…。，、।۔،",le=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${L}])]+`,` ?[^\\s${L}]+`]]);class oe{constructor(C){this.content=C.content,this.id=C.id,this.single_word=C.single_word??!1,this.lstrip=C.lstrip??!1,this.rstrip=C.rstrip??!1,this.special=C.special??!1,this.normalized=C.normalized??null}}class Te extends p.Callable{constructor(C){super(),this.config=C,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(C,...X){switch(C.type){case"WordPiece":return new we(C);case"Unigram":return new ne(C,...X);case"BPE":return new ke(C);default:if(C.vocab)return Array.isArray(C.vocab)?new ne(C,...X):typeof C.vocab=="object"&&C.continuing_subword_prefix&&C.unk_token?new we(C):new Oe(C,...X);throw new Error(`Unknown TokenizerModel type: ${C.type}`)}}_call(C){return C=this.encode(C),this.fuse_unk&&(C=O(C,this.tokens_to_ids,this.unk_token_id)),C}encode(C){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(C){return C.map(X=>this.tokens_to_ids.get(X)??this.unk_token_id)}convert_ids_to_tokens(C){return C.map(X=>this.vocab[X]??this.unk_token)}}class we extends Te{constructor(C){super(C),this.tokens_to_ids=q(C.vocab),this.unk_token_id=this.tokens_to_ids.get(C.unk_token),this.unk_token=C.unk_token,this.max_input_chars_per_word=C.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[X,de]of this.tokens_to_ids)this.vocab[de]=X}encode(C){const X=[];for(const de of C){const xe=[...de];if(xe.length>this.max_input_chars_per_word){X.push(this.unk_token);continue}let Ae=!1,Xe=0;const ht=[];for(;Xe<xe.length;){let gt=xe.length,_t=null;for(;Xe<gt;){let Tt=xe.slice(Xe,gt).join("");if(Xe>0&&(Tt=this.config.continuing_subword_prefix+Tt),this.tokens_to_ids.has(Tt)){_t=Tt;break}--gt}if(_t===null){Ae=!0;break}ht.push(_t),Xe=gt}Ae?X.push(this.unk_token):X.push(...ht)}return X}}class ne extends Te{constructor(C,X){super(C);const de=C.vocab.length;this.vocab=new Array(de),this.scores=new Array(de);for(let xe=0;xe<de;++xe)[this.vocab[xe],this.scores[xe]]=C.vocab[xe];this.unk_token_id=C.unk_id,this.unk_token=this.vocab[C.unk_id],this.tokens_to_ids=new Map(this.vocab.map((xe,Ae)=>[xe,Ae])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=X.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,D.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new g.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(C){const X=C.chars,de=1;let xe=0;for(;xe<X.length;){let Ae=!1;const Xe=X.slice(xe).join(""),ht=this.trie.commonPrefixSearch(Xe);for(const gt of ht){const _t=this.tokens_to_ids.get(gt),Tt=this.scores[_t],Kt=(0,w.len)(gt);C.insert(xe,Kt,Tt,_t),!Ae&&Kt===de&&(Ae=!0)}Ae||C.insert(xe,de,this.unk_score,this.unk_token_id),xe+=de}}tokenize(C){const X=new g.TokenLattice(C,this.bos_token_id,this.eos_token_id);return this.populateNodes(X),X.tokens()}encode(C){const X=[];for(const de of C){const xe=this.tokenize(de);X.push(...xe)}return X}}const Ee=(()=>{const Pe=[...Array.from({length:94},(xe,Ae)=>Ae+33),...Array.from({length:12},(xe,Ae)=>Ae+161),...Array.from({length:82},(xe,Ae)=>Ae+174)],C=Pe.slice();let X=0;for(let xe=0;xe<256;++xe)Pe.includes(xe)||(Pe.push(xe),C.push(256+X),X+=1);const de=C.map(xe=>String.fromCharCode(xe));return Object.fromEntries(Pe.map((xe,Ae)=>[xe,de[Ae]]))})(),pe=(0,w.reverseDictionary)(Ee);class ke extends Te{constructor(C){super(C),this.tokens_to_ids=q(C.vocab),this.unk_token_id=this.tokens_to_ids.get(C.unk_token),this.unk_token=C.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[de,xe]of this.tokens_to_ids)this.vocab[xe]=de;const X=Array.isArray(C.merges[0]);this.merges=X?C.merges:C.merges.map(de=>de.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((de,xe)=>[JSON.stringify(de),xe])),this.end_of_word_suffix=C.end_of_word_suffix,this.continuing_subword_suffix=C.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(C){if(C.length===0)return[];const X=this.cache.get(C);if(X!==void 0)return X;const de=Array.from(C);this.end_of_word_suffix&&(de[de.length-1]+=this.end_of_word_suffix);let xe=[];if(de.length>1){const Ae=new g.PriorityQueue((gt,_t)=>gt.score<_t.score);let Xe={token:de[0],bias:0,prev:null,next:null},ht=Xe;for(let gt=1;gt<de.length;++gt){const _t={bias:gt/de.length,token:de[gt],prev:ht,next:null};ht.next=_t,this._add_node(Ae,ht),ht=_t}for(;!Ae.isEmpty();){const gt=Ae.pop();if(gt.deleted||!gt.next||gt.next.deleted)continue;if(gt.deleted=!0,gt.next.deleted=!0,gt.prev){const Tt={...gt.prev};gt.prev.deleted=!0,gt.prev=Tt,Tt.prev?Tt.prev.next=Tt:Xe=Tt}const _t={token:gt.token+gt.next.token,bias:gt.bias,prev:gt.prev,next:gt.next.next};_t.prev?(_t.prev.next=_t,this._add_node(Ae,_t.prev)):Xe=_t,_t.next&&(_t.next.prev=_t,this._add_node(Ae,_t))}for(let gt=Xe;gt!==null;gt=gt.next)xe.push(gt.token)}else xe=de;if(this.continuing_subword_suffix)for(let Ae=0;Ae<xe.length-1;++Ae)xe[Ae]+=this.continuing_subword_suffix;return this.cache.set(C,xe),xe}_add_node(C,X){const de=this.bpe_ranks.get(JSON.stringify([X.token,X.next.token]));de!==void 0&&(X.score=de+X.bias,C.push(X))}encode(C){const X=[];for(const de of C){if(this.ignore_merges&&this.tokens_to_ids.has(de)){X.push(de);continue}const xe=this.bpe(de);for(const Ae of xe)if(this.tokens_to_ids.has(Ae))X.push(Ae);else if(this.byte_fallback){const Xe=Array.from(this.text_encoder.encode(Ae)).map(ht=>`<0x${ht.toString(16).toUpperCase().padStart(2,"0")}>`);Xe.every(ht=>this.tokens_to_ids.has(ht))?X.push(...Xe):X.push(this.unk_token)}else X.push(this.unk_token)}return X}}class Oe extends Te{constructor(C,X){super(C),this.tokens_to_ids=q(X.target_lang?C.vocab[X.target_lang]:C.vocab),this.bos_token=X.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=X.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=X.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=X.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[de,xe]of this.tokens_to_ids)this.vocab[xe]=de}encode(C){return C}}class Ce extends p.Callable{constructor(C){super(),this.config=C}static fromConfig(C){if(C===null)return null;switch(C.type){case"BertNormalizer":return new Ke(C);case"Precompiled":return new bs(C);case"Sequence":return new se(C);case"Replace":return new tt(C);case"NFC":return new Ge(C);case"NFKC":return new be(C);case"NFKD":return new J(C);case"Strip":return new ce(C);case"StripAccents":return new $e(C);case"Lowercase":return new Be(C);case"Prepend":return new Je(C);default:throw new Error(`Unknown Normalizer type: ${C.type}`)}}normalize(C){throw Error("normalize should be implemented in subclass.")}_call(C){return this.normalize(C)}}class tt extends Ce{normalize(C){const X=F(this.config.pattern);return X===null?C:C.replaceAll(X,this.config.content)}}class Ge extends Ce{normalize(C){return C=C.normalize("NFC"),C}}class be extends Ce{normalize(C){return C=C.normalize("NFKC"),C}}class J extends Ce{normalize(C){return C=C.normalize("NFKD"),C}}class ce extends Ce{normalize(C){return this.config.strip_left&&this.config.strip_right?C=C.trim():(this.config.strip_left&&(C=C.trimStart()),this.config.strip_right&&(C=C.trimEnd())),C}}class $e extends Ce{normalize(C){return C=G(C),C}}class Be extends Ce{normalize(C){return C=C.toLowerCase(),C}}class Je extends Ce{normalize(C){return C=this.config.prepend+C,C}}class se extends Ce{constructor(C){super(C),this.normalizers=C.normalizers.map(X=>Ce.fromConfig(X))}normalize(C){return this.normalizers.reduce((X,de)=>de.normalize(X),C)}}class Ke extends Ce{_tokenize_chinese_chars(C){const X=[];for(let de=0;de<C.length;++de){const xe=C[de],Ae=xe.charCodeAt(0);Q(Ae)?(X.push(" "),X.push(xe),X.push(" ")):X.push(xe)}return X.join("")}stripAccents(C){return C.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(C){switch(C){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(C)}}_clean_text(C){const X=[];for(const de of C){const xe=de.charCodeAt(0);xe===0||xe===65533||this._is_control(de)||(/^\s$/.test(de)?X.push(" "):X.push(de))}return X.join("")}normalize(C){return this.config.clean_text&&(C=this._clean_text(C)),this.config.handle_chinese_chars&&(C=this._tokenize_chinese_chars(C)),this.config.lowercase?(C=C.toLowerCase(),this.config.strip_accents!==!1&&(C=this.stripAccents(C))):this.config.strip_accents&&(C=this.stripAccents(C)),C}}class Ue extends p.Callable{static fromConfig(C){if(C===null)return null;switch(C.type){case"BertPreTokenizer":return new ue(C);case"Sequence":return new $s(C);case"Whitespace":return new Ls(C);case"WhitespaceSplit":return new sr(C);case"Metaspace":return new kt(C);case"ByteLevel":return new ve(C);case"Split":return new Ve(C);case"Punctuation":return new We(C);case"Digits":return new Ne(C);case"Replace":return new $r(C);default:throw new Error(`Unknown PreTokenizer type: ${C.type}`)}}pre_tokenize_text(C,X){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(C,X){return(Array.isArray(C)?C.map(de=>this.pre_tokenize_text(de,X)):this.pre_tokenize_text(C,X)).flat()}_call(C,X){return this.pre_tokenize(C,X)}}class ue extends Ue{constructor(C){super(),this.pattern=new RegExp(`[^\\s${b}]+|[${b}]`,"gu")}pre_tokenize_text(C,X){return C.trim().match(this.pattern)||[]}}class ve extends Ue{constructor(C){super(),this.config=C,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Ee,this.text_encoder=new TextEncoder}pre_tokenize_text(C,X){return this.add_prefix_space&&!C.startsWith(" ")&&(C=" "+C),(this.use_regex?C.match(this.pattern)||[]:[C]).map(xe=>Array.from(this.text_encoder.encode(xe),Ae=>this.byte_encoder[Ae]).join(""))}}class Ve extends Ue{constructor(C){super(),this.config=C,this.pattern=F(this.config.pattern,this.config.invert)}pre_tokenize_text(C,X){var de;return this.pattern===null?[]:this.config.invert?C.match(this.pattern)||[]:((de=this.config.behavior)==null?void 0:de.toLowerCase())==="removed"?C.split(this.pattern).filter(xe=>xe):T(C,this.pattern)}}class We extends Ue{constructor(C){super(),this.config=C,this.pattern=new RegExp(`[^${b}]+|[${b}]+`,"gu")}pre_tokenize_text(C,X){return C.match(this.pattern)||[]}}class Ne extends Ue{constructor(C){super(),this.config=C;const X=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(X,"gu")}pre_tokenize_text(C,X){return C.match(this.pattern)||[]}}class je extends p.Callable{constructor(C){super(),this.config=C}static fromConfig(C){if(C===null)return null;switch(C.type){case"TemplateProcessing":return new pt(C);case"ByteLevel":return new lt(C);case"RobertaProcessing":return new ut(C);case"BertProcessing":return new st(C);case"Sequence":return new mt(C);default:throw new Error(`Unknown PostProcessor type: ${C.type}`)}}post_process(C,...X){throw Error("post_process should be implemented in subclass.")}_call(C,...X){return this.post_process(C,...X)}}class st extends je{constructor(C){super(C),this.cls=C.cls[0],this.sep=C.sep[0]}post_process(C,X=null,{add_special_tokens:de=!0}={}){de&&(C=(0,w.mergeArrays)([this.cls],C,[this.sep]));let xe=new Array(C.length).fill(0);if(X!==null){const Ae=de&&this instanceof ut?[this.sep]:[],Xe=de?[this.sep]:[];C=(0,w.mergeArrays)(C,Ae,X,Xe),xe=(0,w.mergeArrays)(xe,new Array(X.length+Ae.length+Xe.length).fill(1))}return{tokens:C,token_type_ids:xe}}}class ut extends st{}class pt extends je{constructor(C){super(C),this.single=C.single,this.pair=C.pair}post_process(C,X=null,{add_special_tokens:de=!0}={}){const xe=X===null?this.single:this.pair;let Ae=[],Xe=[];for(const ht of xe)"SpecialToken"in ht?de&&(Ae.push(ht.SpecialToken.id),Xe.push(ht.SpecialToken.type_id)):"Sequence"in ht&&(ht.Sequence.id==="A"?(Ae=(0,w.mergeArrays)(Ae,C),Xe=(0,w.mergeArrays)(Xe,new Array(C.length).fill(ht.Sequence.type_id))):ht.Sequence.id==="B"&&(Ae=(0,w.mergeArrays)(Ae,X),Xe=(0,w.mergeArrays)(Xe,new Array(X.length).fill(ht.Sequence.type_id))));return{tokens:Ae,token_type_ids:Xe}}}class lt extends je{post_process(C,X=null){return X&&(C=(0,w.mergeArrays)(C,X)),{tokens:C}}}class mt extends je{constructor(C){super(C),this.processors=C.processors.map(X=>je.fromConfig(X))}post_process(C,X=null,de={}){let xe;for(const Ae of this.processors)if(Ae instanceof lt)C=Ae.post_process(C).tokens,X&&(X=Ae.post_process(X).tokens);else{const Xe=Ae.post_process(C,X,de);C=Xe.tokens,xe=Xe.token_type_ids}return{tokens:C,token_type_ids:xe}}}class R extends p.Callable{constructor(C){super(),this.config=C,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=C.trim_offsets}static fromConfig(C){if(C===null)return null;switch(C.type){case"WordPiece":return new Re(C);case"Metaspace":return new is(C);case"ByteLevel":return new qe(C);case"Replace":return new ae(C);case"ByteFallback":return new K(C);case"Fuse":return new me(C);case"Strip":return new Se(C);case"Sequence":return new ct(C);case"CTC":return new at(C);case"BPEDecoder":return new vt(C);default:throw new Error(`Unknown Decoder type: ${C.type}`)}}_call(C){return this.decode(C)}decode(C){return this.decode_chain(C).join("")}decode_chain(C){throw Error("`decode_chain` should be implemented in subclass.")}}class ae extends R{decode_chain(C){const X=F(this.config.pattern);return X===null?C:C.map(de=>de.replaceAll(X,this.config.content))}}class K extends R{constructor(C){super(C),this.text_decoder=new TextDecoder}decode_chain(C){const X=[];let de=[];for(const xe of C){let Ae=null;if(xe.length===6&&xe.startsWith("<0x")&&xe.endsWith(">")){const Xe=parseInt(xe.slice(3,5),16);isNaN(Xe)||(Ae=Xe)}if(Ae!==null)de.push(Ae);else{if(de.length>0){const Xe=this.text_decoder.decode(Uint8Array.from(de));X.push(Xe),de=[]}X.push(xe)}}if(de.length>0){const xe=this.text_decoder.decode(Uint8Array.from(de));X.push(xe),de=[]}return X}}class me extends R{decode_chain(C){return[C.join("")]}}class Se extends R{constructor(C){super(C),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(C){return C.map(X=>{let de=0;for(let Ae=0;Ae<this.start&&X[Ae]===this.content;++Ae){de=Ae+1;continue}let xe=X.length;for(let Ae=0;Ae<this.stop;++Ae){const Xe=X.length-Ae-1;if(X[Xe]===this.content){xe=Xe;continue}else break}return X.slice(de,xe)})}}class Re extends R{constructor(C){super(C),this.cleanup=C.cleanup}decode_chain(C){return C.map((X,de)=>(de!==0&&(X.startsWith(this.config.prefix)?X=X.replace(this.config.prefix,""):X=" "+X),this.cleanup&&(X=ie(X)),X))}}class qe extends R{constructor(C){super(C),this.byte_decoder=pe,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(C){const X=C.join(""),de=new Uint8Array([...X].map(Ae=>this.byte_decoder[Ae]));return this.text_decoder.decode(de)}decode_chain(C){const X=[];let de=[];for(const xe of C)this.added_tokens.find(Ae=>Ae.content===xe)!==void 0?(de.length>0&&(X.push(this.convert_tokens_to_string(de)),de=[]),X.push(xe)):de.push(xe);return de.length>0&&X.push(this.convert_tokens_to_string(de)),X}}class at extends R{constructor(C){super(C),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(C){if(C.length===0)return"";const X=[C[0]];for(let Ae=1;Ae<C.length;++Ae)C[Ae]!==X.at(-1)&&X.push(C[Ae]);let xe=X.filter(Ae=>Ae!==this.pad_token).join("");return this.cleanup&&(xe=ie(xe).replaceAll(this.word_delimiter_token," ").trim()),xe}decode_chain(C){return[this.convert_tokens_to_string(C)]}}class ct extends R{constructor(C){super(C),this.decoders=C.decoders.map(X=>R.fromConfig(X))}decode_chain(C){return this.decoders.reduce((X,de)=>de.decode_chain(X),C)}}class vt extends R{constructor(C){super(C),this.suffix=this.config.suffix}decode_chain(C){return C.map((X,de)=>X.replaceAll(this.suffix,de===C.length-1?"":" "))}}class $t extends R{decode_chain(C){let X="";for(let de=1;de<C.length;de+=2)X+=C[de];return[X]}}class kt extends Ue{constructor(C){super(),this.addPrefixSpace=C.add_prefix_space,this.replacement=C.replacement,this.strRep=C.str_rep||this.replacement,this.prepend_scheme=C.prepend_scheme??"always"}pre_tokenize_text(C,{section_index:X=void 0}={}){let de=C.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!de.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&X===0)&&(de=this.strRep+de),[de]}}class is extends R{constructor(C){super(C),this.addPrefixSpace=C.add_prefix_space,this.replacement=C.replacement}decode_chain(C){const X=[];for(let de=0;de<C.length;++de){let xe=C[de].replaceAll(this.replacement," ");this.addPrefixSpace&&de==0&&xe.startsWith(" ")&&(xe=xe.substring(1)),X.push(xe)}return X}}class bs extends Ce{constructor(C){super(C),this.charsmap=C.precompiled_charsmap}normalize(C){return C=C.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),C=C.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),C.includes("～")?C=C.split("～").map(de=>de.normalize("NFKC")).join("～"):C=C.normalize("NFKC"),C}}class $s extends Ue{constructor(C){super(),this.tokenizers=C.pretokenizers.map(X=>Ue.fromConfig(X))}pre_tokenize_text(C,X){return this.tokenizers.reduce((de,xe)=>xe.pre_tokenize(de,X),[C])}}class Ls extends Ue{constructor(C){super()}pre_tokenize_text(C,X){return C.match(/\w+|[^\w\s]+/g)||[]}}class sr extends Ue{constructor(C){super()}pre_tokenize_text(C,X){return I(C)}}class $r extends Ue{constructor(C){super(),this.config=C,this.pattern=F(this.config.pattern),this.content=this.config.content}pre_tokenize_text(C,X){return this.pattern===null?[C]:[C.replaceAll(this.pattern,this.config.content)]}}const Jr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Us(Pe,C,X,de){for(const xe of Object.keys(Pe)){const Ae=C-Pe[xe].length,Xe=X(xe),ht=new Array(Ae).fill(Xe);Pe[xe]=de==="right"?(0,w.mergeArrays)(Pe[xe],ht):(0,w.mergeArrays)(ht,Pe[xe])}}function xr(Pe,C){for(const X of Object.keys(Pe))Pe[X].length=C}class Nt extends p.Callable{constructor(X,de){super();fe(this,"return_token_type_ids",!1);fe(this,"padding_side","right");this._tokenizer_config=de,this.normalizer=Ce.fromConfig(X.normalizer),this.pre_tokenizer=Ue.fromConfig(X.pre_tokenizer),this.model=Te.fromConfig(X.model,de),this.post_processor=je.fromConfig(X.post_processor),this.decoder=R.fromConfig(X.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const xe of X.added_tokens){const Ae=new oe(xe);this.added_tokens.push(Ae),this.model.tokens_to_ids.set(Ae.content,Ae.id),this.model.vocab[Ae.id]=Ae.content,Ae.special&&(this.special_tokens.push(Ae.content),this.all_special_ids.push(Ae.id))}if(this.additional_special_tokens=de.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((xe,Ae)=>Ae.content.length-xe.content.length).map(xe=>`${xe.lstrip?"\\s*":""}(${(0,w.escapeRegExp)(xe.content)})${xe.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=de.model_max_length,this.remove_space=de.remove_space,this.clean_up_tokenization_spaces=de.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=de.do_lowercase_and_remove_accent??!1,de.padding_side&&(this.padding_side=de.padding_side),this.legacy=!1,this.chat_template=de.chat_template??null,Array.isArray(this.chat_template)){const xe=Object.create(null);for(const{name:Ae,template:Xe}of this.chat_template){if(typeof Ae!="string"||typeof Xe!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');xe[Ae]=Xe}this.chat_template=xe}this._compiled_template_cache=new Map}getToken(...X){for(const de of X){const xe=this._tokenizer_config[de];if(xe)if(typeof xe=="object"){if(xe.__type==="AddedToken")return xe.content;throw Error(`Unknown token: ${xe}`)}else return xe}return null}static async from_pretrained(X,{progress_callback:de=null,config:xe=null,cache_dir:Ae=null,local_files_only:Xe=!1,revision:ht="main",legacy:gt=null}={}){const _t=await M(X,{progress_callback:de,config:xe,cache_dir:Ae,local_files_only:Xe,revision:ht,legacy:gt});return new this(..._t)}_call(X,{text_pair:de=null,add_special_tokens:xe=!0,padding:Ae=!1,truncation:Xe=null,max_length:ht=null,return_tensor:gt=!0,return_token_type_ids:_t=null}={}){const Tt=Array.isArray(X);let Kt;if(Tt){if(X.length===0)throw Error("text array must be non-empty");if(de!==null){if(Array.isArray(de)){if(X.length!==de.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Kt=X.map((us,Fs)=>this._encode_plus(us,{text_pair:de[Fs],add_special_tokens:xe,return_token_type_ids:_t}))}else Kt=X.map(us=>this._encode_plus(us,{add_special_tokens:xe,return_token_type_ids:_t}))}else{if(X==null)throw Error("text may not be null or undefined");if(Array.isArray(de))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Kt=[this._encode_plus(X,{text_pair:de,add_special_tokens:xe,return_token_type_ids:_t})]}if(ht===null?Ae==="max_length"?ht=this.model_max_length:ht=(0,D.max)(Kt.map(us=>us.input_ids.length))[0]:Xe||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),ht=Math.min(ht,this.model_max_length??1/0),Ae||Xe)for(let us=0;us<Kt.length;++us)Kt[us].input_ids.length!==ht&&(Kt[us].input_ids.length>ht?Xe&&xr(Kt[us],ht):Ae&&Us(Kt[us],ht,Fs=>Fs==="input_ids"?this.pad_token_id:0,this.padding_side));const _s={};if(gt){if(!(Ae&&Xe)&&Kt.some(Fs=>{var zt;for(const rs of Object.keys(Fs))if(Fs[rs].length!==((zt=Kt[0][rs])==null?void 0:zt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const us=[Kt.length,Kt[0].input_ids.length];for(const Fs of Object.keys(Kt[0]))_s[Fs]=new z.Tensor("int64",BigInt64Array.from(Kt.flatMap(zt=>zt[Fs]).map(BigInt)),us)}else{for(const us of Object.keys(Kt[0]))_s[us]=Kt.map(Fs=>Fs[us]);if(!Tt)for(const us of Object.keys(_s))_s[us]=_s[us][0]}return _s}_encode_text(X){return X===null?null:(this.added_tokens_regex?X.split(this.added_tokens_regex).filter(Ae=>Ae):[X]).map((Ae,Xe)=>{if(this.added_tokens.find(gt=>gt.content===Ae)!==void 0)return Ae;{if(this.remove_space===!0&&(Ae=Ae.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Ae=V(Ae)),this.normalizer!==null&&(Ae=this.normalizer(Ae)),Ae.length===0)return[];const gt=this.pre_tokenizer!==null?this.pre_tokenizer(Ae,{section_index:Xe}):[Ae];return this.model(gt)}}).flat()}_encode_plus(X,{text_pair:de=null,add_special_tokens:xe=!0,return_token_type_ids:Ae=null}={}){const{tokens:Xe,token_type_ids:ht}=this._tokenize_helper(X,{pair:de,add_special_tokens:xe}),gt=this.model.convert_tokens_to_ids(Xe),_t={input_ids:gt,attention_mask:new Array(gt.length).fill(1)};return(Ae??this.return_token_type_ids)&&ht&&(_t.token_type_ids=ht),_t}_tokenize_helper(X,{pair:de=null,add_special_tokens:xe=!1}={}){const Ae=this._encode_text(X),Xe=this._encode_text(de);return this.post_processor?this.post_processor(Ae,Xe,{add_special_tokens:xe}):{tokens:(0,w.mergeArrays)(Ae??[],Xe??[])}}tokenize(X,{pair:de=null,add_special_tokens:xe=!1}={}){return this._tokenize_helper(X,{pair:de,add_special_tokens:xe}).tokens}encode(X,{text_pair:de=null,add_special_tokens:xe=!0,return_token_type_ids:Ae=null}={}){return this._encode_plus(X,{text_pair:de,add_special_tokens:xe,return_token_type_ids:Ae}).input_ids}batch_decode(X,de={}){return X instanceof z.Tensor&&(X=X.tolist()),X.map(xe=>this.decode(xe,de))}decode(X,de={}){if(X instanceof z.Tensor&&(X=re(X)),!Array.isArray(X)||X.length===0||!(0,w.isIntegralNumber)(X[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(X,de)}decode_single(X,{skip_special_tokens:de=!1,clean_up_tokenization_spaces:xe=null}){let Ae=this.model.convert_ids_to_tokens(X);de&&(Ae=Ae.filter(ht=>!this.special_tokens.includes(ht)));let Xe=this.decoder?this.decoder(Ae):Ae.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Xe=Xe.replaceAll(this.decoder.end_of_word_suffix," "),de&&(Xe=Xe.trim())),(xe??this.clean_up_tokenization_spaces)&&(Xe=ie(Xe)),Xe}get_chat_template({chat_template:X=null,tools:de=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const xe=this.chat_template;if(X!==null&&Object.hasOwn(xe,X))X=xe[X];else if(X===null)if(de!==null&&"tool_use"in xe)X=xe.tool_use;else if("default"in xe)X=xe.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(xe).sort()}.`)}else if(X===null)if(this.chat_template)X=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return X}apply_chat_template(X,{tools:de=null,documents:xe=null,chat_template:Ae=null,add_generation_prompt:Xe=!1,tokenize:ht=!0,padding:gt=!1,truncation:_t=!1,max_length:Tt=null,return_tensor:Kt=!0,return_dict:_s=!1,tokenizer_kwargs:us={},...Fs}={}){if(Ae=this.get_chat_template({chat_template:Ae,tools:de}),typeof Ae!="string")throw Error(`chat_template must be a string, but got ${typeof Ae}`);let zt=this._compiled_template_cache.get(Ae);zt===void 0&&(zt=new x.Template(Ae),this._compiled_template_cache.set(Ae,zt));const rs=Object.create(null);for(const Ws of Jr){const ze=this.getToken(Ws);ze&&(rs[Ws]=ze)}const rr=zt.render({messages:X,add_generation_prompt:Xe,tools:de,documents:xe,...rs,...Fs});if(ht){const Ws=this._call(rr,{add_special_tokens:!1,padding:gt,truncation:_t,max_length:Tt,return_tensor:Kt,...us});return _s?Ws:Ws.input_ids}return rr}}class Zr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class Sr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class kr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class en extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class cr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class Rr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class Ar extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class Nr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class jr extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class ar extends Nt{}class it extends Nt{}class xt extends Nt{constructor(X,de){super(X,de);fe(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ft extends Nt{constructor(){super(...arguments);fe(this,"return_token_type_ids",!0)}}class Vs extends Nt{}class Ur extends Nt{}class Ir extends Nt{}class Ms extends Nt{constructor(C,X){super(C,X),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(de=>this.languageRegex.test(de)),this.lang_to_token=de=>de}_build_translation_inputs(C,X,de){return _r(this,C,X,de)}}class lr extends Ms{}class Os extends Nt{}class Tr extends Nt{}const ss="▁";class wn extends Nt{constructor(X,de){super(X,de);fe(this,"padding_side","left");this.legacy=de.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new kt({replacement:ss,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(X){if(X===null)return null;if(this.legacy||X.length===0)return super._encode_text(X);let de=super._encode_text(ss+X.replaceAll(ss," "));return de.length>1&&de[0]===ss&&this.special_tokens.includes(de[1])&&(de=de.slice(1)),de}}class Vr extends Nt{}class li extends Nt{}class On extends Nt{}class Fn extends Nt{}class Dn extends Nt{}class Wr extends Nt{}class Ln extends Nt{}class ui extends Nt{}class Gr extends Nt{}function _r(Pe,C,X,de){if(!("language_codes"in Pe)||!Array.isArray(Pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Pe)||!(Pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Pe)||typeof Pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const xe=de.src_lang,Ae=de.tgt_lang;if(!Pe.language_codes.includes(Ae))throw new Error(`Target language code "${Ae}" is not valid. Must be one of: {${Pe.language_codes.join(", ")}}`);if(xe!==void 0){if(!Pe.language_codes.includes(xe))throw new Error(`Source language code "${xe}" is not valid. Must be one of: {${Pe.language_codes.join(", ")}}`);for(const Xe of Pe.post_processor.config.single)if("SpecialToken"in Xe&&Pe.languageRegex.test(Xe.SpecialToken.id)){Xe.SpecialToken.id=Pe.lang_to_token(xe);break}}return de.forced_bos_token_id=Pe.model.convert_tokens_to_ids([Pe.lang_to_token(Ae)])[0],Pe._call(C,X)}class ur extends Nt{constructor(C,X){super(C,X),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(de=>this.languageRegex.test(de)),this.lang_to_token=de=>de}_build_translation_inputs(C,X,de){return _r(this,C,X,de)}}class bn extends Nt{constructor(C,X){super(C,X),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(de=>this.languageRegex.test(de)).map(de=>de.slice(2,-2)),this.lang_to_token=de=>`__${de}__`}_build_translation_inputs(C,X,de){return _r(this,C,X,de)}}class tn extends Nt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(C,{return_timestamps:X=!1,return_language:de=!1,time_precision:xe=null,force_full_sequences:Ae=!0}={}){if(xe===null)throw Error("Must specify time_precision");let Xe=null;const ht=X==="word";function gt(){return{language:Xe,timestamp:[null,null],text:""}}const _t=[];let Tt=gt(),Kt=0;const _s=this.timestamp_begin,Fs=_s+1500;let zt=[],rs=[],rr=!1,Ws=null;const ze=new Set(this.all_special_ids);for(const Ss of C){const Xs=Ss.tokens,Ot=ht?Ss.token_timestamps:null;let or=null,fr=_s;if("stride"in Ss){const[bt,Xt,zs]=Ss.stride;if(Kt-=Xt,Ws=bt-zs,Xt&&(fr=Xt/xe+_s),zs)for(let As=Xs.length-1;As>=0;--As){const Gs=Number(Xs[As]);if(Gs>=_s){if(or!==null&&(Gs-_s)*xe<Ws)break;or=Gs}}}let fs=[],ks=[];for(let bt=0;bt<Xs.length;++bt){const Xt=Number(Xs[bt]);if(ze.has(Xt)){const zs=this.decode([Xt]),As=v.WHISPER_LANGUAGE_MAPPING.get(zs.slice(2,-2));if(As!==void 0){if(Xe!==null&&As!==Xe&&!X){zt.push(fs);const Gs=this.findLongestCommonSequence(zt)[0],St=this.decode(Gs);Tt.text=St,_t.push(Tt),zt=[],fs=[],Tt=gt()}Xe=Tt.language=As}}else if(Xt>=_s&&Xt<=Fs){const zs=(Xt-_s)*xe+Kt,As=(0,D.round)(zs,2);if(or!==null&&Xt>=or)rr=!0;else if(rr||zt.length>0&&Xt<fr)rr=!1;else if(Tt.timestamp[0]===null)Tt.timestamp[0]=As;else if(As!==Tt.timestamp[0]){Tt.timestamp[1]=As,zt.push(fs),ht&&rs.push(ks);const[Gs,St]=this.findLongestCommonSequence(zt,rs),sn=this.decode(Gs);Tt.text=sn,ht&&(Tt.words=this.collateWordTimestamps(Gs,St,Xe)),_t.push(Tt),zt=[],fs=[],rs=[],ks=[],Tt=gt()}}else if(fs.push(Xt),ht){let zs=(0,D.round)(Ot[bt]+Kt,2),As;if(bt+1<Ot.length){As=(0,D.round)(Ot[bt+1]+Kt,2);const Gs=this.decode([Xt]);E.test(Gs)&&(As=(0,D.round)(Math.min(zs+xe,As),2))}else As=null;ks.push([zs,As])}}if("stride"in Ss){const[bt,Xt,zs]=Ss.stride;Kt+=bt-zs}fs.length>0?(zt.push(fs),ht&&rs.push(ks)):zt.every(bt=>bt.length===0)&&(Tt=gt(),zt=[],fs=[],rs=[],ks=[])}if(zt.length>0){if(Ae&&X)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Ss,Xs]=this.findLongestCommonSequence(zt,rs),Ot=this.decode(Ss);Tt.text=Ot,ht&&(Tt.words=this.collateWordTimestamps(Ss,Xs,Xe)),_t.push(Tt)}let Zs=Object.create(null);const Or=_t.map(Ss=>Ss.text).join("");if(X||de){for(let Ss=0;Ss<_t.length;++Ss){const Xs=_t[Ss];X||delete Xs.timestamp,de||delete Xs.language}if(ht){const Ss=[];for(const Xs of _t)for(const Ot of Xs.words)Ss.push(Ot);Zs={chunks:Ss}}else Zs={chunks:_t}}return[Or,Zs]}findLongestCommonSequence(C,X=null){let de=C[0],xe=de.length,Ae=[];const Xe=Array.isArray(X)&&X.length>0;let ht=Xe?[]:null,gt=Xe?X[0]:null;for(let _t=1;_t<C.length;++_t){const Tt=C[_t];let Kt=0,_s=[xe,xe,0,0];const us=Tt.length;for(let Zs=1;Zs<xe+us;++Zs){const Or=Math.max(0,xe-Zs),Ss=Math.min(xe,xe+us-Zs),Xs=de.slice(Or,Ss),Ot=Math.max(0,Zs-xe),or=Math.min(us,Zs),fr=Tt.slice(Ot,or);if(Xs.length!==fr.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let fs;Xe?fs=Xs.filter((Xt,zs)=>Xt===fr[zs]&&gt[Or+zs]<=X[_t][Ot+zs]).length:fs=Xs.filter((Xt,zs)=>Xt===fr[zs]).length;const ks=Zs/1e4,bt=fs/Zs+ks;fs>1&&bt>Kt&&(Kt=bt,_s=[Or,Ss,Ot,or])}const[Fs,zt,rs,rr]=_s,Ws=Math.floor((zt+Fs)/2),ze=Math.floor((rr+rs)/2);Ae.push(...de.slice(0,Ws)),de=Tt.slice(ze),xe=de.length,Xe&&(ht.push(...gt.slice(0,Ws)),gt=X[_t].slice(ze))}return Ae.push(...de),Xe?(ht.push(...gt),[Ae,ht]):[Ae,[]]}collateWordTimestamps(C,X,de){const[xe,Ae,Xe]=this.combineTokensIntoWords(C,de),ht=[];for(let gt=0;gt<xe.length;++gt){const _t=Xe[gt];ht.push({text:xe[gt],timestamp:[X[_t.at(0)][0],X[_t.at(-1)][1]]})}return ht}combineTokensIntoWords(C,X,de=`"'“¡¿([{-`,xe=`"'.。,，!！?？:：”)]}、`){X=X??"english";let Ae,Xe,ht;return["chinese","japanese","thai","lao","myanmar"].includes(X)?[Ae,Xe,ht]=this.splitTokensOnUnicode(C):[Ae,Xe,ht]=this.splitTokensOnSpaces(C),this.mergePunctuations(Ae,Xe,ht,de,xe)}decode(C,X){let de;return X!=null&&X.decode_with_timestamps?(C instanceof z.Tensor&&(C=re(C)),de=this.decodeWithTimestamps(C,X)):de=super.decode(C,X),de}decodeWithTimestamps(C,X){const de=(X==null?void 0:X.time_precision)??.02,xe=Array.from(this.all_special_ids).at(-1)+1;let Ae=[[]];for(let Xe of C)if(Xe=Number(Xe),Xe>=xe){const ht=((Xe-xe)*de).toFixed(2);Ae.push(`<|${ht}|>`),Ae.push([])}else Ae[Ae.length-1].push(Xe);return Ae=Ae.map(Xe=>typeof Xe=="string"?Xe:super.decode(Xe,X)),Ae.join("")}splitTokensOnUnicode(C){const X=this.decode(C,{decode_with_timestamps:!0}),de="�",xe=[],Ae=[],Xe=[];let ht=[],gt=[],_t=0;for(let Tt=0;Tt<C.length;++Tt){const Kt=C[Tt];ht.push(Kt),gt.push(Tt);const _s=this.decode(ht,{decode_with_timestamps:!0});(!_s.includes(de)||X[_t+_s.indexOf(de)]===de)&&(xe.push(_s),Ae.push(ht),Xe.push(gt),ht=[],gt=[],_t+=_s.length)}return[xe,Ae,Xe]}splitTokensOnSpaces(C){const[X,de,xe]=this.splitTokensOnUnicode(C),Ae=[],Xe=[],ht=[],gt=new RegExp(`^[${b}]$`,"gu");for(let _t=0;_t<X.length;++_t){const Tt=X[_t],Kt=de[_t],_s=xe[_t],us=Kt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Fs=Tt.startsWith(" "),zt=Tt.trim(),rs=gt.test(zt);if(us||Fs||rs||Ae.length===0)Ae.push(Tt),Xe.push(Kt),ht.push(_s);else{const rr=Ae.length-1;Ae[rr]+=Tt,Xe[rr].push(...Kt),ht[rr].push(..._s)}}return[Ae,Xe,ht]}mergePunctuations(C,X,de,xe,Ae){const Xe=structuredClone(C),ht=structuredClone(X),gt=structuredClone(de);let _t=Xe.length-2,Tt=Xe.length-1;for(;_t>=0;)Xe[_t].startsWith(" ")&&xe.includes(Xe[_t].trim())?(Xe[Tt]=Xe[_t]+Xe[Tt],ht[Tt]=(0,w.mergeArrays)(ht[_t],ht[Tt]),gt[Tt]=(0,w.mergeArrays)(gt[_t],gt[Tt]),Xe[_t]="",ht[_t]=[],gt[_t]=[]):Tt=_t,--_t;for(_t=0,Tt=1;Tt<Xe.length;)!Xe[_t].endsWith(" ")&&Ae.includes(Xe[Tt])?(Xe[_t]+=Xe[Tt],ht[_t]=(0,w.mergeArrays)(ht[_t],ht[Tt]),gt[_t]=(0,w.mergeArrays)(gt[_t],gt[Tt]),Xe[Tt]="",ht[Tt]=[],gt[Tt]=[]):_t=Tt,++Tt;return[Xe.filter(Kt=>Kt),ht.filter(Kt=>Kt.length>0),gt.filter(Kt=>Kt.length>0)]}}class Mn extends Nt{}class vn extends Nt{}class xn extends Nt{}class Lt extends Nt{constructor(C,X){super(C,X),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(de=>this.languageRegex.test(de)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(C){if(C===null)return null;const[X,...de]=C.trim().split(this.languageRegex);if(de.length===0)return super._encode_text(X);if(de.length===2){const[xe,Ae]=de;return this.supported_language_codes.includes(xe)||console.warn(`Unsupported language code "${xe}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,w.mergeArrays)([xe],super._encode_text(Ae))}}}class Tn extends Nt{}class zn extends Nt{}class Bn extends Nt{}class Rn extends Nt{}class Kr extends Nt{}class Nn extends Nt{constructor(C,X){super(C,X),this.decoder=new $t({})}}class En extends Nt{}class jn extends Nt{}class os{static async from_pretrained(C,{progress_callback:X=null,config:de=null,cache_dir:xe=null,local_files_only:Ae=!1,revision:Xe="main",legacy:ht=null}={}){var _s;const[gt,_t]=await M(C,{progress_callback:X,config:de,cache_dir:xe,local_files_only:Ae,revision:Xe,legacy:ht}),Tt=((_s=_t.tokenizer_class)==null?void 0:_s.replace(/Fast$/,""))??"PreTrainedTokenizer";let Kt=this.TOKENIZER_CLASS_MAPPING[Tt];return Kt||(console.warn(`Unknown tokenizer class "${Tt}", attempting to construct from base class.`),Kt=Nt),new Kt(gt,_t)}}fe(os,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Vs,DistilBertTokenizer:ar,CamembertTokenizer:it,DebertaTokenizer:cr,DebertaV2Tokenizer:Rr,BertTokenizer:Zr,HerbertTokenizer:Ar,ConvBertTokenizer:Nr,RoFormerTokenizer:jr,XLMTokenizer:xt,ElectraTokenizer:Ft,MobileBertTokenizer:kr,SqueezeBertTokenizer:en,AlbertTokenizer:Sr,GPT2Tokenizer:Ur,BartTokenizer:Ir,MBartTokenizer:Ms,MBart50Tokenizer:lr,RobertaTokenizer:Os,WhisperTokenizer:tn,CodeGenTokenizer:Mn,CLIPTokenizer:vn,SiglipTokenizer:xn,MarianTokenizer:Lt,BloomTokenizer:Tr,NllbTokenizer:ur,M2M100Tokenizer:bn,LlamaTokenizer:wn,CodeLlamaTokenizer:Vr,XLMRobertaTokenizer:li,MPNetTokenizer:On,FalconTokenizer:Fn,GPTNeoXTokenizer:Dn,EsmTokenizer:Wr,Wav2Vec2CTCTokenizer:Tn,BlenderbotTokenizer:zn,BlenderbotSmallTokenizer:Bn,SpeechT5Tokenizer:Rn,NougatTokenizer:Kr,VitsTokenizer:Nn,Qwen2Tokenizer:Ln,GemmaTokenizer:ui,Grok1Tokenizer:Gr,CohereTokenizer:En,MgpstrTokenizer:jn,PreTrainedTokenizer:Nt})},"./src/utils/audio.js":(te,h,s)=>{s.r(h),s.d(h,{RawAudio:()=>we,hamming:()=>T,hanning:()=>M,mel_filter_bank:()=>Q,read_audio:()=>x,spectrogram:()=>L,window_function:()=>le});var p=s("./src/utils/hub.js"),w=s("./src/utils/maths.js"),A=s("./src/utils/core.js"),D=s("./src/env.js"),z=s("?7a2c"),g=s("./src/utils/tensor.js");async function x(ne,Ee){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const pe=await(await(0,p.getFile)(ne)).arrayBuffer(),ke=new AudioContext({sampleRate:Ee});typeof Ee>"u"&&console.warn(`No sampling rate provided, using default of ${ke.sampleRate}Hz.`);const Oe=await ke.decodeAudioData(pe);let Ce;if(Oe.numberOfChannels===2){const tt=Math.sqrt(2),Ge=Oe.getChannelData(0),be=Oe.getChannelData(1);Ce=new Float32Array(Ge.length);for(let J=0;J<Oe.length;++J)Ce[J]=tt*(Ge[J]+be[J])/2}else Ce=Oe.getChannelData(0);return Ce}function v(ne,Ee){if(ne<1)return new Float64Array;if(ne===1)return new Float64Array([1]);const pe=1-Ee,ke=2*Math.PI/(ne-1),Oe=new Float64Array(ne);for(let Ce=0;Ce<ne;++Ce)Oe[Ce]=Ee-pe*Math.cos(Ce*ke);return Oe}function M(ne){return v(ne,.5)}function T(ne){return v(ne,.54)}const F={htk:ne=>2595*Math.log10(1+ne/700),kaldi:ne=>1127*Math.log(1+ne/700),slaney:(ne,Ee=1e3,pe=15,ke=27/Math.log(6.4))=>ne>=Ee?pe+Math.log(ne/Ee)*ke:3*ne/200};function q(ne,Ee="htk"){const pe=F[Ee];if(!pe)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ne=="number"?pe(ne):ne.map(ke=>pe(ke))}const re={htk:ne=>700*(10**(ne/2595)-1),kaldi:ne=>700*(Math.exp(ne/1127)-1),slaney:(ne,Ee=1e3,pe=15,ke=Math.log(6.4)/27)=>ne>=pe?Ee*Math.exp(ke*(ne-pe)):200*ne/3};function ie(ne,Ee="htk"){const pe=re[Ee];if(!pe)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ne=="number"?pe(ne):ne.map(ke=>pe(ke))}function G(ne,Ee){const pe=Float64Array.from({length:Ee.length-1},(tt,Ge)=>Ee[Ge+1]-Ee[Ge]),ke=Array.from({length:ne.length},()=>new Array(Ee.length));for(let tt=0;tt<ne.length;++tt){const Ge=ke[tt];for(let be=0;be<Ee.length;++be)Ge[be]=Ee[be]-ne[tt]}const Oe=Ee.length-2,Ce=Array.from({length:Oe},()=>new Array(ne.length));for(let tt=0;tt<ne.length;++tt){const Ge=ke[tt];for(let be=0;be<Oe;++be){const J=-Ge[be]/pe[be],ce=Ge[be+2]/pe[be+1];Ce[be][tt]=Math.max(0,Math.min(J,ce))}}return Ce}function V(ne,Ee,pe){const ke=(Ee-ne)/(pe-1);return Float64Array.from({length:pe},(Oe,Ce)=>ne+ke*Ce)}function Q(ne,Ee,pe,ke,Oe,Ce=null,tt="htk",Ge=!1){if(Ce!==null&&Ce!=="slaney")throw new Error('norm must be one of null or "slaney"');const be=q(pe,tt),J=q(ke,tt),ce=V(be,J,Ee+2);let $e=ie(ce,tt),Be;if(Ge){const se=Oe/(ne*2);Be=q(Float64Array.from({length:ne},(Ke,Ue)=>Ue*se),tt),$e=ce}else Be=V(0,Math.floor(Oe/2),ne);const Je=G(Be,$e);if(Ce!==null&&Ce==="slaney")for(let se=0;se<Ee;++se){const Ke=Je[se],Ue=2/($e[se+2]-$e[se]);for(let ue=0;ue<ne;++ue)Ke[ue]*=Ue}return Je}function O(ne,Ee,pe){const ke=new ne.constructor(ne.length+Ee+pe),Oe=ne.length-1;for(let Ce=0;Ce<ne.length;++Ce)ke[Ee+Ce]=ne[Ce];for(let Ce=1;Ce<=Ee;++Ce)ke[Ee-Ce]=ne[(0,A.calculateReflectOffset)(Ce,Oe)];for(let Ce=1;Ce<=pe;++Ce)ke[Oe+Ee+Ce]=ne[(0,A.calculateReflectOffset)(Oe-Ce,Oe)];return ke}function I(ne,Ee,pe,ke,Oe){if(pe<=0)throw new Error("reference must be greater than zero");if(ke<=0)throw new Error("min_value must be greater than zero");pe=Math.max(ke,pe);const Ce=Math.log10(pe);for(let tt=0;tt<ne.length;++tt)ne[tt]=Ee*Math.log10(Math.max(ke,ne[tt])-Ce);if(Oe!==null){if(Oe<=0)throw new Error("db_range must be greater than zero");const tt=(0,w.max)(ne)[0]-Oe;for(let Ge=0;Ge<ne.length;++Ge)ne[Ge]=Math.max(ne[Ge],tt)}return ne}function b(ne,Ee=1,pe=1e-5,ke=null){return I(ne,20,Ee,pe,ke)}function E(ne,Ee=1,pe=1e-10,ke=null){return I(ne,10,Ee,pe,ke)}async function L(ne,Ee,pe,ke,{fft_length:Oe=null,power:Ce=1,center:tt=!0,pad_mode:Ge="reflect",onesided:be=!0,preemphasis:J=null,mel_filters:ce=null,mel_floor:$e=1e-10,log_mel:Be=null,reference:Je=1,min_value:se=1e-10,db_range:Ke=null,remove_dc_offset:Ue=null,min_num_frames:ue=null,max_num_frames:ve=null,do_pad:Ve=!0,transpose:We=!1}={}){const Ne=Ee.length;if(Oe===null&&(Oe=pe),pe>Oe)throw Error(`frame_length (${pe}) may not be larger than fft_length (${Oe})`);if(Ne!==pe)throw new Error(`Length of the window (${Ne}) must equal frame_length (${pe})`);if(ke<=0)throw new Error("hop_length must be greater than zero");if(Ce===null&&ce!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(tt){if(Ge!=="reflect")throw new Error(`pad_mode="${Ge}" not implemented yet.`);const Re=Math.floor((Oe-1)/2)+1;ne=O(ne,Re,Re)}let je=Math.floor(1+Math.floor((ne.length-pe)/ke));ue!==null&&je<ue&&(je=ue);const st=be?Math.floor(Oe/2)+1:Oe;let ut=je,pt=je;ve!==null&&(ve>je?Ve&&(pt=ve):pt=ut=ve);const lt=new w.FFT(Oe),mt=new Float64Array(Oe),R=new Float64Array(lt.outputBufferSize),ae=new Float32Array(st*pt);for(let Re=0;Re<ut;++Re){const qe=Re*ke,at=Math.min(ne.length-qe,pe);at!==pe&&mt.fill(0,0,pe);for(let ct=0;ct<at;++ct)mt[ct]=ne[qe+ct];if(Ue){let ct=0;for(let $t=0;$t<at;++$t)ct+=mt[$t];const vt=ct/at;for(let $t=0;$t<at;++$t)mt[$t]-=vt}if(J!==null){for(let ct=at-1;ct>=1;--ct)mt[ct]-=J*mt[ct-1];mt[0]*=1-J}for(let ct=0;ct<Ee.length;++ct)mt[ct]*=Ee[ct];lt.realTransform(R,mt);for(let ct=0;ct<st;++ct){const vt=ct<<1;ae[ct*pt+Re]=R[vt]**2+R[vt+1]**2}}if(Ce!==null&&Ce!==2){const Re=2/Ce;for(let qe=0;qe<ae.length;++qe)ae[qe]**=Re}const K=ce.length;let me=await(0,g.matmul)(new g.Tensor("float32",ce.flat(),[K,st]),new g.Tensor("float32",ae,[st,pt]));We&&(me=me.transpose(1,0));const Se=me.data;for(let Re=0;Re<Se.length;++Re)Se[Re]=Math.max($e,Se[Re]);if(Ce!==null&&Be!==null){const Re=Math.min(Se.length,ut*K);switch(Be){case"log":for(let qe=0;qe<Re;++qe)Se[qe]=Math.log(Se[qe]);break;case"log10":for(let qe=0;qe<Re;++qe)Se[qe]=Math.log10(Se[qe]);break;case"dB":if(Ce===1)b(Se,Je,se,Ke);else if(Ce===2)E(Se,Je,se,Ke);else throw new Error(`Cannot use log_mel option '${Be}' with power ${Ce}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Be}'`)}}return me}function le(ne,Ee,{periodic:pe=!0,frame_length:ke=null,center:Oe=!0}={}){const Ce=pe?ne+1:ne;let tt;switch(Ee){case"boxcar":tt=new Float64Array(Ce).fill(1);break;case"hann":case"hann_window":tt=M(Ce);break;case"hamming":tt=T(Ce);break;case"povey":tt=M(Ce).map(Ge=>Math.pow(Ge,.85));break;default:throw new Error(`Unknown window type ${Ee}.`)}if(pe&&(tt=tt.subarray(0,ne)),ke===null)return tt;if(ne>ke)throw new Error(`Length of the window (${ne}) may not be larger than frame_length (${ke})`);return tt}function oe(ne,Ee){let pe=44;const ke=new ArrayBuffer(pe+ne.length*4),Oe=new DataView(ke);Te(Oe,0,"RIFF"),Oe.setUint32(4,36+ne.length*4,!0),Te(Oe,8,"WAVE"),Te(Oe,12,"fmt "),Oe.setUint32(16,16,!0),Oe.setUint16(20,3,!0),Oe.setUint16(22,1,!0),Oe.setUint32(24,Ee,!0),Oe.setUint32(28,Ee*4,!0),Oe.setUint16(32,4,!0),Oe.setUint16(34,32,!0),Te(Oe,36,"data"),Oe.setUint32(40,ne.length*4,!0);for(let Ce=0;Ce<ne.length;++Ce,pe+=4)Oe.setFloat32(pe,ne[Ce],!0);return ke}function Te(ne,Ee,pe){for(let ke=0;ke<pe.length;++ke)ne.setUint8(Ee+ke,pe.charCodeAt(ke))}class we{constructor(Ee,pe){this.audio=Ee,this.sampling_rate=pe}toWav(){return oe(this.audio,this.sampling_rate)}toBlob(){const Ee=this.toWav();return new Blob([Ee],{type:"audio/wav"})}async save(Ee){let pe;if(D.apis.IS_BROWSER_ENV){if(D.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");pe=A.saveBlob}else if(D.apis.IS_FS_AVAILABLE)pe=async(ke,Oe)=>{let Ce=await Oe.arrayBuffer();z.writeFileSync(ke,Buffer.from(Ce))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await pe(Ee,this.toBlob())}}},"./src/utils/constants.js":(te,h,s)=>{s.r(h),s.d(h,{CHAT_TEMPLATE_NAME:()=>g,CONFIG_NAME:()=>w,FEATURE_EXTRACTOR_NAME:()=>A,GENERATION_CONFIG_NAME:()=>x,GITHUB_ISSUE_URL:()=>p,IMAGE_PROCESSOR_NAME:()=>D,PROCESSOR_NAME:()=>z});const p="https://github.com/huggingface/transformers.js/issues/new/choose",w="config.json",A="preprocessor_config.json",D=A,z="processor_config.json",g="chat_template.json",x="generation_config.json"},"./src/utils/core.js":(te,h,s)=>{s.r(h),s.d(h,{calculateDimensions:()=>x,calculateReflectOffset:()=>F,count:()=>G,dispatchCallback:()=>p,escapeRegExp:()=>A,isIntegralNumber:()=>z,isNullishDimension:()=>g,isTypedArray:()=>D,len:()=>ie,mergeArrays:()=>M,pick:()=>re,pop:()=>v,product:()=>T,reverseDictionary:()=>w,saveBlob:()=>q});function p(V,Q){V&&V(Q)}function w(V){return Object.fromEntries(Object.entries(V).map(([Q,O])=>[O,Q]))}function A(V){return V.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function D(V){var Q,O,I;return((I=(O=(Q=V==null?void 0:V.prototype)==null?void 0:Q.__proto__)==null?void 0:O.constructor)==null?void 0:I.name)==="TypedArray"}function z(V){return Number.isInteger(V)||typeof V=="bigint"}function g(V){return V==null||V===-1}function x(V){const Q=[];let O=V;for(;Array.isArray(O);)Q.push(O.length),O=O[0];return Q}function v(V,Q,O=void 0){const I=V[Q];if(I!==void 0)return delete V[Q],I;if(O===void 0)throw Error(`Key ${Q} does not exist in object.`);return O}function M(...V){return Array.prototype.concat.apply([],V)}function T(...V){return V.reduce((Q,O)=>Q.flatMap(I=>O.map(b=>[I,b])))}function F(V,Q){return Math.abs((V+Q)%(2*Q)-Q)}function q(V,Q){const O=URL.createObjectURL(Q),I=document.createElement("a");I.href=O,I.download=V,I.click(),I.remove(),URL.revokeObjectURL(O)}function re(V,Q){return Object.assign({},...Q.map(O=>{if(V[O]!==void 0)return{[O]:V[O]}}))}function ie(V){let Q=0;for(const O of V)++Q;return Q}function G(V,Q){let O=0;for(const I of V)I===Q&&++O;return O}},"./src/utils/data-structures.js":(te,h,s)=>{s.r(h),s.d(h,{CharTrie:()=>w,PriorityQueue:()=>p,TokenLattice:()=>D});class p{constructor(x=(M,T)=>M>T,v=1/0){this._heap=[],this._comparator=x,this._maxSize=v}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...x){return this.extend(x)}extend(x){for(const v of x)if(this.size<this._maxSize)this._heap.push(v),this._siftUp();else{const M=this._smallest();this._comparator(v,this._heap[M])&&(this._heap[M]=v,this._siftUpFrom(M))}return this.size}pop(){const x=this.peek(),v=this.size-1;return v>0&&this._swap(0,v),this._heap.pop(),this._siftDown(),x}replace(x){const v=this.peek();return this._heap[0]=x,this._siftDown(),v}_parent(x){return(x+1>>>1)-1}_left(x){return(x<<1)+1}_right(x){return x+1<<1}_greater(x,v){return this._comparator(this._heap[x],this._heap[v])}_swap(x,v){const M=this._heap[x];this._heap[x]=this._heap[v],this._heap[v]=M}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(x){for(;x>0&&this._greater(x,this._parent(x));)this._swap(x,this._parent(x)),x=this._parent(x)}_siftDown(){let x=0;for(;this._left(x)<this.size&&this._greater(this._left(x),x)||this._right(x)<this.size&&this._greater(this._right(x),x);){const v=this._right(x)<this.size&&this._greater(this._right(x),this._left(x))?this._right(x):this._left(x);this._swap(x,v),x=v}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class w{constructor(){this.root=A.default()}extend(x){for(const v of x)this.push(v)}push(x){let v=this.root;for(const M of x){let T=v.children.get(M);T===void 0&&(T=A.default(),v.children.set(M,T)),v=T}v.isLeaf=!0}*commonPrefixSearch(x){let v=this.root;if(v===void 0)return;let M="";for(const T of x){if(M+=T,v=v.children.get(T),v===void 0)return;v.isLeaf&&(yield M)}}}class A{constructor(x,v){this.isLeaf=x,this.children=v}static default(){return new A(!1,new Map)}}class D{constructor(x,v,M){this.chars=Array.from(x),this.len=this.chars.length,this.bosTokenId=v,this.eosTokenId=M,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const T=new z(this.bosTokenId,0,0,0,0),F=new z(this.eosTokenId,1,this.len,0,0);this.nodes.push(T.clone()),this.nodes.push(F.clone()),this.beginNodes[this.len].push(F),this.endNodes[0].push(T)}insert(x,v,M,T){const F=this.nodes.length,q=new z(T,F,x,v,M);this.beginNodes[x].push(q),this.endNodes[x+v].push(q),this.nodes.push(q)}viterbi(){const x=this.len;let v=0;for(;v<=x;){if(this.beginNodes[v].length==0)return[];for(let re of this.beginNodes[v]){re.prev=null;let ie=0,G=null;for(let V of this.endNodes[v]){const Q=V.backtraceScore+re.score;(G===null||Q>ie)&&(G=V.clone(),ie=Q)}if(G!==null)re.prev=G,re.backtraceScore=ie;else return[]}++v}const M=[],F=this.beginNodes[x][0].prev;if(F===null)return[];let q=F.clone();for(;q.prev!==null;)M.push(q.clone()),q=q.clone().prev.clone();return M.reverse(),M}piece(x){return this.chars.slice(x.pos,x.pos+x.length).join("")}tokens(){return this.viterbi().map(v=>this.piece(v))}tokenIds(){return this.viterbi().map(v=>v.tokenId)}}class z{constructor(x,v,M,T,F){this.tokenId=x,this.nodeId=v,this.pos=M,this.length=T,this.score=F,this.prev=null,this.backtraceScore=0}clone(){const x=new z(this.tokenId,this.nodeId,this.pos,this.length,this.score);return x.prev=this.prev,x.backtraceScore=this.backtraceScore,x}}},"./src/utils/devices.js":(te,h,s)=>{s.r(h),s.d(h,{DEVICE_TYPES:()=>p});const p=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(te,h,s)=>{s.r(h),s.d(h,{DATA_TYPES:()=>D,DEFAULT_DEVICE_DTYPE_MAPPING:()=>z,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>g,isWebGpuFp16Supported:()=>A});var p=s("./src/env.js"),w=s("./src/utils/devices.js");const A=function(){let x;return async function(){if(x===void 0)if(!p.apis.IS_WEBGPU_AVAILABLE)x=!1;else try{x=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{x=!1}return x}}(),D=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),z=Object.freeze({[w.DEVICE_TYPES.wasm]:D.q8}),g=Object.freeze({[D.fp32]:"",[D.fp16]:"_fp16",[D.int8]:"_int8",[D.uint8]:"_uint8",[D.q8]:"_quantized",[D.q4]:"_q4",[D.q4f16]:"_q4f16",[D.bnb4]:"_bnb4"})},"./src/utils/generic.js":(te,h,s)=>{s.r(h),s.d(h,{Callable:()=>p});const p=class{constructor(){let w=function(...A){return w._call(...A)};return Object.setPrototypeOf(w,new.target.prototype)}_call(...w){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(te,h,s)=>{s.r(h),s.d(h,{getFile:()=>v,getModelFile:()=>re,getModelJSON:()=>ie});var p=s("?7a2c"),w=s("?a42a"),A=s("./src/env.js"),D=s("./src/utils/core.js");const z={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class g{constructor(O){if(this.filePath=O,this.headers=new Headers,this.exists=p.existsSync(O),this.exists){this.status=200,this.statusText="OK";let I=p.statSync(O);this.headers.set("content-length",I.size.toString()),this.updateContentType();let b=this;this.body=new ReadableStream({start(E){b.arrayBuffer().then(L=>{E.enqueue(new Uint8Array(L)),E.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const O=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",z[O]??"application/octet-stream")}clone(){let O=new g(this.filePath);return O.exists=this.exists,O.status=this.status,O.statusText=this.statusText,O.headers=new Headers(this.headers),O}async arrayBuffer(){return(await p.promises.readFile(this.filePath)).buffer}async blob(){const O=await p.promises.readFile(this.filePath);return new Blob([O],{type:this.headers.get("content-type")})}async text(){return await p.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function x(Q,O=null,I=null){let b;try{b=new URL(Q)}catch{return!1}return!(O&&!O.includes(b.protocol)||I&&!I.includes(b.hostname))}async function v(Q){var O;if(A.env.useFS&&!x(Q,["http:","https:","blob:"]))return new g(Q);if(typeof process<"u"&&((O=process==null?void 0:process.release)==null?void 0:O.name)==="node"){const I=!!(In!=null&&In.TESTING_REMOTELY),b=A.env.version,E=new Headers;if(E.set("User-Agent",`transformers.js/${b}; is_ci/${I};`),x(Q,["http:","https:"],["huggingface.co","hf.co"])){const le=(In==null?void 0:In.HF_TOKEN)??(In==null?void 0:In.HF_ACCESS_TOKEN);le&&E.set("Authorization",`Bearer ${le}`)}return fetch(Q,{headers:E})}else return fetch(Q)}const M={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function T(Q,O,I){if(!I)return null;const b=M[Q]??`Error (${Q}) occurred while trying to load file`;throw Error(`${b}: "${O}".`)}class F{constructor(O){this.path=O}async match(O){let I=w.join(this.path,O),b=new g(I);if(b.exists)return b}async put(O,I){const b=Buffer.from(await I.arrayBuffer());let E=w.join(this.path,O);try{await p.promises.mkdir(w.dirname(E),{recursive:!0}),await p.promises.writeFile(E,b)}catch(L){console.warn("An error occurred while writing the file to cache:",L)}}}async function q(Q,...O){for(let I of O)try{let b=await Q.match(I);if(b)return b}catch{continue}}async function re(Q,O,I=!0,b={}){if(!A.env.allowLocalModels){if(b.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!A.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,D.dispatchCallback)(b.progress_callback,{status:"initiate",name:Q,file:O});let E;if(!E&&A.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{E=await caches.open("transformers-cache")}catch(tt){console.warn("An error occurred while opening the browser cache:",tt)}}if(!E&&A.env.useFSCache&&(E=new F(b.cache_dir??A.env.cacheDir)),!E&&A.env.useCustomCache){if(!A.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!A.env.customCache.match||!A.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");E=A.env.customCache}const L=b.revision??"main";let le=V(Q,O),oe=V(A.env.localModelPath,le),Te=V(A.env.remoteHost,A.env.remotePathTemplate.replaceAll("{model}",Q).replaceAll("{revision}",encodeURIComponent(L)),O),we=L==="main"?le:V(Q,L,O),ne,Ee=E instanceof F?we:Te,pe=!1,ke;E&&(ke=await q(E,oe,Ee));const Oe=ke!==void 0;if(ke===void 0){if(A.env.allowLocalModels)if(x(le,["http:","https:"])){if(b.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${le}.`);if(!A.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${le}.`)}else try{ke=await v(oe),ne=oe}catch(Ge){console.warn(`Unable to load from local path "${oe}": "${Ge}"`)}if(ke===void 0||ke.status===404){if(b.local_files_only||!A.env.allowRemoteModels){if(I)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${oe}".`);return null}if(ke=await v(Te),ke.status!==200)return T(ke.status,Te,I);ne=Ee}pe=E&&typeof Response<"u"&&ke instanceof Response&&ke.status===200}(0,D.dispatchCallback)(b.progress_callback,{status:"download",name:Q,file:O});let Ce;return b.progress_callback?Oe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Ce=new Uint8Array(await ke.arrayBuffer()),(0,D.dispatchCallback)(b.progress_callback,{status:"progress",name:Q,file:O,progress:100,loaded:Ce.length,total:Ce.length})):Ce=await G(ke,tt=>{(0,D.dispatchCallback)(b.progress_callback,{status:"progress",name:Q,file:O,...tt})}):Ce=new Uint8Array(await ke.arrayBuffer()),pe&&ne&&await E.match(ne)===void 0&&await E.put(ne,new Response(Ce,{headers:ke.headers})).catch(tt=>{console.warn(`Unable to add response to browser cache: ${tt}.`)}),(0,D.dispatchCallback)(b.progress_callback,{status:"done",name:Q,file:O}),Ce}async function ie(Q,O,I=!0,b={}){let E=await re(Q,O,I,b);if(E===null)return{};let le=new TextDecoder("utf-8").decode(E);return JSON.parse(le)}async function G(Q,O){const I=Q.headers.get("Content-Length");I===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let b=parseInt(I??"0"),E=new Uint8Array(b),L=0;const le=Q.body.getReader();async function oe(){const{done:Te,value:we}=await le.read();if(Te)return;let ne=L+we.length;if(ne>b){b=ne;let pe=new Uint8Array(b);pe.set(E),E=pe}E.set(we,L),L=ne;const Ee=L/b*100;return O({progress:Ee,loaded:L,total:b}),oe()}return await oe(),E}function V(...Q){return Q=Q.map((O,I)=>(I&&(O=O.replace(new RegExp("^/"),"")),I!==Q.length-1&&(O=O.replace(new RegExp("/$"),"")),O)),Q.join("/")}},"./src/utils/image.js":(te,h,s)=>{s.r(h),s.d(h,{RawImage:()=>q,load_image:()=>re});var p=s("./src/utils/core.js"),w=s("./src/utils/hub.js"),A=s("./src/env.js"),D=s("./src/utils/tensor.js"),z=s("?2b25");let g,x,v;const M=A.apis.IS_BROWSER_ENV||A.apis.IS_WEBWORKER_ENV;if(M)g=(ie,G)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(ie,G)},v=self.createImageBitmap,x=self.ImageData;else if(z)v=async ie=>{const V=(await ie.metadata()).channels,{data:Q,info:O}=await ie.rotate().raw().toBuffer({resolveWithObject:!0}),I=new q(new Uint8ClampedArray(Q),O.width,O.height,O.channels);return V!==void 0&&V!==O.channels&&I.convert(V),I};else throw new Error("Unable to load image processing library.");const T={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},F=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class q{constructor(G,V,Q,O){this.data=G,this.width=V,this.height=Q,this.channels=O}get size(){return[this.width,this.height]}static async read(G){if(G instanceof q)return G;if(typeof G=="string"||G instanceof URL)return await this.fromURL(G);throw new Error(`Unsupported input type: ${typeof G}`)}static fromCanvas(G){if(!M)throw new Error("fromCanvas() is only supported in browser environments.");const Q=G.getContext("2d").getImageData(0,0,G.width,G.height).data;return new q(Q,G.width,G.height,4)}static async fromURL(G){const V=await(0,w.getFile)(G);if(V.status!==200)throw new Error(`Unable to read image from "${G}" (${V.status} ${V.statusText})`);const Q=await V.blob();return this.fromBlob(Q)}static async fromBlob(G){if(M){const V=await v(G),Q=g(V.width,V.height).getContext("2d");return Q.drawImage(V,0,0),new this(Q.getImageData(0,0,V.width,V.height).data,V.width,V.height,4)}else{const V=z(await G.arrayBuffer());return await v(V)}}static fromTensor(G,V="CHW"){if(G.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${G.dims.length} dimensions.`);if(V==="CHW")G=G.transpose(1,2,0);else if(V!=="HWC")throw new Error(`Unsupported channel format: ${V}`);if(!(G.data instanceof Uint8ClampedArray||G.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${G.type}`);switch(G.dims[2]){case 1:case 2:case 3:case 4:return new q(G.data,G.dims[1],G.dims[0],G.dims[2]);default:throw new Error(`Unsupported number of channels: ${G.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const G=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let V=0,Q=0;V<this.data.length;V+=this.channels){const O=this.data[V],I=this.data[V+1],b=this.data[V+2];G[Q++]=Math.round(.2989*O+.587*I+.114*b)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(G,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const G=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let V=0,Q=0;V<this.data.length;++V)G[Q++]=this.data[V],G[Q++]=this.data[V],G[Q++]=this.data[V];break;case 4:for(let V=0,Q=0;V<this.data.length;V+=4)G[Q++]=this.data[V],G[Q++]=this.data[V+1],G[Q++]=this.data[V+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(G,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const G=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let V=0,Q=0;V<this.data.length;++V)G[Q++]=this.data[V],G[Q++]=this.data[V],G[Q++]=this.data[V],G[Q++]=255;break;case 3:for(let V=0,Q=0;V<this.data.length;V+=3)G[Q++]=this.data[V],G[Q++]=this.data[V+1],G[Q++]=this.data[V+2],G[Q++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(G,this.width,this.height,4)}putAlpha(G){if(G.width!==this.width||G.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${G.width}x${G.height}`);if(G.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${G.channels}`);const V=this.data,Q=G.data,O=this.width*this.height;if(this.channels===3){const I=new Uint8ClampedArray(O*4);for(let b=0,E=0,L=0;b<O;++b)I[L++]=V[E++],I[L++]=V[E++],I[L++]=V[E++],I[L++]=Q[b];return this._update(I,this.width,this.height,4)}else if(this.channels===4){for(let I=0;I<O;++I)V[4*I+3]=Q[I];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(G,V,{resample:Q=2}={}){if(this.width===G&&this.height===V)return this;let O=T[Q]??Q;const I=(0,p.isNullishDimension)(G),b=(0,p.isNullishDimension)(V);if(I&&b)return this;if(I?G=V/this.height*this.width:b&&(V=G/this.width*this.height),M){const E=this.channels,L=this.toCanvas(),le=g(G,V).getContext("2d");return le.drawImage(L,0,0,G,V),new q(le.getImageData(0,0,G,V).data,G,V,4).convert(E)}else{let E=this.toSharp();switch(O){case"box":case"hamming":(O==="box"||O==="hamming")&&(console.warn(`Resampling method ${O} is not yet supported. Using bilinear instead.`),O="bilinear");case"nearest":case"bilinear":case"bicubic":E=E.affine([G/this.width,0,0,V/this.height],{interpolator:O});break;case"lanczos":E=E.resize({width:G,height:V,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${O} is not supported.`)}return await v(E)}}async pad([G,V,Q,O]){if(G=Math.max(G,0),V=Math.max(V,0),Q=Math.max(Q,0),O=Math.max(O,0),G===0&&V===0&&Q===0&&O===0)return this;if(M){const I=this.channels,b=this.toCanvas(),E=this.width+G+V,L=this.height+Q+O,le=g(E,L).getContext("2d");return le.drawImage(b,0,0,this.width,this.height,G,Q,this.width,this.height),new q(le.getImageData(0,0,E,L).data,E,L,4).convert(I)}else{const I=this.toSharp().extend({left:G,right:V,top:Q,bottom:O});return await v(I)}}async crop([G,V,Q,O]){if(G=Math.max(G,0),V=Math.max(V,0),Q=Math.min(Q,this.width-1),O=Math.min(O,this.height-1),G===0&&V===0&&Q===this.width-1&&O===this.height-1)return this;const I=Q-G+1,b=O-V+1;if(M){const E=this.channels,L=this.toCanvas(),le=g(I,b).getContext("2d");return le.drawImage(L,G,V,I,b,0,0,I,b),new q(le.getImageData(0,0,I,b).data,I,b,4).convert(E)}else{const E=this.toSharp().extract({left:G,top:V,width:I,height:b});return await v(E)}}async center_crop(G,V){if(this.width===G&&this.height===V)return this;const Q=(this.width-G)/2,O=(this.height-V)/2;if(M){const I=this.channels,b=this.toCanvas(),E=g(G,V).getContext("2d");let L=0,le=0,oe=0,Te=0;return Q>=0?L=Q:oe=-Q,O>=0?le=O:Te=-O,E.drawImage(b,L,le,G,V,oe,Te,G,V),new q(E.getImageData(0,0,G,V).data,G,V,4).convert(I)}else{let I=this.toSharp();if(Q>=0&&O>=0)I=I.extract({left:Math.floor(Q),top:Math.floor(O),width:G,height:V});else if(Q<=0&&O<=0){const b=Math.floor(-O),E=Math.floor(-Q);I=I.extend({top:b,left:E,right:G-this.width-E,bottom:V-this.height-b})}else{let b=[0,0],E=0;O<0?(b[0]=Math.floor(-O),b[1]=V-this.height-b[0]):E=Math.floor(O);let L=[0,0],le=0;Q<0?(L[0]=Math.floor(-Q),L[1]=G-this.width-L[0]):le=Math.floor(Q),I=I.extend({top:b[0],bottom:b[1],left:L[0],right:L[1]}).extract({left:le,top:E,width:G,height:V})}return await v(I)}}async toBlob(G="image/png",V=1){if(!M)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:G,quality:V})}toTensor(G="CHW"){let V=new D.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(G!=="HWC")if(G==="CHW")V=V.permute(2,0,1);else throw new Error(`Unsupported channel format: ${G}`);return V}toCanvas(){if(!M)throw new Error("toCanvas() is only supported in browser environments.");const G=this.clone().rgba(),V=g(G.width,G.height),Q=new x(G.data,G.width,G.height);return V.getContext("2d").putImageData(Q,0,0),V}split(){const{data:G,width:V,height:Q,channels:O}=this,I=G.constructor,b=G.length/O,E=Array.from({length:O},()=>new I(b));for(let L=0;L<b;++L){const le=O*L;for(let oe=0;oe<O;++oe)E[oe][L]=G[le+oe]}return E.map(L=>new q(L,V,Q,1))}_update(G,V,Q,O=null){return this.data=G,this.width=V,this.height=Q,O!==null&&(this.channels=O),this}clone(){return new q(this.data.slice(),this.width,this.height,this.channels)}convert(G){if(this.channels===G)return this;switch(G){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(G){if(M){if(A.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const V=G.split(".").pop().toLowerCase(),Q=F.get(V)??"image/png",O=await this.toBlob(Q);(0,p.saveBlob)(G,O)}else{if(A.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(G);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(M)throw new Error("toSharp() is only supported in server-side environments.");return z(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const re=q.read.bind(q)},"./src/utils/maths.js":(te,h,s)=>{s.r(h),s.d(h,{FFT:()=>re,bankers_round:()=>V,cos_sim:()=>g,dot:()=>z,dynamic_time_warping:()=>Q,interpolate_data:()=>p,log_softmax:()=>D,magnitude:()=>x,max:()=>M,medianFilter:()=>ie,min:()=>v,permute_data:()=>w,round:()=>G,softmax:()=>A});function p(O,[I,b,E],[L,le],oe="bilinear",Te=!1){const we=le/E,ne=L/b,Ee=new O.constructor(L*le*I),pe=b*E,ke=L*le;for(let Oe=0;Oe<L;++Oe)for(let Ce=0;Ce<le;++Ce){const tt=Oe*le+Ce,Ge=(Ce+.5)/we-.5,be=(Oe+.5)/ne-.5;let J=Math.floor(Ge),ce=Math.floor(be);const $e=Math.min(J+1,E-1),Be=Math.min(ce+1,b-1);J=Math.max(J,0),ce=Math.max(ce,0);const Je=Ge-J,se=be-ce,Ke=(1-Je)*(1-se),Ue=Je*(1-se),ue=(1-Je)*se,ve=Je*se,Ve=ce*E,We=Be*E,Ne=Ve+J,je=Ve+$e,st=We+J,ut=We+$e;for(let pt=0;pt<I;++pt){const lt=pt*pe;Ee[pt*ke+tt]=Ke*O[lt+Ne]+Ue*O[lt+je]+ue*O[lt+st]+ve*O[lt+ut]}}return Ee}function w(O,I,b){const E=new Array(b.length),L=new Array(b.length);for(let Te=b.length-1,we=1;Te>=0;--Te)L[Te]=we,E[Te]=I[b[Te]],we*=E[Te];const le=b.map((Te,we)=>L[b.indexOf(we)]),oe=new O.constructor(O.length);for(let Te=0;Te<O.length;++Te){let we=0;for(let ne=I.length-1,Ee=Te;ne>=0;--ne)we+=Ee%I[ne]*le[ne],Ee=Math.floor(Ee/I[ne]);oe[we]=O[Te]}return[oe,E]}function A(O){const I=M(O)[0],b=O.map(le=>Math.exp(le-I)),E=b.reduce((le,oe)=>le+oe,0);return b.map(le=>le/E)}function D(O){const I=M(O)[0];let b=0;for(let le=0;le<O.length;++le)b+=Math.exp(O[le]-I);const E=Math.log(b);return O.map(le=>le-I-E)}function z(O,I){let b=0;for(let E=0;E<O.length;++E)b+=O[E]*I[E];return b}function g(O,I){const b=z(O,I),E=x(O),L=x(I);return b/(E*L)}function x(O){return Math.sqrt(O.reduce((I,b)=>I+b*b,0))}function v(O){if(O.length===0)throw Error("Array must not be empty");let I=O[0],b=0;for(let E=1;E<O.length;++E)O[E]<I&&(I=O[E],b=E);return[I,b]}function M(O){if(O.length===0)throw Error("Array must not be empty");let I=O[0],b=0;for(let E=1;E<O.length;++E)O[E]>I&&(I=O[E],b=E);return[I,b]}function T(O){return O>0&&(O&O-1)===0}class F{constructor(I){if(this.size=I|0,this.size<=1||!T(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(this.size*2);for(let E=0;E<this.table.length;E+=2){const L=Math.PI*E/this.size;this.table[E]=Math.cos(L),this.table[E+1]=-Math.sin(L)}let b=0;for(let E=1;this.size>E;E<<=1)++b;this._width=b%2===0?b-1:b,this._bitrev=new Int32Array(1<<this._width);for(let E=0;E<this._bitrev.length;++E){this._bitrev[E]=0;for(let L=0;L<this._width;L+=2){const le=this._width-L-2;this._bitrev[E]|=(E>>>L&3)<<le}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,b){const E=b||new Array(I.length>>>1);for(let L=0;L<I.length;L+=2)E[L>>>1]=I[L];return E}toComplexArray(I,b){const E=b||this.createComplexArray();for(let L=0;L<E.length;L+=2)E[L]=I[L>>>1],E[L+1]=0;return E}transform(I,b){if(I===b)throw new Error("Input and output buffers must be different");this._transform4(I,b,1)}realTransform(I,b){if(I===b)throw new Error("Input and output buffers must be different");this._realTransform4(I,b,1)}inverseTransform(I,b){if(I===b)throw new Error("Input and output buffers must be different");this._transform4(I,b,-1);for(let E=0;E<I.length;++E)I[E]/=this.size}_transform4(I,b,E){const L=this._csize;let oe=1<<this._width,Te=L/oe<<1,we,ne;const Ee=this._bitrev;if(Te===4)for(we=0,ne=0;we<L;we+=Te,++ne){const ke=Ee[ne];this._singleTransform2(b,I,we,ke,oe)}else for(we=0,ne=0;we<L;we+=Te,++ne){const ke=Ee[ne];this._singleTransform4(b,I,we,ke,oe,E)}const pe=this.table;for(oe>>=2;oe>=2;oe>>=2){Te=L/oe<<1;const ke=Te>>>2;for(we=0;we<L;we+=Te){const Oe=we+ke-1;for(let Ce=we,tt=0;Ce<Oe;Ce+=2,tt+=oe){const Ge=Ce,be=Ge+ke,J=be+ke,ce=J+ke,$e=I[Ge],Be=I[Ge+1],Je=I[be],se=I[be+1],Ke=I[J],Ue=I[J+1],ue=I[ce],ve=I[ce+1],Ve=pe[tt],We=E*pe[tt+1],Ne=Je*Ve-se*We,je=Je*We+se*Ve,st=pe[2*tt],ut=E*pe[2*tt+1],pt=Ke*st-Ue*ut,lt=Ke*ut+Ue*st,mt=pe[3*tt],R=E*pe[3*tt+1],ae=ue*mt-ve*R,K=ue*R+ve*mt,me=$e+pt,Se=Be+lt,Re=$e-pt,qe=Be-lt,at=Ne+ae,ct=je+K,vt=E*(Ne-ae),$t=E*(je-K);I[Ge]=me+at,I[Ge+1]=Se+ct,I[be]=Re+$t,I[be+1]=qe-vt,I[J]=me-at,I[J+1]=Se-ct,I[ce]=Re-$t,I[ce+1]=qe+vt}}}}_singleTransform2(I,b,E,L,le){const oe=I[L],Te=I[L+1],we=I[L+le],ne=I[L+le+1];b[E]=oe+we,b[E+1]=Te+ne,b[E+2]=oe-we,b[E+3]=Te-ne}_singleTransform4(I,b,E,L,le,oe){const Te=le*2,we=le*3,ne=I[L],Ee=I[L+1],pe=I[L+le],ke=I[L+le+1],Oe=I[L+Te],Ce=I[L+Te+1],tt=I[L+we],Ge=I[L+we+1],be=ne+Oe,J=Ee+Ce,ce=ne-Oe,$e=Ee-Ce,Be=pe+tt,Je=ke+Ge,se=oe*(pe-tt),Ke=oe*(ke-Ge);b[E]=be+Be,b[E+1]=J+Je,b[E+2]=ce+Ke,b[E+3]=$e-se,b[E+4]=be-Be,b[E+5]=J-Je,b[E+6]=ce-Ke,b[E+7]=$e+se}_realTransform4(I,b,E){const L=this._csize;let oe=1<<this._width,Te=L/oe<<1,we,ne;const Ee=this._bitrev;if(Te===4)for(we=0,ne=0;we<L;we+=Te,++ne){const Oe=Ee[ne];this._singleRealTransform2(b,I,we,Oe>>>1,oe>>>1)}else for(we=0,ne=0;we<L;we+=Te,++ne){const Oe=Ee[ne];this._singleRealTransform4(b,I,we,Oe>>>1,oe>>>1,E)}const pe=this.table;for(oe>>=2;oe>=2;oe>>=2){Te=L/oe<<1;const Oe=Te>>>1,Ce=Oe>>>1,tt=Ce>>>1;for(we=0;we<L;we+=Te)for(let Ge=0,be=0;Ge<=tt;Ge+=2,be+=oe){const J=we+Ge,ce=J+Ce,$e=ce+Ce,Be=$e+Ce,Je=I[J],se=I[J+1],Ke=I[ce],Ue=I[ce+1],ue=I[$e],ve=I[$e+1],Ve=I[Be],We=I[Be+1],Ne=Je,je=se,st=pe[be],ut=E*pe[be+1],pt=Ke*st-Ue*ut,lt=Ke*ut+Ue*st,mt=pe[2*be],R=E*pe[2*be+1],ae=ue*mt-ve*R,K=ue*R+ve*mt,me=pe[3*be],Se=E*pe[3*be+1],Re=Ve*me-We*Se,qe=Ve*Se+We*me,at=Ne+ae,ct=je+K,vt=Ne-ae,$t=je-K,kt=pt+Re,is=lt+qe,bs=E*(pt-Re),$s=E*(lt-qe);if(I[J]=at+kt,I[J+1]=ct+is,I[ce]=vt+$s,I[ce+1]=$t-bs,Ge===0){I[$e]=at-kt,I[$e+1]=ct-is;continue}if(Ge===tt)continue;const Ls=we+Ce-Ge,sr=we+Oe-Ge;I[Ls]=vt-E*$s,I[Ls+1]=-$t-E*bs,I[sr]=at-E*kt,I[sr+1]=-ct+E*is}}const ke=L>>>1;for(let Oe=2;Oe<ke;Oe+=2)I[L-Oe]=I[Oe],I[L-Oe+1]=-I[Oe+1]}_singleRealTransform2(I,b,E,L,le){const oe=I[L],Te=I[L+le];b[E]=oe+Te,b[E+1]=0,b[E+2]=oe-Te,b[E+3]=0}_singleRealTransform4(I,b,E,L,le,oe){const Te=le*2,we=le*3,ne=I[L],Ee=I[L+le],pe=I[L+Te],ke=I[L+we],Oe=ne+pe,Ce=ne-pe,tt=Ee+ke,Ge=oe*(Ee-ke);b[E]=Oe+tt,b[E+1]=0,b[E+2]=Ce,b[E+3]=-Ge,b[E+4]=Oe-tt,b[E+5]=0,b[E+6]=Ce,b[E+7]=Ge}}class q{constructor(I){const b=2*(I-1),E=2*(2*I-1),L=2**Math.ceil(Math.log2(E));this.bufferSize=L,this._a=b;const le=new Float64Array(E),oe=new Float64Array(L);this._chirpBuffer=new Float64Array(L),this._buffer1=new Float64Array(L),this._buffer2=new Float64Array(L),this._outBuffer1=new Float64Array(L),this._outBuffer2=new Float64Array(L);const Te=-2*Math.PI/I,we=Math.cos(Te),ne=Math.sin(Te);for(let Ee=0;Ee<E>>1;++Ee){const pe=(Ee+1-I)**2/2,ke=Math.sqrt(we**2+ne**2)**pe,Oe=pe*Math.atan2(ne,we),Ce=2*Ee;le[Ce]=ke*Math.cos(Oe),le[Ce+1]=ke*Math.sin(Oe),oe[Ce]=le[Ce],oe[Ce+1]=-le[Ce+1]}this._slicedChirpBuffer=le.subarray(b,E),this._f=new F(L>>1),this._f.transform(this._chirpBuffer,oe)}_transform(I,b,E){const L=this._buffer1,le=this._buffer2,oe=this._outBuffer1,Te=this._outBuffer2,we=this._chirpBuffer,ne=this._slicedChirpBuffer,Ee=this._a;if(E)for(let pe=0;pe<ne.length;pe+=2){const ke=pe+1,Oe=pe>>1,Ce=b[Oe];L[pe]=Ce*ne[pe],L[ke]=Ce*ne[ke]}else for(let pe=0;pe<ne.length;pe+=2){const ke=pe+1;L[pe]=b[pe]*ne[pe]-b[ke]*ne[ke],L[ke]=b[pe]*ne[ke]+b[ke]*ne[pe]}this._f.transform(oe,L);for(let pe=0;pe<we.length;pe+=2){const ke=pe+1;le[pe]=oe[pe]*we[pe]-oe[ke]*we[ke],le[ke]=oe[pe]*we[ke]+oe[ke]*we[pe]}this._f.inverseTransform(Te,le);for(let pe=0;pe<Te.length;pe+=2){const ke=Te[pe+Ee],Oe=Te[pe+Ee+1],Ce=ne[pe],tt=ne[pe+1];I[pe]=ke*Ce-Oe*tt,I[pe+1]=ke*tt+Oe*Ce}}transform(I,b){this._transform(I,b,!1)}realTransform(I,b){this._transform(I,b,!0)}}class re{constructor(I){this.fft_length=I,this.isPowerOfTwo=T(I),this.isPowerOfTwo?(this.fft=new F(I),this.outputBufferSize=2*I):(this.fft=new q(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,b){this.fft.realTransform(I,b)}transform(I,b){this.fft.transform(I,b)}}function ie(O,I){if(I%2===0||I<=0)throw new Error("Window size must be a positive odd number");const b=new O.constructor(O.length),E=new O.constructor(I),L=Math.floor(I/2);for(let le=0;le<O.length;++le){let oe=0;for(let Te=-L;Te<=L;++Te){let we=le+Te;we<0?we=Math.abs(we):we>=O.length&&(we=2*(O.length-1)-we),E[oe++]=O[we]}E.sort(),b[le]=E[L]}return b}function G(O,I){const b=Math.pow(10,I);return Math.round(O*b)/b}function V(O){const I=Math.round(O);return Math.abs(O)%1===.5?I%2===0?I:I-1:I}function Q(O){const I=O.length,b=O[0].length,E=[I+1,b+1],L=Array.from({length:E[0]},()=>Array(E[1]).fill(1/0));L[0][0]=0;const le=Array.from({length:E[0]},()=>Array(E[1]).fill(-1));for(let Ee=1;Ee<E[1];++Ee)for(let pe=1;pe<E[0];++pe){const ke=L[pe-1][Ee-1],Oe=L[pe-1][Ee],Ce=L[pe][Ee-1];let tt,Ge;ke<Oe&&ke<Ce?(tt=ke,Ge=0):Oe<ke&&Oe<Ce?(tt=Oe,Ge=1):(tt=Ce,Ge=2),L[pe][Ee]=O[pe-1][Ee-1]+tt,le[pe][Ee]=Ge}for(let Ee=0;Ee<E[1];++Ee)le[0][Ee]=2;for(let Ee=0;Ee<E[0];++Ee)le[Ee][0]=1;let oe=I,Te=b,we=[],ne=[];for(;oe>0||Te>0;)switch(we.push(oe-1),ne.push(Te-1),le[oe][Te]){case 0:--oe,--Te;break;case 1:--oe;break;case 2:--Te;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${oe}, ${Te}]. Please file a bug report.`)}return we.reverse(),ne.reverse(),[we,ne]}},"./src/utils/tensor.js":(te,h,s)=>{s.r(h),s.d(h,{Tensor:()=>z,cat:()=>b,full:()=>ne,full_like:()=>Ee,interpolate:()=>v,interpolate_4d:()=>M,layer_norm:()=>V,matmul:()=>T,mean:()=>oe,mean_pooling:()=>G,ones:()=>pe,ones_like:()=>ke,permute:()=>x,quantize_embeddings:()=>Ge,rand:()=>tt,rfft:()=>F,slice:()=>ie,stack:()=>E,std_mean:()=>le,topk:()=>q,zeros:()=>Oe,zeros_like:()=>Ce});var p=s("./src/utils/maths.js"),w=s("./src/backends/onnx.js"),A=s("./src/ops/registry.js");const D=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class z{constructor(...J){fe(this,"ort_tensor");return(0,w.isONNXTensor)(J[0])?this.ort_tensor=J[0]:this.ort_tensor=new w.Tensor(J[0],J[1],J[2]),new Proxy(this,{get:(ce,$e)=>{if(typeof $e=="string"){let Be=Number($e);if(Number.isInteger(Be))return ce._getitem(Be)}return ce[$e]},set:(ce,$e,Be)=>ce[$e]=Be})}get dims(){return this.ort_tensor.dims}set dims(J){this.ort_tensor.dims=J}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[J,...ce]=this.dims;if(ce.length>0){const $e=ce.reduce((Be,Je)=>Be*Je);for(let Be=0;Be<J;++Be)yield this._subarray(Be,$e,ce)}else yield*this.data}_getitem(J){const[ce,...$e]=this.dims;if(J=I(J,ce),$e.length>0){const Be=$e.reduce((Je,se)=>Je*se);return this._subarray(J,Be,$e)}else return new z(this.type,[this.data[J]],$e)}indexOf(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)if(ce[$e]==J)return $e;return-1}_subarray(J,ce,$e){const Be=J*ce,Je=(J+1)*ce,se="subarray"in this.data?this.data.subarray(Be,Je):this.data.slice(Be,Je);return new z(this.type,se,$e)}item(){const J=this.data;if(J.length!==1)throw new Error(`a Tensor with ${J.length} elements cannot be converted to Scalar`);return J[0]}tolist(){return g(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const J=this.data;for(let ce=0;ce<J.length;++ce)J[ce]=1/(1+Math.exp(-J[ce]));return this}map(J){return this.clone().map_(J)}map_(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)ce[$e]=J(ce[$e],$e,ce);return this}mul(J){return this.clone().mul_(J)}mul_(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)ce[$e]*=J;return this}div(J){return this.clone().div_(J)}div_(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)ce[$e]/=J;return this}add(J){return this.clone().add_(J)}add_(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)ce[$e]+=J;return this}sub(J){return this.clone().sub_(J)}sub_(J){const ce=this.data;for(let $e=0;$e<ce.length;++$e)ce[$e]-=J;return this}clone(){return new z(this.type,this.data.slice(),this.dims.slice())}slice(...J){const ce=[],$e=[];for(let ue=0;ue<this.dims.length;++ue){let ve=J[ue];if(ve==null)$e.push([0,this.dims[ue]]),ce.push(this.dims[ue]);else if(typeof ve=="number")ve=I(ve,this.dims[ue],ue),$e.push([ve,ve+1]);else if(Array.isArray(ve)&&ve.length===2){let[Ve,We]=ve;if(Ve=Ve===null?0:I(Ve,this.dims[ue],ue,!1),We=We===null?this.dims[ue]:I(We,this.dims[ue],ue,!1),Ve>We)throw new Error(`Invalid slice: ${ve}`);const Ne=[Math.max(Ve,0),Math.min(We,this.dims[ue])];$e.push(Ne),ce.push(Ne[1]-Ne[0])}else throw new Error(`Invalid slice: ${ve}`)}const Be=$e.map(([ue,ve])=>ve-ue),Je=Be.reduce((ue,ve)=>ue*ve),se=this.data,Ke=new se.constructor(Je),Ue=this.stride();for(let ue=0;ue<Je;++ue){let ve=0;for(let Ve=Be.length-1,We=ue;Ve>=0;--Ve){const Ne=Be[Ve];ve+=(We%Ne+$e[Ve][0])*Ue[Ve],We=Math.floor(We/Ne)}Ke[ue]=se[ve]}return new z(this.type,Ke,ce)}permute(...J){return x(this,J)}transpose(...J){return this.permute(...J)}sum(J=null,ce=!1){return this.norm(1,J,ce)}norm(J="fro",ce=null,$e=!1){if(J==="fro")J=2;else if(typeof J=="string")throw Error(`Unsupported norm: ${J}`);const Be=this.data,Je=(ue,ve)=>ue+ve**J;if(ce===null){const ue=Be.reduce(Je,0)**(1/J);return new z(this.type,[ue],[])}const[se,Ke,Ue]=L(Je,this,ce,$e);if(J!==1)for(let ue=0;ue<Ke.length;++ue)Ke[ue]=Ke[ue]**(1/J);return new z(se,Ke,Ue)}normalize_(J=2,ce=1){ce=I(ce,this.dims.length);const $e=this.norm(J,ce,!0),Be=this.data,Je=$e.data;for(let se=0;se<Be.length;++se){let Ke=0;for(let Ue=this.dims.length-1,ue=se,ve=1;Ue>=0;--Ue){const Ve=this.dims[Ue];if(Ue!==ce){const We=ue%Ve;Ke+=We*ve,ve*=this.dims[Ue]}ue=Math.floor(ue/Ve)}Be[se]/=Je[Ke]}return this}normalize(J=2,ce=1){return this.clone().normalize_(J,ce)}stride(){return Te(this.dims)}squeeze(J=null){return new z(this.type,this.data,Q(this.dims,J))}squeeze_(J=null){return this.dims=Q(this.dims,J),this}unsqueeze(J=null){return new z(this.type,this.data,O(this.dims,J))}unsqueeze_(J=null){return this.dims=O(this.dims,J),this}flatten_(J=0,ce=-1){ce=(ce+this.dims.length)%this.dims.length;let $e=this.dims.slice(0,J),Be=this.dims.slice(J,ce+1),Je=this.dims.slice(ce+1);return this.dims=[...$e,Be.reduce((se,Ke)=>se*Ke,1),...Je],this}flatten(J=0,ce=-1){return this.clone().flatten_(J,ce)}view(...J){let ce=-1;for(let Be=0;Be<J.length;++Be)if(J[Be]===-1){if(ce!==-1)throw new Error("Only one dimension can be inferred");ce=Be}const $e=this.data;if(ce!==-1){const Be=J.reduce((Je,se,Ke)=>Ke!==ce?Je*se:Je,1);J[ce]=$e.length/Be}return new z(this.type,$e,J)}neg_(){const J=this.data;for(let ce=0;ce<J.length;++ce)J[ce]=-J[ce];return this}neg(){return this.clone().neg_()}gt(J){const ce=new Uint8Array(this.data.length),$e=this.data;for(let Be=0;Be<$e.length;++Be)ce[Be]=$e[Be]>J?1:0;return new z("bool",ce,this.dims)}lt(J){const ce=new Uint8Array(this.data.length),$e=this.data;for(let Be=0;Be<$e.length;++Be)ce[Be]=$e[Be]<J?1:0;return new z("bool",ce,this.dims)}clamp_(J,ce){const $e=this.data;for(let Be=0;Be<$e.length;++Be)$e[Be]=Math.min(Math.max($e[Be],J),ce);return this}clamp(J,ce){return this.clone().clamp_(J,ce)}round_(){const J=this.data;for(let ce=0;ce<J.length;++ce)J[ce]=Math.round(J[ce]);return this}round(){return this.clone().round_()}mean(J=null,ce=!1){return oe(this,J,ce)}min(J=null,ce=!1){if(J===null){const se=(0,p.min)(this.data)[0];return new z(this.type,[se],[])}const[$e,Be,Je]=L((se,Ke)=>Math.min(se,Ke),this,J,ce,1/0);return new z($e,Be,Je)}max(J=null,ce=!1){if(J===null){const se=(0,p.max)(this.data)[0];return new z(this.type,[se],[])}const[$e,Be,Je]=L((se,Ke)=>Math.max(se,Ke),this,J,ce,-1/0);return new z($e,Be,Je)}argmin(J=null,ce=!1){if(J!==null)throw new Error("`dim !== null` not yet implemented.");const $e=(0,p.min)(this.data)[1];return new z("int64",[BigInt($e)],[])}argmax(J=null,ce=!1){if(J!==null)throw new Error("`dim !== null` not yet implemented.");const $e=(0,p.max)(this.data)[1];return new z("int64",[BigInt($e)],[])}to(J){if(this.type===J)return this;if(!D.hasOwnProperty(J))throw new Error(`Unsupported type: ${J}`);let ce;const $e=["int64","uint64"].includes(this.type),Be=["int64","uint64"].includes(J);return $e&&!Be?ce=Number:!$e&&Be&&(ce=BigInt),new z(J,D[J].from(this.data,ce),this.dims)}}function g(be,J){const ce=be.length,$e=J.reduce((Je,se)=>Je*se);if(ce!==$e)throw Error(`cannot reshape array of size ${ce} into shape (${J})`);let Be=be;for(let Je=J.length-1;Je>=0;Je--)Be=Be.reduce((se,Ke)=>{let Ue=se[se.length-1];return Ue.length<J[Je]?Ue.push(Ke):se.push([Ke]),se},[[]]);return Be[0]}function x(be,J){const[ce,$e]=(0,p.permute_data)(be.data,be.dims,J);return new z(be.type,ce,$e)}function v(be,[J,ce],$e="bilinear",Be=!1){const Je=be.dims.at(-3)??1,se=be.dims.at(-2),Ke=be.dims.at(-1);let Ue=(0,p.interpolate_data)(be.data,[Je,se,Ke],[J,ce],$e,Be);return new z(be.type,Ue,[Je,J,ce])}async function M(be,{size:J=null,mode:ce="bilinear"}={}){if(be.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!J)throw new Error("`interpolate_4d` requires a `size` argument.");let $e;if(J.length===2)$e=[...be.dims.slice(0,2),...J];else if(J.length===3)$e=[be.dims[0],...J];else if(J.length===4)$e=J;else throw new Error("`size` must be of length 2, 3, or 4.");let Be;if(ce==="nearest")Be=await A.TensorOpRegistry.nearest_interpolate_4d;else if(ce==="bilinear")Be=await A.TensorOpRegistry.bilinear_interpolate_4d;else if(ce==="bicubic")Be=await A.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${ce}`);const Je=new z("int64",new BigInt64Array($e.map(BigInt)),[$e.length]);return await Be({x:be,s:Je})}async function T(be,J){return await(await A.TensorOpRegistry.matmul)({a:be,b:J})}async function F(be,J){return await(await A.TensorOpRegistry.rfft)({x:be,a:J})}async function q(be,J){const ce=await A.TensorOpRegistry.top_k;return J==null?J=be.dims.at(-1):J=Math.min(J,be.dims.at(-1)),await ce({x:be,k:new z("int64",[BigInt(J)],[1])})}const re=be=>new z("int64",be,[be.length]);async function ie(be,J,ce,$e,Be){return await(await A.TensorOpRegistry.slice)({x:be,s:re(J),e:re(ce),a:re($e),t:re(Be??new Array($e.length).fill(1))})}function G(be,J){const ce=be.data,$e=J.data,Be=[be.dims[0],be.dims[2]],Je=new ce.constructor(Be[0]*Be[1]),[se,Ke,Ue]=be.dims;let ue=0;for(let ve=0;ve<se;++ve){const Ve=ve*Ue*Ke;for(let We=0;We<Ue;++We){let Ne=0,je=0;const st=ve*Ke,ut=Ve+We;for(let lt=0;lt<Ke;++lt){const mt=Number($e[st+lt]);je+=mt,Ne+=ce[ut+lt*Ue]*mt}const pt=Ne/je;Je[ue++]=pt}}return new z(be.type,Je,Be)}function V(be,J,{eps:ce=1e-5}={}){if(be.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[$e,Be]=be.dims;if(J.length!==1&&J[0]!==Be)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Je,se]=le(be,1,0,!0),Ke=Je.data,Ue=se.data,ue=be.data,ve=new ue.constructor(ue.length);for(let Ve=0;Ve<$e;++Ve){const We=Ve*Be;for(let Ne=0;Ne<Be;++Ne){const je=We+Ne;ve[je]=(ue[je]-Ue[Ve])/(Ke[Ve]+ce)}}return new z(be.type,ve,be.dims)}function Q(be,J){return be=be.slice(),J===null?be=be.filter(ce=>ce!==1):typeof J=="number"?be[J]===1&&be.splice(J,1):Array.isArray(J)&&(be=be.filter((ce,$e)=>ce!==1||!J.includes($e))),be}function O(be,J){return J=I(J,be.length+1),be=be.slice(),be.splice(J,0,1),be}function I(be,J,ce=null,$e=!0){if($e&&(be<-J||be>=J))throw new Error(`IndexError: index ${be} is out of bounds for dimension${ce===null?"":" "+ce} with size ${J}`);return be<0&&(be=(be%J+J)%J),be}function b(be,J=0){J=I(J,be[0].dims.length);const ce=be[0].dims.slice();ce[J]=be.reduce((se,Ke)=>se+Ke.dims[J],0);const $e=ce.reduce((se,Ke)=>se*Ke,1),Be=new be[0].data.constructor($e),Je=be[0].type;if(J===0){let se=0;for(const Ke of be){const Ue=Ke.data;Be.set(Ue,se),se+=Ue.length}}else{let se=0;for(let Ke=0;Ke<be.length;++Ke){const{data:Ue,dims:ue}=be[Ke];for(let ve=0;ve<Ue.length;++ve){let Ve=0;for(let We=ue.length-1,Ne=ve,je=1;We>=0;--We){const st=ue[We];let ut=Ne%st;We===J&&(ut+=se),Ve+=ut*je,je*=ce[We],Ne=Math.floor(Ne/st)}Be[Ve]=Ue[ve]}se+=ue[J]}}return new z(Je,Be,ce)}function E(be,J=0){return b(be.map(ce=>ce.unsqueeze(J)),J)}function L(be,J,ce=null,$e=!1,Be=null){const Je=J.data,se=J.dims;ce=I(ce,se.length);const Ke=se.slice();Ke[ce]=1;const Ue=new Je.constructor(Je.length/se[ce]);Be!==null&&Ue.fill(Be);for(let ue=0;ue<Je.length;++ue){let ve=0;for(let Ve=se.length-1,We=ue,Ne=1;Ve>=0;--Ve){const je=se[Ve];if(Ve!==ce){const st=We%je;ve+=st*Ne,Ne*=Ke[Ve]}We=Math.floor(We/je)}Ue[ve]=be(Ue[ve],Je[ue],ue,ve)}return $e||Ke.splice(ce,1),[J.type,Ue,Ke]}function le(be,J=null,ce=1,$e=!1){const Be=be.data,Je=be.dims;if(J===null){const Ne=Be.reduce((pt,lt)=>pt+lt,0)/Be.length,je=Math.sqrt(Be.reduce((pt,lt)=>pt+(lt-Ne)**2,0)/(Be.length-ce)),st=new z(be.type,[Ne],[]);return[new z(be.type,[je],[]),st]}J=I(J,Je.length);const se=oe(be,J,$e),Ke=se.data,[Ue,ue,ve]=L((We,Ne,je,st)=>We+(Ne-Ke[st])**2,be,J,$e);for(let We=0;We<ue.length;++We)ue[We]=Math.sqrt(ue[We]/(Je[J]-ce));return[new z(Ue,ue,ve),se]}function oe(be,J=null,ce=!1){const $e=be.dims,Be=be.data;if(J===null){const Ue=Be.reduce((ue,ve)=>ue+ve,0);return new z(be.type,[Ue/Be.length],[])}J=I(J,$e.length);const[Je,se,Ke]=L((Ue,ue)=>Ue+ue,be,J,ce);if($e[J]!==1)for(let Ue=0;Ue<se.length;++Ue)se[Ue]/=$e[J];return new z(Je,se,Ke)}function Te(be){const J=new Array(be.length);for(let ce=be.length-1,$e=1;ce>=0;--ce)J[ce]=$e,$e*=be[ce];return J}function we(be,J,ce,$e){const Be=be.reduce((Je,se)=>Je*se,1);return new z(ce,new $e(Be).fill(J),be)}function ne(be,J){let ce,$e;if(typeof J=="number")ce="float32",$e=Float32Array;else if(typeof J=="bigint")ce="int64",$e=BigInt64Array;else if(typeof J=="boolean")ce="bool",$e=Uint8Array;else throw new Error(`Unsupported data type: ${typeof J}`);return we(be,J,ce,$e)}function Ee(be,J){return ne(be.dims,J)}function pe(be){return we(be,1n,"int64",BigInt64Array)}function ke(be){return pe(be.dims)}function Oe(be){return we(be,0n,"int64",BigInt64Array)}function Ce(be){return Oe(be.dims)}function tt(be){const J=be.reduce((ce,$e)=>ce*$e,1);return new z("float32",Float32Array.from({length:J},()=>Math.random()),be)}function Ge(be,J){if(be.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(be.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(J))throw new Error("The precision must be either 'binary' or 'ubinary'");const ce=J==="binary",$e=ce?"int8":"uint8",Be=ce?Int8Array:Uint8Array,Je=be.data,se=new Be(Je.length/8);for(let Ke=0;Ke<Je.length;++Ke){const Ue=Je[Ke]>0?1:0,ue=Math.floor(Ke/8),ve=Ke%8;se[ue]|=Ue<<7-ve,ce&&ve===0&&(se[ue]-=128)}return new z($e,se,[be.dims[0],be.dims[1]/8])}}},K_={};function ws(te){var h=K_[te];if(h!==void 0)return h.exports;var s=K_[te]={exports:{}};return ef[te](s,s.exports,ws),s.exports}ws.m=ef;(()=>{var te=Object.getPrototypeOf?s=>Object.getPrototypeOf(s):s=>s.__proto__,h;ws.t=function(s,p){if(p&1&&(s=this(s)),p&8||typeof s=="object"&&s&&(p&4&&s.__esModule||p&16&&typeof s.then=="function"))return s;var w=Object.create(null);ws.r(w);var A={};h=h||[null,te({}),te([]),te(te)];for(var D=p&2&&s;typeof D=="object"&&!~h.indexOf(D);D=te(D))Object.getOwnPropertyNames(D).forEach(z=>A[z]=()=>s[z]);return A.default=()=>s,ws.d(w,A),w}})();ws.d=(te,h)=>{for(var s in h)ws.o(h,s)&&!ws.o(te,s)&&Object.defineProperty(te,s,{enumerable:!0,get:h[s]})};ws.o=(te,h)=>Object.prototype.hasOwnProperty.call(te,h);ws.r=te=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(te,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(te,"__esModule",{value:!0})};(()=>{var te;if(typeof import.meta.url=="string"&&(te=import.meta.url),!te)throw new Error("Automatic publicPath is not supported in this browser");te=te.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),ws.p=te})();ws.b=new URL(import.meta.url);var c={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/ws.r(c),ws.d(c,{ASTFeatureExtractor:()=>v.ASTFeatureExtractor,ASTForAudioClassification:()=>s.ASTForAudioClassification,ASTModel:()=>s.ASTModel,ASTPreTrainedModel:()=>s.ASTPreTrainedModel,AlbertForMaskedLM:()=>s.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>s.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>s.AlbertForSequenceClassification,AlbertModel:()=>s.AlbertModel,AlbertPreTrainedModel:()=>s.AlbertPreTrainedModel,AlbertTokenizer:()=>p.AlbertTokenizer,AudioClassificationPipeline:()=>h.AudioClassificationPipeline,AutoConfig:()=>w.AutoConfig,AutoFeatureExtractor:()=>M.AutoFeatureExtractor,AutoImageProcessor:()=>q.AutoImageProcessor,AutoModel:()=>s.AutoModel,AutoModelForAudioClassification:()=>s.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>s.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>s.AutoModelForCTC,AutoModelForCausalLM:()=>s.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>s.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>s.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>s.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>s.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>s.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>s.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>s.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>s.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>s.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>s.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>s.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>s.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>s.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>s.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>s.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>s.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>s.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>s.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>s.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>s.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>s.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>s.AutoModelForVision2Seq,AutoModelForXVector:()=>s.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>s.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>G.AutoProcessor,AutoTokenizer:()=>p.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>h.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>s.BartForConditionalGeneration,BartForSequenceClassification:()=>s.BartForSequenceClassification,BartModel:()=>s.BartModel,BartPretrainedModel:()=>s.BartPretrainedModel,BartTokenizer:()=>p.BartTokenizer,BaseModelOutput:()=>s.BaseModelOutput,BaseStreamer:()=>V.BaseStreamer,BeitFeatureExtractor:()=>F.BeitFeatureExtractor,BeitForImageClassification:()=>s.BeitForImageClassification,BeitModel:()=>s.BeitModel,BeitPreTrainedModel:()=>s.BeitPreTrainedModel,BertForMaskedLM:()=>s.BertForMaskedLM,BertForQuestionAnswering:()=>s.BertForQuestionAnswering,BertForSequenceClassification:()=>s.BertForSequenceClassification,BertForTokenClassification:()=>s.BertForTokenClassification,BertModel:()=>s.BertModel,BertPreTrainedModel:()=>s.BertPreTrainedModel,BertTokenizer:()=>p.BertTokenizer,BitImageProcessor:()=>F.BitImageProcessor,BlenderbotForConditionalGeneration:()=>s.BlenderbotForConditionalGeneration,BlenderbotModel:()=>s.BlenderbotModel,BlenderbotPreTrainedModel:()=>s.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>s.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>s.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>s.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>p.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>p.BlenderbotTokenizer,BloomForCausalLM:()=>s.BloomForCausalLM,BloomModel:()=>s.BloomModel,BloomPreTrainedModel:()=>s.BloomPreTrainedModel,BloomTokenizer:()=>p.BloomTokenizer,CLIPFeatureExtractor:()=>F.CLIPFeatureExtractor,CLIPImageProcessor:()=>F.CLIPImageProcessor,CLIPModel:()=>s.CLIPModel,CLIPPreTrainedModel:()=>s.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>s.CLIPSegForImageSegmentation,CLIPSegModel:()=>s.CLIPSegModel,CLIPSegPreTrainedModel:()=>s.CLIPSegPreTrainedModel,CLIPTextModel:()=>s.CLIPTextModel,CLIPTextModelWithProjection:()=>s.CLIPTextModelWithProjection,CLIPTokenizer:()=>p.CLIPTokenizer,CLIPVisionModel:()=>s.CLIPVisionModel,CLIPVisionModelWithProjection:()=>s.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>s.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>s.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>s.CamembertForSequenceClassification,CamembertForTokenClassification:()=>s.CamembertForTokenClassification,CamembertModel:()=>s.CamembertModel,CamembertPreTrainedModel:()=>s.CamembertPreTrainedModel,CamembertTokenizer:()=>p.CamembertTokenizer,CausalLMOutput:()=>s.CausalLMOutput,CausalLMOutputWithPast:()=>s.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>F.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>s.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>s.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>s.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>v.ClapFeatureExtractor,ClapModel:()=>s.ClapModel,ClapPreTrainedModel:()=>s.ClapPreTrainedModel,ClapTextModelWithProjection:()=>s.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>O.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>s.CodeGenForCausalLM,CodeGenModel:()=>s.CodeGenModel,CodeGenPreTrainedModel:()=>s.CodeGenPreTrainedModel,CodeGenTokenizer:()=>p.CodeGenTokenizer,CodeLlamaTokenizer:()=>p.CodeLlamaTokenizer,CohereForCausalLM:()=>s.CohereForCausalLM,CohereModel:()=>s.CohereModel,CoherePreTrainedModel:()=>s.CoherePreTrainedModel,CohereTokenizer:()=>p.CohereTokenizer,ConvBertForMaskedLM:()=>s.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>s.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>s.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>s.ConvBertForTokenClassification,ConvBertModel:()=>s.ConvBertModel,ConvBertPreTrainedModel:()=>s.ConvBertPreTrainedModel,ConvBertTokenizer:()=>p.ConvBertTokenizer,ConvNextFeatureExtractor:()=>F.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>s.ConvNextForImageClassification,ConvNextImageProcessor:()=>F.ConvNextImageProcessor,ConvNextModel:()=>s.ConvNextModel,ConvNextPreTrainedModel:()=>s.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>s.ConvNextV2ForImageClassification,ConvNextV2Model:()=>s.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>s.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>F.DPTFeatureExtractor,DPTForDepthEstimation:()=>s.DPTForDepthEstimation,DPTImageProcessor:()=>F.DPTImageProcessor,DPTModel:()=>s.DPTModel,DPTPreTrainedModel:()=>s.DPTPreTrainedModel,DebertaForMaskedLM:()=>s.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>s.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>s.DebertaForSequenceClassification,DebertaForTokenClassification:()=>s.DebertaForTokenClassification,DebertaModel:()=>s.DebertaModel,DebertaPreTrainedModel:()=>s.DebertaPreTrainedModel,DebertaTokenizer:()=>p.DebertaTokenizer,DebertaV2ForMaskedLM:()=>s.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>s.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>s.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>s.DebertaV2ForTokenClassification,DebertaV2Model:()=>s.DebertaV2Model,DebertaV2PreTrainedModel:()=>s.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>p.DebertaV2Tokenizer,DecisionTransformerModel:()=>s.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>s.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>F.DeiTFeatureExtractor,DeiTForImageClassification:()=>s.DeiTForImageClassification,DeiTImageProcessor:()=>F.DeiTImageProcessor,DeiTModel:()=>s.DeiTModel,DeiTPreTrainedModel:()=>s.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>s.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>s.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>h.DepthEstimationPipeline,DepthProForDepthEstimation:()=>s.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>s.DepthProPreTrainedModel,DetrFeatureExtractor:()=>F.DetrFeatureExtractor,DetrForObjectDetection:()=>s.DetrForObjectDetection,DetrForSegmentation:()=>s.DetrForSegmentation,DetrImageProcessor:()=>F.DetrImageProcessor,DetrModel:()=>s.DetrModel,DetrObjectDetectionOutput:()=>s.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>s.DetrPreTrainedModel,DetrSegmentationOutput:()=>s.DetrSegmentationOutput,Dinov2ForImageClassification:()=>s.Dinov2ForImageClassification,Dinov2Model:()=>s.Dinov2Model,Dinov2PreTrainedModel:()=>s.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>s.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>s.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>s.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>s.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>s.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>s.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>s.DistilBertForTokenClassification,DistilBertModel:()=>s.DistilBertModel,DistilBertPreTrainedModel:()=>s.DistilBertPreTrainedModel,DistilBertTokenizer:()=>p.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>h.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>F.DonutFeatureExtractor,DonutImageProcessor:()=>F.DonutImageProcessor,DonutSwinModel:()=>s.DonutSwinModel,DonutSwinPreTrainedModel:()=>s.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>s.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>F.EfficientNetImageProcessor,EfficientNetModel:()=>s.EfficientNetModel,EfficientNetPreTrainedModel:()=>s.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>s.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>s.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>s.ElectraForSequenceClassification,ElectraForTokenClassification:()=>s.ElectraForTokenClassification,ElectraModel:()=>s.ElectraModel,ElectraPreTrainedModel:()=>s.ElectraPreTrainedModel,ElectraTokenizer:()=>p.ElectraTokenizer,EosTokenCriteria:()=>Q.EosTokenCriteria,EsmForMaskedLM:()=>s.EsmForMaskedLM,EsmForSequenceClassification:()=>s.EsmForSequenceClassification,EsmForTokenClassification:()=>s.EsmForTokenClassification,EsmModel:()=>s.EsmModel,EsmPreTrainedModel:()=>s.EsmPreTrainedModel,EsmTokenizer:()=>p.EsmTokenizer,ExaoneForCausalLM:()=>s.ExaoneForCausalLM,ExaoneModel:()=>s.ExaoneModel,ExaonePreTrainedModel:()=>s.ExaonePreTrainedModel,FFT:()=>g.FFT,FalconForCausalLM:()=>s.FalconForCausalLM,FalconModel:()=>s.FalconModel,FalconPreTrainedModel:()=>s.FalconPreTrainedModel,FalconTokenizer:()=>p.FalconTokenizer,FastViTForImageClassification:()=>s.FastViTForImageClassification,FastViTModel:()=>s.FastViTModel,FastViTPreTrainedModel:()=>s.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>h.FeatureExtractionPipeline,FeatureExtractor:()=>x.FeatureExtractor,FillMaskPipeline:()=>h.FillMaskPipeline,Florence2ForConditionalGeneration:()=>s.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>s.Florence2PreTrainedModel,Florence2Processor:()=>ie.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>O.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>O.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>F.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>s.GLPNForDepthEstimation,GLPNModel:()=>s.GLPNModel,GLPNPreTrainedModel:()=>s.GLPNPreTrainedModel,GPT2LMHeadModel:()=>s.GPT2LMHeadModel,GPT2Model:()=>s.GPT2Model,GPT2PreTrainedModel:()=>s.GPT2PreTrainedModel,GPT2Tokenizer:()=>p.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>s.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>s.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>s.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>s.GPTJForCausalLM,GPTJModel:()=>s.GPTJModel,GPTJPreTrainedModel:()=>s.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>s.GPTNeoForCausalLM,GPTNeoModel:()=>s.GPTNeoModel,GPTNeoPreTrainedModel:()=>s.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>s.GPTNeoXForCausalLM,GPTNeoXModel:()=>s.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>s.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>p.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>s.Gemma2ForCausalLM,Gemma2Model:()=>s.Gemma2Model,Gemma2PreTrainedModel:()=>s.Gemma2PreTrainedModel,GemmaForCausalLM:()=>s.GemmaForCausalLM,GemmaModel:()=>s.GemmaModel,GemmaPreTrainedModel:()=>s.GemmaPreTrainedModel,GemmaTokenizer:()=>p.GemmaTokenizer,GlmForCausalLM:()=>s.GlmForCausalLM,GlmModel:()=>s.GlmModel,GlmPreTrainedModel:()=>s.GlmPreTrainedModel,GraniteForCausalLM:()=>s.GraniteForCausalLM,GraniteModel:()=>s.GraniteModel,GranitePreTrainedModel:()=>s.GranitePreTrainedModel,Grok1Tokenizer:()=>p.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>s.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>F.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>s.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>ie.GroundingDinoProcessor,GroupViTModel:()=>s.GroupViTModel,GroupViTPreTrainedModel:()=>s.GroupViTPreTrainedModel,HeliumForCausalLM:()=>s.HeliumForCausalLM,HeliumModel:()=>s.HeliumModel,HeliumPreTrainedModel:()=>s.HeliumPreTrainedModel,HerbertTokenizer:()=>p.HerbertTokenizer,HieraForImageClassification:()=>s.HieraForImageClassification,HieraModel:()=>s.HieraModel,HieraPreTrainedModel:()=>s.HieraPreTrainedModel,HubertForCTC:()=>s.HubertForCTC,HubertForSequenceClassification:()=>s.HubertForSequenceClassification,HubertModel:()=>s.HubertModel,HubertPreTrainedModel:()=>s.HubertPreTrainedModel,IJepaForImageClassification:()=>s.IJepaForImageClassification,IJepaModel:()=>s.IJepaModel,IJepaPreTrainedModel:()=>s.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>s.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>F.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>s.Idefics3PreTrainedModel,Idefics3Processor:()=>ie.Idefics3Processor,ImageClassificationPipeline:()=>h.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>h.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>v.ImageFeatureExtractor,ImageMattingOutput:()=>s.ImageMattingOutput,ImageProcessor:()=>T.ImageProcessor,ImageSegmentationPipeline:()=>h.ImageSegmentationPipeline,ImageToImagePipeline:()=>h.ImageToImagePipeline,ImageToTextPipeline:()=>h.ImageToTextPipeline,InterruptableStoppingCriteria:()=>Q.InterruptableStoppingCriteria,JAISLMHeadModel:()=>s.JAISLMHeadModel,JAISModel:()=>s.JAISModel,JAISPreTrainedModel:()=>s.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>F.JinaCLIPImageProcessor,JinaCLIPModel:()=>s.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>s.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>ie.JinaCLIPProcessor,JinaCLIPTextModel:()=>s.JinaCLIPTextModel,JinaCLIPVisionModel:()=>s.JinaCLIPVisionModel,LlamaForCausalLM:()=>s.LlamaForCausalLM,LlamaModel:()=>s.LlamaModel,LlamaPreTrainedModel:()=>s.LlamaPreTrainedModel,LlamaTokenizer:()=>p.LlamaTokenizer,LlavaForConditionalGeneration:()=>s.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>s.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>F.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>s.LlavaPreTrainedModel,LogitsProcessor:()=>O.LogitsProcessor,LogitsProcessorList:()=>O.LogitsProcessorList,LogitsWarper:()=>O.LogitsWarper,LongT5ForConditionalGeneration:()=>s.LongT5ForConditionalGeneration,LongT5Model:()=>s.LongT5Model,LongT5PreTrainedModel:()=>s.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>s.M2M100ForConditionalGeneration,M2M100Model:()=>s.M2M100Model,M2M100PreTrainedModel:()=>s.M2M100PreTrainedModel,M2M100Tokenizer:()=>p.M2M100Tokenizer,MBart50Tokenizer:()=>p.MBart50Tokenizer,MBartForCausalLM:()=>s.MBartForCausalLM,MBartForConditionalGeneration:()=>s.MBartForConditionalGeneration,MBartForSequenceClassification:()=>s.MBartForSequenceClassification,MBartModel:()=>s.MBartModel,MBartPreTrainedModel:()=>s.MBartPreTrainedModel,MBartTokenizer:()=>p.MBartTokenizer,MPNetForMaskedLM:()=>s.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>s.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>s.MPNetForSequenceClassification,MPNetForTokenClassification:()=>s.MPNetForTokenClassification,MPNetModel:()=>s.MPNetModel,MPNetPreTrainedModel:()=>s.MPNetPreTrainedModel,MPNetTokenizer:()=>p.MPNetTokenizer,MT5ForConditionalGeneration:()=>s.MT5ForConditionalGeneration,MT5Model:()=>s.MT5Model,MT5PreTrainedModel:()=>s.MT5PreTrainedModel,MarianMTModel:()=>s.MarianMTModel,MarianModel:()=>s.MarianModel,MarianPreTrainedModel:()=>s.MarianPreTrainedModel,MarianTokenizer:()=>p.MarianTokenizer,Mask2FormerImageProcessor:()=>F.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>F.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>s.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>F.MaskFormerImageProcessor,MaskFormerModel:()=>s.MaskFormerModel,MaskFormerPreTrainedModel:()=>s.MaskFormerPreTrainedModel,MaskedLMOutput:()=>s.MaskedLMOutput,MaxLengthCriteria:()=>Q.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>s.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>s.MgpstrModelOutput,MgpstrPreTrainedModel:()=>s.MgpstrPreTrainedModel,MgpstrProcessor:()=>ie.MgpstrProcessor,MgpstrTokenizer:()=>p.MgpstrTokenizer,MinLengthLogitsProcessor:()=>O.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>O.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>s.MistralForCausalLM,MistralModel:()=>s.MistralModel,MistralPreTrainedModel:()=>s.MistralPreTrainedModel,MobileBertForMaskedLM:()=>s.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>s.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>s.MobileBertForSequenceClassification,MobileBertModel:()=>s.MobileBertModel,MobileBertPreTrainedModel:()=>s.MobileBertPreTrainedModel,MobileBertTokenizer:()=>p.MobileBertTokenizer,MobileLLMForCausalLM:()=>s.MobileLLMForCausalLM,MobileLLMModel:()=>s.MobileLLMModel,MobileLLMPreTrainedModel:()=>s.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>F.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>s.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>F.MobileNetV1ImageProcessor,MobileNetV1Model:()=>s.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>s.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>F.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>s.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>F.MobileNetV2ImageProcessor,MobileNetV2Model:()=>s.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>s.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>F.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>s.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>F.MobileNetV3ImageProcessor,MobileNetV3Model:()=>s.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>s.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>F.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>s.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>F.MobileNetV4ImageProcessor,MobileNetV4Model:()=>s.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>s.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>F.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>s.MobileViTForImageClassification,MobileViTImageProcessor:()=>F.MobileViTImageProcessor,MobileViTModel:()=>s.MobileViTModel,MobileViTPreTrainedModel:()=>s.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>s.MobileViTV2ForImageClassification,MobileViTV2Model:()=>s.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>s.MobileViTV2PreTrainedModel,ModelOutput:()=>s.ModelOutput,ModernBertForMaskedLM:()=>s.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>s.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>s.ModernBertForTokenClassification,ModernBertModel:()=>s.ModernBertModel,ModernBertPreTrainedModel:()=>s.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>s.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>v.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>s.MoonshineForConditionalGeneration,MoonshineModel:()=>s.MoonshineModel,MoonshinePreTrainedModel:()=>s.MoonshinePreTrainedModel,MoonshineProcessor:()=>ie.MoonshineProcessor,MptForCausalLM:()=>s.MptForCausalLM,MptModel:()=>s.MptModel,MptPreTrainedModel:()=>s.MptPreTrainedModel,MultiModalityCausalLM:()=>s.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>s.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>s.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>s.MusicgenForConditionalGeneration,MusicgenModel:()=>s.MusicgenModel,MusicgenPreTrainedModel:()=>s.MusicgenPreTrainedModel,NllbTokenizer:()=>p.NllbTokenizer,NoBadWordsLogitsProcessor:()=>O.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>O.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>s.NomicBertModel,NomicBertPreTrainedModel:()=>s.NomicBertPreTrainedModel,NougatImageProcessor:()=>F.NougatImageProcessor,NougatTokenizer:()=>p.NougatTokenizer,OPTForCausalLM:()=>s.OPTForCausalLM,OPTModel:()=>s.OPTModel,OPTPreTrainedModel:()=>s.OPTPreTrainedModel,ObjectDetectionPipeline:()=>h.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>s.Olmo2ForCausalLM,Olmo2Model:()=>s.Olmo2Model,Olmo2PreTrainedModel:()=>s.Olmo2PreTrainedModel,OlmoForCausalLM:()=>s.OlmoForCausalLM,OlmoModel:()=>s.OlmoModel,OlmoPreTrainedModel:()=>s.OlmoPreTrainedModel,OpenELMForCausalLM:()=>s.OpenELMForCausalLM,OpenELMModel:()=>s.OpenELMModel,OpenELMPreTrainedModel:()=>s.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>F.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>s.OwlViTForObjectDetection,OwlViTImageProcessor:()=>F.OwlViTImageProcessor,OwlViTModel:()=>s.OwlViTModel,OwlViTPreTrainedModel:()=>s.OwlViTPreTrainedModel,OwlViTProcessor:()=>ie.OwlViTProcessor,Owlv2ForObjectDetection:()=>s.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>F.Owlv2ImageProcessor,Owlv2Model:()=>s.Owlv2Model,Owlv2PreTrainedModel:()=>s.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>s.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>s.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>ie.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>s.PatchTSMixerForPrediction,PatchTSMixerModel:()=>s.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>s.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>s.PatchTSTForPrediction,PatchTSTModel:()=>s.PatchTSTModel,PatchTSTPreTrainedModel:()=>s.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>s.Phi3ForCausalLM,Phi3Model:()=>s.Phi3Model,Phi3PreTrainedModel:()=>s.Phi3PreTrainedModel,Phi3VForCausalLM:()=>s.Phi3VForCausalLM,Phi3VImageProcessor:()=>F.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>s.Phi3VPreTrainedModel,Phi3VProcessor:()=>ie.Phi3VProcessor,PhiForCausalLM:()=>s.PhiForCausalLM,PhiModel:()=>s.PhiModel,PhiPreTrainedModel:()=>s.PhiPreTrainedModel,Pipeline:()=>h.Pipeline,PreTrainedModel:()=>s.PreTrainedModel,PreTrainedTokenizer:()=>p.PreTrainedTokenizer,PretrainedConfig:()=>w.PretrainedConfig,PretrainedMixin:()=>s.PretrainedMixin,Processor:()=>re.Processor,PvtForImageClassification:()=>s.PvtForImageClassification,PvtImageProcessor:()=>F.PvtImageProcessor,PvtModel:()=>s.PvtModel,PvtPreTrainedModel:()=>s.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>v.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>s.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>s.PyAnnoteModel,PyAnnotePreTrainedModel:()=>s.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>ie.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>s.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>h.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>s.Qwen2ForCausalLM,Qwen2Model:()=>s.Qwen2Model,Qwen2PreTrainedModel:()=>s.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>p.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>s.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>F.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>s.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>ie.Qwen2VLProcessor,RTDetrForObjectDetection:()=>s.RTDetrForObjectDetection,RTDetrImageProcessor:()=>F.RTDetrImageProcessor,RTDetrModel:()=>s.RTDetrModel,RTDetrObjectDetectionOutput:()=>s.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>s.RTDetrPreTrainedModel,RawAudio:()=>A.RawAudio,RawImage:()=>D.RawImage,RepetitionPenaltyLogitsProcessor:()=>O.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>s.ResNetForImageClassification,ResNetModel:()=>s.ResNetModel,ResNetPreTrainedModel:()=>s.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>s.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>s.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>s.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>s.RoFormerForTokenClassification,RoFormerModel:()=>s.RoFormerModel,RoFormerPreTrainedModel:()=>s.RoFormerPreTrainedModel,RoFormerTokenizer:()=>p.RoFormerTokenizer,RobertaForMaskedLM:()=>s.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>s.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>s.RobertaForSequenceClassification,RobertaForTokenClassification:()=>s.RobertaForTokenClassification,RobertaModel:()=>s.RobertaModel,RobertaPreTrainedModel:()=>s.RobertaPreTrainedModel,RobertaTokenizer:()=>p.RobertaTokenizer,SamImageProcessor:()=>F.SamImageProcessor,SamImageSegmentationOutput:()=>s.SamImageSegmentationOutput,SamModel:()=>s.SamModel,SamPreTrainedModel:()=>s.SamPreTrainedModel,SamProcessor:()=>ie.SamProcessor,SapiensForDepthEstimation:()=>s.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>s.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>s.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>s.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>v.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>F.SegformerFeatureExtractor,SegformerForImageClassification:()=>s.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>s.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>F.SegformerImageProcessor,SegformerModel:()=>s.SegformerModel,SegformerPreTrainedModel:()=>s.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>s.Seq2SeqLMOutput,SequenceClassifierOutput:()=>s.SequenceClassifierOutput,SiglipImageProcessor:()=>F.SiglipImageProcessor,SiglipModel:()=>s.SiglipModel,SiglipPreTrainedModel:()=>s.SiglipPreTrainedModel,SiglipTextModel:()=>s.SiglipTextModel,SiglipTokenizer:()=>p.SiglipTokenizer,SiglipVisionModel:()=>s.SiglipVisionModel,SpeechT5FeatureExtractor:()=>v.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>s.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>s.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>s.SpeechT5HifiGan,SpeechT5Model:()=>s.SpeechT5Model,SpeechT5PreTrainedModel:()=>s.SpeechT5PreTrainedModel,SpeechT5Processor:()=>ie.SpeechT5Processor,SpeechT5Tokenizer:()=>p.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>s.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>s.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>s.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>s.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>s.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>p.SqueezeBertTokenizer,StableLmForCausalLM:()=>s.StableLmForCausalLM,StableLmModel:()=>s.StableLmModel,StableLmPreTrainedModel:()=>s.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>s.Starcoder2ForCausalLM,Starcoder2Model:()=>s.Starcoder2Model,Starcoder2PreTrainedModel:()=>s.Starcoder2PreTrainedModel,StoppingCriteria:()=>Q.StoppingCriteria,StoppingCriteriaList:()=>Q.StoppingCriteriaList,StyleTextToSpeech2Model:()=>s.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>s.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>h.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>O.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>s.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>F.Swin2SRImageProcessor,Swin2SRModel:()=>s.Swin2SRModel,Swin2SRPreTrainedModel:()=>s.Swin2SRPreTrainedModel,SwinForImageClassification:()=>s.SwinForImageClassification,SwinModel:()=>s.SwinModel,SwinPreTrainedModel:()=>s.SwinPreTrainedModel,T5ForConditionalGeneration:()=>s.T5ForConditionalGeneration,T5Model:()=>s.T5Model,T5PreTrainedModel:()=>s.T5PreTrainedModel,T5Tokenizer:()=>p.T5Tokenizer,TableTransformerForObjectDetection:()=>s.TableTransformerForObjectDetection,TableTransformerModel:()=>s.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>s.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>s.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>O.TemperatureLogitsWarper,Tensor:()=>z.Tensor,Text2TextGenerationPipeline:()=>h.Text2TextGenerationPipeline,TextClassificationPipeline:()=>h.TextClassificationPipeline,TextGenerationPipeline:()=>h.TextGenerationPipeline,TextStreamer:()=>V.TextStreamer,TextToAudioPipeline:()=>h.TextToAudioPipeline,TokenClassificationPipeline:()=>h.TokenClassificationPipeline,TokenClassifierOutput:()=>s.TokenClassifierOutput,TokenizerModel:()=>p.TokenizerModel,TopKLogitsWarper:()=>O.TopKLogitsWarper,TopPLogitsWarper:()=>O.TopPLogitsWarper,TrOCRForCausalLM:()=>s.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>s.TrOCRPreTrainedModel,TranslationPipeline:()=>h.TranslationPipeline,UniSpeechForCTC:()=>s.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>s.UniSpeechForSequenceClassification,UniSpeechModel:()=>s.UniSpeechModel,UniSpeechPreTrainedModel:()=>s.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>s.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>s.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>s.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>s.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>s.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>ie.VLChatProcessor,VLMImageProcessor:()=>F.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTForImageClassification:()=>s.ViTForImageClassification,ViTImageProcessor:()=>F.ViTImageProcessor,ViTMAEModel:()=>s.ViTMAEModel,ViTMAEPreTrainedModel:()=>s.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>s.ViTMSNForImageClassification,ViTMSNModel:()=>s.ViTMSNModel,ViTMSNPreTrainedModel:()=>s.ViTMSNPreTrainedModel,ViTModel:()=>s.ViTModel,ViTPreTrainedModel:()=>s.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>s.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>s.VitMatteForImageMatting,VitMatteImageProcessor:()=>F.VitMatteImageProcessor,VitMattePreTrainedModel:()=>s.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>s.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>F.VitPoseImageProcessor,VitPosePreTrainedModel:()=>s.VitPosePreTrainedModel,VitsModel:()=>s.VitsModel,VitsModelOutput:()=>s.VitsModelOutput,VitsPreTrainedModel:()=>s.VitsPreTrainedModel,VitsTokenizer:()=>p.VitsTokenizer,Wav2Vec2BertForCTC:()=>s.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>s.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>s.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>s.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>p.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>v.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>s.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>s.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>s.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>s.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>s.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>ie.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>ie.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>s.WavLMForAudioFrameClassification,WavLMForCTC:()=>s.WavLMForCTC,WavLMForSequenceClassification:()=>s.WavLMForSequenceClassification,WavLMForXVector:()=>s.WavLMForXVector,WavLMModel:()=>s.WavLMModel,WavLMPreTrainedModel:()=>s.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>v.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>s.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>s.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>v.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>s.WhisperForConditionalGeneration,WhisperModel:()=>s.WhisperModel,WhisperPreTrainedModel:()=>s.WhisperPreTrainedModel,WhisperProcessor:()=>ie.WhisperProcessor,WhisperTextStreamer:()=>V.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>O.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>p.WhisperTokenizer,XLMForQuestionAnswering:()=>s.XLMForQuestionAnswering,XLMForSequenceClassification:()=>s.XLMForSequenceClassification,XLMForTokenClassification:()=>s.XLMForTokenClassification,XLMModel:()=>s.XLMModel,XLMPreTrainedModel:()=>s.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>s.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>s.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>s.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>s.XLMRobertaForTokenClassification,XLMRobertaModel:()=>s.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>s.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>p.XLMRobertaTokenizer,XLMTokenizer:()=>p.XLMTokenizer,XLMWithLMHeadModel:()=>s.XLMWithLMHeadModel,XVectorOutput:()=>s.XVectorOutput,YolosFeatureExtractor:()=>F.YolosFeatureExtractor,YolosForObjectDetection:()=>s.YolosForObjectDetection,YolosImageProcessor:()=>F.YolosImageProcessor,YolosModel:()=>s.YolosModel,YolosObjectDetectionOutput:()=>s.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>s.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>h.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>h.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>h.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>h.ZeroShotObjectDetectionPipeline,bankers_round:()=>g.bankers_round,cat:()=>z.cat,cos_sim:()=>g.cos_sim,dot:()=>g.dot,dynamic_time_warping:()=>g.dynamic_time_warping,env:()=>te.env,full:()=>z.full,full_like:()=>z.full_like,getKeyValueShapes:()=>w.getKeyValueShapes,hamming:()=>A.hamming,hanning:()=>A.hanning,interpolate:()=>z.interpolate,interpolate_4d:()=>z.interpolate_4d,interpolate_data:()=>g.interpolate_data,is_chinese_char:()=>p.is_chinese_char,layer_norm:()=>z.layer_norm,load_image:()=>D.load_image,log_softmax:()=>g.log_softmax,magnitude:()=>g.magnitude,matmul:()=>z.matmul,max:()=>g.max,mean:()=>z.mean,mean_pooling:()=>z.mean_pooling,medianFilter:()=>g.medianFilter,mel_filter_bank:()=>A.mel_filter_bank,min:()=>g.min,ones:()=>z.ones,ones_like:()=>z.ones_like,permute:()=>z.permute,permute_data:()=>g.permute_data,pipeline:()=>h.pipeline,quantize_embeddings:()=>z.quantize_embeddings,rand:()=>z.rand,read_audio:()=>A.read_audio,rfft:()=>z.rfft,round:()=>g.round,slice:()=>z.slice,softmax:()=>g.softmax,spectrogram:()=>A.spectrogram,stack:()=>z.stack,std_mean:()=>z.std_mean,topk:()=>z.topk,window_function:()=>A.window_function,zeros:()=>z.zeros,zeros_like:()=>z.zeros_like});var te=ws("./src/env.js"),h=ws("./src/pipelines.js"),s=ws("./src/models.js"),p=ws("./src/tokenizers.js"),w=ws("./src/configs.js"),A=ws("./src/utils/audio.js"),D=ws("./src/utils/image.js"),z=ws("./src/utils/tensor.js"),g=ws("./src/utils/maths.js"),x=ws("./src/base/feature_extraction_utils.js"),v=ws("./src/models/feature_extractors.js"),M=ws("./src/models/auto/feature_extraction_auto.js"),T=ws("./src/base/image_processors_utils.js"),F=ws("./src/models/image_processors.js"),q=ws("./src/models/auto/image_processing_auto.js"),re=ws("./src/base/processing_utils.js"),ie=ws("./src/models/processors.js"),G=ws("./src/models/auto/processing_auto.js"),V=ws("./src/generation/streamers.js"),Q=ws("./src/generation/stopping_criteria.js"),O=ws("./src/generation/logits_process.js")})();c.ASTFeatureExtractor;c.ASTForAudioClassification;c.ASTModel;c.ASTPreTrainedModel;c.AlbertForMaskedLM;c.AlbertForQuestionAnswering;c.AlbertForSequenceClassification;c.AlbertModel;c.AlbertPreTrainedModel;c.AlbertTokenizer;c.AudioClassificationPipeline;c.AutoConfig;c.AutoFeatureExtractor;c.AutoImageProcessor;c.AutoModel;c.AutoModelForAudioClassification;c.AutoModelForAudioFrameClassification;c.AutoModelForCTC;c.AutoModelForCausalLM;c.AutoModelForDepthEstimation;c.AutoModelForDocumentQuestionAnswering;c.AutoModelForImageClassification;c.AutoModelForImageFeatureExtraction;c.AutoModelForImageMatting;c.AutoModelForImageSegmentation;c.AutoModelForImageToImage;c.AutoModelForMaskGeneration;c.AutoModelForMaskedLM;c.AutoModelForNormalEstimation;c.AutoModelForObjectDetection;c.AutoModelForPoseEstimation;c.AutoModelForQuestionAnswering;c.AutoModelForSemanticSegmentation;c.AutoModelForSeq2SeqLM;c.AutoModelForSequenceClassification;c.AutoModelForSpeechSeq2Seq;c.AutoModelForTextToSpectrogram;c.AutoModelForTextToWaveform;c.AutoModelForTokenClassification;c.AutoModelForUniversalSegmentation;c.AutoModelForVision2Seq;c.AutoModelForXVector;c.AutoModelForZeroShotObjectDetection;c.AutoProcessor;c.AutoTokenizer;c.AutomaticSpeechRecognitionPipeline;c.BartForConditionalGeneration;c.BartForSequenceClassification;c.BartModel;c.BartPretrainedModel;c.BartTokenizer;c.BaseModelOutput;c.BaseStreamer;c.BeitFeatureExtractor;c.BeitForImageClassification;c.BeitModel;c.BeitPreTrainedModel;c.BertForMaskedLM;c.BertForQuestionAnswering;c.BertForSequenceClassification;c.BertForTokenClassification;c.BertModel;c.BertPreTrainedModel;c.BertTokenizer;c.BitImageProcessor;c.BlenderbotForConditionalGeneration;c.BlenderbotModel;c.BlenderbotPreTrainedModel;c.BlenderbotSmallForConditionalGeneration;c.BlenderbotSmallModel;c.BlenderbotSmallPreTrainedModel;c.BlenderbotSmallTokenizer;c.BlenderbotTokenizer;c.BloomForCausalLM;c.BloomModel;c.BloomPreTrainedModel;c.BloomTokenizer;c.CLIPFeatureExtractor;c.CLIPImageProcessor;c.CLIPModel;c.CLIPPreTrainedModel;c.CLIPSegForImageSegmentation;c.CLIPSegModel;c.CLIPSegPreTrainedModel;c.CLIPTextModel;c.CLIPTextModelWithProjection;c.CLIPTokenizer;c.CLIPVisionModel;c.CLIPVisionModelWithProjection;c.CamembertForMaskedLM;c.CamembertForQuestionAnswering;c.CamembertForSequenceClassification;c.CamembertForTokenClassification;c.CamembertModel;c.CamembertPreTrainedModel;c.CamembertTokenizer;c.CausalLMOutput;c.CausalLMOutputWithPast;c.ChineseCLIPFeatureExtractor;c.ChineseCLIPModel;c.ChineseCLIPPreTrainedModel;c.ClapAudioModelWithProjection;c.ClapFeatureExtractor;c.ClapModel;c.ClapPreTrainedModel;c.ClapTextModelWithProjection;c.ClassifierFreeGuidanceLogitsProcessor;c.CodeGenForCausalLM;c.CodeGenModel;c.CodeGenPreTrainedModel;c.CodeGenTokenizer;c.CodeLlamaTokenizer;c.CohereForCausalLM;c.CohereModel;c.CoherePreTrainedModel;c.CohereTokenizer;c.ConvBertForMaskedLM;c.ConvBertForQuestionAnswering;c.ConvBertForSequenceClassification;c.ConvBertForTokenClassification;c.ConvBertModel;c.ConvBertPreTrainedModel;c.ConvBertTokenizer;c.ConvNextFeatureExtractor;c.ConvNextForImageClassification;c.ConvNextImageProcessor;c.ConvNextModel;c.ConvNextPreTrainedModel;c.ConvNextV2ForImageClassification;c.ConvNextV2Model;c.ConvNextV2PreTrainedModel;c.DPTFeatureExtractor;c.DPTForDepthEstimation;c.DPTImageProcessor;c.DPTModel;c.DPTPreTrainedModel;c.DebertaForMaskedLM;c.DebertaForQuestionAnswering;c.DebertaForSequenceClassification;c.DebertaForTokenClassification;c.DebertaModel;c.DebertaPreTrainedModel;c.DebertaTokenizer;c.DebertaV2ForMaskedLM;c.DebertaV2ForQuestionAnswering;c.DebertaV2ForSequenceClassification;c.DebertaV2ForTokenClassification;c.DebertaV2Model;c.DebertaV2PreTrainedModel;c.DebertaV2Tokenizer;c.DecisionTransformerModel;c.DecisionTransformerPreTrainedModel;c.DeiTFeatureExtractor;c.DeiTForImageClassification;c.DeiTImageProcessor;c.DeiTModel;c.DeiTPreTrainedModel;c.DepthAnythingForDepthEstimation;c.DepthAnythingPreTrainedModel;c.DepthEstimationPipeline;c.DepthProForDepthEstimation;c.DepthProPreTrainedModel;c.DetrFeatureExtractor;c.DetrForObjectDetection;c.DetrForSegmentation;c.DetrImageProcessor;c.DetrModel;c.DetrObjectDetectionOutput;c.DetrPreTrainedModel;c.DetrSegmentationOutput;c.Dinov2ForImageClassification;c.Dinov2Model;c.Dinov2PreTrainedModel;c.Dinov2WithRegistersForImageClassification;c.Dinov2WithRegistersModel;c.Dinov2WithRegistersPreTrainedModel;c.DistilBertForMaskedLM;c.DistilBertForQuestionAnswering;c.DistilBertForSequenceClassification;c.DistilBertForTokenClassification;c.DistilBertModel;c.DistilBertPreTrainedModel;c.DistilBertTokenizer;c.DocumentQuestionAnsweringPipeline;c.DonutFeatureExtractor;c.DonutImageProcessor;c.DonutSwinModel;c.DonutSwinPreTrainedModel;c.EfficientNetForImageClassification;c.EfficientNetImageProcessor;c.EfficientNetModel;c.EfficientNetPreTrainedModel;c.ElectraForMaskedLM;c.ElectraForQuestionAnswering;c.ElectraForSequenceClassification;c.ElectraForTokenClassification;c.ElectraModel;c.ElectraPreTrainedModel;c.ElectraTokenizer;c.EosTokenCriteria;c.EsmForMaskedLM;c.EsmForSequenceClassification;c.EsmForTokenClassification;c.EsmModel;c.EsmPreTrainedModel;c.EsmTokenizer;c.ExaoneForCausalLM;c.ExaoneModel;c.ExaonePreTrainedModel;c.FFT;c.FalconForCausalLM;c.FalconModel;c.FalconPreTrainedModel;c.FalconTokenizer;c.FastViTForImageClassification;c.FastViTModel;c.FastViTPreTrainedModel;c.FeatureExtractionPipeline;c.FeatureExtractor;c.FillMaskPipeline;c.Florence2ForConditionalGeneration;c.Florence2PreTrainedModel;c.Florence2Processor;c.ForcedBOSTokenLogitsProcessor;c.ForcedEOSTokenLogitsProcessor;c.GLPNFeatureExtractor;c.GLPNForDepthEstimation;c.GLPNModel;c.GLPNPreTrainedModel;c.GPT2LMHeadModel;c.GPT2Model;c.GPT2PreTrainedModel;c.GPT2Tokenizer;c.GPTBigCodeForCausalLM;c.GPTBigCodeModel;c.GPTBigCodePreTrainedModel;c.GPTJForCausalLM;c.GPTJModel;c.GPTJPreTrainedModel;c.GPTNeoForCausalLM;c.GPTNeoModel;c.GPTNeoPreTrainedModel;c.GPTNeoXForCausalLM;c.GPTNeoXModel;c.GPTNeoXPreTrainedModel;c.GPTNeoXTokenizer;c.Gemma2ForCausalLM;c.Gemma2Model;c.Gemma2PreTrainedModel;c.GemmaForCausalLM;c.GemmaModel;c.GemmaPreTrainedModel;c.GemmaTokenizer;c.GlmForCausalLM;c.GlmModel;c.GlmPreTrainedModel;c.GraniteForCausalLM;c.GraniteModel;c.GranitePreTrainedModel;c.Grok1Tokenizer;c.GroundingDinoForObjectDetection;c.GroundingDinoImageProcessor;c.GroundingDinoPreTrainedModel;c.GroundingDinoProcessor;c.GroupViTModel;c.GroupViTPreTrainedModel;c.HeliumForCausalLM;c.HeliumModel;c.HeliumPreTrainedModel;c.HerbertTokenizer;c.HieraForImageClassification;c.HieraModel;c.HieraPreTrainedModel;c.HubertForCTC;c.HubertForSequenceClassification;c.HubertModel;c.HubertPreTrainedModel;c.IJepaForImageClassification;c.IJepaModel;c.IJepaPreTrainedModel;c.Idefics3ForConditionalGeneration;c.Idefics3ImageProcessor;c.Idefics3PreTrainedModel;c.Idefics3Processor;c.ImageClassificationPipeline;c.ImageFeatureExtractionPipeline;c.ImageFeatureExtractor;c.ImageMattingOutput;c.ImageProcessor;c.ImageSegmentationPipeline;c.ImageToImagePipeline;c.ImageToTextPipeline;c.InterruptableStoppingCriteria;c.JAISLMHeadModel;c.JAISModel;c.JAISPreTrainedModel;c.JinaCLIPImageProcessor;c.JinaCLIPModel;c.JinaCLIPPreTrainedModel;c.JinaCLIPProcessor;c.JinaCLIPTextModel;c.JinaCLIPVisionModel;c.LlamaForCausalLM;c.LlamaModel;c.LlamaPreTrainedModel;c.LlamaTokenizer;c.LlavaForConditionalGeneration;c.LlavaOnevisionForConditionalGeneration;c.LlavaOnevisionImageProcessor;c.LlavaPreTrainedModel;c.LogitsProcessor;c.LogitsProcessorList;c.LogitsWarper;c.LongT5ForConditionalGeneration;c.LongT5Model;c.LongT5PreTrainedModel;c.M2M100ForConditionalGeneration;c.M2M100Model;c.M2M100PreTrainedModel;c.M2M100Tokenizer;c.MBart50Tokenizer;c.MBartForCausalLM;c.MBartForConditionalGeneration;c.MBartForSequenceClassification;c.MBartModel;c.MBartPreTrainedModel;c.MBartTokenizer;c.MPNetForMaskedLM;c.MPNetForQuestionAnswering;c.MPNetForSequenceClassification;c.MPNetForTokenClassification;c.MPNetModel;c.MPNetPreTrainedModel;c.MPNetTokenizer;c.MT5ForConditionalGeneration;c.MT5Model;c.MT5PreTrainedModel;c.MarianMTModel;c.MarianModel;c.MarianPreTrainedModel;c.MarianTokenizer;c.Mask2FormerImageProcessor;c.MaskFormerFeatureExtractor;c.MaskFormerForInstanceSegmentation;c.MaskFormerImageProcessor;c.MaskFormerModel;c.MaskFormerPreTrainedModel;c.MaskedLMOutput;c.MaxLengthCriteria;c.MgpstrForSceneTextRecognition;c.MgpstrModelOutput;c.MgpstrPreTrainedModel;c.MgpstrProcessor;c.MgpstrTokenizer;c.MinLengthLogitsProcessor;c.MinNewTokensLengthLogitsProcessor;c.MistralForCausalLM;c.MistralModel;c.MistralPreTrainedModel;c.MobileBertForMaskedLM;c.MobileBertForQuestionAnswering;c.MobileBertForSequenceClassification;c.MobileBertModel;c.MobileBertPreTrainedModel;c.MobileBertTokenizer;c.MobileLLMForCausalLM;c.MobileLLMModel;c.MobileLLMPreTrainedModel;c.MobileNetV1FeatureExtractor;c.MobileNetV1ForImageClassification;c.MobileNetV1ImageProcessor;c.MobileNetV1Model;c.MobileNetV1PreTrainedModel;c.MobileNetV2FeatureExtractor;c.MobileNetV2ForImageClassification;c.MobileNetV2ImageProcessor;c.MobileNetV2Model;c.MobileNetV2PreTrainedModel;c.MobileNetV3FeatureExtractor;c.MobileNetV3ForImageClassification;c.MobileNetV3ImageProcessor;c.MobileNetV3Model;c.MobileNetV3PreTrainedModel;c.MobileNetV4FeatureExtractor;c.MobileNetV4ForImageClassification;c.MobileNetV4ImageProcessor;c.MobileNetV4Model;c.MobileNetV4PreTrainedModel;c.MobileViTFeatureExtractor;c.MobileViTForImageClassification;c.MobileViTImageProcessor;c.MobileViTModel;c.MobileViTPreTrainedModel;c.MobileViTV2ForImageClassification;c.MobileViTV2Model;c.MobileViTV2PreTrainedModel;c.ModelOutput;c.ModernBertForMaskedLM;c.ModernBertForSequenceClassification;c.ModernBertForTokenClassification;c.ModernBertModel;c.ModernBertPreTrainedModel;c.Moondream1ForConditionalGeneration;c.MoonshineFeatureExtractor;c.MoonshineForConditionalGeneration;c.MoonshineModel;c.MoonshinePreTrainedModel;c.MoonshineProcessor;c.MptForCausalLM;c.MptModel;c.MptPreTrainedModel;c.MultiModalityCausalLM;c.MultiModalityPreTrainedModel;c.MusicgenForCausalLM;c.MusicgenForConditionalGeneration;c.MusicgenModel;c.MusicgenPreTrainedModel;c.NllbTokenizer;c.NoBadWordsLogitsProcessor;c.NoRepeatNGramLogitsProcessor;c.NomicBertModel;c.NomicBertPreTrainedModel;c.NougatImageProcessor;c.NougatTokenizer;c.OPTForCausalLM;c.OPTModel;c.OPTPreTrainedModel;c.ObjectDetectionPipeline;c.Olmo2ForCausalLM;c.Olmo2Model;c.Olmo2PreTrainedModel;c.OlmoForCausalLM;c.OlmoModel;c.OlmoPreTrainedModel;c.OpenELMForCausalLM;c.OpenELMModel;c.OpenELMPreTrainedModel;c.OwlViTFeatureExtractor;c.OwlViTForObjectDetection;c.OwlViTImageProcessor;c.OwlViTModel;c.OwlViTPreTrainedModel;c.OwlViTProcessor;c.Owlv2ForObjectDetection;c.Owlv2ImageProcessor;c.Owlv2Model;c.Owlv2PreTrainedModel;c.PaliGemmaForConditionalGeneration;c.PaliGemmaPreTrainedModel;c.PaliGemmaProcessor;c.PatchTSMixerForPrediction;c.PatchTSMixerModel;c.PatchTSMixerPreTrainedModel;c.PatchTSTForPrediction;c.PatchTSTModel;c.PatchTSTPreTrainedModel;c.Phi3ForCausalLM;c.Phi3Model;c.Phi3PreTrainedModel;c.Phi3VForCausalLM;c.Phi3VImageProcessor;c.Phi3VPreTrainedModel;c.Phi3VProcessor;c.PhiForCausalLM;c.PhiModel;c.PhiPreTrainedModel;c.Pipeline;c.PreTrainedModel;c.PreTrainedTokenizer;c.PretrainedConfig;c.PretrainedMixin;c.Processor;c.PvtForImageClassification;c.PvtImageProcessor;c.PvtModel;c.PvtPreTrainedModel;c.PyAnnoteFeatureExtractor;c.PyAnnoteForAudioFrameClassification;c.PyAnnoteModel;c.PyAnnotePreTrainedModel;c.PyAnnoteProcessor;c.QuestionAnsweringModelOutput;c.QuestionAnsweringPipeline;c.Qwen2ForCausalLM;c.Qwen2Model;c.Qwen2PreTrainedModel;c.Qwen2Tokenizer;c.Qwen2VLForConditionalGeneration;c.Qwen2VLImageProcessor;c.Qwen2VLPreTrainedModel;c.Qwen2VLProcessor;c.RTDetrForObjectDetection;c.RTDetrImageProcessor;c.RTDetrModel;c.RTDetrObjectDetectionOutput;c.RTDetrPreTrainedModel;c.RawAudio;c.RawImage;c.RepetitionPenaltyLogitsProcessor;c.ResNetForImageClassification;c.ResNetModel;c.ResNetPreTrainedModel;c.RoFormerForMaskedLM;c.RoFormerForQuestionAnswering;c.RoFormerForSequenceClassification;c.RoFormerForTokenClassification;c.RoFormerModel;c.RoFormerPreTrainedModel;c.RoFormerTokenizer;c.RobertaForMaskedLM;c.RobertaForQuestionAnswering;c.RobertaForSequenceClassification;c.RobertaForTokenClassification;c.RobertaModel;c.RobertaPreTrainedModel;c.RobertaTokenizer;c.SamImageProcessor;c.SamImageSegmentationOutput;c.SamModel;c.SamPreTrainedModel;c.SamProcessor;c.SapiensForDepthEstimation;c.SapiensForNormalEstimation;c.SapiensForSemanticSegmentation;c.SapiensPreTrainedModel;c.SeamlessM4TFeatureExtractor;c.SegformerFeatureExtractor;c.SegformerForImageClassification;c.SegformerForSemanticSegmentation;c.SegformerImageProcessor;c.SegformerModel;c.SegformerPreTrainedModel;c.Seq2SeqLMOutput;c.SequenceClassifierOutput;c.SiglipImageProcessor;c.SiglipModel;c.SiglipPreTrainedModel;c.SiglipTextModel;c.SiglipTokenizer;c.SiglipVisionModel;c.SpeechT5FeatureExtractor;c.SpeechT5ForSpeechToText;c.SpeechT5ForTextToSpeech;c.SpeechT5HifiGan;c.SpeechT5Model;c.SpeechT5PreTrainedModel;c.SpeechT5Processor;c.SpeechT5Tokenizer;c.SqueezeBertForMaskedLM;c.SqueezeBertForQuestionAnswering;c.SqueezeBertForSequenceClassification;c.SqueezeBertModel;c.SqueezeBertPreTrainedModel;c.SqueezeBertTokenizer;c.StableLmForCausalLM;c.StableLmModel;c.StableLmPreTrainedModel;c.Starcoder2ForCausalLM;c.Starcoder2Model;c.Starcoder2PreTrainedModel;c.StoppingCriteria;c.StoppingCriteriaList;c.StyleTextToSpeech2Model;c.StyleTextToSpeech2PreTrainedModel;c.SummarizationPipeline;c.SuppressTokensAtBeginLogitsProcessor;c.Swin2SRForImageSuperResolution;c.Swin2SRImageProcessor;c.Swin2SRModel;c.Swin2SRPreTrainedModel;c.SwinForImageClassification;c.SwinModel;c.SwinPreTrainedModel;c.T5ForConditionalGeneration;c.T5Model;c.T5PreTrainedModel;c.T5Tokenizer;c.TableTransformerForObjectDetection;c.TableTransformerModel;c.TableTransformerObjectDetectionOutput;c.TableTransformerPreTrainedModel;c.TemperatureLogitsWarper;c.Tensor;c.Text2TextGenerationPipeline;c.TextClassificationPipeline;c.TextGenerationPipeline;c.TextStreamer;c.TextToAudioPipeline;c.TokenClassificationPipeline;c.TokenClassifierOutput;c.TokenizerModel;c.TopKLogitsWarper;c.TopPLogitsWarper;c.TrOCRForCausalLM;c.TrOCRPreTrainedModel;c.TranslationPipeline;c.UniSpeechForCTC;c.UniSpeechForSequenceClassification;c.UniSpeechModel;c.UniSpeechPreTrainedModel;c.UniSpeechSatForAudioFrameClassification;c.UniSpeechSatForCTC;c.UniSpeechSatForSequenceClassification;c.UniSpeechSatModel;c.UniSpeechSatPreTrainedModel;c.VLChatProcessor;c.VLMImageProcessor;c.ViTFeatureExtractor;c.ViTForImageClassification;c.ViTImageProcessor;c.ViTMAEModel;c.ViTMAEPreTrainedModel;c.ViTMSNForImageClassification;c.ViTMSNModel;c.ViTMSNPreTrainedModel;c.ViTModel;c.ViTPreTrainedModel;c.VisionEncoderDecoderModel;c.VitMatteForImageMatting;c.VitMatteImageProcessor;c.VitMattePreTrainedModel;c.VitPoseForPoseEstimation;c.VitPoseImageProcessor;c.VitPosePreTrainedModel;c.VitsModel;c.VitsModelOutput;c.VitsPreTrainedModel;c.VitsTokenizer;c.Wav2Vec2BertForCTC;c.Wav2Vec2BertForSequenceClassification;c.Wav2Vec2BertModel;c.Wav2Vec2BertPreTrainedModel;c.Wav2Vec2CTCTokenizer;c.Wav2Vec2FeatureExtractor;c.Wav2Vec2ForAudioFrameClassification;c.Wav2Vec2ForCTC;c.Wav2Vec2ForSequenceClassification;c.Wav2Vec2Model;c.Wav2Vec2PreTrainedModel;c.Wav2Vec2Processor;c.Wav2Vec2ProcessorWithLM;c.WavLMForAudioFrameClassification;c.WavLMForCTC;c.WavLMForSequenceClassification;c.WavLMForXVector;c.WavLMModel;c.WavLMPreTrainedModel;c.WeSpeakerFeatureExtractor;c.WeSpeakerResNetModel;c.WeSpeakerResNetPreTrainedModel;c.WhisperFeatureExtractor;c.WhisperForConditionalGeneration;c.WhisperModel;c.WhisperPreTrainedModel;c.WhisperProcessor;c.WhisperTextStreamer;c.WhisperTimeStampLogitsProcessor;c.WhisperTokenizer;c.XLMForQuestionAnswering;c.XLMForSequenceClassification;c.XLMForTokenClassification;c.XLMModel;c.XLMPreTrainedModel;c.XLMRobertaForMaskedLM;c.XLMRobertaForQuestionAnswering;c.XLMRobertaForSequenceClassification;c.XLMRobertaForTokenClassification;c.XLMRobertaModel;c.XLMRobertaPreTrainedModel;c.XLMRobertaTokenizer;c.XLMTokenizer;c.XLMWithLMHeadModel;c.XVectorOutput;c.YolosFeatureExtractor;c.YolosForObjectDetection;c.YolosImageProcessor;c.YolosModel;c.YolosObjectDetectionOutput;c.YolosPreTrainedModel;c.ZeroShotAudioClassificationPipeline;c.ZeroShotClassificationPipeline;c.ZeroShotImageClassificationPipeline;c.ZeroShotObjectDetectionPipeline;c.bankers_round;c.cat;c.cos_sim;c.dot;c.dynamic_time_warping;var Yg=c.env;c.full;c.full_like;c.getKeyValueShapes;c.hamming;c.hanning;c.interpolate;c.interpolate_4d;c.interpolate_data;c.is_chinese_char;c.layer_norm;c.load_image;c.log_softmax;c.magnitude;c.matmul;c.max;c.mean;c.mean_pooling;c.medianFilter;c.mel_filter_bank;c.min;c.ones;c.ones_like;c.permute;c.permute_data;var Jg=c.pipeline;c.quantize_embeddings;c.rand;c.read_audio;c.rfft;c.round;c.slice;c.softmax;c.spectrogram;c.stack;c.std_mean;c.topk;c.window_function;c.zeros;c.zeros_like;var Zg=Object.defineProperty,ey=Object.getOwnPropertyDescriptor,Yi=(te,h,s,p)=>{for(var w=p>1?void 0:p?ey(h,s):h,A=te.length-1,D;A>=0;A--)(D=te[A])&&(w=(p?D(h,s,w):D(w))||w);return p&&w&&Zg(h,s,w),w};let yn=class extends qi{constructor(){super(),this.modelName="Xenova/nli-deberta-v3-small",this.targetMappings={},this.categorizedCommand="",this.commandTarget="",this.category="unknown",this.confidence=0,this.classifier=()=>Promise.resolve({labels:[],sequence:"",scores:[]}),Yg.allowLocalModels=!1,this.initializeClassifier(),document.addEventListener("request-categorization",this.handleCommand.bind(this))}async initializeClassifier(){try{const te=await Jg("zero-shot-classification",this.modelName);this.classifier=(h,s)=>te(h,s).then(p=>Array.isArray(p)?p[0]:p)}catch(te){console.error("Failed to initialize classifier:",te)}}async handleCommand(te){const s=te.detail.command;if(!this.classifier){console.error("Classifier not ready");return}const p=await this.categorizeCommand(s,this.targetMappings);this.categorizedCommand=s,this.commandTarget=p.detectedTargets[0],this.category=p.category,this.confidence=p.confidence,this.emitRefinedCommandEvent(s,p.category,p.confidence,p.detectedTargets)}async categorizeCommand(te,h={}){try{if(!this.classifier)throw new Error("Classifier not ready");const s=await this.classifier(te,Object.keys(h)),p=s.labels[0],w=s.scores[0],A=[],D=h[p];if(console.log(h,p),D&&D.length){const z=await this.classifier(te,D);A.push(...z.labels.filter((g,x)=>z.scores[x]>.5))}return{category:p,confidence:w,detectedTargets:A}}catch(s){return console.error("Categorization error:",s),{category:"unknown",confidence:0,detectedTargets:[]}}}emitRefinedCommandEvent(te,h,s,p){const w={originalCommand:te,category:h,confidence:s,timestamp:Date.now(),detectedTargets:p};this.dispatchEvent(new CustomEvent("complete-categorization",{detail:w,bubbles:!0,composed:!0}))}render(){return Qa`
      <div id="categorizer">
        Commands: ${Object.keys(this.targetMappings).join(", ")}<br>
        Objects: ${this.targetMappings[Object.keys(this.targetMappings)[0]].map(te=>te.split(",")[0]).join(", ")}<br>
        ${this.categorizedCommand?Qa`
          <div class="result">
            Command: ${this.categorizedCommand}<br>
            Category: ${this.category} (${(this.confidence*100).toFixed(2)}%)<br>
            Target: ${this.commandTarget}
          </div>
        `:Qa`<p>Waiting for command...</p>`}
      </div>
    `}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener("request-categorization",this.handleCommand.bind(this))}};yn.styles=Zh`
    :host {
      display: block;
      font-family: Arial, sans-serif;
    }

    #categorizer {
      background: rgba(0, 0, 0, 0.5);
      padding: 0.1em 1em;
      border-radius: 4px;
    }

    .result {
      display: block;
      margin-top: 10px;
    }
  `;Yi([ai({type:String})],yn.prototype,"modelName",2);Yi([ai({type:Object})],yn.prototype,"targetMappings",2);Yi([_h()],yn.prototype,"categorizedCommand",2);Yi([_h()],yn.prototype,"commandTarget",2);Yi([_h()],yn.prototype,"category",2);Yi([_h()],yn.prototype,"confidence",2);yn=Yi([sm("command-categorizer")],yn);var ty=Object.defineProperty,sy=Object.getOwnPropertyDescriptor,np=(te,h,s,p)=>{for(var w=p>1?void 0:p?sy(h,s):h,A=te.length-1,D;A>=0;A--)(D=te[A])&&(w=(p?D(h,s,w):D(w))||w);return p&&w&&ty(h,s,w),w};let Xi=class extends qi{constructor(){super(...arguments),this.landmarks=[{name:"movie",x:10,y:10},{name:"game",x:70,y:50},{name:"shoe",x:40,y:80},{name:"furniture",x:50,y:10},{name:"watch",x:20,y:50}],this.targetMappings={move:this.landmarks.map(te=>te.name),take:this.landmarks.map(te=>te.name),drop:[],party:[]},this.technoColors=["#00ff41","#0ff0fc","#ff00ff","#4b0082","#7b00ff","#1e90ff","#00ffb3"],this.characterX=45,this.characterY=45,this.categorizer=null,this.holdingItem=null,this.recognition=null}render(){return Qa`
      <div id="game-holder">
        <div id="game">
          ${this.landmarks.map(te=>{const h=this.holdingItem===te.name?this.characterX:te.x,s=this.holdingItem===te.name?this.characterY:te.y;return Qa`
              <img
                src="https://via.assets.so/${te.name.split(",")[0]}.png"
                class="landmark"
                alt="${te.name}"
                data-name="${te.name}"
                style="left: ${h}%; top: ${s}%;"
              />
            `})}
          <img
            src="https://vignette.wikia.nocookie.net/nickelodeon/images/d/d9/DoodleBob.png/revision/latest?cb=20181228054254"
            id="character"
            alt="Character"
            style="left: ${this.characterX}%; top: ${this.characterY}%;"
          />
        </div>
      </div>
      <div id="ui">
        <command-categorizer id="categorizer" .targetMappings="${this.targetMappings}" @complete-categorization="${this.onCategorize}"></command-categorizer>
        <speech-command @command-detected="${this.onCommand}"></speech-command>
      </div>
    `}connectedCallback(){super.connectedCallback()}onCommand(te){this.dispatchEvent(new CustomEvent("request-categorization",{detail:{command:te.detail.originalCommand},bubbles:!0,composed:!0}))}onCategorize(te){const{category:h,detectedTargets:s}=te.detail;switch(h){case"move":if(s.length){const p=this.landmarks.find(w=>w.name===s[0]);p&&this.moveCharacterTo(p.x,p.y)}break;case"take":if(s.length){const p=this.landmarks.find(w=>w.name===s[0]);p&&(this.moveCharacterTo(p.x,p.y),this.holdingItem=p.name)}break;case"drop":this.holdingItem&&(this.holdingItem=null);break;case"party":this.partyDance();break}}partyDance(){var w;new Audio("/doodlebob.mp3").play();let h=10;const s=(w=this.shadowRoot)==null?void 0:w.querySelector("#game"),p=()=>{if(h>0){const A=Math.floor(Math.random()*90),D=Math.floor(Math.random()*90);this.moveCharacterTo(A,D);const z=this.technoColors[Math.floor(Math.random()*this.technoColors.length)]+"80";s&&(s.style.backgroundColor=z),h--,setTimeout(p,500)}h===0&&s&&(s.style.backgroundColor="#f0f0f0")};p()}moveCharacterTo(te,h){this.characterX=te,this.characterY=h}};Xi.styles=Zh`
    #game-holder {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      padding: 20px;
      box-sizing: border-box;
    }
    #game {
      position: absolute;
      top: 1em;
      left: 1em;
      right: 1em;
      bottom: 1em;
      border-radius: 20px;
      background-color: #f0f0f0;
    }
    .landmark,
    #character {
      position: absolute;
      max-width: 150px;
      max-height: 250px;
      transition: left 1s linear, top 1s linear;
    }
    #controls {
      text-align: center;
      margin-top: 10px;
    }
    button {
      margin-right: 10px;
    }
    #ui {
      position: absolute;
      top: 1rem;
      right: 1rem;
    }
    #ui speech-command {
      text-align: right;
      cursor: pointer;
    }
  `;np([ai({type:Number})],Xi.prototype,"characterX",2);np([ai({type:Number})],Xi.prototype,"characterY",2);np([ai({type:yn})],Xi.prototype,"categorizer",2);np([ai({type:String})],Xi.prototype,"holdingItem",2);Xi=np([sm("ai-voice-game")],Xi);
