class n extends HTMLElement{static get observedAttributes(){return["label"]}constructor(){super(),this.props={label:"Click me"},this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.addEventListener("click",this.handleClick.bind(this))}attributeChangedCallback(n,t,e){"label"===n&&(this.props.label=e,this.render())}handleClick(){this.props.onClick&&this.props.onClick(),this.dispatchEvent(new CustomEvent("button-click",{bubbles:!0,composed:!0}))}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n        <style>\n          :host {\n            display: inline-block;\n          }\n          button {\n            padding: 8px 16px;\n            background-color: #4285f4;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-family: sans-serif;\n          }\n          button:hover {\n            background-color: #3367d6;\n          }\n        </style>\n        <button>${this.props.label}</button>\n      `)}}customElements.define("my-button",n);export{n as MyButton};
