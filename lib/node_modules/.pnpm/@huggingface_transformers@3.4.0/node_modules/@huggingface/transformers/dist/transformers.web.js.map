{"version":3,"file":"transformers.web.js","sources":["../../../../../../../../node_modules/.pnpm/@huggingface+transformers@3.4.0/node_modules/@huggingface/transformers/dist/transformers.web.js"],"sourcesContent":["import * as __WEBPACK_EXTERNAL_MODULE_onnxruntime_common_82b39e9f__ from \"onnxruntime-common\";\nimport * as __WEBPACK_EXTERNAL_MODULE_onnxruntime_web_74d14b94__ from \"onnxruntime-web\";\n/******/ var __webpack_modules__ = ({\n\n/***/ \"onnxruntime-common\":\n/*!*************************************!*\\\n  !*** external \"onnxruntime-common\" ***!\n  \\*************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_onnxruntime_common_82b39e9f__;\n\n/***/ }),\n\n/***/ \"onnxruntime-web\":\n/*!**********************************!*\\\n  !*** external \"onnxruntime-web\" ***!\n  \\**********************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_onnxruntime_web_74d14b94__;\n\n/***/ }),\n\n/***/ \"?2ce3\":\n/*!**********************************!*\\\n  !*** onnxruntime-node (ignored) ***!\n  \\**********************************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?7a2c\":\n/*!********************!*\\\n  !*** fs (ignored) ***!\n  \\********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?a42a\":\n/*!**********************!*\\\n  !*** path (ignored) ***!\n  \\**********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?2b25\":\n/*!***********************!*\\\n  !*** sharp (ignored) ***!\n  \\***********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?569f\":\n/*!********************!*\\\n  !*** fs (ignored) ***!\n  \\********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?3f59\":\n/*!**********************!*\\\n  !*** path (ignored) ***!\n  \\**********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"?154a\":\n/*!*********************!*\\\n  !*** url (ignored) ***!\n  \\*********************/\n/***/ (() => {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ \"./node_modules/@huggingface/jinja/dist/index.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/@huggingface/jinja/dist/index.js ***!\n  \\*******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Environment: () => (/* binding */ Environment),\n/* harmony export */   Interpreter: () => (/* binding */ Interpreter),\n/* harmony export */   Template: () => (/* binding */ Template),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   tokenize: () => (/* binding */ tokenize)\n/* harmony export */ });\n// src/lexer.ts\nvar TOKEN_TYPES = Object.freeze({\n  Text: \"Text\",\n  // The text between Jinja statements or expressions\n  NumericLiteral: \"NumericLiteral\",\n  // e.g., 123\n  BooleanLiteral: \"BooleanLiteral\",\n  // true or false\n  NullLiteral: \"NullLiteral\",\n  // none\n  StringLiteral: \"StringLiteral\",\n  // 'string'\n  Identifier: \"Identifier\",\n  // Variables, functions, etc.\n  Equals: \"Equals\",\n  // =\n  OpenParen: \"OpenParen\",\n  // (\n  CloseParen: \"CloseParen\",\n  // )\n  OpenStatement: \"OpenStatement\",\n  // {%\n  CloseStatement: \"CloseStatement\",\n  // %}\n  OpenExpression: \"OpenExpression\",\n  // {{\n  CloseExpression: \"CloseExpression\",\n  // }}\n  OpenSquareBracket: \"OpenSquareBracket\",\n  // [\n  CloseSquareBracket: \"CloseSquareBracket\",\n  // ]\n  OpenCurlyBracket: \"OpenCurlyBracket\",\n  // {\n  CloseCurlyBracket: \"CloseCurlyBracket\",\n  // }\n  Comma: \"Comma\",\n  // ,\n  Dot: \"Dot\",\n  // .\n  Colon: \"Colon\",\n  // :\n  Pipe: \"Pipe\",\n  // |\n  CallOperator: \"CallOperator\",\n  // ()\n  AdditiveBinaryOperator: \"AdditiveBinaryOperator\",\n  // + -\n  MultiplicativeBinaryOperator: \"MultiplicativeBinaryOperator\",\n  // * / %\n  ComparisonBinaryOperator: \"ComparisonBinaryOperator\",\n  // < > <= >= == !=\n  UnaryOperator: \"UnaryOperator\",\n  // ! - +\n  // Keywords\n  Set: \"Set\",\n  If: \"If\",\n  For: \"For\",\n  In: \"In\",\n  Is: \"Is\",\n  NotIn: \"NotIn\",\n  Else: \"Else\",\n  EndIf: \"EndIf\",\n  ElseIf: \"ElseIf\",\n  EndFor: \"EndFor\",\n  And: \"And\",\n  Or: \"Or\",\n  Not: \"UnaryOperator\",\n  Macro: \"Macro\",\n  EndMacro: \"EndMacro\"\n});\nvar KEYWORDS = Object.freeze({\n  set: TOKEN_TYPES.Set,\n  for: TOKEN_TYPES.For,\n  in: TOKEN_TYPES.In,\n  is: TOKEN_TYPES.Is,\n  if: TOKEN_TYPES.If,\n  else: TOKEN_TYPES.Else,\n  endif: TOKEN_TYPES.EndIf,\n  elif: TOKEN_TYPES.ElseIf,\n  endfor: TOKEN_TYPES.EndFor,\n  and: TOKEN_TYPES.And,\n  or: TOKEN_TYPES.Or,\n  not: TOKEN_TYPES.Not,\n  \"not in\": TOKEN_TYPES.NotIn,\n  macro: TOKEN_TYPES.Macro,\n  endmacro: TOKEN_TYPES.EndMacro,\n  // Literals\n  true: TOKEN_TYPES.BooleanLiteral,\n  false: TOKEN_TYPES.BooleanLiteral,\n  none: TOKEN_TYPES.NullLiteral,\n  // NOTE: According to the Jinja docs: The special constants true, false, and none are indeed lowercase.\n  // Because that caused confusion in the past, (True used to expand to an undefined variable that was considered false),\n  // all three can now also be written in title case (True, False, and None). However, for consistency, (all Jinja identifiers are lowercase)\n  // you should use the lowercase versions.\n  True: TOKEN_TYPES.BooleanLiteral,\n  False: TOKEN_TYPES.BooleanLiteral,\n  None: TOKEN_TYPES.NullLiteral\n});\nvar Token = class {\n  /**\n   * Constructs a new Token.\n   * @param {string} value The raw value as seen inside the source code.\n   * @param {TokenType} type The type of token.\n   */\n  constructor(value, type) {\n    this.value = value;\n    this.type = type;\n  }\n};\nfunction isWord(char) {\n  return /\\w/.test(char);\n}\nfunction isInteger(char) {\n  return /[0-9]/.test(char);\n}\nvar ORDERED_MAPPING_TABLE = [\n  // Control sequences\n  [\"{%\", TOKEN_TYPES.OpenStatement],\n  [\"%}\", TOKEN_TYPES.CloseStatement],\n  [\"{{\", TOKEN_TYPES.OpenExpression],\n  [\"}}\", TOKEN_TYPES.CloseExpression],\n  // Single character tokens\n  [\"(\", TOKEN_TYPES.OpenParen],\n  [\")\", TOKEN_TYPES.CloseParen],\n  [\"{\", TOKEN_TYPES.OpenCurlyBracket],\n  [\"}\", TOKEN_TYPES.CloseCurlyBracket],\n  [\"[\", TOKEN_TYPES.OpenSquareBracket],\n  [\"]\", TOKEN_TYPES.CloseSquareBracket],\n  [\",\", TOKEN_TYPES.Comma],\n  [\".\", TOKEN_TYPES.Dot],\n  [\":\", TOKEN_TYPES.Colon],\n  [\"|\", TOKEN_TYPES.Pipe],\n  // Comparison operators\n  [\"<=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\">=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"==\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"!=\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\"<\", TOKEN_TYPES.ComparisonBinaryOperator],\n  [\">\", TOKEN_TYPES.ComparisonBinaryOperator],\n  // Arithmetic operators\n  [\"+\", TOKEN_TYPES.AdditiveBinaryOperator],\n  [\"-\", TOKEN_TYPES.AdditiveBinaryOperator],\n  [\"*\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  [\"/\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  [\"%\", TOKEN_TYPES.MultiplicativeBinaryOperator],\n  // Assignment operator\n  [\"=\", TOKEN_TYPES.Equals]\n];\nvar ESCAPE_CHARACTERS = /* @__PURE__ */ new Map([\n  [\"n\", \"\\n\"],\n  // New line\n  [\"t\", \"\t\"],\n  // Horizontal tab\n  [\"r\", \"\\r\"],\n  // Carriage return\n  [\"b\", \"\\b\"],\n  // Backspace\n  [\"f\", \"\\f\"],\n  // Form feed\n  [\"v\", \"\\v\"],\n  // Vertical tab\n  [\"'\", \"'\"],\n  // Single quote\n  ['\"', '\"'],\n  // Double quote\n  [\"\\\\\", \"\\\\\"]\n  // Backslash\n]);\nfunction preprocess(template, options = {}) {\n  if (template.endsWith(\"\\n\")) {\n    template = template.slice(0, -1);\n  }\n  template = template.replace(/{#.*?#}/gs, \"{##}\");\n  if (options.lstrip_blocks) {\n    template = template.replace(/^[ \\t]*({[#%])/gm, \"$1\");\n  }\n  if (options.trim_blocks) {\n    template = template.replace(/([#%]})\\n/g, \"$1\");\n  }\n  return template.replace(/{##}/g, \"\").replace(/-%}\\s*/g, \"%}\").replace(/\\s*{%-/g, \"{%\").replace(/-}}\\s*/g, \"}}\").replace(/\\s*{{-/g, \"{{\");\n}\nfunction tokenize(source, options = {}) {\n  const tokens = [];\n  const src = preprocess(source, options);\n  let cursorPosition = 0;\n  const consumeWhile = (predicate) => {\n    let str = \"\";\n    while (predicate(src[cursorPosition])) {\n      if (src[cursorPosition] === \"\\\\\") {\n        ++cursorPosition;\n        if (cursorPosition >= src.length)\n          throw new SyntaxError(\"Unexpected end of input\");\n        const escaped = src[cursorPosition++];\n        const unescaped = ESCAPE_CHARACTERS.get(escaped);\n        if (unescaped === void 0) {\n          throw new SyntaxError(`Unexpected escaped character: ${escaped}`);\n        }\n        str += unescaped;\n        continue;\n      }\n      str += src[cursorPosition++];\n      if (cursorPosition >= src.length)\n        throw new SyntaxError(\"Unexpected end of input\");\n    }\n    return str;\n  };\n  main:\n    while (cursorPosition < src.length) {\n      const lastTokenType = tokens.at(-1)?.type;\n      if (lastTokenType === void 0 || lastTokenType === TOKEN_TYPES.CloseStatement || lastTokenType === TOKEN_TYPES.CloseExpression) {\n        let text = \"\";\n        while (cursorPosition < src.length && // Keep going until we hit the next Jinja statement or expression\n        !(src[cursorPosition] === \"{\" && (src[cursorPosition + 1] === \"%\" || src[cursorPosition + 1] === \"{\"))) {\n          text += src[cursorPosition++];\n        }\n        if (text.length > 0) {\n          tokens.push(new Token(text, TOKEN_TYPES.Text));\n          continue;\n        }\n      }\n      consumeWhile((char2) => /\\s/.test(char2));\n      const char = src[cursorPosition];\n      if (char === \"-\" || char === \"+\") {\n        const lastTokenType2 = tokens.at(-1)?.type;\n        if (lastTokenType2 === TOKEN_TYPES.Text || lastTokenType2 === void 0) {\n          throw new SyntaxError(`Unexpected character: ${char}`);\n        }\n        switch (lastTokenType2) {\n          case TOKEN_TYPES.Identifier:\n          case TOKEN_TYPES.NumericLiteral:\n          case TOKEN_TYPES.BooleanLiteral:\n          case TOKEN_TYPES.NullLiteral:\n          case TOKEN_TYPES.StringLiteral:\n          case TOKEN_TYPES.CloseParen:\n          case TOKEN_TYPES.CloseSquareBracket:\n            break;\n          default: {\n            ++cursorPosition;\n            const num = consumeWhile(isInteger);\n            tokens.push(\n              new Token(`${char}${num}`, num.length > 0 ? TOKEN_TYPES.NumericLiteral : TOKEN_TYPES.UnaryOperator)\n            );\n            continue;\n          }\n        }\n      }\n      for (const [char2, token] of ORDERED_MAPPING_TABLE) {\n        const slice2 = src.slice(cursorPosition, cursorPosition + char2.length);\n        if (slice2 === char2) {\n          tokens.push(new Token(char2, token));\n          cursorPosition += char2.length;\n          continue main;\n        }\n      }\n      if (char === \"'\" || char === '\"') {\n        ++cursorPosition;\n        const str = consumeWhile((c) => c !== char);\n        tokens.push(new Token(str, TOKEN_TYPES.StringLiteral));\n        ++cursorPosition;\n        continue;\n      }\n      if (isInteger(char)) {\n        const num = consumeWhile(isInteger);\n        tokens.push(new Token(num, TOKEN_TYPES.NumericLiteral));\n        continue;\n      }\n      if (isWord(char)) {\n        const word = consumeWhile(isWord);\n        const type = Object.hasOwn(KEYWORDS, word) ? KEYWORDS[word] : TOKEN_TYPES.Identifier;\n        if (type === TOKEN_TYPES.In && tokens.at(-1)?.type === TOKEN_TYPES.Not) {\n          tokens.pop();\n          tokens.push(new Token(\"not in\", TOKEN_TYPES.NotIn));\n        } else {\n          tokens.push(new Token(word, type));\n        }\n        continue;\n      }\n      throw new SyntaxError(`Unexpected character: ${char}`);\n    }\n  return tokens;\n}\n\n// src/ast.ts\nvar Statement = class {\n  type = \"Statement\";\n};\nvar Program = class extends Statement {\n  constructor(body) {\n    super();\n    this.body = body;\n  }\n  type = \"Program\";\n};\nvar If = class extends Statement {\n  constructor(test, body, alternate) {\n    super();\n    this.test = test;\n    this.body = body;\n    this.alternate = alternate;\n  }\n  type = \"If\";\n};\nvar For = class extends Statement {\n  constructor(loopvar, iterable, body, defaultBlock) {\n    super();\n    this.loopvar = loopvar;\n    this.iterable = iterable;\n    this.body = body;\n    this.defaultBlock = defaultBlock;\n  }\n  type = \"For\";\n};\nvar SetStatement = class extends Statement {\n  constructor(assignee, value) {\n    super();\n    this.assignee = assignee;\n    this.value = value;\n  }\n  type = \"Set\";\n};\nvar Macro = class extends Statement {\n  constructor(name, args, body) {\n    super();\n    this.name = name;\n    this.args = args;\n    this.body = body;\n  }\n  type = \"Macro\";\n};\nvar Expression = class extends Statement {\n  type = \"Expression\";\n};\nvar MemberExpression = class extends Expression {\n  constructor(object, property, computed) {\n    super();\n    this.object = object;\n    this.property = property;\n    this.computed = computed;\n  }\n  type = \"MemberExpression\";\n};\nvar CallExpression = class extends Expression {\n  constructor(callee, args) {\n    super();\n    this.callee = callee;\n    this.args = args;\n  }\n  type = \"CallExpression\";\n};\nvar Identifier = class extends Expression {\n  /**\n   * @param {string} value The name of the identifier\n   */\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  type = \"Identifier\";\n};\nvar Literal = class extends Expression {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  type = \"Literal\";\n};\nvar NumericLiteral = class extends Literal {\n  type = \"NumericLiteral\";\n};\nvar StringLiteral = class extends Literal {\n  type = \"StringLiteral\";\n};\nvar BooleanLiteral = class extends Literal {\n  type = \"BooleanLiteral\";\n};\nvar NullLiteral = class extends Literal {\n  type = \"NullLiteral\";\n};\nvar ArrayLiteral = class extends Literal {\n  type = \"ArrayLiteral\";\n};\nvar TupleLiteral = class extends Literal {\n  type = \"TupleLiteral\";\n};\nvar ObjectLiteral = class extends Literal {\n  type = \"ObjectLiteral\";\n};\nvar BinaryExpression = class extends Expression {\n  constructor(operator, left, right) {\n    super();\n    this.operator = operator;\n    this.left = left;\n    this.right = right;\n  }\n  type = \"BinaryExpression\";\n};\nvar FilterExpression = class extends Expression {\n  constructor(operand, filter) {\n    super();\n    this.operand = operand;\n    this.filter = filter;\n  }\n  type = \"FilterExpression\";\n};\nvar SelectExpression = class extends Expression {\n  constructor(iterable, test) {\n    super();\n    this.iterable = iterable;\n    this.test = test;\n  }\n  type = \"SelectExpression\";\n};\nvar TestExpression = class extends Expression {\n  constructor(operand, negate, test) {\n    super();\n    this.operand = operand;\n    this.negate = negate;\n    this.test = test;\n  }\n  type = \"TestExpression\";\n};\nvar UnaryExpression = class extends Expression {\n  constructor(operator, argument) {\n    super();\n    this.operator = operator;\n    this.argument = argument;\n  }\n  type = \"UnaryExpression\";\n};\nvar SliceExpression = class extends Expression {\n  constructor(start = void 0, stop = void 0, step = void 0) {\n    super();\n    this.start = start;\n    this.stop = stop;\n    this.step = step;\n  }\n  type = \"SliceExpression\";\n};\nvar KeywordArgumentExpression = class extends Expression {\n  constructor(key, value) {\n    super();\n    this.key = key;\n    this.value = value;\n  }\n  type = \"KeywordArgumentExpression\";\n};\n\n// src/parser.ts\nfunction parse(tokens) {\n  const program = new Program([]);\n  let current = 0;\n  function expect(type, error) {\n    const prev = tokens[current++];\n    if (!prev || prev.type !== type) {\n      throw new Error(`Parser Error: ${error}. ${prev.type} !== ${type}.`);\n    }\n    return prev;\n  }\n  function parseAny() {\n    switch (tokens[current].type) {\n      case TOKEN_TYPES.Text:\n        return parseText();\n      case TOKEN_TYPES.OpenStatement:\n        return parseJinjaStatement();\n      case TOKEN_TYPES.OpenExpression:\n        return parseJinjaExpression();\n      default:\n        throw new SyntaxError(`Unexpected token type: ${tokens[current].type}`);\n    }\n  }\n  function not(...types) {\n    return current + types.length <= tokens.length && types.some((type, i) => type !== tokens[current + i].type);\n  }\n  function is(...types) {\n    return current + types.length <= tokens.length && types.every((type, i) => type === tokens[current + i].type);\n  }\n  function parseText() {\n    return new StringLiteral(expect(TOKEN_TYPES.Text, \"Expected text token\").value);\n  }\n  function parseJinjaStatement() {\n    expect(TOKEN_TYPES.OpenStatement, \"Expected opening statement token\");\n    let result;\n    switch (tokens[current].type) {\n      case TOKEN_TYPES.Set:\n        ++current;\n        result = parseSetStatement();\n        expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n        break;\n      case TOKEN_TYPES.If:\n        ++current;\n        result = parseIfStatement();\n        expect(TOKEN_TYPES.OpenStatement, \"Expected {% token\");\n        expect(TOKEN_TYPES.EndIf, \"Expected endif token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected %} token\");\n        break;\n      case TOKEN_TYPES.Macro:\n        ++current;\n        result = parseMacroStatement();\n        expect(TOKEN_TYPES.OpenStatement, \"Expected {% token\");\n        expect(TOKEN_TYPES.EndMacro, \"Expected endmacro token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected %} token\");\n        break;\n      case TOKEN_TYPES.For:\n        ++current;\n        result = parseForStatement();\n        expect(TOKEN_TYPES.OpenStatement, \"Expected {% token\");\n        expect(TOKEN_TYPES.EndFor, \"Expected endfor token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected %} token\");\n        break;\n      default:\n        throw new SyntaxError(`Unknown statement type: ${tokens[current].type}`);\n    }\n    return result;\n  }\n  function parseJinjaExpression() {\n    expect(TOKEN_TYPES.OpenExpression, \"Expected opening expression token\");\n    const result = parseExpression();\n    expect(TOKEN_TYPES.CloseExpression, \"Expected closing expression token\");\n    return result;\n  }\n  function parseSetStatement() {\n    const left = parseExpression();\n    if (is(TOKEN_TYPES.Equals)) {\n      ++current;\n      const value = parseSetStatement();\n      return new SetStatement(left, value);\n    }\n    return left;\n  }\n  function parseIfStatement() {\n    const test = parseExpression();\n    expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n    const body = [];\n    const alternate = [];\n    while (!(tokens[current]?.type === TOKEN_TYPES.OpenStatement && (tokens[current + 1]?.type === TOKEN_TYPES.ElseIf || tokens[current + 1]?.type === TOKEN_TYPES.Else || tokens[current + 1]?.type === TOKEN_TYPES.EndIf))) {\n      body.push(parseAny());\n    }\n    if (tokens[current]?.type === TOKEN_TYPES.OpenStatement && tokens[current + 1]?.type !== TOKEN_TYPES.EndIf) {\n      ++current;\n      if (is(TOKEN_TYPES.ElseIf)) {\n        expect(TOKEN_TYPES.ElseIf, \"Expected elseif token\");\n        alternate.push(parseIfStatement());\n      } else {\n        expect(TOKEN_TYPES.Else, \"Expected else token\");\n        expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n        while (!(tokens[current]?.type === TOKEN_TYPES.OpenStatement && tokens[current + 1]?.type === TOKEN_TYPES.EndIf)) {\n          alternate.push(parseAny());\n        }\n      }\n    }\n    return new If(test, body, alternate);\n  }\n  function parseMacroStatement() {\n    const name = parsePrimaryExpression();\n    if (name.type !== \"Identifier\") {\n      throw new SyntaxError(`Expected identifier following macro statement`);\n    }\n    const args = parseArgs();\n    expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n    const body = [];\n    while (not(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.EndMacro)) {\n      body.push(parseAny());\n    }\n    return new Macro(name, args, body);\n  }\n  function parseExpressionSequence(primary = false) {\n    const fn = primary ? parsePrimaryExpression : parseExpression;\n    const expressions = [fn()];\n    const isTuple = is(TOKEN_TYPES.Comma);\n    while (isTuple) {\n      ++current;\n      expressions.push(fn());\n      if (!is(TOKEN_TYPES.Comma)) {\n        break;\n      }\n    }\n    return isTuple ? new TupleLiteral(expressions) : expressions[0];\n  }\n  function parseForStatement() {\n    const loopVariable = parseExpressionSequence(true);\n    if (!(loopVariable instanceof Identifier || loopVariable instanceof TupleLiteral)) {\n      throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${loopVariable.type} instead`);\n    }\n    expect(TOKEN_TYPES.In, \"Expected `in` keyword following loop variable\");\n    const iterable = parseExpression();\n    expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n    const body = [];\n    while (not(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.EndFor) && not(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.Else)) {\n      body.push(parseAny());\n    }\n    const alternative = [];\n    if (is(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.Else)) {\n      ++current;\n      ++current;\n      expect(TOKEN_TYPES.CloseStatement, \"Expected closing statement token\");\n      while (not(TOKEN_TYPES.OpenStatement, TOKEN_TYPES.EndFor)) {\n        alternative.push(parseAny());\n      }\n    }\n    return new For(loopVariable, iterable, body, alternative);\n  }\n  function parseExpression() {\n    return parseIfExpression();\n  }\n  function parseIfExpression() {\n    const a = parseLogicalOrExpression();\n    if (is(TOKEN_TYPES.If)) {\n      ++current;\n      const predicate = parseLogicalOrExpression();\n      if (is(TOKEN_TYPES.Else)) {\n        ++current;\n        const b = parseLogicalOrExpression();\n        return new If(predicate, [a], [b]);\n      } else {\n        return new SelectExpression(a, predicate);\n      }\n    }\n    return a;\n  }\n  function parseLogicalOrExpression() {\n    let left = parseLogicalAndExpression();\n    while (is(TOKEN_TYPES.Or)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseLogicalAndExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseLogicalAndExpression() {\n    let left = parseLogicalNegationExpression();\n    while (is(TOKEN_TYPES.And)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseLogicalNegationExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseLogicalNegationExpression() {\n    let right;\n    while (is(TOKEN_TYPES.Not)) {\n      const operator = tokens[current];\n      ++current;\n      const arg = parseLogicalNegationExpression();\n      right = new UnaryExpression(operator, arg);\n    }\n    return right ?? parseComparisonExpression();\n  }\n  function parseComparisonExpression() {\n    let left = parseAdditiveExpression();\n    while (is(TOKEN_TYPES.ComparisonBinaryOperator) || is(TOKEN_TYPES.In) || is(TOKEN_TYPES.NotIn)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseAdditiveExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseAdditiveExpression() {\n    let left = parseMultiplicativeExpression();\n    while (is(TOKEN_TYPES.AdditiveBinaryOperator)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseMultiplicativeExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseCallMemberExpression() {\n    const member = parseMemberExpression(parsePrimaryExpression());\n    if (is(TOKEN_TYPES.OpenParen)) {\n      return parseCallExpression(member);\n    }\n    return member;\n  }\n  function parseCallExpression(callee) {\n    let expression = new CallExpression(callee, parseArgs());\n    expression = parseMemberExpression(expression);\n    if (is(TOKEN_TYPES.OpenParen)) {\n      expression = parseCallExpression(expression);\n    }\n    return expression;\n  }\n  function parseArgs() {\n    expect(TOKEN_TYPES.OpenParen, \"Expected opening parenthesis for arguments list\");\n    const args = parseArgumentsList();\n    expect(TOKEN_TYPES.CloseParen, \"Expected closing parenthesis for arguments list\");\n    return args;\n  }\n  function parseArgumentsList() {\n    const args = [];\n    while (!is(TOKEN_TYPES.CloseParen)) {\n      let argument = parseExpression();\n      if (is(TOKEN_TYPES.Equals)) {\n        ++current;\n        if (!(argument instanceof Identifier)) {\n          throw new SyntaxError(`Expected identifier for keyword argument`);\n        }\n        const value = parseExpression();\n        argument = new KeywordArgumentExpression(argument, value);\n      }\n      args.push(argument);\n      if (is(TOKEN_TYPES.Comma)) {\n        ++current;\n      }\n    }\n    return args;\n  }\n  function parseMemberExpressionArgumentsList() {\n    const slices = [];\n    let isSlice = false;\n    while (!is(TOKEN_TYPES.CloseSquareBracket)) {\n      if (is(TOKEN_TYPES.Colon)) {\n        slices.push(void 0);\n        ++current;\n        isSlice = true;\n      } else {\n        slices.push(parseExpression());\n        if (is(TOKEN_TYPES.Colon)) {\n          ++current;\n          isSlice = true;\n        }\n      }\n    }\n    if (slices.length === 0) {\n      throw new SyntaxError(`Expected at least one argument for member/slice expression`);\n    }\n    if (isSlice) {\n      if (slices.length > 3) {\n        throw new SyntaxError(`Expected 0-3 arguments for slice expression`);\n      }\n      return new SliceExpression(...slices);\n    }\n    return slices[0];\n  }\n  function parseMemberExpression(object) {\n    while (is(TOKEN_TYPES.Dot) || is(TOKEN_TYPES.OpenSquareBracket)) {\n      const operator = tokens[current];\n      ++current;\n      let property;\n      const computed = operator.type !== TOKEN_TYPES.Dot;\n      if (computed) {\n        property = parseMemberExpressionArgumentsList();\n        expect(TOKEN_TYPES.CloseSquareBracket, \"Expected closing square bracket\");\n      } else {\n        property = parsePrimaryExpression();\n        if (property.type !== \"Identifier\") {\n          throw new SyntaxError(`Expected identifier following dot operator`);\n        }\n      }\n      object = new MemberExpression(object, property, computed);\n    }\n    return object;\n  }\n  function parseMultiplicativeExpression() {\n    let left = parseTestExpression();\n    while (is(TOKEN_TYPES.MultiplicativeBinaryOperator)) {\n      const operator = tokens[current];\n      ++current;\n      const right = parseTestExpression();\n      left = new BinaryExpression(operator, left, right);\n    }\n    return left;\n  }\n  function parseTestExpression() {\n    let operand = parseFilterExpression();\n    while (is(TOKEN_TYPES.Is)) {\n      ++current;\n      const negate = is(TOKEN_TYPES.Not);\n      if (negate) {\n        ++current;\n      }\n      let filter = parsePrimaryExpression();\n      if (filter instanceof BooleanLiteral) {\n        filter = new Identifier(filter.value.toString());\n      } else if (filter instanceof NullLiteral) {\n        filter = new Identifier(\"none\");\n      }\n      if (!(filter instanceof Identifier)) {\n        throw new SyntaxError(`Expected identifier for the test`);\n      }\n      operand = new TestExpression(operand, negate, filter);\n    }\n    return operand;\n  }\n  function parseFilterExpression() {\n    let operand = parseCallMemberExpression();\n    while (is(TOKEN_TYPES.Pipe)) {\n      ++current;\n      let filter = parsePrimaryExpression();\n      if (!(filter instanceof Identifier)) {\n        throw new SyntaxError(`Expected identifier for the filter`);\n      }\n      if (is(TOKEN_TYPES.OpenParen)) {\n        filter = parseCallExpression(filter);\n      }\n      operand = new FilterExpression(operand, filter);\n    }\n    return operand;\n  }\n  function parsePrimaryExpression() {\n    const token = tokens[current];\n    switch (token.type) {\n      case TOKEN_TYPES.NumericLiteral:\n        ++current;\n        return new NumericLiteral(Number(token.value));\n      case TOKEN_TYPES.StringLiteral:\n        ++current;\n        return new StringLiteral(token.value);\n      case TOKEN_TYPES.BooleanLiteral:\n        ++current;\n        return new BooleanLiteral(token.value.toLowerCase() === \"true\");\n      case TOKEN_TYPES.NullLiteral:\n        ++current;\n        return new NullLiteral(null);\n      case TOKEN_TYPES.Identifier:\n        ++current;\n        return new Identifier(token.value);\n      case TOKEN_TYPES.OpenParen: {\n        ++current;\n        const expression = parseExpressionSequence();\n        if (tokens[current].type !== TOKEN_TYPES.CloseParen) {\n          throw new SyntaxError(`Expected closing parenthesis, got ${tokens[current].type} instead`);\n        }\n        ++current;\n        return expression;\n      }\n      case TOKEN_TYPES.OpenSquareBracket: {\n        ++current;\n        const values = [];\n        while (!is(TOKEN_TYPES.CloseSquareBracket)) {\n          values.push(parseExpression());\n          if (is(TOKEN_TYPES.Comma)) {\n            ++current;\n          }\n        }\n        ++current;\n        return new ArrayLiteral(values);\n      }\n      case TOKEN_TYPES.OpenCurlyBracket: {\n        ++current;\n        const values = /* @__PURE__ */ new Map();\n        while (!is(TOKEN_TYPES.CloseCurlyBracket)) {\n          const key = parseExpression();\n          expect(TOKEN_TYPES.Colon, \"Expected colon between key and value in object literal\");\n          const value = parseExpression();\n          values.set(key, value);\n          if (is(TOKEN_TYPES.Comma)) {\n            ++current;\n          }\n        }\n        ++current;\n        return new ObjectLiteral(values);\n      }\n      default:\n        throw new SyntaxError(`Unexpected token: ${token.type}`);\n    }\n  }\n  while (current < tokens.length) {\n    program.body.push(parseAny());\n  }\n  return program;\n}\n\n// src/utils.ts\nfunction range(start, stop, step = 1) {\n  if (stop === void 0) {\n    stop = start;\n    start = 0;\n  }\n  const result = [];\n  for (let i = start; i < stop; i += step) {\n    result.push(i);\n  }\n  return result;\n}\nfunction slice(array, start, stop, step = 1) {\n  const direction = Math.sign(step);\n  if (direction >= 0) {\n    start = (start ??= 0) < 0 ? Math.max(array.length + start, 0) : Math.min(start, array.length);\n    stop = (stop ??= array.length) < 0 ? Math.max(array.length + stop, 0) : Math.min(stop, array.length);\n  } else {\n    start = (start ??= array.length - 1) < 0 ? Math.max(array.length + start, -1) : Math.min(start, array.length - 1);\n    stop = (stop ??= -1) < -1 ? Math.max(array.length + stop, -1) : Math.min(stop, array.length - 1);\n  }\n  const result = [];\n  for (let i = start; direction * i < direction * stop; i += step) {\n    result.push(array[i]);\n  }\n  return result;\n}\nfunction titleCase(value) {\n  return value.replace(/\\b\\w/g, (c) => c.toUpperCase());\n}\n\n// src/runtime.ts\nvar RuntimeValue = class {\n  type = \"RuntimeValue\";\n  value;\n  /**\n   * A collection of built-in functions for this type.\n   */\n  builtins = /* @__PURE__ */ new Map();\n  /**\n   * Creates a new RuntimeValue.\n   */\n  constructor(value = void 0) {\n    this.value = value;\n  }\n  /**\n   * Determines truthiness or falsiness of the runtime value.\n   * This function should be overridden by subclasses if it has custom truthiness criteria.\n   * @returns {BooleanValue} BooleanValue(true) if the value is truthy, BooleanValue(false) otherwise.\n   */\n  __bool__() {\n    return new BooleanValue(!!this.value);\n  }\n};\nvar NumericValue = class extends RuntimeValue {\n  type = \"NumericValue\";\n};\nvar StringValue = class extends RuntimeValue {\n  type = \"StringValue\";\n  builtins = /* @__PURE__ */ new Map([\n    [\n      \"upper\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.toUpperCase());\n      })\n    ],\n    [\n      \"lower\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.toLowerCase());\n      })\n    ],\n    [\n      \"strip\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.trim());\n      })\n    ],\n    [\n      \"title\",\n      new FunctionValue(() => {\n        return new StringValue(titleCase(this.value));\n      })\n    ],\n    [\"length\", new NumericValue(this.value.length)],\n    [\n      \"rstrip\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.trimEnd());\n      })\n    ],\n    [\n      \"lstrip\",\n      new FunctionValue(() => {\n        return new StringValue(this.value.trimStart());\n      })\n    ],\n    [\n      \"split\",\n      // follows Python's `str.split(sep=None, maxsplit=-1)` function behavior\n      // https://docs.python.org/3.13/library/stdtypes.html#str.split\n      new FunctionValue((args) => {\n        const sep = args[0] ?? new NullValue();\n        if (!(sep instanceof StringValue || sep instanceof NullValue)) {\n          throw new Error(\"sep argument must be a string or null\");\n        }\n        const maxsplit = args[1] ?? new NumericValue(-1);\n        if (!(maxsplit instanceof NumericValue)) {\n          throw new Error(\"maxsplit argument must be a number\");\n        }\n        let result = [];\n        if (sep instanceof NullValue) {\n          const text = this.value.trimStart();\n          for (const { 0: match, index } of text.matchAll(/\\S+/g)) {\n            if (maxsplit.value !== -1 && result.length >= maxsplit.value && index !== void 0) {\n              result.push(match + text.slice(index + match.length));\n              break;\n            }\n            result.push(match);\n          }\n        } else {\n          if (sep.value === \"\") {\n            throw new Error(\"empty separator\");\n          }\n          result = this.value.split(sep.value);\n          if (maxsplit.value !== -1 && result.length > maxsplit.value) {\n            result.push(result.splice(maxsplit.value).join(sep.value));\n          }\n        }\n        return new ArrayValue(result.map((part) => new StringValue(part)));\n      })\n    ]\n  ]);\n};\nvar BooleanValue = class extends RuntimeValue {\n  type = \"BooleanValue\";\n};\nvar ObjectValue = class extends RuntimeValue {\n  type = \"ObjectValue\";\n  /**\n   * NOTE: necessary to override since all JavaScript arrays are considered truthy,\n   * while only non-empty Python arrays are consider truthy.\n   *\n   * e.g.,\n   *  - JavaScript:  {} && 5 -> 5\n   *  - Python:      {} and 5 -> {}\n   */\n  __bool__() {\n    return new BooleanValue(this.value.size > 0);\n  }\n  builtins = /* @__PURE__ */ new Map([\n    [\n      \"get\",\n      new FunctionValue(([key, defaultValue]) => {\n        if (!(key instanceof StringValue)) {\n          throw new Error(`Object key must be a string: got ${key.type}`);\n        }\n        return this.value.get(key.value) ?? defaultValue ?? new NullValue();\n      })\n    ],\n    [\n      \"items\",\n      new FunctionValue(() => {\n        return new ArrayValue(\n          Array.from(this.value.entries()).map(([key, value]) => new ArrayValue([new StringValue(key), value]))\n        );\n      })\n    ]\n  ]);\n};\nvar KeywordArgumentsValue = class extends ObjectValue {\n  type = \"KeywordArgumentsValue\";\n};\nvar ArrayValue = class extends RuntimeValue {\n  type = \"ArrayValue\";\n  builtins = /* @__PURE__ */ new Map([[\"length\", new NumericValue(this.value.length)]]);\n  /**\n   * NOTE: necessary to override since all JavaScript arrays are considered truthy,\n   * while only non-empty Python arrays are consider truthy.\n   *\n   * e.g.,\n   *  - JavaScript:  [] && 5 -> 5\n   *  - Python:      [] and 5 -> []\n   */\n  __bool__() {\n    return new BooleanValue(this.value.length > 0);\n  }\n};\nvar TupleValue = class extends ArrayValue {\n  type = \"TupleValue\";\n};\nvar FunctionValue = class extends RuntimeValue {\n  type = \"FunctionValue\";\n};\nvar NullValue = class extends RuntimeValue {\n  type = \"NullValue\";\n};\nvar UndefinedValue = class extends RuntimeValue {\n  type = \"UndefinedValue\";\n};\nvar Environment = class {\n  constructor(parent) {\n    this.parent = parent;\n  }\n  /**\n   * The variables declared in this environment.\n   */\n  variables = /* @__PURE__ */ new Map([\n    [\n      \"namespace\",\n      new FunctionValue((args) => {\n        if (args.length === 0) {\n          return new ObjectValue(/* @__PURE__ */ new Map());\n        }\n        if (args.length !== 1 || !(args[0] instanceof ObjectValue)) {\n          throw new Error(\"`namespace` expects either zero arguments or a single object argument\");\n        }\n        return args[0];\n      })\n    ]\n  ]);\n  /**\n   * The tests available in this environment.\n   */\n  tests = /* @__PURE__ */ new Map([\n    [\"boolean\", (operand) => operand.type === \"BooleanValue\"],\n    [\"callable\", (operand) => operand instanceof FunctionValue],\n    [\n      \"odd\",\n      (operand) => {\n        if (operand.type !== \"NumericValue\") {\n          throw new Error(`Cannot apply test \"odd\" to type: ${operand.type}`);\n        }\n        return operand.value % 2 !== 0;\n      }\n    ],\n    [\n      \"even\",\n      (operand) => {\n        if (operand.type !== \"NumericValue\") {\n          throw new Error(`Cannot apply test \"even\" to type: ${operand.type}`);\n        }\n        return operand.value % 2 === 0;\n      }\n    ],\n    [\"false\", (operand) => operand.type === \"BooleanValue\" && !operand.value],\n    [\"true\", (operand) => operand.type === \"BooleanValue\" && operand.value],\n    [\"none\", (operand) => operand.type === \"NullValue\"],\n    [\"string\", (operand) => operand.type === \"StringValue\"],\n    [\"number\", (operand) => operand.type === \"NumericValue\"],\n    [\"integer\", (operand) => operand.type === \"NumericValue\" && Number.isInteger(operand.value)],\n    [\"iterable\", (operand) => operand.type === \"ArrayValue\" || operand.type === \"StringValue\"],\n    [\"mapping\", (operand) => operand.type === \"ObjectValue\"],\n    [\n      \"lower\",\n      (operand) => {\n        const str = operand.value;\n        return operand.type === \"StringValue\" && str === str.toLowerCase();\n      }\n    ],\n    [\n      \"upper\",\n      (operand) => {\n        const str = operand.value;\n        return operand.type === \"StringValue\" && str === str.toUpperCase();\n      }\n    ],\n    [\"none\", (operand) => operand.type === \"NullValue\"],\n    [\"defined\", (operand) => operand.type !== \"UndefinedValue\"],\n    [\"undefined\", (operand) => operand.type === \"UndefinedValue\"],\n    [\"equalto\", (a, b) => a.value === b.value],\n    [\"eq\", (a, b) => a.value === b.value]\n  ]);\n  /**\n   * Set the value of a variable in the current environment.\n   */\n  set(name, value) {\n    return this.declareVariable(name, convertToRuntimeValues(value));\n  }\n  declareVariable(name, value) {\n    if (this.variables.has(name)) {\n      throw new SyntaxError(`Variable already declared: ${name}`);\n    }\n    this.variables.set(name, value);\n    return value;\n  }\n  // private assignVariable(name: string, value: AnyRuntimeValue): AnyRuntimeValue {\n  // \tconst env = this.resolve(name);\n  // \tenv.variables.set(name, value);\n  // \treturn value;\n  // }\n  /**\n   * Set variable in the current scope.\n   * See https://jinja.palletsprojects.com/en/3.0.x/templates/#assignments for more information.\n   */\n  setVariable(name, value) {\n    this.variables.set(name, value);\n    return value;\n  }\n  /**\n   * Resolve the environment in which the variable is declared.\n   * @param {string} name The name of the variable.\n   * @returns {Environment} The environment in which the variable is declared.\n   */\n  resolve(name) {\n    if (this.variables.has(name)) {\n      return this;\n    }\n    if (this.parent) {\n      return this.parent.resolve(name);\n    }\n    throw new Error(`Unknown variable: ${name}`);\n  }\n  lookupVariable(name) {\n    try {\n      return this.resolve(name).variables.get(name) ?? new UndefinedValue();\n    } catch {\n      return new UndefinedValue();\n    }\n  }\n};\nvar Interpreter = class {\n  global;\n  constructor(env) {\n    this.global = env ?? new Environment();\n  }\n  /**\n   * Run the program.\n   */\n  run(program) {\n    return this.evaluate(program, this.global);\n  }\n  /**\n   * Evaluates expressions following the binary operation type.\n   */\n  evaluateBinaryExpression(node, environment) {\n    const left = this.evaluate(node.left, environment);\n    switch (node.operator.value) {\n      case \"and\":\n        return left.__bool__().value ? this.evaluate(node.right, environment) : left;\n      case \"or\":\n        return left.__bool__().value ? left : this.evaluate(node.right, environment);\n    }\n    const right = this.evaluate(node.right, environment);\n    switch (node.operator.value) {\n      case \"==\":\n        return new BooleanValue(left.value == right.value);\n      case \"!=\":\n        return new BooleanValue(left.value != right.value);\n    }\n    if (left instanceof UndefinedValue || right instanceof UndefinedValue) {\n      throw new Error(\"Cannot perform operation on undefined values\");\n    } else if (left instanceof NullValue || right instanceof NullValue) {\n      throw new Error(\"Cannot perform operation on null values\");\n    } else if (left instanceof NumericValue && right instanceof NumericValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new NumericValue(left.value + right.value);\n        case \"-\":\n          return new NumericValue(left.value - right.value);\n        case \"*\":\n          return new NumericValue(left.value * right.value);\n        case \"/\":\n          return new NumericValue(left.value / right.value);\n        case \"%\":\n          return new NumericValue(left.value % right.value);\n        case \"<\":\n          return new BooleanValue(left.value < right.value);\n        case \">\":\n          return new BooleanValue(left.value > right.value);\n        case \">=\":\n          return new BooleanValue(left.value >= right.value);\n        case \"<=\":\n          return new BooleanValue(left.value <= right.value);\n      }\n    } else if (left instanceof ArrayValue && right instanceof ArrayValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new ArrayValue(left.value.concat(right.value));\n      }\n    } else if (right instanceof ArrayValue) {\n      const member = right.value.find((x) => x.value === left.value) !== void 0;\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(member);\n        case \"not in\":\n          return new BooleanValue(!member);\n      }\n    }\n    if (left instanceof StringValue || right instanceof StringValue) {\n      switch (node.operator.value) {\n        case \"+\":\n          return new StringValue(left.value.toString() + right.value.toString());\n      }\n    }\n    if (left instanceof StringValue && right instanceof StringValue) {\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(right.value.includes(left.value));\n        case \"not in\":\n          return new BooleanValue(!right.value.includes(left.value));\n      }\n    }\n    if (left instanceof StringValue && right instanceof ObjectValue) {\n      switch (node.operator.value) {\n        case \"in\":\n          return new BooleanValue(right.value.has(left.value));\n        case \"not in\":\n          return new BooleanValue(!right.value.has(left.value));\n      }\n    }\n    throw new SyntaxError(`Unknown operator \"${node.operator.value}\" between ${left.type} and ${right.type}`);\n  }\n  evaluateArguments(args, environment) {\n    const positionalArguments = [];\n    const keywordArguments = /* @__PURE__ */ new Map();\n    for (const argument of args) {\n      if (argument.type === \"KeywordArgumentExpression\") {\n        const kwarg = argument;\n        keywordArguments.set(kwarg.key.value, this.evaluate(kwarg.value, environment));\n      } else {\n        if (keywordArguments.size > 0) {\n          throw new Error(\"Positional arguments must come before keyword arguments\");\n        }\n        positionalArguments.push(this.evaluate(argument, environment));\n      }\n    }\n    return [positionalArguments, keywordArguments];\n  }\n  /**\n   * Evaluates expressions following the filter operation type.\n   */\n  evaluateFilterExpression(node, environment) {\n    const operand = this.evaluate(node.operand, environment);\n    if (node.filter.type === \"Identifier\") {\n      const filter = node.filter;\n      if (filter.value === \"tojson\") {\n        return new StringValue(toJSON(operand));\n      }\n      if (operand instanceof ArrayValue) {\n        switch (filter.value) {\n          case \"list\":\n            return operand;\n          case \"first\":\n            return operand.value[0];\n          case \"last\":\n            return operand.value[operand.value.length - 1];\n          case \"length\":\n            return new NumericValue(operand.value.length);\n          case \"reverse\":\n            return new ArrayValue(operand.value.reverse());\n          case \"sort\":\n            return new ArrayValue(\n              operand.value.sort((a, b) => {\n                if (a.type !== b.type) {\n                  throw new Error(`Cannot compare different types: ${a.type} and ${b.type}`);\n                }\n                switch (a.type) {\n                  case \"NumericValue\":\n                    return a.value - b.value;\n                  case \"StringValue\":\n                    return a.value.localeCompare(b.value);\n                  default:\n                    throw new Error(`Cannot compare type: ${a.type}`);\n                }\n              })\n            );\n          case \"join\":\n            return new StringValue(operand.value.map((x) => x.value).join(\"\"));\n          default:\n            throw new Error(`Unknown ArrayValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof StringValue) {\n        switch (filter.value) {\n          case \"length\":\n            return new NumericValue(operand.value.length);\n          case \"upper\":\n            return new StringValue(operand.value.toUpperCase());\n          case \"lower\":\n            return new StringValue(operand.value.toLowerCase());\n          case \"title\":\n            return new StringValue(titleCase(operand.value));\n          case \"capitalize\":\n            return new StringValue(operand.value.charAt(0).toUpperCase() + operand.value.slice(1));\n          case \"trim\":\n            return new StringValue(operand.value.trim());\n          case \"indent\":\n            return new StringValue(\n              operand.value.split(\"\\n\").map(\n                (x, i) => (\n                  // By default, don't indent the first line or empty lines\n                  i === 0 || x.length === 0 ? x : \"    \" + x\n                )\n              ).join(\"\\n\")\n            );\n          case \"join\":\n          case \"string\":\n            return operand;\n          default:\n            throw new Error(`Unknown StringValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof NumericValue) {\n        switch (filter.value) {\n          case \"abs\":\n            return new NumericValue(Math.abs(operand.value));\n          default:\n            throw new Error(`Unknown NumericValue filter: ${filter.value}`);\n        }\n      } else if (operand instanceof ObjectValue) {\n        switch (filter.value) {\n          case \"items\":\n            return new ArrayValue(\n              Array.from(operand.value.entries()).map(([key, value]) => new ArrayValue([new StringValue(key), value]))\n            );\n          case \"length\":\n            return new NumericValue(operand.value.size);\n          default:\n            throw new Error(`Unknown ObjectValue filter: ${filter.value}`);\n        }\n      }\n      throw new Error(`Cannot apply filter \"${filter.value}\" to type: ${operand.type}`);\n    } else if (node.filter.type === \"CallExpression\") {\n      const filter = node.filter;\n      if (filter.callee.type !== \"Identifier\") {\n        throw new Error(`Unknown filter: ${filter.callee.type}`);\n      }\n      const filterName = filter.callee.value;\n      if (filterName === \"tojson\") {\n        const [, kwargs] = this.evaluateArguments(filter.args, environment);\n        const indent = kwargs.get(\"indent\") ?? new NullValue();\n        if (!(indent instanceof NumericValue || indent instanceof NullValue)) {\n          throw new Error(\"If set, indent must be a number\");\n        }\n        return new StringValue(toJSON(operand, indent.value));\n      } else if (filterName === \"join\") {\n        let value;\n        if (operand instanceof StringValue) {\n          value = Array.from(operand.value);\n        } else if (operand instanceof ArrayValue) {\n          value = operand.value.map((x) => x.value);\n        } else {\n          throw new Error(`Cannot apply filter \"${filterName}\" to type: ${operand.type}`);\n        }\n        const [args, kwargs] = this.evaluateArguments(filter.args, environment);\n        const separator = args.at(0) ?? kwargs.get(\"separator\") ?? new StringValue(\"\");\n        if (!(separator instanceof StringValue)) {\n          throw new Error(\"separator must be a string\");\n        }\n        return new StringValue(value.join(separator.value));\n      }\n      if (operand instanceof ArrayValue) {\n        switch (filterName) {\n          case \"selectattr\":\n          case \"rejectattr\": {\n            const select = filterName === \"selectattr\";\n            if (operand.value.some((x) => !(x instanceof ObjectValue))) {\n              throw new Error(`\\`${filterName}\\` can only be applied to array of objects`);\n            }\n            if (filter.args.some((x) => x.type !== \"StringLiteral\")) {\n              throw new Error(`arguments of \\`${filterName}\\` must be strings`);\n            }\n            const [attr, testName, value] = filter.args.map((x) => this.evaluate(x, environment));\n            let testFunction;\n            if (testName) {\n              const test = environment.tests.get(testName.value);\n              if (!test) {\n                throw new Error(`Unknown test: ${testName.value}`);\n              }\n              testFunction = test;\n            } else {\n              testFunction = (...x) => x[0].__bool__().value;\n            }\n            const filtered = operand.value.filter((item) => {\n              const a = item.value.get(attr.value);\n              const result = a ? testFunction(a, value) : false;\n              return select ? result : !result;\n            });\n            return new ArrayValue(filtered);\n          }\n          case \"map\": {\n            const [, kwargs] = this.evaluateArguments(filter.args, environment);\n            if (kwargs.has(\"attribute\")) {\n              const attr = kwargs.get(\"attribute\");\n              if (!(attr instanceof StringValue)) {\n                throw new Error(\"attribute must be a string\");\n              }\n              const defaultValue = kwargs.get(\"default\");\n              const mapped = operand.value.map((item) => {\n                if (!(item instanceof ObjectValue)) {\n                  throw new Error(\"items in map must be an object\");\n                }\n                return item.value.get(attr.value) ?? defaultValue ?? new UndefinedValue();\n              });\n              return new ArrayValue(mapped);\n            } else {\n              throw new Error(\"`map` expressions without `attribute` set are not currently supported.\");\n            }\n          }\n        }\n        throw new Error(`Unknown ArrayValue filter: ${filterName}`);\n      } else if (operand instanceof StringValue) {\n        switch (filterName) {\n          case \"indent\": {\n            const [args, kwargs] = this.evaluateArguments(filter.args, environment);\n            const width = args.at(0) ?? kwargs.get(\"width\") ?? new NumericValue(4);\n            if (!(width instanceof NumericValue)) {\n              throw new Error(\"width must be a number\");\n            }\n            const first = args.at(1) ?? kwargs.get(\"first\") ?? new BooleanValue(false);\n            const blank = args.at(2) ?? kwargs.get(\"blank\") ?? new BooleanValue(false);\n            const lines = operand.value.split(\"\\n\");\n            const indent = \" \".repeat(width.value);\n            const indented = lines.map(\n              (x, i) => !first.value && i === 0 || !blank.value && x.length === 0 ? x : indent + x\n            );\n            return new StringValue(indented.join(\"\\n\"));\n          }\n        }\n        throw new Error(`Unknown StringValue filter: ${filterName}`);\n      } else {\n        throw new Error(`Cannot apply filter \"${filterName}\" to type: ${operand.type}`);\n      }\n    }\n    throw new Error(`Unknown filter: ${node.filter.type}`);\n  }\n  /**\n   * Evaluates expressions following the test operation type.\n   */\n  evaluateTestExpression(node, environment) {\n    const operand = this.evaluate(node.operand, environment);\n    const test = environment.tests.get(node.test.value);\n    if (!test) {\n      throw new Error(`Unknown test: ${node.test.value}`);\n    }\n    const result = test(operand);\n    return new BooleanValue(node.negate ? !result : result);\n  }\n  /**\n   * Evaluates expressions following the unary operation type.\n   */\n  evaluateUnaryExpression(node, environment) {\n    const argument = this.evaluate(node.argument, environment);\n    switch (node.operator.value) {\n      case \"not\":\n        return new BooleanValue(!argument.value);\n      default:\n        throw new SyntaxError(`Unknown operator: ${node.operator.value}`);\n    }\n  }\n  evalProgram(program, environment) {\n    return this.evaluateBlock(program.body, environment);\n  }\n  evaluateBlock(statements, environment) {\n    let result = \"\";\n    for (const statement of statements) {\n      const lastEvaluated = this.evaluate(statement, environment);\n      if (lastEvaluated.type !== \"NullValue\" && lastEvaluated.type !== \"UndefinedValue\") {\n        result += lastEvaluated.value;\n      }\n    }\n    return new StringValue(result);\n  }\n  evaluateIdentifier(node, environment) {\n    return environment.lookupVariable(node.value);\n  }\n  evaluateCallExpression(expr, environment) {\n    const [args, kwargs] = this.evaluateArguments(expr.args, environment);\n    if (kwargs.size > 0) {\n      args.push(new KeywordArgumentsValue(kwargs));\n    }\n    const fn = this.evaluate(expr.callee, environment);\n    if (fn.type !== \"FunctionValue\") {\n      throw new Error(`Cannot call something that is not a function: got ${fn.type}`);\n    }\n    return fn.value(args, environment);\n  }\n  evaluateSliceExpression(object, expr, environment) {\n    if (!(object instanceof ArrayValue || object instanceof StringValue)) {\n      throw new Error(\"Slice object must be an array or string\");\n    }\n    const start = this.evaluate(expr.start, environment);\n    const stop = this.evaluate(expr.stop, environment);\n    const step = this.evaluate(expr.step, environment);\n    if (!(start instanceof NumericValue || start instanceof UndefinedValue)) {\n      throw new Error(\"Slice start must be numeric or undefined\");\n    }\n    if (!(stop instanceof NumericValue || stop instanceof UndefinedValue)) {\n      throw new Error(\"Slice stop must be numeric or undefined\");\n    }\n    if (!(step instanceof NumericValue || step instanceof UndefinedValue)) {\n      throw new Error(\"Slice step must be numeric or undefined\");\n    }\n    if (object instanceof ArrayValue) {\n      return new ArrayValue(slice(object.value, start.value, stop.value, step.value));\n    } else {\n      return new StringValue(slice(Array.from(object.value), start.value, stop.value, step.value).join(\"\"));\n    }\n  }\n  evaluateMemberExpression(expr, environment) {\n    const object = this.evaluate(expr.object, environment);\n    let property;\n    if (expr.computed) {\n      if (expr.property.type === \"SliceExpression\") {\n        return this.evaluateSliceExpression(object, expr.property, environment);\n      } else {\n        property = this.evaluate(expr.property, environment);\n      }\n    } else {\n      property = new StringValue(expr.property.value);\n    }\n    let value;\n    if (object instanceof ObjectValue) {\n      if (!(property instanceof StringValue)) {\n        throw new Error(`Cannot access property with non-string: got ${property.type}`);\n      }\n      value = object.value.get(property.value) ?? object.builtins.get(property.value);\n    } else if (object instanceof ArrayValue || object instanceof StringValue) {\n      if (property instanceof NumericValue) {\n        value = object.value.at(property.value);\n        if (object instanceof StringValue) {\n          value = new StringValue(object.value.at(property.value));\n        }\n      } else if (property instanceof StringValue) {\n        value = object.builtins.get(property.value);\n      } else {\n        throw new Error(`Cannot access property with non-string/non-number: got ${property.type}`);\n      }\n    } else {\n      if (!(property instanceof StringValue)) {\n        throw new Error(`Cannot access property with non-string: got ${property.type}`);\n      }\n      value = object.builtins.get(property.value);\n    }\n    return value instanceof RuntimeValue ? value : new UndefinedValue();\n  }\n  evaluateSet(node, environment) {\n    const rhs = this.evaluate(node.value, environment);\n    if (node.assignee.type === \"Identifier\") {\n      const variableName = node.assignee.value;\n      environment.setVariable(variableName, rhs);\n    } else if (node.assignee.type === \"MemberExpression\") {\n      const member = node.assignee;\n      const object = this.evaluate(member.object, environment);\n      if (!(object instanceof ObjectValue)) {\n        throw new Error(\"Cannot assign to member of non-object\");\n      }\n      if (member.property.type !== \"Identifier\") {\n        throw new Error(\"Cannot assign to member with non-identifier property\");\n      }\n      object.value.set(member.property.value, rhs);\n    } else {\n      throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(node.assignee)}`);\n    }\n    return new NullValue();\n  }\n  evaluateIf(node, environment) {\n    const test = this.evaluate(node.test, environment);\n    return this.evaluateBlock(test.__bool__().value ? node.body : node.alternate, environment);\n  }\n  evaluateFor(node, environment) {\n    const scope = new Environment(environment);\n    let test, iterable;\n    if (node.iterable.type === \"SelectExpression\") {\n      const select = node.iterable;\n      iterable = this.evaluate(select.iterable, scope);\n      test = select.test;\n    } else {\n      iterable = this.evaluate(node.iterable, scope);\n    }\n    if (!(iterable instanceof ArrayValue)) {\n      throw new Error(`Expected iterable type in for loop: got ${iterable.type}`);\n    }\n    const items = [];\n    const scopeUpdateFunctions = [];\n    for (let i = 0; i < iterable.value.length; ++i) {\n      const loopScope = new Environment(scope);\n      const current = iterable.value[i];\n      let scopeUpdateFunction;\n      if (node.loopvar.type === \"Identifier\") {\n        scopeUpdateFunction = (scope2) => scope2.setVariable(node.loopvar.value, current);\n      } else if (node.loopvar.type === \"TupleLiteral\") {\n        const loopvar = node.loopvar;\n        if (current.type !== \"ArrayValue\") {\n          throw new Error(`Cannot unpack non-iterable type: ${current.type}`);\n        }\n        const c = current;\n        if (loopvar.value.length !== c.value.length) {\n          throw new Error(`Too ${loopvar.value.length > c.value.length ? \"few\" : \"many\"} items to unpack`);\n        }\n        scopeUpdateFunction = (scope2) => {\n          for (let j = 0; j < loopvar.value.length; ++j) {\n            if (loopvar.value[j].type !== \"Identifier\") {\n              throw new Error(`Cannot unpack non-identifier type: ${loopvar.value[j].type}`);\n            }\n            scope2.setVariable(loopvar.value[j].value, c.value[j]);\n          }\n        };\n      } else {\n        throw new Error(`Invalid loop variable(s): ${node.loopvar.type}`);\n      }\n      if (test) {\n        scopeUpdateFunction(loopScope);\n        const testValue = this.evaluate(test, loopScope);\n        if (!testValue.__bool__().value) {\n          continue;\n        }\n      }\n      items.push(current);\n      scopeUpdateFunctions.push(scopeUpdateFunction);\n    }\n    let result = \"\";\n    let noIteration = true;\n    for (let i = 0; i < items.length; ++i) {\n      const loop = /* @__PURE__ */ new Map([\n        [\"index\", new NumericValue(i + 1)],\n        [\"index0\", new NumericValue(i)],\n        [\"revindex\", new NumericValue(items.length - i)],\n        [\"revindex0\", new NumericValue(items.length - i - 1)],\n        [\"first\", new BooleanValue(i === 0)],\n        [\"last\", new BooleanValue(i === items.length - 1)],\n        [\"length\", new NumericValue(items.length)],\n        [\"previtem\", i > 0 ? items[i - 1] : new UndefinedValue()],\n        [\"nextitem\", i < items.length - 1 ? items[i + 1] : new UndefinedValue()]\n      ]);\n      scope.setVariable(\"loop\", new ObjectValue(loop));\n      scopeUpdateFunctions[i](scope);\n      const evaluated = this.evaluateBlock(node.body, scope);\n      result += evaluated.value;\n      noIteration = false;\n    }\n    if (noIteration) {\n      const defaultEvaluated = this.evaluateBlock(node.defaultBlock, scope);\n      result += defaultEvaluated.value;\n    }\n    return new StringValue(result);\n  }\n  /**\n   * See https://jinja.palletsprojects.com/en/3.1.x/templates/#macros for more information.\n   */\n  evaluateMacro(node, environment) {\n    environment.setVariable(\n      node.name.value,\n      new FunctionValue((args, scope) => {\n        const macroScope = new Environment(scope);\n        args = args.slice();\n        let kwargs;\n        if (args.at(-1)?.type === \"KeywordArgumentsValue\") {\n          kwargs = args.pop();\n        }\n        for (let i = 0; i < node.args.length; ++i) {\n          const nodeArg = node.args[i];\n          const passedArg = args[i];\n          if (nodeArg.type === \"Identifier\") {\n            const identifier = nodeArg;\n            if (!passedArg) {\n              throw new Error(`Missing positional argument: ${identifier.value}`);\n            }\n            macroScope.setVariable(identifier.value, passedArg);\n          } else if (nodeArg.type === \"KeywordArgumentExpression\") {\n            const kwarg = nodeArg;\n            const value = passedArg ?? // Try positional arguments first\n            kwargs?.value.get(kwarg.key.value) ?? // Look in user-passed kwargs\n            this.evaluate(kwarg.value, macroScope);\n            macroScope.setVariable(kwarg.key.value, value);\n          } else {\n            throw new Error(`Unknown argument type: ${nodeArg.type}`);\n          }\n        }\n        return this.evaluateBlock(node.body, macroScope);\n      })\n    );\n    return new NullValue();\n  }\n  evaluate(statement, environment) {\n    if (statement === void 0)\n      return new UndefinedValue();\n    switch (statement.type) {\n      case \"Program\":\n        return this.evalProgram(statement, environment);\n      case \"Set\":\n        return this.evaluateSet(statement, environment);\n      case \"If\":\n        return this.evaluateIf(statement, environment);\n      case \"For\":\n        return this.evaluateFor(statement, environment);\n      case \"Macro\":\n        return this.evaluateMacro(statement, environment);\n      case \"NumericLiteral\":\n        return new NumericValue(Number(statement.value));\n      case \"StringLiteral\":\n        return new StringValue(statement.value);\n      case \"BooleanLiteral\":\n        return new BooleanValue(statement.value);\n      case \"NullLiteral\":\n        return new NullValue(statement.value);\n      case \"ArrayLiteral\":\n        return new ArrayValue(statement.value.map((x) => this.evaluate(x, environment)));\n      case \"TupleLiteral\":\n        return new TupleValue(statement.value.map((x) => this.evaluate(x, environment)));\n      case \"ObjectLiteral\": {\n        const mapping = /* @__PURE__ */ new Map();\n        for (const [key, value] of statement.value) {\n          const evaluatedKey = this.evaluate(key, environment);\n          if (!(evaluatedKey instanceof StringValue)) {\n            throw new Error(`Object keys must be strings: got ${evaluatedKey.type}`);\n          }\n          mapping.set(evaluatedKey.value, this.evaluate(value, environment));\n        }\n        return new ObjectValue(mapping);\n      }\n      case \"Identifier\":\n        return this.evaluateIdentifier(statement, environment);\n      case \"CallExpression\":\n        return this.evaluateCallExpression(statement, environment);\n      case \"MemberExpression\":\n        return this.evaluateMemberExpression(statement, environment);\n      case \"UnaryExpression\":\n        return this.evaluateUnaryExpression(statement, environment);\n      case \"BinaryExpression\":\n        return this.evaluateBinaryExpression(statement, environment);\n      case \"FilterExpression\":\n        return this.evaluateFilterExpression(statement, environment);\n      case \"TestExpression\":\n        return this.evaluateTestExpression(statement, environment);\n      default:\n        throw new SyntaxError(`Unknown node type: ${statement.type}`);\n    }\n  }\n};\nfunction convertToRuntimeValues(input) {\n  switch (typeof input) {\n    case \"number\":\n      return new NumericValue(input);\n    case \"string\":\n      return new StringValue(input);\n    case \"boolean\":\n      return new BooleanValue(input);\n    case \"undefined\":\n      return new UndefinedValue();\n    case \"object\":\n      if (input === null) {\n        return new NullValue();\n      } else if (Array.isArray(input)) {\n        return new ArrayValue(input.map(convertToRuntimeValues));\n      } else {\n        return new ObjectValue(\n          new Map(Object.entries(input).map(([key, value]) => [key, convertToRuntimeValues(value)]))\n        );\n      }\n    case \"function\":\n      return new FunctionValue((args, _scope) => {\n        const result = input(...args.map((x) => x.value)) ?? null;\n        return convertToRuntimeValues(result);\n      });\n    default:\n      throw new Error(`Cannot convert to runtime value: ${input}`);\n  }\n}\nfunction toJSON(input, indent, depth) {\n  const currentDepth = depth ?? 0;\n  switch (input.type) {\n    case \"NullValue\":\n    case \"UndefinedValue\":\n      return \"null\";\n    case \"NumericValue\":\n    case \"StringValue\":\n    case \"BooleanValue\":\n      return JSON.stringify(input.value);\n    case \"ArrayValue\":\n    case \"ObjectValue\": {\n      const indentValue = indent ? \" \".repeat(indent) : \"\";\n      const basePadding = \"\\n\" + indentValue.repeat(currentDepth);\n      const childrenPadding = basePadding + indentValue;\n      if (input.type === \"ArrayValue\") {\n        const core = input.value.map((x) => toJSON(x, indent, currentDepth + 1));\n        return indent ? `[${childrenPadding}${core.join(`,${childrenPadding}`)}${basePadding}]` : `[${core.join(\", \")}]`;\n      } else {\n        const core = Array.from(input.value.entries()).map(([key, value]) => {\n          const v = `\"${key}\": ${toJSON(value, indent, currentDepth + 1)}`;\n          return indent ? `${childrenPadding}${v}` : v;\n        });\n        return indent ? `{${core.join(\",\")}${basePadding}}` : `{${core.join(\", \")}}`;\n      }\n    }\n    default:\n      throw new Error(`Cannot convert to JSON: ${input.type}`);\n  }\n}\n\n// src/index.ts\nvar Template = class {\n  parsed;\n  /**\n   * @param {string} template The template string\n   */\n  constructor(template) {\n    const tokens = tokenize(template, {\n      lstrip_blocks: true,\n      trim_blocks: true\n    });\n    this.parsed = parse(tokens);\n  }\n  render(items) {\n    const env = new Environment();\n    env.set(\"false\", false);\n    env.set(\"true\", true);\n    env.set(\"raise_exception\", (args) => {\n      throw new Error(args);\n    });\n    env.set(\"range\", range);\n    if (items) {\n      for (const [key, value] of Object.entries(items)) {\n        env.set(key, value);\n      }\n    }\n    const interpreter = new Interpreter(env);\n    const result = interpreter.run(this.parsed);\n    return result.value;\n  }\n};\n\n\n\n/***/ }),\n\n/***/ \"./src/backends/onnx.js\":\n/*!******************************!*\\\n  !*** ./src/backends/onnx.js ***!\n  \\******************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\nvar onnxruntime_node__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tensor: () => (/* reexport safe */ onnxruntime_common__WEBPACK_IMPORTED_MODULE_3__.Tensor),\n/* harmony export */   createInferenceSession: () => (/* binding */ createInferenceSession),\n/* harmony export */   deviceToExecutionProviders: () => (/* binding */ deviceToExecutionProviders),\n/* harmony export */   isONNXProxy: () => (/* binding */ isONNXProxy),\n/* harmony export */   isONNXTensor: () => (/* binding */ isONNXTensor)\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n/* harmony import */ var onnxruntime_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! onnxruntime-node */ \"?2ce3\");\n/* harmony import */ var onnxruntime_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! onnxruntime-web */ \"onnxruntime-web\");\n/* harmony import */ var onnxruntime_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! onnxruntime-common */ \"onnxruntime-common\");\n/**\n * @file Handler file for choosing the correct version of ONNX Runtime, based on the environment.\n * Ideally, we could import the `onnxruntime-web` and `onnxruntime-node` packages only when needed,\n * but dynamic imports don't seem to work with the current webpack version and/or configuration.\n * This is possibly due to the experimental nature of top-level await statements.\n * So, we just import both packages, and use the appropriate one based on the environment:\n *   - When running in node, we use `onnxruntime-node`.\n *   - When running in the browser, we use `onnxruntime-web` (`onnxruntime-node` is not bundled).\n * \n * This module is not directly exported, but can be accessed through the environment variables:\n * ```javascript\n * import { env } from '@huggingface/transformers';\n * console.log(env.backends.onnx);\n * ```\n * \n * @module backends/onnx\n */\n\n\n\n// NOTE: Import order matters here. We need to import `onnxruntime-node` before `onnxruntime-web`.\n// In either case, we select the default export if it exists, otherwise we use the named export.\n\n\n\n\n\n/**\n * @typedef {import('onnxruntime-common').InferenceSession.ExecutionProviderConfig} ONNXExecutionProviders\n */\n\n/** @type {Record<import(\"../utils/devices.js\").DeviceType, ONNXExecutionProviders>} */\nconst DEVICE_TO_EXECUTION_PROVIDER_MAPPING = Object.freeze({\n    auto: null, // Auto-detect based on device and environment\n    gpu: null, // Auto-detect GPU\n    cpu: 'cpu', // CPU\n    wasm: 'wasm', // WebAssembly\n    webgpu: 'webgpu', // WebGPU\n    cuda: 'cuda', // CUDA\n    dml: 'dml', // DirectML\n\n    webnn: { name: 'webnn', deviceType: 'cpu' }, // WebNN (default)\n    'webnn-npu': { name: 'webnn', deviceType: 'npu' }, // WebNN NPU\n    'webnn-gpu': { name: 'webnn', deviceType: 'gpu' }, // WebNN GPU\n    'webnn-cpu': { name: 'webnn', deviceType: 'cpu' }, // WebNN CPU\n});\n\n/** \n * The list of supported devices, sorted by priority/performance.\n * @type {import(\"../utils/devices.js\").DeviceType[]}\n */\nconst supportedDevices = [];\n\n/** @type {ONNXExecutionProviders[]} */\nlet defaultDevices;\nlet ONNX;\nconst ORT_SYMBOL = Symbol.for('onnxruntime');\n\nif (ORT_SYMBOL in globalThis) {\n    // If the JS runtime exposes their own ONNX runtime, use it\n    ONNX = globalThis[ORT_SYMBOL];\n\n} else if (_env_js__WEBPACK_IMPORTED_MODULE_0__.apis.IS_NODE_ENV) {\n    ONNX = onnxruntime_node__WEBPACK_IMPORTED_MODULE_1__ ?? /*#__PURE__*/ (onnxruntime_node__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (onnxruntime_node__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(onnxruntime_node__WEBPACK_IMPORTED_MODULE_1__, 2)));\n\n    // Updated as of ONNX Runtime 1.20.1\n    // The following table lists the supported versions of ONNX Runtime Node.js binding provided with pre-built binaries.\n    // | EPs/Platforms | Windows x64 | Windows arm64 | Linux x64         | Linux arm64 | MacOS x64 | MacOS arm64 |\n    // | ------------- | ----------- | ------------- | ----------------- | ----------- | --------- | ----------- |\n    // | CPU           | ✔️          | ✔️            | ✔️                | ✔️          | ✔️        | ✔️          |\n    // | DirectML      | ✔️          | ✔️            | ❌                | ❌          | ❌        | ❌          |\n    // | CUDA          | ❌          | ❌            | ✔️ (CUDA v11.8)   | ❌          | ❌        | ❌          |\n    switch (process.platform) {\n        case 'win32': // Windows x64 and Windows arm64\n            supportedDevices.push('dml');\n            break;\n        case 'linux': // Linux x64 and Linux arm64\n            if (process.arch === 'x64') {\n                supportedDevices.push('cuda');\n            }\n            break;\n        case 'darwin': // MacOS x64 and MacOS arm64\n            break;\n    }\n\n    supportedDevices.push('cpu');\n    defaultDevices = ['cpu'];\n} else {\n    ONNX = onnxruntime_web__WEBPACK_IMPORTED_MODULE_2__;\n\n    if (_env_js__WEBPACK_IMPORTED_MODULE_0__.apis.IS_WEBNN_AVAILABLE) {\n        // TODO: Only push supported providers (depending on available hardware)\n        supportedDevices.push('webnn-npu', 'webnn-gpu', 'webnn-cpu', 'webnn');\n    }\n\n    if (_env_js__WEBPACK_IMPORTED_MODULE_0__.apis.IS_WEBGPU_AVAILABLE) {\n        supportedDevices.push('webgpu');\n    }\n\n    supportedDevices.push('wasm');\n    defaultDevices = ['wasm'];\n}\n\n// @ts-ignore\nconst InferenceSession = ONNX.InferenceSession;\n\n/**\n * Map a device to the execution providers to use for the given device.\n * @param {import(\"../utils/devices.js\").DeviceType|\"auto\"|null} [device=null] (Optional) The device to run the inference on.\n * @returns {ONNXExecutionProviders[]} The execution providers to use for the given device.\n */\nfunction deviceToExecutionProviders(device = null) {\n    // Use the default execution providers if the user hasn't specified anything\n    if (!device) return defaultDevices;\n\n    // Handle overloaded cases\n    switch (device) {\n        case \"auto\":\n            return supportedDevices;\n        case \"gpu\":\n            return supportedDevices.filter(x =>\n                [\"webgpu\", \"cuda\", \"dml\", \"webnn-gpu\"].includes(x),\n            );\n    }\n\n    if (supportedDevices.includes(device)) {\n        return [DEVICE_TO_EXECUTION_PROVIDER_MAPPING[device] ?? device];\n    }\n\n    throw new Error(`Unsupported device: \"${device}\". Should be one of: ${supportedDevices.join(', ')}.`)\n}\n\n\n/**\n * To prevent multiple calls to `initWasm()`, we store the first call in a Promise\n * that is resolved when the first InferenceSession is created. Subsequent calls\n * will wait for this Promise to resolve before creating their own InferenceSession.\n * @type {Promise<any>|null}\n */\nlet wasmInitPromise = null;\n\n/**\n * Create an ONNX inference session.\n * @param {Uint8Array|string} buffer_or_path The ONNX model buffer or path.\n * @param {import('onnxruntime-common').InferenceSession.SessionOptions} session_options ONNX inference session options.\n * @param {Object} session_config ONNX inference session configuration.\n * @returns {Promise<import('onnxruntime-common').InferenceSession & { config: Object}>} The ONNX inference session.\n */\nasync function createInferenceSession(buffer_or_path, session_options, session_config) {\n    if (wasmInitPromise) {\n        // A previous session has already initialized the WASM runtime\n        // so we wait for it to resolve before creating this new session.\n        await wasmInitPromise;\n    }\n\n    const sessionPromise = InferenceSession.create(buffer_or_path, session_options);\n    wasmInitPromise ??= sessionPromise;\n    const session = await sessionPromise;\n    session.config = session_config;\n    return session;\n}\n\n/**\n * Check if an object is an ONNX tensor.\n * @param {any} x The object to check\n * @returns {boolean} Whether the object is an ONNX tensor.\n */\nfunction isONNXTensor(x) {\n    return x instanceof ONNX.Tensor;\n}\n\n/** @type {import('onnxruntime-common').Env} */\n// @ts-ignore\nconst ONNX_ENV = ONNX?.env;\nif (ONNX_ENV?.wasm) {\n    // Initialize wasm backend with suitable default settings.\n\n    // (Optional) Set path to wasm files. This will override the default path search behavior of onnxruntime-web.\n    // By default, we only do this if we are not in a service worker and the wasmPaths are not already set.\n    if (\n        // @ts-ignore Cannot find name 'ServiceWorkerGlobalScope'.ts(2304)\n        !(typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope)\n        && !ONNX_ENV.wasm.wasmPaths\n    ) {\n        ONNX_ENV.wasm.wasmPaths = `https://cdn.jsdelivr.net/npm/@huggingface/transformers@${_env_js__WEBPACK_IMPORTED_MODULE_0__.env.version}/dist/`;\n    }\n\n    // TODO: Add support for loading WASM files from cached buffer when we upgrade to onnxruntime-web@1.19.0\n    // https://github.com/microsoft/onnxruntime/pull/21534\n\n    // Users may wish to proxy the WASM backend to prevent the UI from freezing,\n    // However, this is not necessary when using WebGPU, so we default to false.\n    ONNX_ENV.wasm.proxy = false;\n}\n\nif (ONNX_ENV?.webgpu) {\n    ONNX_ENV.webgpu.powerPreference = 'high-performance';\n}\n\n/**\n * Check if ONNX's WASM backend is being proxied.\n * @returns {boolean} Whether ONNX's WASM backend is being proxied.\n */\nfunction isONNXProxy() {\n    // TODO: Update this when allowing non-WASM backends.\n    return ONNX_ENV?.wasm?.proxy;\n}\n\n// Expose ONNX environment variables to `env.backends.onnx`\n_env_js__WEBPACK_IMPORTED_MODULE_0__.env.backends.onnx = ONNX_ENV;\n\n\n/***/ }),\n\n/***/ \"./src/base/feature_extraction_utils.js\":\n/*!**********************************************!*\\\n  !*** ./src/base/feature_extraction_utils.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeatureExtractor: () => (/* binding */ FeatureExtractor),\n/* harmony export */   validate_audio_inputs: () => (/* binding */ validate_audio_inputs)\n/* harmony export */ });\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/hub.js */ \"./src/utils/hub.js\");\n\n\n\n\n/**\n * Base class for feature extractors.\n */\nclass FeatureExtractor extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_1__.Callable {\n    /**\n     * Constructs a new FeatureExtractor instance.\n     *\n     * @param {Object} config The configuration for the feature extractor.\n     */\n    constructor(config) {\n        super();\n        this.config = config\n    }\n\n    /**\n     * Instantiate one of the feature extractor classes of the library from a pretrained model.\n     * \n     * The feature extractor class to instantiate is selected based on the `feature_extractor_type` property of\n     * the config object (either passed as an argument or loaded from `pretrained_model_name_or_path` if possible)\n     * \n     * @param {string} pretrained_model_name_or_path The name or path of the pretrained model. Can be either:\n     * - A string, the *model id* of a pretrained feature_extractor hosted inside a model repo on huggingface.co.\n     *   Valid model ids can be located at the root-level, like `bert-base-uncased`, or namespaced under a\n     *   user or organization name, like `dbmdz/bert-base-german-cased`.\n     * - A path to a *directory* containing feature_extractor files, e.g., `./my_model_directory/`.\n     * @param {import('../utils/hub.js').PretrainedOptions} options Additional options for loading the feature_extractor.\n     * \n     * @returns {Promise<FeatureExtractor>} A new instance of the Feature Extractor class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, options) {\n        const config = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_2__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.FEATURE_EXTRACTOR_NAME, true, options);\n        return new this(config);\n    }\n}\n\n\n/**\n * Helper function to validate audio inputs.\n * @param {any} audio The audio data.\n * @param {string} feature_extractor The name of the feature extractor.\n * @private\n */\nfunction validate_audio_inputs(audio, feature_extractor) {\n    if (!(audio instanceof Float32Array || audio instanceof Float64Array)) {\n        throw new Error(\n            `${feature_extractor} expects input to be a Float32Array or a Float64Array, but got ${audio?.constructor?.name ?? typeof audio} instead. ` +\n            `If using the feature extractor directly, remember to use \\`read_audio(url, sampling_rate)\\` to obtain the raw audio data of the file/url.`\n        )\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/base/image_processors_utils.js\":\n/*!********************************************!*\\\n  !*** ./src/base/image_processors_utils.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageProcessor: () => (/* binding */ ImageProcessor),\n/* harmony export */   center_to_corners_format: () => (/* binding */ center_to_corners_format),\n/* harmony export */   post_process_instance_segmentation: () => (/* binding */ post_process_instance_segmentation),\n/* harmony export */   post_process_object_detection: () => (/* binding */ post_process_object_detection),\n/* harmony export */   post_process_panoptic_segmentation: () => (/* binding */ post_process_panoptic_segmentation),\n/* harmony export */   post_process_semantic_segmentation: () => (/* binding */ post_process_semantic_segmentation)\n/* harmony export */ });\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/image.js */ \"./src/utils/image.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/constants.js */ \"./src/utils/constants.js\");\n\n\n\n\n\n\n\n\n/**\n * Named tuple to indicate the order we are using is (height x width),\n * even though the Graphics' industry standard is (width x height).\n * @typedef {[height: number, width: number]} HeightWidth\n */\n\n\n/**\n * @typedef {object} ImageProcessorResult\n * @property {Tensor} pixel_values The pixel values of the batched preprocessed images.\n * @property {HeightWidth[]} original_sizes Array of two-dimensional tuples like [[480, 640]].\n * @property {HeightWidth[]} reshaped_input_sizes Array of two-dimensional tuples like [[1000, 1330]].\n */\n\n\n\n/**\n * Helper function to constrain a value to be a multiple of a number.\n * @param {number} val The value to constrain.\n * @param {number} multiple The number to constrain to.\n * @param {number} [minVal=0] The minimum value to constrain to.\n * @param {number} [maxVal=null] The maximum value to constrain to.\n * @returns {number} The constrained value.\n * @private\n */\nfunction constraint_to_multiple_of(val, multiple, minVal = 0, maxVal = null) {\n    const a = val / multiple;\n    let x = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.bankers_round)(a) * multiple;\n\n    if (maxVal !== null && x > maxVal) {\n        x = Math.floor(a) * multiple;\n    }\n\n    if (x < minVal) {\n        x = Math.ceil(a) * multiple;\n    }\n\n    return x;\n}\n\n/**\n * Rounds the height and width down to the closest multiple of size_divisibility\n * @param {[number, number]} size The size of the image\n * @param {number} divisor The divisor to use.\n * @returns {[number, number]} The rounded size.\n */\nfunction enforce_size_divisibility([width, height], divisor) {\n    return [\n        Math.max(Math.floor(width / divisor), 1) * divisor,\n        Math.max(Math.floor(height / divisor), 1) * divisor\n    ];\n}\n\n\n// Helper functions\n\n/**\n * Converts bounding boxes from center format to corners format.\n * \n * @param {number[]} arr The coordinate for the center of the box and its width, height dimensions (center_x, center_y, width, height)\n * @returns {number[]} The coodinates for the top-left and bottom-right corners of the box (top_left_x, top_left_y, bottom_right_x, bottom_right_y)\n */\nfunction center_to_corners_format([centerX, centerY, width, height]) {\n    return [\n        centerX - width / 2,\n        centerY - height / 2,\n        centerX + width / 2,\n        centerY + height / 2\n    ];\n}\n\n/**\n * Post-processes the outputs of the model (for object detection).\n * @param {Object} outputs The outputs of the model that must be post-processed\n * @param {Tensor} outputs.logits The logits\n * @param {Tensor} outputs.pred_boxes The predicted boxes.\n * @param {number} [threshold=0.5] The threshold to use for the scores.\n * @param {[number, number][]} [target_sizes=null] The sizes of the original images.\n * @param {boolean} [is_zero_shot=false] Whether zero-shot object detection was performed.\n * @return {Object[]} An array of objects containing the post-processed outputs.\n */\nfunction post_process_object_detection(outputs, threshold = 0.5, target_sizes = null, is_zero_shot = false) {\n    const out_logits = outputs.logits;\n    const out_bbox = outputs.pred_boxes;\n    const [batch_size, num_boxes, num_classes] = out_logits.dims;\n\n    if (target_sizes !== null && target_sizes.length !== batch_size) {\n        throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\")\n    }\n    let toReturn = [];\n    for (let i = 0; i < batch_size; ++i) {\n        let target_size = target_sizes !== null ? target_sizes[i] : null;\n        let info = {\n            boxes: [],\n            classes: [],\n            scores: []\n        }\n        let logits = out_logits[i];\n        let bbox = out_bbox[i];\n\n        for (let j = 0; j < num_boxes; ++j) {\n            let logit = logits[j];\n\n            let indices = [];\n            let probs;\n            if (is_zero_shot) {\n                // Get indices of classes with high enough probability\n                probs = logit.sigmoid().data;\n                for (let k = 0; k < probs.length; ++k) {\n                    if (probs[k] > threshold) {\n                        indices.push(k);\n                    }\n                }\n\n            } else {\n                // Get most probable class\n                let maxIndex = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(logit.data)[1];\n\n                if (maxIndex === num_classes - 1) {\n                    // This is the background class, skip it\n                    continue;\n                }\n                // Compute softmax over classes\n                probs = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.softmax)(logit.data);\n\n                if (probs[maxIndex] < threshold) {\n                    continue;\n                }\n                indices.push(maxIndex);\n            }\n\n            for (const index of indices) {\n\n                // Some class has a high enough probability\n                /** @type {number[]} */\n                let box = bbox[j].data;\n\n                // convert to [x0, y0, x1, y1] format\n                box = center_to_corners_format(box)\n                if (target_size !== null) {\n                    box = box.map((x, i) => x * target_size[(i + 1) % 2])\n                }\n\n                info.boxes.push(box);\n                info.classes.push(index);\n                info.scores.push(probs[index]);\n            }\n        }\n        toReturn.push(info);\n    }\n    return toReturn;\n}\n\n\n/**\n * Post-processes the outputs of the model (for semantic segmentation).\n * @param {*} outputs Raw outputs of the model.\n * @param {[number, number][]} [target_sizes=null] List of tuples corresponding to the requested final size\n * (height, width) of each prediction. If unset, predictions will not be resized.\n * @returns {{segmentation: Tensor; labels: number[]}[]} The semantic segmentation maps.\n */\nfunction post_process_semantic_segmentation(outputs, target_sizes = null) {\n\n    const logits = outputs.logits;\n    const batch_size = logits.dims[0];\n\n    if (target_sizes !== null && target_sizes.length !== batch_size) {\n        throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\")\n    }\n\n    const toReturn = [];\n    for (let i = 0; i < batch_size; ++i) {\n        const target_size = target_sizes !== null ? target_sizes[i] : null;\n\n        let data = logits[i];\n\n        // 1. If target_size is not null, we need to resize the masks to the target size\n        if (target_size !== null) {\n            // resize the masks to the target size\n            data = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate)(data, target_size, 'bilinear', false);\n        }\n        const [height, width] = target_size ?? data.dims.slice(-2);\n\n        const segmentation = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n            'int32',\n            new Int32Array(height * width),\n            [height, width]\n        );\n\n        // Buffer to store current largest value\n        const buffer = data[0].data;\n        const segmentation_data = segmentation.data;\n        for (let j = 1; j < data.dims[0]; ++j) {\n            const row = data[j].data;\n            for (let k = 0; k < row.length; ++k) {\n                if (row[k] > buffer[k]) {\n                    buffer[k] = row[k];\n                    segmentation_data[k] = j;\n                }\n            }\n        }\n\n        // Store which objects have labels\n        // This is much more efficient that creating a set of the final values\n        const hasLabel = new Array(data.dims[0]);\n        for (let j = 0; j < segmentation_data.length; ++j) {\n            const index = segmentation_data[j];\n            hasLabel[index] = index;\n        }\n        /** @type {number[]} The unique list of labels that were detected */\n        const labels = hasLabel.filter(x => x !== undefined);\n\n        toReturn.push({ segmentation, labels });\n    }\n    return toReturn;\n}\n\n\n/**\n * Binarize the given masks using `object_mask_threshold`, it returns the associated values of `masks`, `scores` and `labels`.\n * @param {Tensor} class_logits The class logits.\n * @param {Tensor} mask_logits The mask logits.\n * @param {number} object_mask_threshold A number between 0 and 1 used to binarize the masks.\n * @param {number} num_labels The number of labels.\n * @returns {[Tensor[], number[], number[]]} The binarized masks, the scores, and the labels.\n * @private\n */\nfunction remove_low_and_no_objects(class_logits, mask_logits, object_mask_threshold, num_labels) {\n\n    const mask_probs_item = [];\n    const pred_scores_item = [];\n    const pred_labels_item = [];\n\n    for (let j = 0; j < class_logits.dims[0]; ++j) {\n        const cls = class_logits[j];\n        const mask = mask_logits[j];\n\n        const pred_label = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(cls.data)[1];\n        if (pred_label === num_labels) {\n            // Is the background, so we ignore it\n            continue;\n        }\n\n        const scores = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.softmax)(cls.data);\n        const pred_score = scores[pred_label];\n        if (pred_score > object_mask_threshold) {\n            mask_probs_item.push(mask);\n            pred_scores_item.push(pred_score);\n            pred_labels_item.push(pred_label);\n        }\n    }\n\n    return [mask_probs_item, pred_scores_item, pred_labels_item];\n}\n\n/**\n * Checks whether the segment is valid or not.\n * @param {Int32Array} mask_labels Labels for each pixel in the mask.\n * @param {Tensor[]} mask_probs Probabilities for each pixel in the masks.\n * @param {number} k The class id of the segment.\n * @param {number} mask_threshold The mask threshold.\n * @param {number} overlap_mask_area_threshold The overlap mask area threshold.\n * @returns {[boolean, number[]]} Whether the segment is valid or not, and the indices of the valid labels.\n * @private\n */\nfunction check_segment_validity(\n    mask_labels,\n    mask_probs,\n    k,\n    mask_threshold = 0.5,\n    overlap_mask_area_threshold = 0.8\n) {\n    // mask_k is a 1D array of indices, indicating where the mask is equal to k\n    const mask_k = [];\n    let mask_k_area = 0;\n    let original_area = 0;\n\n    const mask_probs_k_data = mask_probs[k].data;\n\n    // Compute the area of all the stuff in query k\n    for (let i = 0; i < mask_labels.length; ++i) {\n        if (mask_labels[i] === k) {\n            mask_k.push(i);\n            ++mask_k_area;\n        }\n\n        if (mask_probs_k_data[i] >= mask_threshold) {\n            ++original_area;\n        }\n    }\n    let mask_exists = mask_k_area > 0 && original_area > 0;\n\n    // Eliminate disconnected tiny segments\n    if (mask_exists) {\n        // Perform additional check\n        let area_ratio = mask_k_area / original_area;\n        mask_exists = area_ratio > overlap_mask_area_threshold;\n    }\n\n    return [mask_exists, mask_k]\n}\n\n/**\n * Computes the segments.\n * @param {Tensor[]} mask_probs The mask probabilities.\n * @param {number[]} pred_scores The predicted scores.\n * @param {number[]} pred_labels The predicted labels.\n * @param {number} mask_threshold The mask threshold.\n * @param {number} overlap_mask_area_threshold The overlap mask area threshold.\n * @param {Set<number>} label_ids_to_fuse The label ids to fuse.\n * @param {number[]} target_size The target size of the image.\n * @returns {[Tensor, Array<{id: number, label_id: number, score: number}>]} The computed segments.\n * @private\n */\nfunction compute_segments(\n    mask_probs,\n    pred_scores,\n    pred_labels,\n    mask_threshold,\n    overlap_mask_area_threshold,\n    label_ids_to_fuse = null,\n    target_size = null,\n) {\n    const [height, width] = target_size ?? mask_probs[0].dims;\n\n    const segmentation = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n        'int32',\n        new Int32Array(height * width),\n        [height, width]\n    );\n    const segments = [];\n\n    // 1. If target_size is not null, we need to resize the masks to the target size\n    if (target_size !== null) {\n        // resize the masks to the target size\n        for (let i = 0; i < mask_probs.length; ++i) {\n            mask_probs[i] = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate)(mask_probs[i], target_size, 'bilinear', false);\n        }\n    }\n\n    // 2. Weigh each mask by its prediction score\n    // NOTE: `mask_probs` is updated in-place\n    // \n    // Temporary storage for the best label/scores for each pixel ([height, width]):\n    const mask_labels = new Int32Array(mask_probs[0].data.length);\n    const bestScores = new Float32Array(mask_probs[0].data.length);\n\n    for (let i = 0; i < mask_probs.length; ++i) {\n        let score = pred_scores[i];\n\n        const mask_probs_i_data = mask_probs[i].data;\n\n        for (let j = 0; j < mask_probs_i_data.length; ++j) {\n            mask_probs_i_data[j] *= score\n            if (mask_probs_i_data[j] > bestScores[j]) {\n                mask_labels[j] = i;\n                bestScores[j] = mask_probs_i_data[j];\n            }\n        }\n    }\n\n    let current_segment_id = 0;\n\n    // let stuff_memory_list = {}\n    const segmentation_data = segmentation.data;\n    for (let k = 0; k < pred_labels.length; ++k) {\n        const pred_class = pred_labels[k];\n\n        // TODO add `should_fuse`\n        // let should_fuse = pred_class in label_ids_to_fuse\n\n        // Check if mask exists and large enough to be a segment\n        const [mask_exists, mask_k] = check_segment_validity(\n            mask_labels,\n            mask_probs,\n            k,\n            mask_threshold,\n            overlap_mask_area_threshold\n        )\n\n        if (!mask_exists) {\n            // Nothing to see here\n            continue;\n        }\n\n        // TODO\n        // if (pred_class in stuff_memory_list) {\n        //     current_segment_id = stuff_memory_list[pred_class]\n        // } else {\n        //     current_segment_id += 1;\n        // }\n        ++current_segment_id;\n\n\n        // Add current object segment to final segmentation map\n        for (const index of mask_k) {\n            segmentation_data[index] = current_segment_id;\n        }\n\n        segments.push({\n            id: current_segment_id,\n            label_id: pred_class,\n            // was_fused: should_fuse, TODO\n            score: pred_scores[k],\n        })\n\n        // TODO\n        // if(should_fuse){\n        //     stuff_memory_list[pred_class] = current_segment_id\n        // }\n    }\n\n    return [segmentation, segments];\n}\n\n/**\n * Rescales the image so that the following conditions are met:\n *\n * 1. Both dimensions (height and width) are divisible by 'factor'.\n * 2. The total number of pixels is within the range ['min_pixels', 'max_pixels'].\n * 3. The aspect ratio of the image is maintained as closely as possible.\n * \n * @param {number} height The height of the image.\n * @param {number} width The width of the image.\n * @param {number} [factor=28] The factor to use for resizing.\n * @param {number} [min_pixels=56*56] The minimum number of pixels.\n * @param {number} [max_pixels=14*14*4*1280] The maximum number of pixels.\n * @returns {[number, number]} The new height and width of the image.\n * @throws {Error} If the height or width is smaller than the factor.\n */\nfunction smart_resize(height, width, factor = 28, min_pixels = 56 * 56, max_pixels = 14 * 14 * 4 * 1280) {\n\n    if (height < factor || width < factor) {\n        throw new Error(`height:${height} or width:${width} must be larger than factor:${factor}`);\n    } else if (Math.max(height, width) / Math.min(height, width) > 200) {\n        throw new Error(\n            `absolute aspect ratio must be smaller than 200, got ${Math.max(height, width) / Math.min(height, width)}`\n        );\n    }\n\n    let h_bar = Math.round(height / factor) * factor;\n    let w_bar = Math.round(width / factor) * factor;\n\n    if (h_bar * w_bar > max_pixels) {\n        const beta = Math.sqrt((height * width) / max_pixels);\n        h_bar = Math.floor((height / beta) / factor) * factor;\n        w_bar = Math.floor((width / beta) / factor) * factor;\n    } else if (h_bar * w_bar < min_pixels) {\n        const beta = Math.sqrt(min_pixels / (height * width));\n        h_bar = Math.ceil((height * beta) / factor) * factor;\n        w_bar = Math.ceil((width * beta) / factor) * factor;\n    }\n\n    return [h_bar, w_bar];\n}\n\n\n/**\n * Post-process the model output to generate the final panoptic segmentation.\n * @param {*} outputs The model output to post process\n * @param {number} [threshold=0.5] The probability score threshold to keep predicted instance masks.\n * @param {number} [mask_threshold=0.5] Threshold to use when turning the predicted masks into binary values.\n * @param {number} [overlap_mask_area_threshold=0.8] The overlap mask area threshold to merge or discard small disconnected parts within each binary instance mask.\n * @param {Set<number>} [label_ids_to_fuse=null] The labels in this state will have all their instances be fused together.\n * @param {[number, number][]} [target_sizes=null] The target sizes to resize the masks to.\n * @returns {Array<{ segmentation: Tensor, segments_info: Array<{id: number, label_id: number, score: number}>}>}\n */\nfunction post_process_panoptic_segmentation(\n    outputs,\n    threshold = 0.5,\n    mask_threshold = 0.5,\n    overlap_mask_area_threshold = 0.8,\n    label_ids_to_fuse = null,\n    target_sizes = null,\n) {\n    if (label_ids_to_fuse === null) {\n        console.warn(\"`label_ids_to_fuse` unset. No instance will be fused.\")\n        label_ids_to_fuse = new Set();\n    }\n\n    const class_queries_logits = outputs.class_queries_logits ?? outputs.logits; // [batch_size, num_queries, num_classes+1]\n    const masks_queries_logits = outputs.masks_queries_logits ?? outputs.pred_masks; // [batch_size, num_queries, height, width]\n\n    const mask_probs = masks_queries_logits.sigmoid()  // [batch_size, num_queries, height, width]\n\n    let [batch_size, num_queries, num_labels] = class_queries_logits.dims;\n    num_labels -= 1; // Remove last class (background)\n\n    if (target_sizes !== null && target_sizes.length !== batch_size) {\n        throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\")\n    }\n\n    let toReturn = [];\n    for (let i = 0; i < batch_size; ++i) {\n        let target_size = target_sizes !== null ? target_sizes[i] : null;\n\n        let class_logits = class_queries_logits[i];\n        let mask_logits = mask_probs[i];\n\n        let [mask_probs_item, pred_scores_item, pred_labels_item] = remove_low_and_no_objects(class_logits, mask_logits, threshold, num_labels);\n\n        if (pred_labels_item.length === 0) {\n            // No mask found\n            let [height, width] = target_size ?? mask_logits.dims.slice(-2);\n\n            let segmentation = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n                'int32',\n                new Int32Array(height * width).fill(-1),\n                [height, width]\n            )\n            toReturn.push({\n                segmentation: segmentation,\n                segments_info: []\n            });\n            continue;\n        }\n\n\n        // Get segmentation map and segment information of batch item\n        let [segmentation, segments] = compute_segments(\n            mask_probs_item,\n            pred_scores_item,\n            pred_labels_item,\n            mask_threshold,\n            overlap_mask_area_threshold,\n            label_ids_to_fuse,\n            target_size,\n        )\n\n        toReturn.push({\n            segmentation: segmentation,\n            segments_info: segments\n        })\n    }\n\n    return toReturn;\n}\n\n\n/**\n * Post-processes the outputs of the model (for instance segmentation).\n * @param {*} outputs Raw outputs of the model.\n * @param {number} [threshold=0.5] The probability score threshold to keep predicted instance masks.\n * @param {[number, number][]} [target_sizes=null] List of tuples corresponding to the requested final size\n * (height, width) of each prediction. If unset, predictions will not be resized.\n * @returns {Array<{ segmentation: Tensor, segments_info: Array<{id: number, label_id: number, score: number}>}>}\n */\nfunction post_process_instance_segmentation(outputs, threshold = 0.5, target_sizes = null) {\n    throw new Error('`post_process_instance_segmentation` is not yet implemented.');\n}\n\n\n/**\n * @typedef {Object} ImageProcessorConfig A configuration object used to create an image processor.    \n * @property {function} [progress_callback=null] If specified, this function will be called during model construction, to provide the user with progress updates.\n * @property {number[]} [image_mean] The mean values for image normalization.\n * @property {number[]} [image_std] The standard deviation values for image normalization.\n * @property {boolean} [do_rescale] Whether to rescale the image pixel values to the [0,1] range.\n * @property {number} [rescale_factor] The factor to use for rescaling the image pixel values.\n * @property {boolean} [do_normalize] Whether to normalize the image pixel values.\n * @property {boolean} [do_resize] Whether to resize the image.\n * @property {number} [resample] What method to use for resampling.\n * @property {number|Object} [size] The size to resize the image to.\n * @property {number|Object} [image_size] The size to resize the image to (same as `size`).\n * @property {boolean} [do_flip_channel_order=false] Whether to flip the color channels from RGB to BGR.\n * Can be overridden by the `do_flip_channel_order` parameter in the `preprocess` method.\n * @property {boolean} [do_center_crop] Whether to center crop the image to the specified `crop_size`.\n * Can be overridden by `do_center_crop` in the `preprocess` method.\n * @property {boolean} [do_thumbnail] Whether to resize the image using thumbnail method.\n * @property {boolean} [keep_aspect_ratio] If `true`, the image is resized to the largest possible size such that the aspect ratio is preserved.\n * Can be overidden by `keep_aspect_ratio` in `preprocess`.\n * @property {number} [ensure_multiple_of] If `do_resize` is `true`, the image is resized to a size that is a multiple of this value.\n * Can be overidden by `ensure_multiple_of` in `preprocess`.\n * \n * @property {number[]} [mean] The mean values for image normalization (same as `image_mean`).\n * @property {number[]} [std] The standard deviation values for image normalization (same as `image_std`).\n */\n\nclass ImageProcessor extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n\n    /**\n     * Constructs a new `ImageProcessor`.\n     * @param {ImageProcessorConfig} config The configuration object.\n     */\n    constructor(config) {\n        super();\n\n        this.image_mean = config.image_mean ?? config.mean;\n        this.image_std = config.image_std ?? config.std;\n\n        this.resample = config.resample ?? 2; // 2 => bilinear\n        this.do_rescale = config.do_rescale ?? true;\n        this.rescale_factor = config.rescale_factor ?? (1 / 255);\n        this.do_normalize = config.do_normalize;\n\n        this.do_thumbnail = config.do_thumbnail;\n        this.size = config.size ?? config.image_size;\n        this.do_resize = config.do_resize ?? (this.size !== undefined);\n        // @ts-expect-error TS2339\n        this.size_divisibility = config.size_divisibility ?? config.size_divisor;\n\n        this.do_center_crop = config.do_center_crop;\n        // @ts-expect-error TS2339\n        this.crop_size = config.crop_size;\n        // @ts-expect-error TS2339\n        this.do_convert_rgb = config.do_convert_rgb ?? true;\n        // @ts-expect-error TS2339\n        this.do_crop_margin = config.do_crop_margin;\n\n        // @ts-expect-error TS2339\n        this.pad_size = config.pad_size;\n        // @ts-expect-error TS2339\n        this.do_pad = config.do_pad;\n\n        if (this.do_pad && !this.pad_size && this.size && this.size.width !== undefined && this.size.height !== undefined) {\n            // Should pad, but no pad size specified\n            // We infer the pad size from the resize size\n            this.pad_size = this.size\n        }\n\n        this.do_flip_channel_order = config.do_flip_channel_order ?? false;\n\n        this.config = config;\n    }\n\n    /**\n     * Resize the image to make a thumbnail. The image is resized so that no dimension is larger than any\n     * corresponding dimension of the specified size.\n     * @param {RawImage} image The image to be resized.\n     * @param {{height:number, width:number}} size The size `{\"height\": h, \"width\": w}` to resize the image to.\n     * @param {string | 0 | 1 | 2 | 3 | 4 | 5} [resample=2] The resampling filter to use.\n     * @returns {Promise<RawImage>} The resized image.\n     */\n    async thumbnail(image, size, resample = 2) {\n        const input_height = image.height;\n        const input_width = image.width;\n\n        const output_height = size.height;\n        const output_width = size.width;\n\n        // We always resize to the smallest of either the input or output size.\n        let height = Math.min(input_height, output_height)\n        let width = Math.min(input_width, output_width)\n\n        if (height === input_height && width === input_width) {\n            return image;\n        }\n        if (input_height > input_width) {\n            width = Math.floor(input_width * height / input_height);\n        } else if (input_width > input_height) {\n            height = Math.floor(input_height * width / input_width);\n        }\n        return await image.resize(width, height, { resample });\n    }\n\n\n    /**\n     * Crops the margin of the image. Gray pixels are considered margin (i.e., pixels with a value below the threshold).\n     * @param {RawImage} image The image to be cropped.\n     * @param {number} gray_threshold Value below which pixels are considered to be gray.\n     * @returns {Promise<RawImage>} The cropped image.\n     */\n    async crop_margin(image, gray_threshold = 200) {\n\n        const gray_image = image.clone().grayscale();\n\n        const minValue = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.min)(gray_image.data)[0];\n        const maxValue = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(gray_image.data)[0];\n        const diff = maxValue - minValue;\n\n        if (diff === 0) {\n            return image;\n        }\n\n        const threshold = gray_threshold / 255;\n\n        let x_min = gray_image.width, y_min = gray_image.height, x_max = 0, y_max = 0;\n        const gray_image_data = gray_image.data;\n        for (let j = 0; j < gray_image.height; ++j) {\n            const row = j * gray_image.width;\n            for (let i = 0; i < gray_image.width; ++i) {\n                if ((gray_image_data[row + i] - minValue) / diff < threshold) {\n                    // We have a non-zero pixel, so we update the min/max values accordingly\n                    x_min = Math.min(x_min, i);\n                    y_min = Math.min(y_min, j);\n                    x_max = Math.max(x_max, i);\n                    y_max = Math.max(y_max, j);\n                }\n            }\n        }\n\n        image = await image.crop([x_min, y_min, x_max, y_max]);\n        return image;\n    }\n\n    /**\n     * Pad the image by a certain amount.\n     * @param {Float32Array} pixelData The pixel data to pad.\n     * @param {number[]} imgDims The dimensions of the image (height, width, channels).\n     * @param {{width:number; height:number}|number|'square'} padSize The dimensions of the padded image.\n     * @param {Object} options The options for padding.\n     * @param {'constant'|'symmetric'} [options.mode='constant'] The type of padding to add.\n     * @param {boolean} [options.center=false] Whether to center the image.\n     * @param {number|number[]} [options.constant_values=0] The constant value to use for padding.\n     * @returns {[Float32Array, number[]]} The padded pixel data and image dimensions.\n     */\n    pad_image(pixelData, imgDims, padSize, {\n        mode = 'constant',\n        center = false,\n        constant_values = 0,\n    } = {}) {\n        const [imageHeight, imageWidth, imageChannels] = imgDims;\n\n        let paddedImageWidth, paddedImageHeight;\n        if (typeof padSize === 'number') {\n            paddedImageWidth = padSize;\n            paddedImageHeight = padSize;\n        } else if (padSize === 'square') {\n            paddedImageWidth = paddedImageHeight = Math.max(imageHeight, imageWidth);\n        } else {\n            paddedImageWidth = padSize.width;\n            paddedImageHeight = padSize.height;\n        }\n\n        // Only add padding if there is a difference in size\n        if (paddedImageWidth !== imageWidth || paddedImageHeight !== imageHeight) {\n            const paddedPixelData = new Float32Array(paddedImageWidth * paddedImageHeight * imageChannels);\n            if (Array.isArray(constant_values)) {\n                // Fill with constant values, cycling through the array\n                for (let i = 0; i < paddedPixelData.length; ++i) {\n                    paddedPixelData[i] = constant_values[i % imageChannels];\n                }\n            } else if (constant_values !== 0) {\n                paddedPixelData.fill(constant_values);\n            }\n\n            const [left, top] = center\n                ? [Math.floor((paddedImageWidth - imageWidth) / 2), Math.floor((paddedImageHeight - imageHeight) / 2)]\n                : [0, 0];\n\n            // Copy the original image into the padded image\n            for (let i = 0; i < imageHeight; ++i) {\n                const a = (i + top) * paddedImageWidth;\n                const b = i * imageWidth;\n                for (let j = 0; j < imageWidth; ++j) {\n                    const c = (a + j + left) * imageChannels;\n                    const d = (b + j) * imageChannels;\n                    for (let k = 0; k < imageChannels; ++k) {\n                        paddedPixelData[c + k] = pixelData[d + k];\n                    }\n                }\n            }\n\n            if (mode === 'symmetric') {\n                if (center) {\n                    throw new Error('`center` padding is not supported when `mode` is set to `symmetric`.');\n                    // TODO: Implement this\n                }\n                const h1 = imageHeight - 1;\n                const w1 = imageWidth - 1;\n                for (let i = 0; i < paddedImageHeight; ++i) {\n                    const a = i * paddedImageWidth;\n                    const b = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.calculateReflectOffset)(i, h1) * imageWidth;\n\n                    for (let j = 0; j < paddedImageWidth; ++j) {\n                        if (i < imageHeight && j < imageWidth) continue; // Do not overwrite original image\n                        const c = (a + j) * imageChannels;\n                        const d = (b + (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.calculateReflectOffset)(j, w1)) * imageChannels;\n\n                        // Copy channel-wise\n                        for (let k = 0; k < imageChannels; ++k) {\n                            paddedPixelData[c + k] = pixelData[d + k];\n                        }\n                    }\n                }\n            }\n\n\n            // Update pixel data and image dimensions\n            pixelData = paddedPixelData;\n            imgDims = [paddedImageHeight, paddedImageWidth, imageChannels]\n        }\n        return [pixelData, imgDims];\n    }\n\n    /**\n     * Rescale the image' pixel values by `this.rescale_factor`.\n     * @param {Float32Array} pixelData The pixel data to rescale.\n     * @returns {void}\n     */\n    rescale(pixelData) {\n        for (let i = 0; i < pixelData.length; ++i) {\n            pixelData[i] = this.rescale_factor * pixelData[i];\n        }\n    }\n\n    /**\n     * Find the target (width, height) dimension of the output image after\n     * resizing given the input image and the desired size.\n     * @param {RawImage} image The image to resize.\n     * @param {any} size The size to use for resizing the image. \n     * @returns {[number, number]} The target (width, height) dimension of the output image after resizing.\n     */\n    get_resize_output_image_size(image, size) {\n        // `size` comes in many forms, so we need to handle them all here:\n        // 1. `size` is an integer, in which case we resize the image to be a square \n\n        const [srcWidth, srcHeight] = image.size;\n\n        let shortest_edge;\n        let longest_edge;\n\n        if (this.do_thumbnail) {\n            // NOTE: custom logic for `Donut` models\n            const { height, width } = size;\n            shortest_edge = Math.min(height, width)\n        }\n        // Support both formats for backwards compatibility\n        else if (Number.isInteger(size)) {\n            shortest_edge = size;\n            // @ts-expect-error TS2339\n            longest_edge = this.config.max_size ?? shortest_edge;\n\n        } else if (size !== undefined) {\n            // Extract known properties from `size`\n            shortest_edge = size.shortest_edge;\n            longest_edge = size.longest_edge;\n        }\n\n        // If `longest_edge` and `shortest_edge` are set, maintain aspect ratio and resize to `shortest_edge`\n        // while keeping the largest dimension <= `longest_edge`\n        if (shortest_edge !== undefined || longest_edge !== undefined) {\n            // http://opensourcehacker.com/2011/12/01/calculate-aspect-ratio-conserving-resize-for-images-in-javascript/\n            // Try resize so that shortest edge is `shortest_edge` (target)\n            const shortResizeFactor = shortest_edge === undefined\n                ? 1 // If `shortest_edge` is not set, don't upscale\n                : Math.max(shortest_edge / srcWidth, shortest_edge / srcHeight);\n\n            const newWidth = srcWidth * shortResizeFactor;\n            const newHeight = srcHeight * shortResizeFactor;\n\n            // The new width and height might be greater than `longest_edge`, so\n            // we downscale again to ensure the largest dimension is `longest_edge` \n            const longResizeFactor = longest_edge === undefined\n                ? 1 // If `longest_edge` is not set, don't downscale\n                : Math.min(longest_edge / newWidth, longest_edge / newHeight);\n\n            // To avoid certain floating point precision issues, we round to 2 decimal places\n            let finalWidth = Math.floor(Number((newWidth * longResizeFactor).toFixed(2)));\n            let finalHeight = Math.floor(Number((newHeight * longResizeFactor).toFixed(2)));\n\n            if (this.size_divisibility !== undefined) {\n                [finalWidth, finalHeight] = enforce_size_divisibility([finalWidth, finalHeight], this.size_divisibility)\n            }\n            return [finalWidth, finalHeight];\n\n        } else if (size !== undefined && size.width !== undefined && size.height !== undefined) {\n            // If `width` and `height` are set, resize to those dimensions\n\n            let newWidth = size.width;\n            let newHeight = size.height;\n\n            // Custom for DPT models\n            if (this.config.keep_aspect_ratio && this.config.ensure_multiple_of) {\n\n                // determine new height and width\n                let scale_height = newHeight / srcHeight;\n                let scale_width = newWidth / srcWidth;\n\n                // scale as little as possible\n                if (Math.abs(1 - scale_width) < Math.abs(1 - scale_height)) {\n                    // fit width\n                    scale_height = scale_width;\n                } else {\n                    // fit height\n                    scale_width = scale_height;\n                }\n\n                newHeight = constraint_to_multiple_of(scale_height * srcHeight, this.config.ensure_multiple_of);\n                newWidth = constraint_to_multiple_of(scale_width * srcWidth, this.config.ensure_multiple_of);\n            }\n\n            return [newWidth, newHeight];\n\n        } else if (this.size_divisibility !== undefined) {\n            return enforce_size_divisibility([srcWidth, srcHeight], this.size_divisibility);\n        } else if (size.min_pixels !== undefined && size.max_pixels !== undefined) {\n            // Custom resize logic for Qwen2-VL models\n            const { min_pixels, max_pixels } = size;\n            // @ts-expect-error TS2339\n            const factor = this.config.patch_size * this.config.merge_size;\n            return smart_resize(srcHeight, srcWidth, factor, min_pixels, max_pixels);\n        } else {\n            throw new Error(`Could not resize image due to unsupported \\`this.size\\` option in config: ${JSON.stringify(size)}`);\n        }\n    }\n\n    /**\n     * Resizes the image.\n     * @param {RawImage} image The image to resize.\n     * @returns {Promise<RawImage>} The resized image.\n     */\n    async resize(image) {\n        const [newWidth, newHeight] = this.get_resize_output_image_size(image, this.size);\n        return await image.resize(newWidth, newHeight, {\n            // @ts-expect-error TS2322\n            resample: this.resample,\n        });\n    }\n\n    /**\n     * @typedef {object} PreprocessedImage\n     * @property {HeightWidth} original_size The original size of the image.\n     * @property {HeightWidth} reshaped_input_size The reshaped input size of the image.\n     * @property {Tensor} pixel_values The pixel values of the preprocessed image.\n     */\n\n    /**\n     * Preprocesses the given image.\n     *\n     * @param {RawImage} image The image to preprocess.\n     * @param {Object} overrides The overrides for the preprocessing options.\n     * @returns {Promise<PreprocessedImage>} The preprocessed image.\n     */\n    async preprocess(image, {\n        do_normalize = null,\n        do_pad = null,\n        do_convert_rgb = null,\n        do_convert_grayscale = null,\n        do_flip_channel_order = null,\n    } = {}) {\n        if (this.do_crop_margin) {\n            // NOTE: Specific to nougat processors. This is done before resizing,\n            // and can be interpreted as a pre-preprocessing step.\n            image = await this.crop_margin(image);\n        }\n\n        const [srcWidth, srcHeight] = image.size; // original image size\n\n        // Convert image to RGB if specified in config.\n        if (do_convert_rgb ?? this.do_convert_rgb) {\n            image = image.rgb();\n        } else if (do_convert_grayscale) {\n            image = image.grayscale();\n        }\n\n        // TODO:\n        // For efficiency reasons, it might be best to merge the resize and center crop operations into one.\n\n        // Resize all images\n        if (this.do_resize) {\n            image = await this.resize(image);\n        }\n\n        // Resize the image using thumbnail method.\n        if (this.do_thumbnail) {\n            // @ts-expect-error TS2345\n            image = await this.thumbnail(image, this.size, this.resample);\n        }\n\n        if (this.do_center_crop) {\n\n            let crop_width;\n            let crop_height;\n            if (Number.isInteger(this.crop_size)) {\n                crop_width = this.crop_size;\n                crop_height = this.crop_size;\n            } else {\n                crop_width = this.crop_size.width;\n                crop_height = this.crop_size.height;\n            }\n\n            image = await image.center_crop(crop_width, crop_height);\n        }\n\n        /** @type {HeightWidth} */\n        const reshaped_input_size = [image.height, image.width];\n\n        // NOTE: All pixel-level manipulation (i.e., modifying `pixelData`)\n        // occurs with data in the hwc format (height, width, channels), \n        // to emulate the behavior of the original Python code (w/ numpy).\n        /** @type {Float32Array} */\n        let pixelData = Float32Array.from(image.data);\n        let imgDims = [image.height, image.width, image.channels];\n\n        if (this.do_rescale) {\n            this.rescale(pixelData);\n        }\n\n        if (do_normalize ?? this.do_normalize) {\n            let image_mean = this.image_mean;\n            if (!Array.isArray(this.image_mean)) {\n                image_mean = new Array(image.channels).fill(image_mean);\n            }\n\n            let image_std = this.image_std;\n            if (!Array.isArray(this.image_std)) {\n                image_std = new Array(image.channels).fill(image_mean);\n            }\n\n            if (image_mean.length !== image.channels || image_std.length !== image.channels) {\n                throw new Error(`When set to arrays, the length of \\`image_mean\\` (${image_mean.length}) and \\`image_std\\` (${image_std.length}) must match the number of channels in the image (${image.channels}).`);\n            }\n\n            for (let i = 0; i < pixelData.length; i += image.channels) {\n                for (let j = 0; j < image.channels; ++j) {\n                    pixelData[i + j] = (pixelData[i + j] - image_mean[j]) / image_std[j];\n                }\n            }\n        }\n\n        // do padding after rescaling/normalizing\n        if (do_pad ?? this.do_pad) {\n            if (this.pad_size) {\n                const padded = this.pad_image(pixelData, [image.height, image.width, image.channels], this.pad_size);\n                [pixelData, imgDims] = padded; // Update pixel data and image dimensions\n            } else if (this.size_divisibility) {\n                const [paddedWidth, paddedHeight] = enforce_size_divisibility([imgDims[1], imgDims[0]], this.size_divisibility);\n                [pixelData, imgDims] = this.pad_image(pixelData, imgDims, { width: paddedWidth, height: paddedHeight });\n            }\n        }\n\n        if (do_flip_channel_order ?? this.do_flip_channel_order) {\n            if (imgDims[2] !== 3) {\n                throw new Error('Flipping channel order is only supported for RGB images.');\n            }\n            // Convert RGB to BGR\n            for (let i = 0; i < pixelData.length; i += 3) {\n                const temp = pixelData[i];\n                pixelData[i] = pixelData[i + 2];\n                pixelData[i + 2] = temp;\n            }\n        }\n\n        const pixel_values = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('float32', pixelData, imgDims)\n            .permute(2, 0, 1); // convert to channel dimension format (hwc -> chw)\n\n        return {\n            original_size: [srcHeight, srcWidth],\n            reshaped_input_size: reshaped_input_size,\n            pixel_values,\n        }\n    }\n\n    /**\n     * Calls the feature extraction process on an array of images,\n     * preprocesses each image, and concatenates the resulting\n     * features into a single Tensor.\n     * @param {RawImage[]} images The image(s) to extract features from.\n     * @param {...any} args Additional arguments.\n     * @returns {Promise<ImageProcessorResult>} An object containing the concatenated pixel values (and other metadata) of the preprocessed images.\n     */\n    async _call(images, ...args) {\n        if (!Array.isArray(images)) {\n            images = [images];\n        }\n        /** @type {PreprocessedImage[]} */\n        const imageData = await Promise.all(images.map(x => this.preprocess(x)));\n\n        // Stack pixel values\n        const pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.stack)(imageData.map(x => x.pixel_values), 0);\n\n        return {\n            pixel_values,\n\n            // Original sizes of images\n            original_sizes: imageData.map(x => x.original_size),\n\n            // Reshaped sizes of images, before padding or cropping\n            reshaped_input_sizes: imageData.map(x => x.reshaped_input_size),\n        }\n    }\n\n\n    /**\n     * Instantiate one of the processor classes of the library from a pretrained model.\n     * \n     * The processor class to instantiate is selected based on the `image_processor_type` (or `feature_extractor_type`; legacy)\n     * property of the config object (either passed as an argument or loaded from `pretrained_model_name_or_path` if possible)\n     * \n     * @param {string} pretrained_model_name_or_path The name or path of the pretrained model. Can be either:\n     * - A string, the *model id* of a pretrained processor hosted inside a model repo on huggingface.co.\n     *   Valid model ids can be located at the root-level, like `bert-base-uncased`, or namespaced under a\n     *   user or organization name, like `dbmdz/bert-base-german-cased`.\n     * - A path to a *directory* containing processor files, e.g., `./my_model_directory/`.\n     * @param {import('../utils/hub.js').PretrainedOptions} options Additional options for loading the processor.\n     * \n     * @returns {Promise<ImageProcessor>} A new instance of the Processor class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, options) {\n        const preprocessorConfig = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_6__.IMAGE_PROCESSOR_NAME, true, options);\n        return new this(preprocessorConfig);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/base/processing_utils.js\":\n/*!**************************************!*\\\n  !*** ./src/base/processing_utils.js ***!\n  \\**************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Processor: () => (/* binding */ Processor)\n/* harmony export */ });\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/hub.js */ \"./src/utils/hub.js\");\n\n/**\n * @file Processors are used to prepare inputs (e.g., text, image or audio) for a model.\n * \n * **Example:** Using a `WhisperProcessor` to prepare an audio input for a model.\n * ```javascript\n * import { AutoProcessor, read_audio } from '@huggingface/transformers';\n *\n * const processor = await AutoProcessor.from_pretrained('openai/whisper-tiny.en');\n * const audio = await read_audio('https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac', 16000);\n * const { input_features } = await processor(audio);\n * // Tensor {\n * //   data: Float32Array(240000) [0.4752984642982483, 0.5597258806228638, 0.56434166431427, ...],\n * //   dims: [1, 80, 3000],\n * //   type: 'float32',\n * //   size: 240000,\n * // }\n * ```\n * \n * @module processors\n */\n\n\n\n\n/**\n * @typedef {Object} ProcessorProperties Additional processor-specific properties.\n * @typedef {import('../utils/hub.js').PretrainedOptions & ProcessorProperties} PretrainedProcessorOptions\n * @typedef {import('../tokenizers.js').PreTrainedTokenizer} PreTrainedTokenizer\n */\n\n\n/**\n * Represents a Processor that extracts features from an input.\n */\nclass Processor extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_1__.Callable {\n    static classes = [\n        'image_processor_class',\n        'tokenizer_class',\n        'feature_extractor_class',\n    ]\n    static uses_processor_config = false;\n\n    /**\n     * Creates a new Processor with the given components\n     * @param {Object} config \n     * @param {Record<string, Object>} components \n     */\n    constructor(config, components) {\n        super();\n        this.config = config;\n        this.components = components;\n    }\n\n    /**\n     * @returns {import('./image_processors_utils.js').ImageProcessor|undefined} The image processor of the processor, if it exists.\n     */\n    get image_processor() {\n        return this.components.image_processor;\n    }\n\n    /**\n     * @returns {PreTrainedTokenizer|undefined} The tokenizer of the processor, if it exists.\n     */\n    get tokenizer() {\n        return this.components.tokenizer;\n    }\n\n    /**\n     * @returns {import('./feature_extraction_utils.js').FeatureExtractor|undefined} The feature extractor of the processor, if it exists.\n     */\n    get feature_extractor() {\n        return this.components.feature_extractor;\n    }\n\n    /**\n     * @param {Parameters<PreTrainedTokenizer['apply_chat_template']>[0]} messages\n     * @param {Parameters<PreTrainedTokenizer['apply_chat_template']>[1]} options\n     * @returns {ReturnType<PreTrainedTokenizer['apply_chat_template']>}\n     */\n    apply_chat_template(messages, options = {}) {\n        if (!this.tokenizer) {\n            throw new Error('Unable to apply chat template without a tokenizer.');\n        }\n        return this.tokenizer.apply_chat_template(messages, {\n            tokenize: false, // default to false\n            ...options,\n        });\n    }\n\n    /**\n     * @param {Parameters<PreTrainedTokenizer['batch_decode']>} args\n     * @returns {ReturnType<PreTrainedTokenizer['batch_decode']>}\n     */\n    batch_decode(...args) {\n        if (!this.tokenizer) {\n            throw new Error('Unable to decode without a tokenizer.');\n        }\n        return this.tokenizer.batch_decode(...args);\n    }\n\n    /**\n     * @param {Parameters<PreTrainedTokenizer['decode']>} args\n     * @returns {ReturnType<PreTrainedTokenizer['decode']>}\n     */\n    decode(...args) {\n        if (!this.tokenizer) {\n            throw new Error('Unable to decode without a tokenizer.');\n        }\n        return this.tokenizer.decode(...args);\n    }\n\n\n    /**\n     * Calls the feature_extractor function with the given input.\n     * @param {any} input The input to extract features from.\n     * @param {...any} args Additional arguments.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(input, ...args) {\n        for (const item of [this.image_processor, this.feature_extractor, this.tokenizer]) {\n            if (item) {\n                return item(input, ...args);\n            }\n        }\n        throw new Error('No image processor, feature extractor, or tokenizer found.');\n    }\n\n\n    /**\n     * Instantiate one of the processor classes of the library from a pretrained model.\n     * \n     * The processor class to instantiate is selected based on the `image_processor_type` (or `feature_extractor_type`; legacy)\n     * property of the config object (either passed as an argument or loaded from `pretrained_model_name_or_path` if possible)\n     * \n     * @param {string} pretrained_model_name_or_path The name or path of the pretrained model. Can be either:\n     * - A string, the *model id* of a pretrained processor hosted inside a model repo on huggingface.co.\n     *   Valid model ids can be located at the root-level, like `bert-base-uncased`, or namespaced under a\n     *   user or organization name, like `dbmdz/bert-base-german-cased`.\n     * - A path to a *directory* containing processor files, e.g., `./my_model_directory/`.\n     * @param {PretrainedProcessorOptions} options Additional options for loading the processor.\n     * \n     * @returns {Promise<Processor>} A new instance of the Processor class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, options) {\n\n        const [config, components] = await Promise.all([\n            // TODO:\n            this.uses_processor_config\n                ? (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_2__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.PROCESSOR_NAME, true, options)\n                : {},\n            Promise.all(\n                this.classes\n                    .filter((cls) => cls in this)\n                    .map(async (cls) => {\n                        const component = await this[cls].from_pretrained(pretrained_model_name_or_path, options);\n                        return [cls.replace(/_class$/, ''), component];\n                    })\n            ).then(Object.fromEntries)\n        ]);\n\n        return new this(config, components);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/configs.js\":\n/*!************************!*\\\n  !*** ./src/configs.js ***!\n  \\************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoConfig: () => (/* binding */ AutoConfig),\n/* harmony export */   PretrainedConfig: () => (/* binding */ PretrainedConfig),\n/* harmony export */   getKeyValueShapes: () => (/* binding */ getKeyValueShapes)\n/* harmony export */ });\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/hub.js */ \"./src/utils/hub.js\");\n\n/**\n * @file Helper module for using model configs. For more information, see the corresponding\n * [Python documentation](https://huggingface.co/docs/transformers/main/en/model_doc/auto#transformers.AutoConfig).\n * \n * **Example:** Load an `AutoConfig`.\n * \n * ```javascript\n * import { AutoConfig } from '@huggingface/transformers';\n * const config = await AutoConfig.from_pretrained('bert-base-uncased');\n * console.log(config);\n * // PretrainedConfig {\n * //   \"model_type\": \"bert\",\n * //   \"is_encoder_decoder\": false,\n * //   \"architectures\": [\n * //       \"BertForMaskedLM\"\n * //   ],\n * //   \"vocab_size\": 30522\n * //   \"num_attention_heads\": 12,\n * //   \"num_hidden_layers\": 12,\n * //   \"hidden_size\": 768,\n * //   \"max_position_embeddings\": 512,\n * //   ...\n * // }\n * ```\n * \n * @module configs\n */\n\n\n\n\n/**\n * @typedef {import('./utils/hub.js').PretrainedOptions} PretrainedOptions\n */\n\n/**\n * @typedef {import('./utils/core.js').ProgressCallback} ProgressCallback\n */\n\n/**\n * @typedef {import('./utils/core.js').ProgressInfo} ProgressInfo\n */\n\n/**\n * Loads a config from the specified path.\n * @param {string} pretrained_model_name_or_path The path to the config directory.\n * @param {PretrainedOptions} options Additional options for loading the config.\n * @returns {Promise<Object>} A promise that resolves with information about the loaded config.\n */\nasync function loadConfig(pretrained_model_name_or_path, options) {\n    return await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_1__.getModelJSON)(pretrained_model_name_or_path, 'config.json', true, options);\n}\n\n/**\n * \n * @param {PretrainedConfig} config \n * @returns {Object} The normalized configuration.\n */\nfunction getNormalizedConfig(config) {\n    const mapping = {};\n\n    let init_normalized_config = {};\n    switch (config.model_type) {\n        // Sub-configs\n        case 'llava':\n        case 'paligemma':\n        case 'florence2':\n        case 'llava_onevision':\n        case 'idefics3':\n        case 'ultravox':\n        case 'smolvlm':\n            // @ts-expect-error TS2339\n            init_normalized_config = getNormalizedConfig(config.text_config);\n            break;\n        case 'moondream1':\n            // @ts-expect-error TS2339\n            init_normalized_config = getNormalizedConfig(config.phi_config);\n            break;\n        case 'musicgen':\n            // @ts-expect-error TS2339\n            init_normalized_config = getNormalizedConfig(config.decoder);\n            break;\n        case 'multi_modality':\n            // @ts-expect-error TS2339\n            init_normalized_config = getNormalizedConfig(config.language_config);\n            break;\n\n        // Decoder-only models\n        case 'gpt2':\n        case 'gptj':\n        case 'jais':\n        case 'codegen':\n        case 'gpt_bigcode':\n            mapping['num_heads'] = 'n_head';\n            mapping['num_layers'] = 'n_layer';\n            mapping['hidden_size'] = 'n_embd';\n            break;\n        case 'gpt_neox':\n        case 'stablelm':\n        case 'opt':\n        case 'falcon':\n            mapping['num_heads'] = 'num_attention_heads';\n            mapping['num_layers'] = 'num_hidden_layers';\n            mapping['hidden_size'] = 'hidden_size';\n            break;\n        case 'llama':\n        case 'olmo':\n        case 'olmo2':\n        case 'mobilellm':\n        case 'granite':\n        case 'cohere':\n        case 'mistral':\n        case 'starcoder2':\n        case 'qwen2':\n        case 'qwen2_vl':\n        case 'phi':\n        case 'phi3':\n        case 'phi3_v':\n            mapping['num_heads'] = 'num_key_value_heads';\n            mapping['num_layers'] = 'num_hidden_layers';\n            mapping['hidden_size'] = 'hidden_size';\n            mapping['num_attention_heads'] = 'num_attention_heads';\n            break;\n        case 'gemma':\n        case 'gemma2':\n        case 'glm':\n        case 'helium':\n            mapping['num_heads'] = 'num_key_value_heads';\n            mapping['num_layers'] = 'num_hidden_layers';\n            mapping['dim_kv'] = 'head_dim';\n            break;\n        case 'openelm':\n            mapping['num_heads'] = 'num_kv_heads';\n            mapping['num_layers'] = 'num_transformer_layers';\n            mapping['dim_kv'] = 'head_dim';\n            break;\n        case 'gpt_neo':\n        case 'donut-swin':\n            mapping['num_heads'] = 'num_heads';\n            mapping['num_layers'] = 'num_layers';\n            mapping['hidden_size'] = 'hidden_size';\n            break;\n        case 'bloom':\n            mapping['num_heads'] = 'n_head';\n            mapping['num_layers'] = 'n_layer';\n            mapping['hidden_size'] = 'hidden_size';\n            break;\n        case 'mpt':\n            mapping['num_heads'] = 'n_heads';\n            mapping['num_layers'] = 'n_layers';\n            mapping['hidden_size'] = 'd_model';\n            break;\n        case 'exaone':\n            mapping['num_heads'] = 'num_key_value_heads';\n            mapping['num_layers'] = 'num_layers';\n            mapping['dim_kv'] = 'head_dim';\n            mapping['num_attention_heads'] = 'num_attention_heads';\n            break;\n\n        // Encoder-decoder models\n        case 't5':\n        case 'mt5':\n        case 'longt5':\n            mapping['num_decoder_layers'] = 'num_decoder_layers';\n            mapping['num_decoder_heads'] = 'num_heads';\n            mapping['decoder_dim_kv'] = 'd_kv';\n            mapping['num_encoder_layers'] = 'num_layers';\n            mapping['num_encoder_heads'] = 'num_heads';\n            mapping['encoder_dim_kv'] = 'd_kv';\n            break;\n        case 'bart':\n        case 'mbart':\n        case 'marian':\n        case 'whisper':\n        case 'lite-whisper':\n        case 'm2m_100':\n        case 'blenderbot':\n        case 'blenderbot-small':\n        case 'florence2_language':\n            mapping['num_decoder_layers'] = 'decoder_layers';\n            mapping['num_decoder_heads'] = 'decoder_attention_heads';\n            mapping['decoder_hidden_size'] = 'd_model';\n            mapping['num_encoder_layers'] = 'encoder_layers';\n            mapping['num_encoder_heads'] = 'encoder_attention_heads';\n            mapping['encoder_hidden_size'] = 'd_model';\n            break;\n        case 'speecht5':\n            mapping['num_decoder_layers'] = 'decoder_layers';\n            mapping['num_decoder_heads'] = 'decoder_attention_heads';\n            mapping['decoder_hidden_size'] = 'hidden_size';\n            mapping['num_encoder_layers'] = 'encoder_layers';\n            mapping['num_encoder_heads'] = 'encoder_attention_heads';\n            mapping['encoder_hidden_size'] = 'hidden_size';\n            break;\n        case 'trocr':\n            mapping['num_encoder_layers'] = mapping['num_decoder_layers'] = 'decoder_layers';\n            mapping['num_encoder_heads'] = mapping['num_decoder_heads'] = 'decoder_attention_heads';\n            mapping['encoder_hidden_size'] = mapping['decoder_hidden_size'] = 'd_model';\n            break;\n        case 'musicgen_decoder':\n            mapping['num_encoder_layers'] = mapping['num_decoder_layers'] = 'num_hidden_layers';\n            mapping['num_encoder_heads'] = mapping['num_decoder_heads'] = 'num_attention_heads';\n            mapping['encoder_hidden_size'] = mapping['decoder_hidden_size'] = 'hidden_size';\n            break;\n        case 'moonshine':\n            mapping['num_decoder_layers'] = 'decoder_num_hidden_layers';\n            mapping['num_decoder_heads'] = 'decoder_num_key_value_heads';\n            mapping['num_encoder_layers'] = 'encoder_num_hidden_layers';\n            mapping['num_encoder_heads'] = 'encoder_num_key_value_heads';\n            mapping['encoder_hidden_size'] = mapping['decoder_hidden_size'] = 'hidden_size';\n            break;\n        case 'vision-encoder-decoder':\n            // @ts-expect-error TS2339\n            const decoderConfig = getNormalizedConfig(config.decoder);\n\n            const add_encoder_pkv = 'num_decoder_layers' in decoderConfig;\n            const result = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_0__.pick)(config, ['model_type', 'is_encoder_decoder']);\n            if (add_encoder_pkv) {\n                // Decoder is part of an encoder-decoder model\n                result.num_decoder_layers = decoderConfig.num_decoder_layers;\n                result.num_decoder_heads = decoderConfig.num_decoder_heads;\n                result.decoder_hidden_size = decoderConfig.decoder_hidden_size;\n\n                result.num_encoder_layers = decoderConfig.num_encoder_layers;\n                result.num_encoder_heads = decoderConfig.num_encoder_heads;\n                result.encoder_hidden_size = decoderConfig.encoder_hidden_size;\n            } else {\n                // Decoder is a decoder-only model\n                result.num_layers = decoderConfig.num_layers;\n                result.num_heads = decoderConfig.num_heads;\n                result.hidden_size = decoderConfig.hidden_size;\n            }\n            return result;\n\n    }\n\n    // NOTE: If `num_attention_heads` is not set, it is assumed to be equal to `num_heads`\n    const normalized_config = {\n        ...init_normalized_config,\n        ...(0,_utils_core_js__WEBPACK_IMPORTED_MODULE_0__.pick)(config, ['model_type', 'multi_query', 'is_encoder_decoder']),\n    };\n    for (const key in mapping) {\n        normalized_config[key] = config[mapping[key]];\n    }\n    return normalized_config;\n}\n\n/**\n * \n * @param {PretrainedConfig} config \n * @returns {Record<string, number[]>}\n */\nfunction getKeyValueShapes(config, {\n    prefix = 'past_key_values',\n    batch_size=1,\n} = {}) {\n    /** @type {Record<string, number[]>} */\n    const decoderFeeds = {};\n    const normalized_config = config.normalized_config;\n\n    if (normalized_config.is_encoder_decoder && (\n        'num_encoder_heads' in normalized_config && 'num_decoder_heads' in normalized_config\n    )) {\n        const encoder_dim_kv = normalized_config.encoder_dim_kv ?? (\n            normalized_config.encoder_hidden_size / normalized_config.num_encoder_heads\n        );\n        const decoder_dim_kv = normalized_config.decoder_dim_kv ?? (\n            normalized_config.decoder_hidden_size / normalized_config.num_decoder_heads\n        );\n\n        const encoder_dims = [batch_size, normalized_config.num_encoder_heads, 0, encoder_dim_kv];\n        const decoder_dims = [batch_size, normalized_config.num_decoder_heads, 0, decoder_dim_kv];\n        for (let i = 0; i < normalized_config.num_decoder_layers; ++i) {\n            decoderFeeds[`${prefix}.${i}.encoder.key`] = encoder_dims;\n            decoderFeeds[`${prefix}.${i}.encoder.value`] = encoder_dims;\n            decoderFeeds[`${prefix}.${i}.decoder.key`] = decoder_dims;\n            decoderFeeds[`${prefix}.${i}.decoder.value`] = decoder_dims;\n        }\n    } else { // Decoders\n        const num_heads = normalized_config.num_heads;\n        const num_layers = normalized_config.num_layers;\n        const dim_kv = normalized_config.dim_kv ?? (\n            normalized_config.hidden_size /\n            (normalized_config.num_attention_heads ?? num_heads)\n        );\n\n        if (normalized_config.model_type === 'falcon') {\n            // NOTE: Custom implementation for Falcon\n            const dims = [batch_size * num_heads, 0, dim_kv]\n            for (let i = 0; i < num_layers; ++i) {\n                decoderFeeds[`${prefix}.${i}.key`] = dims;\n                decoderFeeds[`${prefix}.${i}.value`] = dims;\n            }\n        } else if (normalized_config.multi_query) { // e.g., for `gpt_bigcode`\n            const dims = [batch_size * num_heads, 0, 2 * dim_kv]\n\n            for (let i = 0; i < num_layers; ++i) {\n                decoderFeeds[`${prefix}.${i}.key_value`] = dims;\n            }\n        } else if (normalized_config.model_type === 'bloom') {\n            // NOTE: Custom implementation for Bloom\n\n            const keyDims = [batch_size * num_heads, dim_kv, 0] // [batch_size x num_heads,64,past_sequence_length]\n            const valueDims = [batch_size * num_heads, 0, dim_kv] // [batch_size x num_heads,past_sequence_length,64]\n            for (let i = 0; i < num_layers; ++i) {\n                decoderFeeds[`${prefix}.${i}.key`] = keyDims;\n                decoderFeeds[`${prefix}.${i}.value`] = valueDims;\n            }\n        } else if (normalized_config.model_type === 'openelm') {\n            for (let i = 0; i < num_layers; ++i) {\n                const dims = [batch_size, num_heads[i], 0, dim_kv]\n\n                decoderFeeds[`${prefix}.${i}.key`] = dims;\n                decoderFeeds[`${prefix}.${i}.value`] = dims;\n            }\n        } else { // Decoder-only\n            const dims = [batch_size, num_heads, 0, dim_kv]\n            for (let i = 0; i < num_layers; ++i) {\n                decoderFeeds[`${prefix}.${i}.key`] = dims;\n                decoderFeeds[`${prefix}.${i}.value`] = dims;\n            }\n        }\n    }\n\n    return decoderFeeds;\n}\n/**\n * Base class for all configuration classes. For more information, see the corresponding\n * [Python documentation](https://huggingface.co/docs/transformers/main/en/main_classes/configuration#transformers.PretrainedConfig).\n */\nclass PretrainedConfig {\n    // NOTE: Typo in original\n\n    /** @type {string|null} */\n    model_type = null;\n\n    /** @type {boolean} */\n    is_encoder_decoder = false;\n\n    /** @type {number} */\n    max_position_embeddings;\n\n    /** @type {TransformersJSConfig} */\n    'transformers.js_config';\n\n    /**\n     * Create a new PreTrainedTokenizer instance.\n     * @param {Object} configJSON The JSON of the config.\n     */\n    constructor(configJSON) {\n        Object.assign(this, configJSON);\n        this.normalized_config = getNormalizedConfig(this);\n    }\n\n    /**\n     * Loads a pre-trained config from the given `pretrained_model_name_or_path`. \n     * \n     * @param {string} pretrained_model_name_or_path The path to the pre-trained config.\n     * @param {PretrainedOptions} options Additional options for loading the config.\n     * @throws {Error} Throws an error if the config.json is not found in the `pretrained_model_name_or_path`.\n     * \n     * @returns {Promise<PretrainedConfig>} A new instance of the `PretrainedConfig` class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n    } = {}) {\n        if (config && !(config instanceof PretrainedConfig)) {\n            config = new PretrainedConfig(config);\n        }\n\n        const data = config ?? await loadConfig(pretrained_model_name_or_path, {\n            progress_callback,\n            config,\n            cache_dir,\n            local_files_only,\n            revision,\n        })\n        return new this(data);\n    }\n}\n\n/**\n * Helper class which is used to instantiate pretrained configs with the `from_pretrained` function.\n * \n * @example\n * const config = await AutoConfig.from_pretrained('Xenova/bert-base-uncased'); \n */\nclass AutoConfig {\n    /** @type {typeof PretrainedConfig.from_pretrained} */\n    static async from_pretrained(...args) {\n        return PretrainedConfig.from_pretrained(...args);\n    }\n}\n\n/**\n * Transformers.js-specific configuration, possibly present in config.json under the key `transformers.js_config`.\n * @typedef {Object} TransformersJSConfig\n * @property {import('./utils/tensor.js').DataType|Record<import('./utils/dtypes.js').DataType, import('./utils/tensor.js').DataType>} [kv_cache_dtype] The data type of the key-value cache.\n * @property {Record<string, number>} [free_dimension_overrides] Override the free dimensions of the model.\n * See https://onnxruntime.ai/docs/tutorials/web/env-flags-and-session-options.html#freedimensionoverrides\n * for more information.\n * @property {import('./utils/devices.js').DeviceType} [device] The default device to use for the model.\n * @property {import('./utils/dtypes.js').DataType|Record<string, import('./utils/dtypes.js').DataType>} [dtype] The default data type to use for the model.\n * @property {import('./utils/hub.js').ExternalData|Record<string, import('./utils/hub.js').ExternalData>} [use_external_data_format=false] Whether to load the model using the external data format (used for models >= 2GB in size).\n */\n\n\n/***/ }),\n\n/***/ \"./src/env.js\":\n/*!********************!*\\\n  !*** ./src/env.js ***!\n  \\********************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apis: () => (/* binding */ apis),\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"?569f\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"?3f59\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"?154a\");\n/**\n * @file Module used to configure Transformers.js.\n * \n * **Example:** Disable remote models.\n * ```javascript\n * import { env } from '@huggingface/transformers';\n * env.allowRemoteModels = false;\n * ```\n * \n * **Example:** Set local model path.\n * ```javascript\n * import { env } from '@huggingface/transformers';\n * env.localModelPath = '/path/to/local/models/';\n * ```\n * \n * **Example:** Set cache directory.\n * ```javascript\n * import { env } from '@huggingface/transformers';\n * env.cacheDir = '/path/to/cache/directory/';\n * ```\n * \n * @module env\n */\n\n\n\n\n\nconst VERSION = '3.4.0';\n\n// Check if various APIs are available (depends on environment)\nconst IS_BROWSER_ENV = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst IS_WEBWORKER_ENV = typeof self !== \"undefined\"  && self.constructor?.name === 'DedicatedWorkerGlobalScope';\nconst IS_WEB_CACHE_AVAILABLE = typeof self !== \"undefined\" && 'caches' in self;\nconst IS_WEBGPU_AVAILABLE = typeof navigator !== 'undefined' && 'gpu' in navigator;\nconst IS_WEBNN_AVAILABLE = typeof navigator !== 'undefined' && 'ml' in navigator;\n\nconst IS_PROCESS_AVAILABLE = typeof process !== 'undefined';\nconst IS_NODE_ENV = IS_PROCESS_AVAILABLE && process?.release?.name === 'node';\nconst IS_FS_AVAILABLE = !isEmpty(fs__WEBPACK_IMPORTED_MODULE_0__);\nconst IS_PATH_AVAILABLE = !isEmpty(path__WEBPACK_IMPORTED_MODULE_1__);\n\n/**\n * A read-only object containing information about the APIs available in the current environment.\n */\nconst apis = Object.freeze({\n    /** Whether we are running in a browser environment (and not a web worker) */\n    IS_BROWSER_ENV,\n\n    /** Whether we are running in a web worker environment */\n    IS_WEBWORKER_ENV,\n\n    /** Whether the Cache API is available */\n    IS_WEB_CACHE_AVAILABLE,\n\n    /** Whether the WebGPU API is available */\n    IS_WEBGPU_AVAILABLE,\n\n    /** Whether the WebNN API is available */\n    IS_WEBNN_AVAILABLE,\n\n    /** Whether the Node.js process API is available */\n    IS_PROCESS_AVAILABLE,\n\n    /** Whether we are running in a Node.js environment */\n    IS_NODE_ENV,\n\n    /** Whether the filesystem API is available */\n    IS_FS_AVAILABLE,\n\n    /** Whether the path API is available */\n    IS_PATH_AVAILABLE,\n});\n\nconst RUNNING_LOCALLY = IS_FS_AVAILABLE && IS_PATH_AVAILABLE;\n\nlet dirname__ = './';\nif (RUNNING_LOCALLY) {\n    // NOTE: We wrap `import.meta` in a call to `Object` to prevent Webpack from trying to bundle it in CommonJS.\n    // Although we get the warning: \"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\",\n    // it is safe to ignore since the bundled value (`{}`) isn't used for CommonJS environments (we use __dirname instead).\n    const _import_meta_url = Object(import.meta).url;\n\n    if (_import_meta_url) {\n        dirname__ = path__WEBPACK_IMPORTED_MODULE_1__.dirname(path__WEBPACK_IMPORTED_MODULE_1__.dirname(url__WEBPACK_IMPORTED_MODULE_2__.fileURLToPath(_import_meta_url))) // ESM\n    } else if (typeof __dirname !== 'undefined') {\n        dirname__ = path__WEBPACK_IMPORTED_MODULE_1__.dirname(__dirname) // CommonJS\n    }\n}\n\n// Only used for environments with access to file system\nconst DEFAULT_CACHE_DIR = RUNNING_LOCALLY\n    ? path__WEBPACK_IMPORTED_MODULE_1__.join(dirname__, '/.cache/')\n    : null;\n\n// Set local model path, based on available APIs\nconst DEFAULT_LOCAL_MODEL_PATH = '/models/';\nconst localModelPath = RUNNING_LOCALLY\n    ? path__WEBPACK_IMPORTED_MODULE_1__.join(dirname__, DEFAULT_LOCAL_MODEL_PATH)\n    : DEFAULT_LOCAL_MODEL_PATH;\n\n/**\n * Global variable given visible to users to control execution. This provides users a simple way to configure Transformers.js.\n * @typedef {Object} TransformersEnvironment\n * @property {string} version This version of Transformers.js.\n * @property {{onnx: Partial<import('onnxruntime-common').Env>}} backends Expose environment variables of different backends,\n * allowing users to set these variables if they want to.\n * @property {boolean} allowRemoteModels Whether to allow loading of remote files, defaults to `true`.\n * If set to `false`, it will have the same effect as setting `local_files_only=true` when loading pipelines, models, tokenizers, processors, etc.\n * @property {string} remoteHost Host URL to load models from. Defaults to the Hugging Face Hub.\n * @property {string} remotePathTemplate Path template to fill in and append to `remoteHost` when loading models.\n * @property {boolean} allowLocalModels Whether to allow loading of local files, defaults to `false` if running in-browser, and `true` otherwise.\n * If set to `false`, it will skip the local file check and try to load the model from the remote host.\n * @property {string} localModelPath Path to load local models from. Defaults to `/models/`.\n * @property {boolean} useFS Whether to use the file system to load files. By default, it is `true` if available.\n * @property {boolean} useBrowserCache Whether to use Cache API to cache models. By default, it is `true` if available.\n * @property {boolean} useFSCache Whether to use the file system to cache files. By default, it is `true` if available.\n * @property {string} cacheDir The directory to use for caching files with the file system. By default, it is `./.cache`.\n * @property {boolean} useCustomCache Whether to use a custom cache system (defined by `customCache`), defaults to `false`.\n * @property {Object} customCache The custom cache to use. Defaults to `null`. Note: this must be an object which\n * implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache\n */\n\n/** @type {TransformersEnvironment} */\nconst env = {\n    version: VERSION,\n\n    /////////////////// Backends settings ///////////////////\n    // NOTE: These will be populated later by the backends themselves.\n    backends: {\n        // onnxruntime-web/onnxruntime-node\n        onnx: {},\n    },\n\n    /////////////////// Model settings ///////////////////\n    allowRemoteModels: true,\n    remoteHost: 'https://huggingface.co/',\n    remotePathTemplate: '{model}/resolve/{revision}/',\n\n    allowLocalModels: !(IS_BROWSER_ENV || IS_WEBWORKER_ENV),\n    localModelPath: localModelPath,\n    useFS: IS_FS_AVAILABLE,\n\n    /////////////////// Cache settings ///////////////////\n    useBrowserCache: IS_WEB_CACHE_AVAILABLE,\n\n    useFSCache: IS_FS_AVAILABLE,\n    cacheDir: DEFAULT_CACHE_DIR,\n\n    useCustomCache: false,\n    customCache: null,\n    //////////////////////////////////////////////////////\n}\n\n\n/**\n * @param {Object} obj\n * @private\n */\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\n\n/***/ }),\n\n/***/ \"./src/generation/configuration_utils.js\":\n/*!***********************************************!*\\\n  !*** ./src/generation/configuration_utils.js ***!\n  \\***********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GenerationConfig: () => (/* binding */ GenerationConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/core.js */ \"./src/utils/core.js\");\n\n/**\n * @module generation/configuration_utils\n */\n\n\n\n/**\n * Class that holds a configuration for a generation task.\n */\nclass GenerationConfig {\n    // Parameters that control the length of the output\n    /**\n     * The maximum length the generated tokens can have.\n     * Corresponds to the length of the input prompt + `max_new_tokens`.\n     * Its effect is overridden by `max_new_tokens`, if also set.\n     * @type {number}\n     * @default 20\n     */\n    max_length = 20;\n\n    /**\n     * The maximum numbers of tokens to generate, ignoring the number of tokens in the prompt.\n     * @type {number}\n     * @default null\n     */\n    max_new_tokens = null;\n\n    /**\n     * The minimum length of the sequence to be generated.\n     * Corresponds to the length of the input prompt + `min_new_tokens`.\n     * Its effect is overridden by `min_new_tokens`, if also set.\n     * @type {number}\n     * @default 0\n     */\n    min_length = 0;\n\n    /**\n     * The minimum numbers of tokens to generate, ignoring the number of tokens in the prompt.\n     * @type {number}\n     * @default null\n     */\n    min_new_tokens = null;\n\n    /**\n     * Controls the stopping condition for beam-based methods, like beam-search. It accepts the following values:\n     * - `true`, where the generation stops as soon as there are `num_beams` complete candidates;\n     * - `false`, where an heuristic is applied and the generation stops when is it very unlikely to find better candidates;\n     * - `\"never\"`, where the beam search procedure only stops when there cannot be better candidates (canonical beam search algorithm).\n     * @type {boolean|\"never\"}\n     * @default false\n     */\n    early_stopping = false;\n\n    /**\n     * The maximum amount of time you allow the computation to run for in seconds.\n     * Generation will still finish the current pass after allocated time has been passed.\n     * @type {number}\n     * @default null\n     */\n    max_time = null;\n\n    // Parameters that control the generation strategy used\n    /**\n     * Whether or not to use sampling; use greedy decoding otherwise.\n     * @type {boolean}\n     * @default false\n     */\n    do_sample = false;\n\n    /**\n     * Number of beams for beam search. 1 means no beam search.\n     * @type {number}\n     * @default 1\n     */\n    num_beams = 1;\n\n    /**\n     * Number of groups to divide `num_beams` into in order to ensure diversity among different groups of beams.\n     * See [this paper](https://arxiv.org/pdf/1610.02424.pdf) for more details.\n     * @type {number}\n     * @default 1\n     */\n    num_beam_groups = 1;\n\n    /**\n     * The values balance the model confidence and the degeneration penalty in contrastive search decoding.\n     * @type {number}\n     * @default null\n     */\n    penalty_alpha = null;\n\n    /**\n     * Whether or not the model should use the past last key/values attentions (if applicable to the model) to speed up decoding.\n     * @type {boolean}\n     * @default true\n     */\n    use_cache = true;\n\n    // Parameters for manipulation of the model output logits\n    /**\n     * The value used to modulate the next token probabilities.\n     * @type {number}\n     * @default 1.0\n     */\n    temperature = 1.0;\n\n    /**\n     * The number of highest probability vocabulary tokens to keep for top-k-filtering.\n     * @type {number}\n     * @default 50\n     */\n    top_k = 50;\n\n    /**\n     * If set to float < 1, only the smallest set of most probable tokens with probabilities that add up to `top_p` or higher are kept for generation.\n     * @type {number}\n     * @default 1.0\n     */\n    top_p = 1.0;\n\n    /**\n     * Local typicality measures how similar the conditional probability of predicting a target token next is to the expected conditional probability of predicting a random token next, given the partial text already generated.\n     * If set to float < 1, the smallest set of the most locally typical tokens with probabilities that add up to `typical_p` or higher are kept for generation.\n     * See [this paper](https://arxiv.org/pdf/2202.00666.pdf) for more details.\n     * @type {number}\n     * @default 1.0\n     */\n    typical_p = 1.0;\n\n    /**\n     * If set to float strictly between 0 and 1, only tokens with a conditional probability greater than `epsilon_cutoff` will be sampled.\n     * In the paper, suggested values range from 3e-4 to 9e-4, depending on the size of the model.\n     * See [Truncation Sampling as Language Model Desmoothing](https://arxiv.org/abs/2210.15191) for more details.\n     * @type {number}\n     * @default 0.0\n     */\n    epsilon_cutoff = 0.0;\n\n    /**\n     * Eta sampling is a hybrid of locally typical sampling and epsilon sampling.\n     * If set to float strictly between 0 and 1, a token is only considered if it is greater than either `eta_cutoff` or `sqrt(eta_cutoff) * exp(-entropy(softmax(next_token_logits)))`.\n     * The latter term is intuitively the expected next token probability, scaled by `sqrt(eta_cutoff)`. In the paper, suggested values range from 3e-4 to 2e-3, depending on the size of the model.\n     * See [Truncation Sampling as Language Model Desmoothing](https://arxiv.org/abs/2210.15191) for more details.\n     * @type {number}\n     * @default 0.0\n     */\n    eta_cutoff = 0.0;\n\n    /**\n     * This value is subtracted from a beam's score if it generates a token same as any beam from other group at a particular time.\n     * Note that `diversity_penalty` is only effective if `group beam search` is enabled.\n     * @type {number}\n     * @default 0.0\n     */\n    diversity_penalty = 0.0;\n\n    /**\n     * The parameter for repetition penalty. 1.0 means no penalty.\n     * See [this paper](https://arxiv.org/pdf/1909.05858.pdf) for more details.\n     * @type {number}\n     * @default 1.0\n     */\n    repetition_penalty = 1.0;\n\n    /**\n     * The paramater for encoder_repetition_penalty.\n     * An exponential penalty on sequences that are not in the original input.\n     * 1.0 means no penalty.\n     * @type {number}\n     * @default 1.0\n     */\n    encoder_repetition_penalty = 1.0;\n\n    /**\n     * Exponential penalty to the length that is used with beam-based generation.\n     * It is applied as an exponent to the sequence length, which in turn is used to divide the score of the sequence.\n     * Since the score is the log likelihood of the sequence (i.e. negative), `length_penalty` > 0.0 promotes longer sequences, while `length_penalty` < 0.0 encourages shorter sequences.\n     * @type {number}\n     * @default 1.0\n     */\n    length_penalty = 1.0;\n\n    /**\n     * If set to int > 0, all ngrams of that size can only occur once.\n     * @type {number}\n     * @default 0\n     */\n    no_repeat_ngram_size = 0;\n\n    /**\n     * List of token ids that are not allowed to be generated.\n     * In order to get the token ids of the words that should not appear in the generated text, use\n     * `tokenizer(bad_words, { add_prefix_space: true, add_special_tokens: false }).input_ids`.\n     * @type {number[][]}\n     * @default null\n     */\n    bad_words_ids = null;\n\n    /**\n     * List of token ids that must be generated.\n     * If given a `number[][]`, this is treated as a simple list of words that must be included, the opposite to `bad_words_ids`.\n     * If given `number[][][]`, this triggers a [disjunctive constraint](https://github.com/huggingface/transformers/issues/14081), where one can allow different forms of each word.\n     * @type {number[][]|number[][][]}\n     * @default null\n     */\n    force_words_ids = null;\n\n    /**\n     * Whether to renormalize the logits after applying all the logits processors or warpers (including the custom ones).\n     * It's highly recommended to set this flag to `true` as the search algorithms suppose the score logits are normalized but some logit processors or warpers break the normalization.\n     * @type {boolean}\n     * @default false\n     */\n    renormalize_logits = false;\n\n    /**\n     * Custom constraints that can be added to the generation to ensure that the output will contain the use of certain tokens as defined by `Constraint` objects, in the most sensible way possible.\n     * @type {Object[]}\n     * @default null\n     */\n    constraints = null;\n\n    /**\n     * The id of the token to force as the first generated token after the `decoder_start_token_id`.\n     * Useful for multilingual models like mBART where the first generated token needs to be the target language token.\n     * @type {number}\n     * @default null\n     */\n    forced_bos_token_id = null;\n\n    /**\n     * The id of the token to force as the last generated token when `max_length` is reached.\n     * Optionally, use a list to set multiple *end-of-sequence* tokens.\n     * @type {number|number[]}\n     * @default null\n     */\n    forced_eos_token_id = null;\n\n    /**\n     * Whether to remove possible *nan* and *inf* outputs of the model to prevent the generation method to crash. Note that using `remove_invalid_values` can slow down generation.\n     * @type {boolean}\n     */\n    remove_invalid_values = false;\n\n    /**\n     * This Tuple adds an exponentially increasing length penalty, after a certain amount of tokens have been generated.\n     * The tuple shall consist of: `(start_index, decay_factor)` where `start_index` indicates where penalty starts and `decay_factor` represents the factor of exponential decay.\n     * @type {[number, number]}\n     * @default null\n     */\n    exponential_decay_length_penalty = null;\n\n    /**\n     * A list of tokens that will be suppressed at generation.\n     * The `SuppressTokens` logit processor will set their log probs to `-inf` so that they are not sampled.\n     * @type {number[]}\n     * @default null\n     */\n    suppress_tokens = null;\n\n    /**\n     * A streamer that will be used to stream the generation.\n     * @type {import('./streamers.js').TextStreamer}\n     * @default null\n     */\n    streamer = null;\n\n    /**\n     * A list of tokens that will be suppressed at the beginning of the generation.\n     * The `SuppressBeginTokens` logit processor will set their log probs to `-inf` so that they are not sampled.\n     * @type {number[]}\n     * @default null\n     */\n    begin_suppress_tokens = null;\n\n    /**\n     * A list of pairs of integers which indicates a mapping from generation indices to token indices that will be forced before sampling.\n     * For example, `[[1, 123]]` means the second generated token will always be a token of index 123.\n     * @type {[number, number][]}\n     * @default null\n     */\n    forced_decoder_ids = null;\n\n    /**\n     * The guidance scale for classifier free guidance (CFG). CFG is enabled by setting `guidance_scale > 1`.\n     * Higher guidance scale encourages the model to generate samples that are more closely linked to the input\n     * prompt, usually at the expense of poorer quality.\n     * @type {number}\n     * @default null\n     */\n    guidance_scale = null;\n\n    // Parameters that define the output variables of `generate`\n    /**\n     * The number of independently computed returned sequences for each element in the batch.\n     * @type {number}\n     * @default 1\n     */\n    num_return_sequences = 1;\n\n    /**\n     * Whether or not to return the attentions tensors of all attention layers.\n     * See `attentions` under returned tensors for more details.\n     * @type {boolean}\n     * @default false\n     */\n    output_attentions = false;\n\n    /**\n     * Whether or not to return the hidden states of all layers.\n     * See `hidden_states` under returned tensors for more details.\n     * @type {boolean}\n     * @default false\n     */\n    output_hidden_states = false;\n\n    /**\n     * Whether or not to return the prediction scores.\n     * See `scores` under returned tensors for more details.\n     * @type {boolean}\n     * @default false\n     */\n    output_scores = false;\n\n    /**\n     * Whether or not to return a `ModelOutput` instead of a plain tuple.\n     * @type {boolean}\n     * @default false\n     */\n    return_dict_in_generate = false;\n\n    // Special tokens that can be used at generation time\n    /**\n     * The id of the *padding* token.\n     * @type {number}\n     * @default null\n     */\n    pad_token_id = null;\n\n    /**\n     * The id of the *beginning-of-sequence* token.\n     * @type {number}\n     * @default null\n     */\n    bos_token_id = null;\n\n    /**\n     * The id of the *end-of-sequence* token.\n     * Optionally, use a list to set multiple *end-of-sequence* tokens.\n     * @type {number|number[]}\n     * @default null\n     */\n    eos_token_id = null;\n\n    // Generation parameters exclusive to encoder-decoder models\n    /**\n     * If set to int > 0, all ngrams of that size that occur in the `encoder_input_ids` cannot occur in the `decoder_input_ids`.\n     * @type {number}\n     * @default 0\n     */\n    encoder_no_repeat_ngram_size = 0;\n\n    /**\n     * If an encoder-decoder model starts decoding with a different token than *bos*, the id of that token.\n     * @type {number}\n     * @default null\n     */\n    decoder_start_token_id = null;\n\n    // Wild card\n    /**\n     * Additional generation kwargs will be forwarded to the `generate` function of the model.\n     * Kwargs that are not present in `generate`'s signature will be used in the model forward pass.\n     * @type {Object}\n     * @default {}\n     */\n    generation_kwargs = {};\n\n    /**\n     * \n     * @param {GenerationConfig|import('../configs.js').PretrainedConfig} config \n     */\n    constructor(config) {\n        Object.assign(this, (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_0__.pick)(config, Object.getOwnPropertyNames(this)));\n    }\n}\n\n\n\n/***/ }),\n\n/***/ \"./src/generation/logits_process.js\":\n/*!******************************************!*\\\n  !*** ./src/generation/logits_process.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClassifierFreeGuidanceLogitsProcessor: () => (/* binding */ ClassifierFreeGuidanceLogitsProcessor),\n/* harmony export */   ForcedBOSTokenLogitsProcessor: () => (/* binding */ ForcedBOSTokenLogitsProcessor),\n/* harmony export */   ForcedEOSTokenLogitsProcessor: () => (/* binding */ ForcedEOSTokenLogitsProcessor),\n/* harmony export */   LogitsProcessor: () => (/* binding */ LogitsProcessor),\n/* harmony export */   LogitsProcessorList: () => (/* binding */ LogitsProcessorList),\n/* harmony export */   LogitsWarper: () => (/* binding */ LogitsWarper),\n/* harmony export */   MinLengthLogitsProcessor: () => (/* binding */ MinLengthLogitsProcessor),\n/* harmony export */   MinNewTokensLengthLogitsProcessor: () => (/* binding */ MinNewTokensLengthLogitsProcessor),\n/* harmony export */   NoBadWordsLogitsProcessor: () => (/* binding */ NoBadWordsLogitsProcessor),\n/* harmony export */   NoRepeatNGramLogitsProcessor: () => (/* binding */ NoRepeatNGramLogitsProcessor),\n/* harmony export */   RepetitionPenaltyLogitsProcessor: () => (/* binding */ RepetitionPenaltyLogitsProcessor),\n/* harmony export */   SuppressTokensAtBeginLogitsProcessor: () => (/* binding */ SuppressTokensAtBeginLogitsProcessor),\n/* harmony export */   TemperatureLogitsWarper: () => (/* binding */ TemperatureLogitsWarper),\n/* harmony export */   TopKLogitsWarper: () => (/* binding */ TopKLogitsWarper),\n/* harmony export */   TopPLogitsWarper: () => (/* binding */ TopPLogitsWarper),\n/* harmony export */   WhisperTimeStampLogitsProcessor: () => (/* binding */ WhisperTimeStampLogitsProcessor)\n/* harmony export */ });\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths.js */ \"./src/utils/maths.js\");\n\n/**\n * @module generation/logits_process\n */\n\n\n\n\n\n\n/**\n * Abstract base class for all logit processors that can be applied during generation.\n */\nclass LogitsProcessor extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Apply the processor to the input logits.\n     *\n     * @abstract\n     * @param {bigint[][]} input_ids The input ids.\n     * @param {Tensor} logits The logits to process.\n     * @throws {Error} Throws an error if `_call` is not implemented in the subclass.\n     */\n    _call(input_ids, logits) {\n        throw Error(\"`_call` should be implemented in a subclass\")\n    }\n}\n\n\n/**\n * Abstract base class for all logit warpers that can be applied during generation with multinomial sampling.\n */\nclass LogitsWarper extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Apply the processor to the input logits.\n     *\n     * @abstract\n     * @param {bigint[][]} input_ids The input ids.\n     * @param {Tensor} logits The logits to process.\n     * @throws {Error} Throws an error if `_call` is not implemented in the subclass.\n     */\n    _call(input_ids, logits) {\n        throw Error(\"`_call` should be implemented in a subclass\")\n    }\n}\n\n\n/**\n * A class representing a list of logits processors. A logits processor is a function that modifies the logits\n * output of a language model. This class provides methods for adding new processors and applying all processors to a\n * batch of logits.\n */\nclass LogitsProcessorList extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Constructs a new instance of `LogitsProcessorList`.\n     */\n    constructor() {\n        super();\n        this.processors = [];\n    }\n\n    /**\n     * Adds a new logits processor to the list.\n     *\n     * @param {LogitsProcessor} item The logits processor function to add.\n     */\n    push(item) {\n        this.processors.push(item);\n    }\n\n    /**\n     * Adds multiple logits processors to the list.\n     *\n     * @param {LogitsProcessor[]} items The logits processor functions to add.\n     */\n    extend(items) {\n        this.processors.push(...items);\n    }\n\n    /**\n     * Applies all logits processors in the list to a batch of logits, modifying them in-place.\n     *\n     * @param {bigint[][]} input_ids The input IDs for the language model.\n     * @param {Tensor} logits\n     */\n    _call(input_ids, logits) {\n        let toReturn = logits;\n        // NOTE: Most processors modify logits inplace\n        for (const processor of this.processors) {\n            toReturn = processor(input_ids, toReturn);\n        }\n        return toReturn;\n    }\n\n    [Symbol.iterator]() {\n        return this.processors.values();\n    }\n}\n\n// DEPRECATED: https://github.com/huggingface/transformers/pull/29485\n// /**\n//  * A logits processor that forces a specific token to be generated by the decoder.\n//  */\n// export class ForceTokensLogitsProcessor extends LogitsProcessor {\n//     /**\n//      * Constructs a new instance of `ForceTokensLogitsProcessor`.\n//      * \n//      * @param {[number, number][]} forced_decoder_ids The ids of tokens that should be forced.\n//      */\n//     constructor(forced_decoder_ids) {\n//         super();\n//         // TODO: convert to `new Map(forced_decoder_ids)`\n//         this.force_token_map = Object.fromEntries(forced_decoder_ids ?? []);\n//     }\n\n//     /**\n//      * Apply the processor to the input logits.\n//      *\n//      * @param {bigint[][]} input_ids The input ids.\n//      * @param {Tensor} logits The logits to process.\n//      * @returns {Tensor} The processed logits.\n//      */\n//     _call(input_ids, logits) {\n//         console.log('this.force_token_map', this.force_token_map)\n//         console.log('call ForceTokensLogitsProcessor', input_ids, logits)\n//         console.log('input_ids.length', input_ids.length)\n//         let map = this.force_token_map[input_ids.length];\n//         if (map) { // There exists a mapping\n//             logits.data.fill(-Infinity)\n//             logits.data[map] = 0;\n//         }\n//         console.log('map', map)\n//         // throw Error(\"Not implemented\")\n//         return logits;\n//     }\n// }\n\n/**\n * A LogitsProcessor that forces a BOS token at the beginning of the generated sequence.\n */\nclass ForcedBOSTokenLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a ForcedBOSTokenLogitsProcessor.\n     * @param {number} bos_token_id The ID of the beginning-of-sequence token to be forced.\n     */\n    constructor(bos_token_id) {\n        super();\n        this.bos_token_id = bos_token_id;\n    }\n\n    /**\n     * Apply the BOS token forcing to the logits.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The logits with BOS token forcing.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            if (input_ids[i].length === 1) {\n                const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n                batch_logits_data.fill(-Infinity);\n                batch_logits_data[this.bos_token_id] = 0;\n            }\n        }\n        return logits;\n    }\n}\n\n/**\n * A logits processor that enforces the specified token as the last generated token when `max_length` is reached.\n */\nclass ForcedEOSTokenLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a ForcedEOSTokenLogitsProcessor.\n     * @param {number} max_length The maximum length of the sequence to be generated.\n     * @param {number|number[]} eos_token_id The id(s) of the *end-of-sequence* token.\n     */\n    constructor(max_length, eos_token_id) {\n        super();\n        this.max_length = max_length;\n        this.eos_token_id = Array.isArray(eos_token_id) ? eos_token_id : [eos_token_id];\n    }\n\n    /**\n     * Apply the processor to input_ids and logits.\n     * \n     * @param {bigint[][]} input_ids The input ids.\n     * @param {Tensor} logits The logits tensor.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            if (input_ids[i].length === this.max_length - 1) {\n                const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n                batch_logits_data.fill(-Infinity);\n                for (const eos_token of this.eos_token_id) {\n                    batch_logits_data[eos_token] = 0;\n                }\n            }\n        }\n        return logits;\n    }\n}\n\n/**\n * A LogitsProcessor that suppresses a list of tokens as soon as the `generate` function starts\n * generating using `begin_index` tokens. This should ensure that the tokens defined by\n * `begin_suppress_tokens` at not sampled at the begining of the generation.\n */\nclass SuppressTokensAtBeginLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a SuppressTokensAtBeginLogitsProcessor.\n     * @param {number[]} begin_suppress_tokens The IDs of the tokens to suppress.\n     * @param {number} begin_index The number of tokens to generate before suppressing tokens.\n     */\n    constructor(begin_suppress_tokens, begin_index) {\n        super();\n        this.begin_suppress_tokens = begin_suppress_tokens;\n        this.begin_index = begin_index;\n    }\n\n    /**\n     * Apply the BOS token forcing to the logits.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The logits with BOS token forcing.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            if (input_ids[i].length === this.begin_index) {\n                const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n                for (const token_id of this.begin_suppress_tokens) {\n                    batch_logits_data[token_id] = -Infinity;\n                }\n            }\n        }\n        return logits;\n    }\n}\n\n/**\n * A LogitsProcessor that handles adding timestamps to generated text.\n */\nclass WhisperTimeStampLogitsProcessor extends LogitsProcessor {\n    /**\n     * Constructs a new WhisperTimeStampLogitsProcessor.\n     * @param {import('../models/whisper/generation_whisper.js').WhisperGenerationConfig} generate_config The config object passed to the `generate()` method of a transformer model.\n     * @param {number[]} init_tokens The initial tokens of the input sequence.\n     */\n    constructor(generate_config, init_tokens) {\n        super();\n        this.eos_token_id =\n            Array.isArray(generate_config.eos_token_id)\n                ? generate_config.eos_token_id[0]\n                : generate_config.eos_token_id;\n\n        this.no_timestamps_token_id = generate_config.no_timestamps_token_id;\n        this.timestamp_begin = this.no_timestamps_token_id + 1;\n\n        this.begin_index = init_tokens.length;\n        if (init_tokens.at(-1) === this.no_timestamps_token_id) {\n            this.begin_index -= 1;\n        }\n        this.max_initial_timestamp_index = generate_config.max_initial_timestamp_index;\n    }\n\n    /**\n     * Modify the logits to handle timestamp tokens.\n     * @param {bigint[][]} input_ids The input sequence of tokens.\n     * @param {Tensor} logits The logits output by the model.\n     * @returns {Tensor} The modified logits.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n\n            // suppress <|notimestamps|> which is handled by without_timestamps\n            batch_logits_data[this.no_timestamps_token_id] = -Infinity;\n\n            if (input_ids[i].length === this.begin_index - 1) {\n                batch_logits_data.fill(-Infinity);\n                batch_logits_data[this.timestamp_begin] = 0;\n                continue;\n            }\n\n            // timestamps have to appear in pairs, except directly before eos_token; mask logits accordingly\n            const seq = input_ids[i].slice(this.begin_index);\n            const last_was_timestamp = seq.length >= 1 && seq[seq.length - 1] >= this.timestamp_begin;\n            const penultimate_was_timestamp = seq.length < 2 || seq[seq.length - 2] >= this.timestamp_begin;\n\n            if (last_was_timestamp) {\n                if (penultimate_was_timestamp) { // has to be non-timestamp\n                    batch_logits_data.subarray(this.timestamp_begin).fill(-Infinity);\n                } else { // cannot be normal text tokens\n                    batch_logits_data.subarray(0, this.eos_token_id).fill(-Infinity);\n                }\n            }\n\n            // apply the `max_initial_timestamp` option\n            if (input_ids[i].length === this.begin_index && this.max_initial_timestamp_index !== null) {\n                const last_allowed = this.timestamp_begin + this.max_initial_timestamp_index;\n                batch_logits_data.subarray(last_allowed + 1).fill(-Infinity);\n            }\n\n            // if sum of probability over timestamps is above any other token, sample timestamp\n            const logprobs = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.log_softmax)(batch_logits_data);\n            const timestamp_logprob = Math.log(logprobs.subarray(this.timestamp_begin).map(Math.exp).reduce((a, b) => a + b));\n            const max_text_token_logprob = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(logprobs.subarray(0, this.timestamp_begin))[0];\n\n            if (timestamp_logprob > max_text_token_logprob) {\n                batch_logits_data.subarray(0, this.timestamp_begin).fill(-Infinity);\n            }\n        }\n\n        return logits;\n    }\n}\n\n/**\n * A logits processor that disallows ngrams of a certain size to be repeated.\n */\nclass NoRepeatNGramLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a NoRepeatNGramLogitsProcessor.\n     * @param {number} no_repeat_ngram_size The no-repeat-ngram size. All ngrams of this size can only occur once.\n     */\n    constructor(no_repeat_ngram_size) {\n        super();\n        this.no_repeat_ngram_size = no_repeat_ngram_size;\n    }\n\n    /**\n     * Generate n-grams from a sequence of token ids.\n     * @param {bigint[]} prevInputIds List of previous input ids\n     * @returns {Map<string, number[]>} Map of generated n-grams\n     */\n    getNgrams(prevInputIds) {\n        const curLen = prevInputIds.length;\n\n        /**@type {number[][]} */\n        const ngrams = [];\n        for (let j = 0; j < curLen + 1 - this.no_repeat_ngram_size; ++j) {\n            const ngram = [];\n            for (let k = 0; k < this.no_repeat_ngram_size; ++k) {\n                ngram.push(prevInputIds[j + k]);\n            }\n            ngrams.push(ngram.map(Number));\n        }\n\n        /** @type {Map<string, number[]>} */\n        const generatedNgram = new Map();\n        for (const ngram of ngrams) {\n            const prevNgram = ngram.slice(0, ngram.length - 1);\n            const prevNgramKey = JSON.stringify(prevNgram);\n            const prevNgramValue = generatedNgram.get(prevNgramKey) ?? [];\n            prevNgramValue.push(ngram[ngram.length - 1]);\n            generatedNgram.set(prevNgramKey, prevNgramValue);\n        }\n        return generatedNgram;\n    }\n\n    /**\n     * Generate n-grams from a sequence of token ids.\n     * @param {Map<string, number[]>} bannedNgrams Map of banned n-grams\n     * @param {bigint[]} prevInputIds List of previous input ids\n     * @returns {number[]} Map of generated n-grams\n     */\n    getGeneratedNgrams(bannedNgrams, prevInputIds) {\n        const ngramIdx = prevInputIds.slice(prevInputIds.length + 1 - this.no_repeat_ngram_size, prevInputIds.length);\n        const banned = bannedNgrams.get(JSON.stringify(ngramIdx.map(Number))) ?? [];\n        return banned;\n    }\n\n    /**\n     * Calculate banned n-gram tokens\n     * @param {bigint[]} prevInputIds List of previous input ids\n     * @returns {number[]} Map of generated n-grams\n     */\n    calcBannedNgramTokens(prevInputIds) {\n        const bannedTokens = [];\n        if (prevInputIds.length + 1 < this.no_repeat_ngram_size) {\n            // return no banned tokens if we haven't generated no_repeat_ngram_size tokens yet\n            return bannedTokens;\n\n        } else {\n            const generatedNgrams = this.getNgrams(prevInputIds);\n            const bannedTokens = this.getGeneratedNgrams(generatedNgrams, prevInputIds);\n            return bannedTokens;\n        }\n    }\n\n    /**\n     * Apply the no-repeat-ngram processor to the logits.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The logits with no-repeat-ngram processing.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n            const bannedTokens = this.calcBannedNgramTokens(input_ids[i]);\n            for (const token of bannedTokens) {\n                batch_logits_data[token] = -Infinity;\n            }\n        }\n        return logits;\n    }\n}\n\n/**\n * A logits processor that prevents the repetition of previous tokens through a penalty.\n * This penalty is applied at most once per token. Note that, for decoder-only models like most LLMs,\n * the considered tokens include the prompt.\n * \n * In the original [paper](https://arxiv.org/pdf/1909.05858.pdf), the authors suggest the use of a\n * penalty of around 1.2 to achieve a good balance between truthful generation and lack of repetition.\n * To penalize and reduce repetition, use `penalty` values above 1.0, where a higher value penalizes\n * more strongly. To reward and encourage repetition, use `penalty` values between 0.0 and 1.0, where\n * a lower value rewards more strongly.\n */\nclass RepetitionPenaltyLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a RepetitionPenaltyLogitsProcessor.\n     * @param {number} penalty The parameter for repetition penalty.\n     * - 1.0 means no penalty. Above 1.0 penalizes previously generated tokens.\n     * - Between 0.0 and 1.0 rewards previously generated tokens.\n     */\n    constructor(penalty) {\n        super();\n        this.penalty = penalty;\n    }\n\n    /**\n     * Apply the repetition penalty to the logits.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The logits with repetition penalty processing.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n            for (const input_id of new Set(input_ids[i])) {\n                const token = Number(input_id);\n                if (batch_logits_data[token] < 0) {\n                    batch_logits_data[token] *= this.penalty;\n                } else {\n                    batch_logits_data[token] /= this.penalty;\n                }\n            }\n        }\n\n        return logits\n    }\n}\n\n/**\n * A logits processor that enforces a minimum number of tokens.\n */\nclass MinLengthLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a MinLengthLogitsProcessor.\n     * @param {number} min_length The minimum length below which the score of `eos_token_id` is set to negative infinity.\n     * @param {number|number[]} eos_token_id The ID/IDs of the end-of-sequence token.\n     */\n    constructor(min_length, eos_token_id) {\n        super();\n        this.min_length = min_length;\n        this.eos_token_id = Array.isArray(eos_token_id) ? eos_token_id : [eos_token_id];\n    }\n\n    /**\n     * Apply logit processor.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The processed logits.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            if (input_ids[i].length < this.min_length) {\n                const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n\n                for (const eos_token of this.eos_token_id) {\n                    batch_logits_data[eos_token] = -Infinity;\n                }\n            }\n        }\n\n        return logits\n    }\n}\n\n/**\n * A logits processor that enforces a minimum number of new tokens.\n */\nclass MinNewTokensLengthLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a MinNewTokensLengthLogitsProcessor.\n     * @param {number} prompt_length_to_skip The input tokens length.\n     * @param {number} min_new_tokens The minimum *new* tokens length below which the score of `eos_token_id` is set to negative infinity.\n     * @param {number|number[]} eos_token_id The ID/IDs of the end-of-sequence token.\n     */\n    constructor(prompt_length_to_skip, min_new_tokens, eos_token_id) {\n        super();\n        this.prompt_length_to_skip = prompt_length_to_skip;\n        this.min_new_tokens = min_new_tokens;\n        this.eos_token_id = Array.isArray(eos_token_id) ? eos_token_id : [eos_token_id];\n    }\n\n    /**\n     * Apply logit processor.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The processed logits.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            const new_tokens_length = input_ids[i].length - this.prompt_length_to_skip;\n            if (new_tokens_length < this.min_new_tokens) {\n                const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n\n                for (const eos_token of this.eos_token_id) {\n                    batch_logits_data[eos_token] = -Infinity;\n                }\n            }\n        }\n        return logits\n    }\n}\n\nclass NoBadWordsLogitsProcessor extends LogitsProcessor {\n    /**\n     * Create a `NoBadWordsLogitsProcessor`.\n     * @param {number[][]} bad_words_ids List of list of token ids that are not allowed to be generated.\n     * @param {number|number[]} eos_token_id The id of the *end-of-sequence* token. Optionally, use a list to set multiple *end-of-sequence* tokens.\n     */\n    constructor(bad_words_ids, eos_token_id) {\n        super();\n        this.bad_words_ids = bad_words_ids;\n        this.eos_token_id = Array.isArray(eos_token_id) ? eos_token_id : [eos_token_id];\n    }\n\n    /**\n     * Apply logit processor.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The processed logits.\n     */\n    _call(input_ids, logits) {\n        for (let i = 0; i < input_ids.length; ++i) {\n            const batch_logits_data = /** @type {Float32Array} */(logits[i].data);\n            const ids = input_ids[i];\n            for (const bad_word_ids of this.bad_words_ids) {\n                // Whether to modify the logits of the last token in the bad word id sequence\n                let mark = true;\n\n                // For each bad word in the list, if the current sequence of input ids ends with this sequence (excluding the last),\n                // then we set the logits of the last bad word id to -Infinity.\n                for (let j = 1; j <= bad_word_ids.length - 1 && bad_word_ids.length < ids.length; ++j) {\n\n                    // NOTE: We use != instead of !== to compare bigint and number\n                    // @ts-ignore\n                    if (bad_word_ids.at(-j - 1) != ids.at(-j)) {\n                        // We have found a mismatch\n                        mark = false;\n                        break;\n                    }\n                }\n                if (mark) {\n                    batch_logits_data[bad_word_ids.at(-1)] = -Infinity;\n                }\n            }\n        }\n        return logits\n    }\n}\n\n/**\n * [`LogitsProcessor`] for classifier free guidance (CFG). The scores are split over the batch dimension,\n * where the first half correspond to the conditional logits (predicted from the input prompt) and the second half\n * correspond to the unconditional logits (predicted from an empty or 'null' prompt). The processor computes a\n * weighted average across the conditional and unconditional logits, parameterised by the `guidance_scale`.\n * \n * See [the paper](https://arxiv.org/abs/2306.05284) for more information.\n */\nclass ClassifierFreeGuidanceLogitsProcessor extends LogitsProcessor {\n\n    /**\n     * Create a `ClassifierFreeGuidanceLogitsProcessor`.\n     * @param {number} guidance_scale The guidance scale for classifier free guidance (CFG). CFG is enabled by setting `guidance_scale > 1`.\n     * Higher guidance scale encourages the model to generate samples that are more closely linked to the input\n     * prompt, usually at the expense of poorer quality.\n     */\n    constructor(guidance_scale) {\n        super();\n        if (guidance_scale <= 1) {\n            throw new Error(\n                `Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${guidance_scale}.`\n            )\n        }\n        this.guidance_scale = guidance_scale;\n    }\n\n    /**\n     * Apply logit processor.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The processed logits.\n     */\n    _call(input_ids, logits) {\n        if (logits.dims[0] !== 2 * input_ids.length) {\n            throw new Error(\n                `Logits should have twice the batch size of the input ids, the first half of batches corresponding to ` +\n                `the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got ` +\n                `batch size ${logits.dims[0]} for the logits and ${input_ids.length} for the input ids.`\n            )\n        }\n\n        const unguided_bsz = input_ids.length;\n        const cond_logits = logits.slice([0, unguided_bsz], null);\n        const uncond_logits = logits.slice([unguided_bsz, logits.dims[0]], null);\n\n        // Merge into uncond_logits (to save memory). This is equivalent to the following:\n        // scores = uncond_logits + (cond_logits - uncond_logits) * guidance_scale\n        for (let i = 0; i < uncond_logits.data.length; ++i) {\n            uncond_logits.data[i] += (cond_logits.data[i] - uncond_logits.data[i]) * this.guidance_scale;\n        }\n\n        return uncond_logits;\n    }\n}\n\n/**\n * [`LogitsWarper`] for temperature (exponential scaling output probability distribution), which effectively means\n * that it can control the randomness of the predicted tokens. Often used together with [`TopPLogitsWarper`] and [`TopKLogitsWarper`].\n */\nclass TemperatureLogitsWarper extends LogitsWarper {\n    /**\n     * Create a `TemperatureLogitsWarper`.\n     * @param {number} temperature Strictly positive float value used to modulate the logits distribution.\n     * A value smaller than `1` decreases randomness (and vice versa), with `0` being equivalent to shifting\n     * all probability mass to the most likely token.\n     */\n    constructor(temperature) {\n        super();\n\n        if (typeof temperature !== 'number' || temperature <= 0) {\n            let errorMessage =\n                `\\`temperature\\` (=${temperature}) must be a strictly positive float, otherwise your next token scores will be invalid.`;\n\n            if (temperature === 0) {\n                errorMessage += \" If you're looking for greedy decoding strategies, set `do_sample=false`.\"\n            }\n        }\n        this.temperature = temperature;\n    }\n\n    /**\n     * Apply logit warper.\n     * @param {bigint[][]} input_ids The input IDs.\n     * @param {Tensor} logits The logits.\n     * @returns {Tensor} The processed logits.\n     */\n    _call(input_ids, logits) {\n        const batch_logits_data = /** @type {Float32Array} */(logits.data);\n        for (let i = 0; i < batch_logits_data.length; ++i) {\n            batch_logits_data[i] /= this.temperature;\n        }\n        return logits;\n    }\n}\n\n/**\n * [`LogitsWarper`] that performs top-p, i.e. restricting to top tokens summing to prob_cut_off <= prob_cut_off.\n * Often used together with [`TemperatureLogitsWarper`] and [`TopKLogitsWarper`].\n */\nclass TopPLogitsWarper extends LogitsWarper {\n    /**\n     * Create a `TopPLogitsWarper`.\n     * @param {number} top_p If set to < 1, only the smallest set of most probable tokens with\n     * probabilities that add up to `top_p` or higher are kept for generation.\n     * @param {Object} options Additional options for the top-p sampling.\n     * @param {number} [options.filter_value=-Infinity] All filtered values will be set to this float value.\n     * @param {number} [options.min_tokens_to_keep=1] Minimum number of tokens that cannot be filtered.\n     */\n    constructor(top_p, {\n        filter_value = -Infinity,\n        min_tokens_to_keep = 1,\n    } = {}) {\n        super();\n        if (top_p < 0 || top_p > 1.0) {\n            throw new Error(`\\`top_p\\` must be a float > 0 and < 1, but is ${top_p}`)\n        }\n        if (!Number.isInteger(min_tokens_to_keep) || min_tokens_to_keep < 1) {\n            throw new Error(`\\`min_tokens_to_keep\\` must be a positive integer, but is ${min_tokens_to_keep}`)\n        }\n\n        this.top_p = top_p\n        this.filter_value = filter_value\n        this.min_tokens_to_keep = min_tokens_to_keep\n    }\n}\n\n/**\n * [`LogitsWarper`] that performs top-k, i.e. restricting to the k highest probability elements.\n * Often used together with [`TemperatureLogitsWarper`] and [`TopPLogitsWarper`].\n */\nclass TopKLogitsWarper extends LogitsWarper {\n    /**\n     * Create a `TopKLogitsWarper`.\n     * @param {number} top_k If set to > 0, only the top `top_k` tokens are kept for generation.\n     * @param {Object} options Additional options for the top-k sampling.\n     * @param {number} [options.filter_value=-Infinity] All filtered values will be set to this float value.\n     * @param {number} [options.min_tokens_to_keep=1] Minimum number of tokens that cannot be filtered.\n     */\n    constructor(top_k, {\n        filter_value = -Infinity,\n        min_tokens_to_keep = 1,\n    } = {}) {\n        super();\n        if (!Number.isInteger(top_k) || top_k < 0) {\n            throw new Error(`\\`top_k\\` must be a positive integer, but is ${top_k}`)\n        }\n\n        this.top_k = Math.max(top_k, min_tokens_to_keep)\n        this.filter_value = filter_value\n    }\n}\n\n/***/ }),\n\n/***/ \"./src/generation/logits_sampler.js\":\n/*!******************************************!*\\\n  !*** ./src/generation/logits_sampler.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogitsSampler: () => (/* binding */ LogitsSampler)\n/* harmony export */ });\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _generation_configuration_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../generation/configuration_utils.js */ \"./src/generation/configuration_utils.js\");\n\n/**\n * @module generation/logits_sampler\n */\n\n\n\n\n\n\n\n/**\n * Sampler is a base class for all sampling methods used for text generation.\n */\nclass LogitsSampler extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Creates a new Sampler object with the specified generation config.\n     * @param {GenerationConfig} generation_config The generation config.\n     */\n    constructor(generation_config) {\n        super();\n        this.generation_config = generation_config;\n    }\n\n    /**\n     * Executes the sampler, using the specified logits.\n     * @param {Tensor} logits\n     * @returns {Promise<[bigint, number][]>}\n     */\n    async _call(logits) {\n        // Sample from logits, of dims [batch, sequence_length, vocab_size].\n        // If index is specified, sample from [batch, index, vocab_size].\n        return this.sample(logits);\n    }\n\n    /**\n     * Abstract method for sampling the logits.\n     * @param {Tensor} logits\n     * @throws {Error} If not implemented in subclass.\n     * @returns {Promise<[bigint, number][]>}\n     */\n    async sample(logits) {\n        throw Error(\"sample should be implemented in subclasses.\")\n    }\n\n    /**\n     * Returns the specified logits as an array, with temperature applied.\n     * @param {Tensor} logits\n     * @param {number} index\n     * @returns {Float32Array}\n     */\n    getLogits(logits, index) {\n        let vocabSize = logits.dims.at(-1);\n\n        let logs = /** @type {Float32Array} */(logits.data);\n\n        if (index === -1) {\n            logs = logs.slice(-vocabSize);\n        } else {\n            let startIndex = index * vocabSize;\n            logs = logs.slice(startIndex, startIndex + vocabSize);\n        }\n        return logs;\n    }\n\n    /**\n     * Selects an item randomly based on the specified probabilities.\n     * @param {import(\"../transformers.js\").DataArray} probabilities An array of probabilities to use for selection.\n     * @returns {number} The index of the selected item.\n     */\n    randomSelect(probabilities) {\n        // Return index of chosen item\n        let sumProbabilities = 0;\n        for (let i = 0; i < probabilities.length; ++i) {\n            sumProbabilities += probabilities[i];\n        }\n\n        let r = Math.random() * sumProbabilities;\n        for (let i = 0; i < probabilities.length; ++i) {\n            r -= probabilities[i];\n            if (r <= 0) {\n                return i;\n            }\n        }\n        return 0; // return first (most probable) as a fallback\n    }\n\n    /**\n     * Returns a Sampler object based on the specified options.\n     * @param {GenerationConfig} generation_config An object containing options for the sampler.\n     * @returns {LogitsSampler} A Sampler object.\n     */\n    static getSampler(generation_config) {\n        // - *greedy decoding*: `num_beams=1` and `do_sample=False`\n        // - *contrastive search*: `penalty_alpha>0` and `top_k>1`\n        // - *multinomial sampling*: `num_beams=1` and `do_sample=True`\n        // - *beam-search decoding*: `num_beams>1` and `do_sample=False`\n        // - *beam-search multinomial sampling*: `num_beams>1` and `do_sample=True`\n        // - *diverse beam-search decoding*: `num_beams>1` and `num_beam_groups>1`\n        // - *constrained beam-search decoding*: `constraints!=None` or `force_words_ids!=None`\n\n        // NOTE: beam search is implemented directly into the generation function\n        if (generation_config.do_sample) {\n            return new MultinomialSampler(generation_config);\n\n        } else if (generation_config.num_beams > 1) {\n            return new BeamSearchSampler(generation_config);\n\n        } else {\n            if (generation_config.num_return_sequences > 1) {\n                throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${generation_config.num_return_sequences}.`)\n            }\n            return new GreedySampler(generation_config);\n        }\n    }\n}\n\n/**\n * Class representing a Greedy Sampler.\n */\nclass GreedySampler extends LogitsSampler {\n    /**\n     * Sample the maximum probability of a given logits tensor.\n     * @param {Tensor} logits\n     * @returns {Promise<[bigint, number][]>} An array with a single tuple, containing the index of the maximum value and a meaningless score (since this is a greedy search).\n     */\n    async sample(logits) {\n        // NOTE: no need to do log_softmax here since we only take the maximum\n        const argmax = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(logits.data)[1];\n\n        // Note: score is meaningless in this context, since we are performing\n        // greedy search (p = 1 => log(p) = 0)\n        return [\n            [BigInt(argmax), 0]\n        ];\n    }\n}\n\n/**\n * Class representing a MultinomialSampler.\n */\nclass MultinomialSampler extends LogitsSampler {\n\n    /**\n     * Sample from the logits.\n     * @param {Tensor} logits\n     * @returns {Promise<[bigint, number][]>}\n     */\n    async sample(logits) {\n        let k = logits.dims.at(-1); // defaults to vocab size\n        if (this.generation_config.top_k > 0) {\n            k = Math.min(this.generation_config.top_k, k);\n        }\n\n        // Get top k tokens\n        const [v, i] = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.topk)(logits, k);\n\n        // Compute softmax over logits\n        const probabilities = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.softmax)(/** @type {Float32Array} */(v.data));\n\n        return Array.from({ length: this.generation_config.num_beams }, () => {\n            const sampledIndex = this.randomSelect(probabilities);\n            return [\n                i.data[sampledIndex], // token id\n                Math.log(probabilities[sampledIndex]), // score\n            ];\n        });\n    }\n}\n\n\n/**\n * Class representing a BeamSearchSampler.\n */\nclass BeamSearchSampler extends LogitsSampler {\n\n    /**\n     * Sample from the logits.\n     * @param {Tensor} logits\n     * @returns {Promise<[bigint, number][]>}\n     */\n    async sample(logits) {\n        let k = logits.dims.at(-1); // defaults to vocab size\n        if (this.generation_config.top_k > 0) {\n            k = Math.min(this.generation_config.top_k, k);\n        }\n\n        // Get top k tokens\n        const [v, i] = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.topk)(logits, k);\n\n        // Compute softmax over logits\n        const probabilities = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.softmax)(/** @type {Float32Array} */(v.data));\n\n        return Array.from({ length: this.generation_config.num_beams }, (_, x) => {\n            return [\n                i.data[x], // token id\n                Math.log(probabilities[x]), // score\n            ];\n        });\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/generation/stopping_criteria.js\":\n/*!*********************************************!*\\\n  !*** ./src/generation/stopping_criteria.js ***!\n  \\*********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EosTokenCriteria: () => (/* binding */ EosTokenCriteria),\n/* harmony export */   InterruptableStoppingCriteria: () => (/* binding */ InterruptableStoppingCriteria),\n/* harmony export */   MaxLengthCriteria: () => (/* binding */ MaxLengthCriteria),\n/* harmony export */   StoppingCriteria: () => (/* binding */ StoppingCriteria),\n/* harmony export */   StoppingCriteriaList: () => (/* binding */ StoppingCriteriaList)\n/* harmony export */ });\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/generic.js */ \"./src/utils/generic.js\");\n\n/**\n * @module generation/stopping_criteria\n */\n\n\n\n// NOTE:\n// Stopping Criteria returns a list of `batch_size` booleans, indicating whether each sequence in the batch should be stopped.\n\n/**\n * Abstract base class for all stopping criteria that can be applied during generation.\n */\nclass StoppingCriteria extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * \n     * @param {number[][]} input_ids (`number[][]` of shape `(batch_size, sequence_length)`):\n     * Indices of input sequence tokens in the vocabulary.\n     * @param {number[][]} scores scores (`number[][]` of shape `(batch_size, config.vocab_size)`):\n     * Prediction scores of a language modeling head. These can be scores for each vocabulary token before SoftMax\n     * or scores for each vocabulary token after SoftMax.\n     * @returns {boolean[]} A list of booleans indicating whether each sequence should be stopped.\n     */\n    _call(input_ids, scores) {\n        throw Error(\"StoppingCriteria needs to be subclassed\");\n    }\n}\n/**\n */\nclass StoppingCriteriaList extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Constructs a new instance of `StoppingCriteriaList`.\n     */\n    constructor() {\n        super();\n        this.criteria = [];\n    }\n\n    /**\n     * Adds a new stopping criterion to the list.\n     *\n     * @param {StoppingCriteria} item The stopping criterion to add.\n     */\n    push(item) {\n        this.criteria.push(item);\n    }\n\n    /**\n     * Adds multiple stopping criteria to the list.\n     *\n     * @param {StoppingCriteria|StoppingCriteriaList|StoppingCriteria[]} items The stopping criteria to add.\n     */\n    extend(items) {\n        if (items instanceof StoppingCriteriaList) {\n            items = items.criteria;\n        } else if (items instanceof StoppingCriteria) {\n            items = [items];\n        }\n        this.criteria.push(...items);\n    }\n\n    _call(input_ids, scores) {\n        const is_done = new Array(input_ids.length).fill(false);\n        for (const criterion of this.criteria) {\n            const criterion_done = criterion(input_ids, scores);\n            for (let i = 0; i < is_done.length; ++i) {\n                is_done[i] ||= criterion_done[i];\n            }\n        }\n        return is_done;\n    }\n\n    [Symbol.iterator]() {\n        return this.criteria.values();\n    }\n}\n\n/**\n * This class can be used to stop generation whenever the full generated number of tokens exceeds `max_length`.\n * Keep in mind for decoder-only type of transformers, this will include the initial prompted tokens.\n */\nclass MaxLengthCriteria extends StoppingCriteria {\n\n    /**\n     * \n     * @param {number} max_length The maximum length that the output sequence can have in number of tokens.\n     * @param {number} [max_position_embeddings=null] The maximum model length, as defined by the model's `config.max_position_embeddings` attribute.\n     */\n    constructor(max_length, max_position_embeddings = null) {\n        super();\n        this.max_length = max_length;\n        this.max_position_embeddings = max_position_embeddings;\n    }\n\n    _call(input_ids) {\n        return input_ids.map(ids => ids.length >= this.max_length);\n    }\n}\n\n// TODO: add MaxTimeCriteria\n\n/**\n * This class can be used to stop generation whenever the \"end-of-sequence\" token is generated.\n * By default, it uses the `model.generation_config.eos_token_id`.\n */\nclass EosTokenCriteria extends StoppingCriteria {\n\n    /**\n     * \n     * @param {number|number[]} eos_token_id The id of the *end-of-sequence* token.\n     * Optionally, use a list to set multiple *end-of-sequence* tokens.\n     */\n    constructor(eos_token_id) {\n        super();\n        if (!Array.isArray(eos_token_id)) {\n            eos_token_id = [eos_token_id];\n        }\n        this.eos_token_id = eos_token_id;\n    }\n\n    /**\n     * \n     * @param {number[][]} input_ids \n     * @param {number[][]} scores \n     * @returns {boolean[]}\n     */\n    _call(input_ids, scores) {\n        return input_ids.map(ids => {\n            const last = ids.at(-1);\n            // NOTE: We use == instead of === to allow for number/bigint comparison\n            return this.eos_token_id.some(eos_id => last == eos_id);\n        });\n    }\n}\n\n/**\n * This class can be used to stop generation whenever the user interrupts the process.\n */\nclass InterruptableStoppingCriteria extends StoppingCriteria {\n    constructor() {\n        super();\n        this.interrupted = false;\n    }\n\n    interrupt() {\n        this.interrupted = true;\n    }\n\n    reset() {\n        this.interrupted = false;\n    }\n\n    _call(input_ids, scores) {\n        return new Array(input_ids.length).fill(this.interrupted);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/generation/streamers.js\":\n/*!*************************************!*\\\n  !*** ./src/generation/streamers.js ***!\n  \\*************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseStreamer: () => (/* binding */ BaseStreamer),\n/* harmony export */   TextStreamer: () => (/* binding */ TextStreamer),\n/* harmony export */   WhisperTextStreamer: () => (/* binding */ WhisperTextStreamer)\n/* harmony export */ });\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n\n/**\n * @module generation/streamers\n */\n\n\n\n\n\nclass BaseStreamer {\n    /**\n     * Function that is called by `.generate()` to push new tokens\n     * @param {bigint[][]} value \n     */\n    put(value) {\n        throw Error('Not implemented');\n    }\n\n    /**\n     * Function that is called by `.generate()` to signal the end of generation\n     */\n    end() {\n        throw Error('Not implemented');\n    }\n}\n\nconst stdout_write = _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_PROCESS_AVAILABLE\n    ? x => process.stdout.write(x)\n    : x => console.log(x);\n\n/**\n * Simple text streamer that prints the token(s) to stdout as soon as entire words are formed.\n */\nclass TextStreamer extends BaseStreamer {\n    /**\n     * \n     * @param {import('../tokenizers.js').PreTrainedTokenizer} tokenizer\n     * @param {Object} options\n     * @param {boolean} [options.skip_prompt=false] Whether to skip the prompt tokens\n     * @param {boolean} [options.skip_special_tokens=true] Whether to skip special tokens when decoding\n     * @param {function(string): void} [options.callback_function=null] Function to call when a piece of text is ready to display\n     * @param {function(bigint[]): void} [options.token_callback_function=null] Function to call when a new token is generated\n     * @param {Object} [options.decode_kwargs={}] Additional keyword arguments to pass to the tokenizer's decode method\n     */\n    constructor(tokenizer, {\n        skip_prompt = false,\n        callback_function = null,\n        token_callback_function = null,\n        skip_special_tokens = true,\n        decode_kwargs = {},\n        ...kwargs\n    } = {}) {\n        super();\n        this.tokenizer = tokenizer;\n        this.skip_prompt = skip_prompt;\n        this.callback_function = callback_function ?? stdout_write;\n        this.token_callback_function = token_callback_function;\n        this.decode_kwargs = { skip_special_tokens, ...decode_kwargs, ...kwargs };\n\n        // variables used in the streaming process\n        this.token_cache = [];\n        this.print_len = 0;\n        this.next_tokens_are_prompt = true;\n    }\n\n    /**\n     * Receives tokens, decodes them, and prints them to stdout as soon as they form entire words.\n     * @param {bigint[][]} value \n     */\n    put(value) {\n        if (value.length > 1) {\n            throw Error('TextStreamer only supports batch size of 1');\n        }\n\n        const is_prompt = this.next_tokens_are_prompt;\n        if (is_prompt) {\n            this.next_tokens_are_prompt = false;\n            if (this.skip_prompt) return;\n        }\n\n        const tokens = value[0];\n        this.token_callback_function?.(tokens)\n\n        // Add the new token to the cache and decodes the entire thing.\n        this.token_cache = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_0__.mergeArrays)(this.token_cache, tokens);\n        const text = this.tokenizer.decode(this.token_cache, this.decode_kwargs);\n\n        let printable_text;\n        if (is_prompt || text.endsWith('\\n')) {\n            // After the symbol for a new line, we flush the cache.\n            printable_text = text.slice(this.print_len);\n            this.token_cache = [];\n            this.print_len = 0;\n        } else if (text.length > 0 && (0,_tokenizers_js__WEBPACK_IMPORTED_MODULE_1__.is_chinese_char)(text.charCodeAt(text.length - 1))) {\n            // If the last token is a CJK character, we print the characters.\n            printable_text = text.slice(this.print_len);\n            this.print_len += printable_text.length;\n        } else {\n            // Otherwise, prints until the last space char (simple heuristic to avoid printing incomplete words,\n            // which may change with the subsequent token -- there are probably smarter ways to do this!)\n            printable_text = text.slice(this.print_len, text.lastIndexOf(' ') + 1);\n            this.print_len += printable_text.length;\n        }\n\n        this.on_finalized_text(printable_text, false);\n    }\n\n    /**\n     * Flushes any remaining cache and prints a newline to stdout.\n     */\n    end() {\n        let printable_text;\n        if (this.token_cache.length > 0) {\n            const text = this.tokenizer.decode(this.token_cache, this.decode_kwargs);\n            printable_text = text.slice(this.print_len);\n            this.token_cache = [];\n            this.print_len = 0;\n        } else {\n            printable_text = '';\n        }\n        this.next_tokens_are_prompt = true;\n        this.on_finalized_text(printable_text, true);\n    }\n\n    /**\n     * Prints the new text to stdout. If the stream is ending, also prints a newline.\n     * @param {string} text \n     * @param {boolean} stream_end \n     */\n    on_finalized_text(text, stream_end) {\n        if (text.length > 0) {\n            this.callback_function?.(text);\n        }\n        if (stream_end && this.callback_function === stdout_write && _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_PROCESS_AVAILABLE) {\n            this.callback_function?.('\\n');\n        }\n    }\n}\n\n/**\n * Utility class to handle streaming of tokens generated by whisper speech-to-text models.\n * Callback functions are invoked when each of the following events occur:\n *  - A new chunk starts (on_chunk_start)\n *  - A new token is generated (callback_function)\n *  - A chunk ends (on_chunk_end)\n *  - The stream is finalized (on_finalize)\n */\nclass WhisperTextStreamer extends TextStreamer {\n    /**\n     * @param {import('../tokenizers.js').WhisperTokenizer} tokenizer\n     * @param {Object} options\n     * @param {boolean} [options.skip_prompt=false] Whether to skip the prompt tokens\n     * @param {function(string): void} [options.callback_function=null] Function to call when a piece of text is ready to display\n     * @param {function(bigint[]): void} [options.token_callback_function=null] Function to call when a new token is generated\n     * @param {function(number): void} [options.on_chunk_start=null] Function to call when a new chunk starts\n     * @param {function(number): void} [options.on_chunk_end=null] Function to call when a chunk ends\n     * @param {function(): void} [options.on_finalize=null] Function to call when the stream is finalized\n     * @param {number} [options.time_precision=0.02] Precision of the timestamps\n     * @param {boolean} [options.skip_special_tokens=true] Whether to skip special tokens when decoding\n     * @param {Object} [options.decode_kwargs={}] Additional keyword arguments to pass to the tokenizer's decode method\n     */\n    constructor(tokenizer, {\n        skip_prompt = false,\n        callback_function = null,\n        token_callback_function = null,\n        on_chunk_start = null,\n        on_chunk_end = null,\n        on_finalize = null,\n        time_precision = 0.02,\n        skip_special_tokens = true,\n        decode_kwargs = {},\n    } = {}) {\n        super(tokenizer, {\n            skip_prompt,\n            skip_special_tokens,\n            callback_function,\n            token_callback_function,\n            decode_kwargs,\n        });\n        this.timestamp_begin = tokenizer.timestamp_begin;\n\n        this.on_chunk_start = on_chunk_start;\n        this.on_chunk_end = on_chunk_end;\n        this.on_finalize = on_finalize;\n\n        this.time_precision = time_precision;\n\n        this.waiting_for_timestamp = false;\n    }\n\n    /**\n     * @param {bigint[][]} value \n     */\n    put(value) {\n        if (value.length > 1) {\n            throw Error('WhisperTextStreamer only supports batch size of 1');\n        }\n        const tokens = value[0];\n\n        // Check if the token is a timestamp\n        if (tokens.length === 1) {\n            const offset = Number(tokens[0]) - this.timestamp_begin;\n            if (offset >= 0) {\n                const time = offset * this.time_precision;\n                if (this.waiting_for_timestamp) {\n                    this.on_chunk_end?.(time);\n                } else {\n                    this.on_chunk_start?.(time);\n                }\n                this.waiting_for_timestamp = !this.waiting_for_timestamp; // Toggle\n                value = [[]]; // Skip timestamp\n            }\n        }\n        return super.put(value);\n    }\n\n    end() {\n        super.end();\n        this.on_finalize?.();\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models.js\":\n/*!***********************!*\\\n  !*** ./src/models.js ***!\n  \\***********************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASTForAudioClassification: () => (/* binding */ ASTForAudioClassification),\n/* harmony export */   ASTModel: () => (/* binding */ ASTModel),\n/* harmony export */   ASTPreTrainedModel: () => (/* binding */ ASTPreTrainedModel),\n/* harmony export */   AlbertForMaskedLM: () => (/* binding */ AlbertForMaskedLM),\n/* harmony export */   AlbertForQuestionAnswering: () => (/* binding */ AlbertForQuestionAnswering),\n/* harmony export */   AlbertForSequenceClassification: () => (/* binding */ AlbertForSequenceClassification),\n/* harmony export */   AlbertModel: () => (/* binding */ AlbertModel),\n/* harmony export */   AlbertPreTrainedModel: () => (/* binding */ AlbertPreTrainedModel),\n/* harmony export */   AutoModel: () => (/* binding */ AutoModel),\n/* harmony export */   AutoModelForAudioClassification: () => (/* binding */ AutoModelForAudioClassification),\n/* harmony export */   AutoModelForAudioFrameClassification: () => (/* binding */ AutoModelForAudioFrameClassification),\n/* harmony export */   AutoModelForAudioTextToText: () => (/* binding */ AutoModelForAudioTextToText),\n/* harmony export */   AutoModelForCTC: () => (/* binding */ AutoModelForCTC),\n/* harmony export */   AutoModelForCausalLM: () => (/* binding */ AutoModelForCausalLM),\n/* harmony export */   AutoModelForDepthEstimation: () => (/* binding */ AutoModelForDepthEstimation),\n/* harmony export */   AutoModelForDocumentQuestionAnswering: () => (/* binding */ AutoModelForDocumentQuestionAnswering),\n/* harmony export */   AutoModelForImageClassification: () => (/* binding */ AutoModelForImageClassification),\n/* harmony export */   AutoModelForImageFeatureExtraction: () => (/* binding */ AutoModelForImageFeatureExtraction),\n/* harmony export */   AutoModelForImageMatting: () => (/* binding */ AutoModelForImageMatting),\n/* harmony export */   AutoModelForImageSegmentation: () => (/* binding */ AutoModelForImageSegmentation),\n/* harmony export */   AutoModelForImageTextToText: () => (/* binding */ AutoModelForImageTextToText),\n/* harmony export */   AutoModelForImageToImage: () => (/* binding */ AutoModelForImageToImage),\n/* harmony export */   AutoModelForMaskGeneration: () => (/* binding */ AutoModelForMaskGeneration),\n/* harmony export */   AutoModelForMaskedLM: () => (/* binding */ AutoModelForMaskedLM),\n/* harmony export */   AutoModelForNormalEstimation: () => (/* binding */ AutoModelForNormalEstimation),\n/* harmony export */   AutoModelForObjectDetection: () => (/* binding */ AutoModelForObjectDetection),\n/* harmony export */   AutoModelForPoseEstimation: () => (/* binding */ AutoModelForPoseEstimation),\n/* harmony export */   AutoModelForQuestionAnswering: () => (/* binding */ AutoModelForQuestionAnswering),\n/* harmony export */   AutoModelForSemanticSegmentation: () => (/* binding */ AutoModelForSemanticSegmentation),\n/* harmony export */   AutoModelForSeq2SeqLM: () => (/* binding */ AutoModelForSeq2SeqLM),\n/* harmony export */   AutoModelForSequenceClassification: () => (/* binding */ AutoModelForSequenceClassification),\n/* harmony export */   AutoModelForSpeechSeq2Seq: () => (/* binding */ AutoModelForSpeechSeq2Seq),\n/* harmony export */   AutoModelForTextToSpectrogram: () => (/* binding */ AutoModelForTextToSpectrogram),\n/* harmony export */   AutoModelForTextToWaveform: () => (/* binding */ AutoModelForTextToWaveform),\n/* harmony export */   AutoModelForTokenClassification: () => (/* binding */ AutoModelForTokenClassification),\n/* harmony export */   AutoModelForUniversalSegmentation: () => (/* binding */ AutoModelForUniversalSegmentation),\n/* harmony export */   AutoModelForVision2Seq: () => (/* binding */ AutoModelForVision2Seq),\n/* harmony export */   AutoModelForXVector: () => (/* binding */ AutoModelForXVector),\n/* harmony export */   AutoModelForZeroShotObjectDetection: () => (/* binding */ AutoModelForZeroShotObjectDetection),\n/* harmony export */   BartForConditionalGeneration: () => (/* binding */ BartForConditionalGeneration),\n/* harmony export */   BartForSequenceClassification: () => (/* binding */ BartForSequenceClassification),\n/* harmony export */   BartModel: () => (/* binding */ BartModel),\n/* harmony export */   BartPretrainedModel: () => (/* binding */ BartPretrainedModel),\n/* harmony export */   BaseModelOutput: () => (/* binding */ BaseModelOutput),\n/* harmony export */   BeitForImageClassification: () => (/* binding */ BeitForImageClassification),\n/* harmony export */   BeitModel: () => (/* binding */ BeitModel),\n/* harmony export */   BeitPreTrainedModel: () => (/* binding */ BeitPreTrainedModel),\n/* harmony export */   BertForMaskedLM: () => (/* binding */ BertForMaskedLM),\n/* harmony export */   BertForQuestionAnswering: () => (/* binding */ BertForQuestionAnswering),\n/* harmony export */   BertForSequenceClassification: () => (/* binding */ BertForSequenceClassification),\n/* harmony export */   BertForTokenClassification: () => (/* binding */ BertForTokenClassification),\n/* harmony export */   BertModel: () => (/* binding */ BertModel),\n/* harmony export */   BertPreTrainedModel: () => (/* binding */ BertPreTrainedModel),\n/* harmony export */   BlenderbotForConditionalGeneration: () => (/* binding */ BlenderbotForConditionalGeneration),\n/* harmony export */   BlenderbotModel: () => (/* binding */ BlenderbotModel),\n/* harmony export */   BlenderbotPreTrainedModel: () => (/* binding */ BlenderbotPreTrainedModel),\n/* harmony export */   BlenderbotSmallForConditionalGeneration: () => (/* binding */ BlenderbotSmallForConditionalGeneration),\n/* harmony export */   BlenderbotSmallModel: () => (/* binding */ BlenderbotSmallModel),\n/* harmony export */   BlenderbotSmallPreTrainedModel: () => (/* binding */ BlenderbotSmallPreTrainedModel),\n/* harmony export */   BloomForCausalLM: () => (/* binding */ BloomForCausalLM),\n/* harmony export */   BloomModel: () => (/* binding */ BloomModel),\n/* harmony export */   BloomPreTrainedModel: () => (/* binding */ BloomPreTrainedModel),\n/* harmony export */   CLIPModel: () => (/* binding */ CLIPModel),\n/* harmony export */   CLIPPreTrainedModel: () => (/* binding */ CLIPPreTrainedModel),\n/* harmony export */   CLIPSegForImageSegmentation: () => (/* binding */ CLIPSegForImageSegmentation),\n/* harmony export */   CLIPSegModel: () => (/* binding */ CLIPSegModel),\n/* harmony export */   CLIPSegPreTrainedModel: () => (/* binding */ CLIPSegPreTrainedModel),\n/* harmony export */   CLIPTextModel: () => (/* binding */ CLIPTextModel),\n/* harmony export */   CLIPTextModelWithProjection: () => (/* binding */ CLIPTextModelWithProjection),\n/* harmony export */   CLIPVisionModel: () => (/* binding */ CLIPVisionModel),\n/* harmony export */   CLIPVisionModelWithProjection: () => (/* binding */ CLIPVisionModelWithProjection),\n/* harmony export */   CamembertForMaskedLM: () => (/* binding */ CamembertForMaskedLM),\n/* harmony export */   CamembertForQuestionAnswering: () => (/* binding */ CamembertForQuestionAnswering),\n/* harmony export */   CamembertForSequenceClassification: () => (/* binding */ CamembertForSequenceClassification),\n/* harmony export */   CamembertForTokenClassification: () => (/* binding */ CamembertForTokenClassification),\n/* harmony export */   CamembertModel: () => (/* binding */ CamembertModel),\n/* harmony export */   CamembertPreTrainedModel: () => (/* binding */ CamembertPreTrainedModel),\n/* harmony export */   CausalLMOutput: () => (/* binding */ CausalLMOutput),\n/* harmony export */   CausalLMOutputWithPast: () => (/* binding */ CausalLMOutputWithPast),\n/* harmony export */   ChineseCLIPModel: () => (/* binding */ ChineseCLIPModel),\n/* harmony export */   ChineseCLIPPreTrainedModel: () => (/* binding */ ChineseCLIPPreTrainedModel),\n/* harmony export */   ClapAudioModelWithProjection: () => (/* binding */ ClapAudioModelWithProjection),\n/* harmony export */   ClapModel: () => (/* binding */ ClapModel),\n/* harmony export */   ClapPreTrainedModel: () => (/* binding */ ClapPreTrainedModel),\n/* harmony export */   ClapTextModelWithProjection: () => (/* binding */ ClapTextModelWithProjection),\n/* harmony export */   CodeGenForCausalLM: () => (/* binding */ CodeGenForCausalLM),\n/* harmony export */   CodeGenModel: () => (/* binding */ CodeGenModel),\n/* harmony export */   CodeGenPreTrainedModel: () => (/* binding */ CodeGenPreTrainedModel),\n/* harmony export */   CohereForCausalLM: () => (/* binding */ CohereForCausalLM),\n/* harmony export */   CohereModel: () => (/* binding */ CohereModel),\n/* harmony export */   CoherePreTrainedModel: () => (/* binding */ CoherePreTrainedModel),\n/* harmony export */   ConvBertForMaskedLM: () => (/* binding */ ConvBertForMaskedLM),\n/* harmony export */   ConvBertForQuestionAnswering: () => (/* binding */ ConvBertForQuestionAnswering),\n/* harmony export */   ConvBertForSequenceClassification: () => (/* binding */ ConvBertForSequenceClassification),\n/* harmony export */   ConvBertForTokenClassification: () => (/* binding */ ConvBertForTokenClassification),\n/* harmony export */   ConvBertModel: () => (/* binding */ ConvBertModel),\n/* harmony export */   ConvBertPreTrainedModel: () => (/* binding */ ConvBertPreTrainedModel),\n/* harmony export */   ConvNextForImageClassification: () => (/* binding */ ConvNextForImageClassification),\n/* harmony export */   ConvNextModel: () => (/* binding */ ConvNextModel),\n/* harmony export */   ConvNextPreTrainedModel: () => (/* binding */ ConvNextPreTrainedModel),\n/* harmony export */   ConvNextV2ForImageClassification: () => (/* binding */ ConvNextV2ForImageClassification),\n/* harmony export */   ConvNextV2Model: () => (/* binding */ ConvNextV2Model),\n/* harmony export */   ConvNextV2PreTrainedModel: () => (/* binding */ ConvNextV2PreTrainedModel),\n/* harmony export */   DPTForDepthEstimation: () => (/* binding */ DPTForDepthEstimation),\n/* harmony export */   DPTModel: () => (/* binding */ DPTModel),\n/* harmony export */   DPTPreTrainedModel: () => (/* binding */ DPTPreTrainedModel),\n/* harmony export */   DacDecoderModel: () => (/* binding */ DacDecoderModel),\n/* harmony export */   DacDecoderOutput: () => (/* binding */ DacDecoderOutput),\n/* harmony export */   DacEncoderModel: () => (/* binding */ DacEncoderModel),\n/* harmony export */   DacEncoderOutput: () => (/* binding */ DacEncoderOutput),\n/* harmony export */   DacModel: () => (/* binding */ DacModel),\n/* harmony export */   DacPreTrainedModel: () => (/* binding */ DacPreTrainedModel),\n/* harmony export */   DebertaForMaskedLM: () => (/* binding */ DebertaForMaskedLM),\n/* harmony export */   DebertaForQuestionAnswering: () => (/* binding */ DebertaForQuestionAnswering),\n/* harmony export */   DebertaForSequenceClassification: () => (/* binding */ DebertaForSequenceClassification),\n/* harmony export */   DebertaForTokenClassification: () => (/* binding */ DebertaForTokenClassification),\n/* harmony export */   DebertaModel: () => (/* binding */ DebertaModel),\n/* harmony export */   DebertaPreTrainedModel: () => (/* binding */ DebertaPreTrainedModel),\n/* harmony export */   DebertaV2ForMaskedLM: () => (/* binding */ DebertaV2ForMaskedLM),\n/* harmony export */   DebertaV2ForQuestionAnswering: () => (/* binding */ DebertaV2ForQuestionAnswering),\n/* harmony export */   DebertaV2ForSequenceClassification: () => (/* binding */ DebertaV2ForSequenceClassification),\n/* harmony export */   DebertaV2ForTokenClassification: () => (/* binding */ DebertaV2ForTokenClassification),\n/* harmony export */   DebertaV2Model: () => (/* binding */ DebertaV2Model),\n/* harmony export */   DebertaV2PreTrainedModel: () => (/* binding */ DebertaV2PreTrainedModel),\n/* harmony export */   DecisionTransformerModel: () => (/* binding */ DecisionTransformerModel),\n/* harmony export */   DecisionTransformerPreTrainedModel: () => (/* binding */ DecisionTransformerPreTrainedModel),\n/* harmony export */   DeiTForImageClassification: () => (/* binding */ DeiTForImageClassification),\n/* harmony export */   DeiTModel: () => (/* binding */ DeiTModel),\n/* harmony export */   DeiTPreTrainedModel: () => (/* binding */ DeiTPreTrainedModel),\n/* harmony export */   DepthAnythingForDepthEstimation: () => (/* binding */ DepthAnythingForDepthEstimation),\n/* harmony export */   DepthAnythingPreTrainedModel: () => (/* binding */ DepthAnythingPreTrainedModel),\n/* harmony export */   DepthProForDepthEstimation: () => (/* binding */ DepthProForDepthEstimation),\n/* harmony export */   DepthProPreTrainedModel: () => (/* binding */ DepthProPreTrainedModel),\n/* harmony export */   DetrForObjectDetection: () => (/* binding */ DetrForObjectDetection),\n/* harmony export */   DetrForSegmentation: () => (/* binding */ DetrForSegmentation),\n/* harmony export */   DetrModel: () => (/* binding */ DetrModel),\n/* harmony export */   DetrObjectDetectionOutput: () => (/* binding */ DetrObjectDetectionOutput),\n/* harmony export */   DetrPreTrainedModel: () => (/* binding */ DetrPreTrainedModel),\n/* harmony export */   DetrSegmentationOutput: () => (/* binding */ DetrSegmentationOutput),\n/* harmony export */   Dinov2ForImageClassification: () => (/* binding */ Dinov2ForImageClassification),\n/* harmony export */   Dinov2Model: () => (/* binding */ Dinov2Model),\n/* harmony export */   Dinov2PreTrainedModel: () => (/* binding */ Dinov2PreTrainedModel),\n/* harmony export */   Dinov2WithRegistersForImageClassification: () => (/* binding */ Dinov2WithRegistersForImageClassification),\n/* harmony export */   Dinov2WithRegistersModel: () => (/* binding */ Dinov2WithRegistersModel),\n/* harmony export */   Dinov2WithRegistersPreTrainedModel: () => (/* binding */ Dinov2WithRegistersPreTrainedModel),\n/* harmony export */   DistilBertForMaskedLM: () => (/* binding */ DistilBertForMaskedLM),\n/* harmony export */   DistilBertForQuestionAnswering: () => (/* binding */ DistilBertForQuestionAnswering),\n/* harmony export */   DistilBertForSequenceClassification: () => (/* binding */ DistilBertForSequenceClassification),\n/* harmony export */   DistilBertForTokenClassification: () => (/* binding */ DistilBertForTokenClassification),\n/* harmony export */   DistilBertModel: () => (/* binding */ DistilBertModel),\n/* harmony export */   DistilBertPreTrainedModel: () => (/* binding */ DistilBertPreTrainedModel),\n/* harmony export */   DonutSwinModel: () => (/* binding */ DonutSwinModel),\n/* harmony export */   DonutSwinPreTrainedModel: () => (/* binding */ DonutSwinPreTrainedModel),\n/* harmony export */   EfficientNetForImageClassification: () => (/* binding */ EfficientNetForImageClassification),\n/* harmony export */   EfficientNetModel: () => (/* binding */ EfficientNetModel),\n/* harmony export */   EfficientNetPreTrainedModel: () => (/* binding */ EfficientNetPreTrainedModel),\n/* harmony export */   ElectraForMaskedLM: () => (/* binding */ ElectraForMaskedLM),\n/* harmony export */   ElectraForQuestionAnswering: () => (/* binding */ ElectraForQuestionAnswering),\n/* harmony export */   ElectraForSequenceClassification: () => (/* binding */ ElectraForSequenceClassification),\n/* harmony export */   ElectraForTokenClassification: () => (/* binding */ ElectraForTokenClassification),\n/* harmony export */   ElectraModel: () => (/* binding */ ElectraModel),\n/* harmony export */   ElectraPreTrainedModel: () => (/* binding */ ElectraPreTrainedModel),\n/* harmony export */   EsmForMaskedLM: () => (/* binding */ EsmForMaskedLM),\n/* harmony export */   EsmForSequenceClassification: () => (/* binding */ EsmForSequenceClassification),\n/* harmony export */   EsmForTokenClassification: () => (/* binding */ EsmForTokenClassification),\n/* harmony export */   EsmModel: () => (/* binding */ EsmModel),\n/* harmony export */   EsmPreTrainedModel: () => (/* binding */ EsmPreTrainedModel),\n/* harmony export */   ExaoneForCausalLM: () => (/* binding */ ExaoneForCausalLM),\n/* harmony export */   ExaoneModel: () => (/* binding */ ExaoneModel),\n/* harmony export */   ExaonePreTrainedModel: () => (/* binding */ ExaonePreTrainedModel),\n/* harmony export */   FalconForCausalLM: () => (/* binding */ FalconForCausalLM),\n/* harmony export */   FalconModel: () => (/* binding */ FalconModel),\n/* harmony export */   FalconPreTrainedModel: () => (/* binding */ FalconPreTrainedModel),\n/* harmony export */   FastViTForImageClassification: () => (/* binding */ FastViTForImageClassification),\n/* harmony export */   FastViTModel: () => (/* binding */ FastViTModel),\n/* harmony export */   FastViTPreTrainedModel: () => (/* binding */ FastViTPreTrainedModel),\n/* harmony export */   Florence2ForConditionalGeneration: () => (/* binding */ Florence2ForConditionalGeneration),\n/* harmony export */   Florence2PreTrainedModel: () => (/* binding */ Florence2PreTrainedModel),\n/* harmony export */   GLPNForDepthEstimation: () => (/* binding */ GLPNForDepthEstimation),\n/* harmony export */   GLPNModel: () => (/* binding */ GLPNModel),\n/* harmony export */   GLPNPreTrainedModel: () => (/* binding */ GLPNPreTrainedModel),\n/* harmony export */   GPT2LMHeadModel: () => (/* binding */ GPT2LMHeadModel),\n/* harmony export */   GPT2Model: () => (/* binding */ GPT2Model),\n/* harmony export */   GPT2PreTrainedModel: () => (/* binding */ GPT2PreTrainedModel),\n/* harmony export */   GPTBigCodeForCausalLM: () => (/* binding */ GPTBigCodeForCausalLM),\n/* harmony export */   GPTBigCodeModel: () => (/* binding */ GPTBigCodeModel),\n/* harmony export */   GPTBigCodePreTrainedModel: () => (/* binding */ GPTBigCodePreTrainedModel),\n/* harmony export */   GPTJForCausalLM: () => (/* binding */ GPTJForCausalLM),\n/* harmony export */   GPTJModel: () => (/* binding */ GPTJModel),\n/* harmony export */   GPTJPreTrainedModel: () => (/* binding */ GPTJPreTrainedModel),\n/* harmony export */   GPTNeoForCausalLM: () => (/* binding */ GPTNeoForCausalLM),\n/* harmony export */   GPTNeoModel: () => (/* binding */ GPTNeoModel),\n/* harmony export */   GPTNeoPreTrainedModel: () => (/* binding */ GPTNeoPreTrainedModel),\n/* harmony export */   GPTNeoXForCausalLM: () => (/* binding */ GPTNeoXForCausalLM),\n/* harmony export */   GPTNeoXModel: () => (/* binding */ GPTNeoXModel),\n/* harmony export */   GPTNeoXPreTrainedModel: () => (/* binding */ GPTNeoXPreTrainedModel),\n/* harmony export */   Gemma2ForCausalLM: () => (/* binding */ Gemma2ForCausalLM),\n/* harmony export */   Gemma2Model: () => (/* binding */ Gemma2Model),\n/* harmony export */   Gemma2PreTrainedModel: () => (/* binding */ Gemma2PreTrainedModel),\n/* harmony export */   GemmaForCausalLM: () => (/* binding */ GemmaForCausalLM),\n/* harmony export */   GemmaModel: () => (/* binding */ GemmaModel),\n/* harmony export */   GemmaPreTrainedModel: () => (/* binding */ GemmaPreTrainedModel),\n/* harmony export */   GlmForCausalLM: () => (/* binding */ GlmForCausalLM),\n/* harmony export */   GlmModel: () => (/* binding */ GlmModel),\n/* harmony export */   GlmPreTrainedModel: () => (/* binding */ GlmPreTrainedModel),\n/* harmony export */   GraniteForCausalLM: () => (/* binding */ GraniteForCausalLM),\n/* harmony export */   GraniteModel: () => (/* binding */ GraniteModel),\n/* harmony export */   GranitePreTrainedModel: () => (/* binding */ GranitePreTrainedModel),\n/* harmony export */   GroundingDinoForObjectDetection: () => (/* binding */ GroundingDinoForObjectDetection),\n/* harmony export */   GroundingDinoPreTrainedModel: () => (/* binding */ GroundingDinoPreTrainedModel),\n/* harmony export */   GroupViTModel: () => (/* binding */ GroupViTModel),\n/* harmony export */   GroupViTPreTrainedModel: () => (/* binding */ GroupViTPreTrainedModel),\n/* harmony export */   HeliumForCausalLM: () => (/* binding */ HeliumForCausalLM),\n/* harmony export */   HeliumModel: () => (/* binding */ HeliumModel),\n/* harmony export */   HeliumPreTrainedModel: () => (/* binding */ HeliumPreTrainedModel),\n/* harmony export */   HieraForImageClassification: () => (/* binding */ HieraForImageClassification),\n/* harmony export */   HieraModel: () => (/* binding */ HieraModel),\n/* harmony export */   HieraPreTrainedModel: () => (/* binding */ HieraPreTrainedModel),\n/* harmony export */   HubertForCTC: () => (/* binding */ HubertForCTC),\n/* harmony export */   HubertForSequenceClassification: () => (/* binding */ HubertForSequenceClassification),\n/* harmony export */   HubertModel: () => (/* binding */ HubertModel),\n/* harmony export */   HubertPreTrainedModel: () => (/* binding */ HubertPreTrainedModel),\n/* harmony export */   IJepaForImageClassification: () => (/* binding */ IJepaForImageClassification),\n/* harmony export */   IJepaModel: () => (/* binding */ IJepaModel),\n/* harmony export */   IJepaPreTrainedModel: () => (/* binding */ IJepaPreTrainedModel),\n/* harmony export */   Idefics3ForConditionalGeneration: () => (/* binding */ Idefics3ForConditionalGeneration),\n/* harmony export */   Idefics3PreTrainedModel: () => (/* binding */ Idefics3PreTrainedModel),\n/* harmony export */   ImageMattingOutput: () => (/* binding */ ImageMattingOutput),\n/* harmony export */   JAISLMHeadModel: () => (/* binding */ JAISLMHeadModel),\n/* harmony export */   JAISModel: () => (/* binding */ JAISModel),\n/* harmony export */   JAISPreTrainedModel: () => (/* binding */ JAISPreTrainedModel),\n/* harmony export */   JinaCLIPModel: () => (/* binding */ JinaCLIPModel),\n/* harmony export */   JinaCLIPPreTrainedModel: () => (/* binding */ JinaCLIPPreTrainedModel),\n/* harmony export */   JinaCLIPTextModel: () => (/* binding */ JinaCLIPTextModel),\n/* harmony export */   JinaCLIPVisionModel: () => (/* binding */ JinaCLIPVisionModel),\n/* harmony export */   LiteWhisperForConditionalGeneration: () => (/* binding */ LiteWhisperForConditionalGeneration),\n/* harmony export */   LlamaForCausalLM: () => (/* binding */ LlamaForCausalLM),\n/* harmony export */   LlamaModel: () => (/* binding */ LlamaModel),\n/* harmony export */   LlamaPreTrainedModel: () => (/* binding */ LlamaPreTrainedModel),\n/* harmony export */   LlavaForConditionalGeneration: () => (/* binding */ LlavaForConditionalGeneration),\n/* harmony export */   LlavaOnevisionForConditionalGeneration: () => (/* binding */ LlavaOnevisionForConditionalGeneration),\n/* harmony export */   LlavaPreTrainedModel: () => (/* binding */ LlavaPreTrainedModel),\n/* harmony export */   LongT5ForConditionalGeneration: () => (/* binding */ LongT5ForConditionalGeneration),\n/* harmony export */   LongT5Model: () => (/* binding */ LongT5Model),\n/* harmony export */   LongT5PreTrainedModel: () => (/* binding */ LongT5PreTrainedModel),\n/* harmony export */   M2M100ForConditionalGeneration: () => (/* binding */ M2M100ForConditionalGeneration),\n/* harmony export */   M2M100Model: () => (/* binding */ M2M100Model),\n/* harmony export */   M2M100PreTrainedModel: () => (/* binding */ M2M100PreTrainedModel),\n/* harmony export */   MBartForCausalLM: () => (/* binding */ MBartForCausalLM),\n/* harmony export */   MBartForConditionalGeneration: () => (/* binding */ MBartForConditionalGeneration),\n/* harmony export */   MBartForSequenceClassification: () => (/* binding */ MBartForSequenceClassification),\n/* harmony export */   MBartModel: () => (/* binding */ MBartModel),\n/* harmony export */   MBartPreTrainedModel: () => (/* binding */ MBartPreTrainedModel),\n/* harmony export */   MPNetForMaskedLM: () => (/* binding */ MPNetForMaskedLM),\n/* harmony export */   MPNetForQuestionAnswering: () => (/* binding */ MPNetForQuestionAnswering),\n/* harmony export */   MPNetForSequenceClassification: () => (/* binding */ MPNetForSequenceClassification),\n/* harmony export */   MPNetForTokenClassification: () => (/* binding */ MPNetForTokenClassification),\n/* harmony export */   MPNetModel: () => (/* binding */ MPNetModel),\n/* harmony export */   MPNetPreTrainedModel: () => (/* binding */ MPNetPreTrainedModel),\n/* harmony export */   MT5ForConditionalGeneration: () => (/* binding */ MT5ForConditionalGeneration),\n/* harmony export */   MT5Model: () => (/* binding */ MT5Model),\n/* harmony export */   MT5PreTrainedModel: () => (/* binding */ MT5PreTrainedModel),\n/* harmony export */   MarianMTModel: () => (/* binding */ MarianMTModel),\n/* harmony export */   MarianModel: () => (/* binding */ MarianModel),\n/* harmony export */   MarianPreTrainedModel: () => (/* binding */ MarianPreTrainedModel),\n/* harmony export */   MaskFormerForInstanceSegmentation: () => (/* binding */ MaskFormerForInstanceSegmentation),\n/* harmony export */   MaskFormerModel: () => (/* binding */ MaskFormerModel),\n/* harmony export */   MaskFormerPreTrainedModel: () => (/* binding */ MaskFormerPreTrainedModel),\n/* harmony export */   MaskedLMOutput: () => (/* binding */ MaskedLMOutput),\n/* harmony export */   MgpstrForSceneTextRecognition: () => (/* binding */ MgpstrForSceneTextRecognition),\n/* harmony export */   MgpstrModelOutput: () => (/* binding */ MgpstrModelOutput),\n/* harmony export */   MgpstrPreTrainedModel: () => (/* binding */ MgpstrPreTrainedModel),\n/* harmony export */   MimiDecoderModel: () => (/* binding */ MimiDecoderModel),\n/* harmony export */   MimiDecoderOutput: () => (/* binding */ MimiDecoderOutput),\n/* harmony export */   MimiEncoderModel: () => (/* binding */ MimiEncoderModel),\n/* harmony export */   MimiEncoderOutput: () => (/* binding */ MimiEncoderOutput),\n/* harmony export */   MimiModel: () => (/* binding */ MimiModel),\n/* harmony export */   MimiPreTrainedModel: () => (/* binding */ MimiPreTrainedModel),\n/* harmony export */   MistralForCausalLM: () => (/* binding */ MistralForCausalLM),\n/* harmony export */   MistralModel: () => (/* binding */ MistralModel),\n/* harmony export */   MistralPreTrainedModel: () => (/* binding */ MistralPreTrainedModel),\n/* harmony export */   MobileBertForMaskedLM: () => (/* binding */ MobileBertForMaskedLM),\n/* harmony export */   MobileBertForQuestionAnswering: () => (/* binding */ MobileBertForQuestionAnswering),\n/* harmony export */   MobileBertForSequenceClassification: () => (/* binding */ MobileBertForSequenceClassification),\n/* harmony export */   MobileBertModel: () => (/* binding */ MobileBertModel),\n/* harmony export */   MobileBertPreTrainedModel: () => (/* binding */ MobileBertPreTrainedModel),\n/* harmony export */   MobileLLMForCausalLM: () => (/* binding */ MobileLLMForCausalLM),\n/* harmony export */   MobileLLMModel: () => (/* binding */ MobileLLMModel),\n/* harmony export */   MobileLLMPreTrainedModel: () => (/* binding */ MobileLLMPreTrainedModel),\n/* harmony export */   MobileNetV1ForImageClassification: () => (/* binding */ MobileNetV1ForImageClassification),\n/* harmony export */   MobileNetV1ForSemanticSegmentation: () => (/* binding */ MobileNetV1ForSemanticSegmentation),\n/* harmony export */   MobileNetV1Model: () => (/* binding */ MobileNetV1Model),\n/* harmony export */   MobileNetV1PreTrainedModel: () => (/* binding */ MobileNetV1PreTrainedModel),\n/* harmony export */   MobileNetV2ForImageClassification: () => (/* binding */ MobileNetV2ForImageClassification),\n/* harmony export */   MobileNetV2ForSemanticSegmentation: () => (/* binding */ MobileNetV2ForSemanticSegmentation),\n/* harmony export */   MobileNetV2Model: () => (/* binding */ MobileNetV2Model),\n/* harmony export */   MobileNetV2PreTrainedModel: () => (/* binding */ MobileNetV2PreTrainedModel),\n/* harmony export */   MobileNetV3ForImageClassification: () => (/* binding */ MobileNetV3ForImageClassification),\n/* harmony export */   MobileNetV3ForSemanticSegmentation: () => (/* binding */ MobileNetV3ForSemanticSegmentation),\n/* harmony export */   MobileNetV3Model: () => (/* binding */ MobileNetV3Model),\n/* harmony export */   MobileNetV3PreTrainedModel: () => (/* binding */ MobileNetV3PreTrainedModel),\n/* harmony export */   MobileNetV4ForImageClassification: () => (/* binding */ MobileNetV4ForImageClassification),\n/* harmony export */   MobileNetV4ForSemanticSegmentation: () => (/* binding */ MobileNetV4ForSemanticSegmentation),\n/* harmony export */   MobileNetV4Model: () => (/* binding */ MobileNetV4Model),\n/* harmony export */   MobileNetV4PreTrainedModel: () => (/* binding */ MobileNetV4PreTrainedModel),\n/* harmony export */   MobileViTForImageClassification: () => (/* binding */ MobileViTForImageClassification),\n/* harmony export */   MobileViTModel: () => (/* binding */ MobileViTModel),\n/* harmony export */   MobileViTPreTrainedModel: () => (/* binding */ MobileViTPreTrainedModel),\n/* harmony export */   MobileViTV2ForImageClassification: () => (/* binding */ MobileViTV2ForImageClassification),\n/* harmony export */   MobileViTV2Model: () => (/* binding */ MobileViTV2Model),\n/* harmony export */   MobileViTV2PreTrainedModel: () => (/* binding */ MobileViTV2PreTrainedModel),\n/* harmony export */   ModelOutput: () => (/* binding */ ModelOutput),\n/* harmony export */   ModernBertForMaskedLM: () => (/* binding */ ModernBertForMaskedLM),\n/* harmony export */   ModernBertForSequenceClassification: () => (/* binding */ ModernBertForSequenceClassification),\n/* harmony export */   ModernBertForTokenClassification: () => (/* binding */ ModernBertForTokenClassification),\n/* harmony export */   ModernBertModel: () => (/* binding */ ModernBertModel),\n/* harmony export */   ModernBertPreTrainedModel: () => (/* binding */ ModernBertPreTrainedModel),\n/* harmony export */   Moondream1ForConditionalGeneration: () => (/* binding */ Moondream1ForConditionalGeneration),\n/* harmony export */   MoonshineForConditionalGeneration: () => (/* binding */ MoonshineForConditionalGeneration),\n/* harmony export */   MoonshineModel: () => (/* binding */ MoonshineModel),\n/* harmony export */   MoonshinePreTrainedModel: () => (/* binding */ MoonshinePreTrainedModel),\n/* harmony export */   MptForCausalLM: () => (/* binding */ MptForCausalLM),\n/* harmony export */   MptModel: () => (/* binding */ MptModel),\n/* harmony export */   MptPreTrainedModel: () => (/* binding */ MptPreTrainedModel),\n/* harmony export */   MultiModalityCausalLM: () => (/* binding */ MultiModalityCausalLM),\n/* harmony export */   MultiModalityPreTrainedModel: () => (/* binding */ MultiModalityPreTrainedModel),\n/* harmony export */   MusicgenForCausalLM: () => (/* binding */ MusicgenForCausalLM),\n/* harmony export */   MusicgenForConditionalGeneration: () => (/* binding */ MusicgenForConditionalGeneration),\n/* harmony export */   MusicgenModel: () => (/* binding */ MusicgenModel),\n/* harmony export */   MusicgenPreTrainedModel: () => (/* binding */ MusicgenPreTrainedModel),\n/* harmony export */   NomicBertModel: () => (/* binding */ NomicBertModel),\n/* harmony export */   NomicBertPreTrainedModel: () => (/* binding */ NomicBertPreTrainedModel),\n/* harmony export */   OPTForCausalLM: () => (/* binding */ OPTForCausalLM),\n/* harmony export */   OPTModel: () => (/* binding */ OPTModel),\n/* harmony export */   OPTPreTrainedModel: () => (/* binding */ OPTPreTrainedModel),\n/* harmony export */   Olmo2ForCausalLM: () => (/* binding */ Olmo2ForCausalLM),\n/* harmony export */   Olmo2Model: () => (/* binding */ Olmo2Model),\n/* harmony export */   Olmo2PreTrainedModel: () => (/* binding */ Olmo2PreTrainedModel),\n/* harmony export */   OlmoForCausalLM: () => (/* binding */ OlmoForCausalLM),\n/* harmony export */   OlmoModel: () => (/* binding */ OlmoModel),\n/* harmony export */   OlmoPreTrainedModel: () => (/* binding */ OlmoPreTrainedModel),\n/* harmony export */   OpenELMForCausalLM: () => (/* binding */ OpenELMForCausalLM),\n/* harmony export */   OpenELMModel: () => (/* binding */ OpenELMModel),\n/* harmony export */   OpenELMPreTrainedModel: () => (/* binding */ OpenELMPreTrainedModel),\n/* harmony export */   OwlViTForObjectDetection: () => (/* binding */ OwlViTForObjectDetection),\n/* harmony export */   OwlViTModel: () => (/* binding */ OwlViTModel),\n/* harmony export */   OwlViTPreTrainedModel: () => (/* binding */ OwlViTPreTrainedModel),\n/* harmony export */   Owlv2ForObjectDetection: () => (/* binding */ Owlv2ForObjectDetection),\n/* harmony export */   Owlv2Model: () => (/* binding */ Owlv2Model),\n/* harmony export */   Owlv2PreTrainedModel: () => (/* binding */ Owlv2PreTrainedModel),\n/* harmony export */   PaliGemmaForConditionalGeneration: () => (/* binding */ PaliGemmaForConditionalGeneration),\n/* harmony export */   PaliGemmaPreTrainedModel: () => (/* binding */ PaliGemmaPreTrainedModel),\n/* harmony export */   PatchTSMixerForPrediction: () => (/* binding */ PatchTSMixerForPrediction),\n/* harmony export */   PatchTSMixerModel: () => (/* binding */ PatchTSMixerModel),\n/* harmony export */   PatchTSMixerPreTrainedModel: () => (/* binding */ PatchTSMixerPreTrainedModel),\n/* harmony export */   PatchTSTForPrediction: () => (/* binding */ PatchTSTForPrediction),\n/* harmony export */   PatchTSTModel: () => (/* binding */ PatchTSTModel),\n/* harmony export */   PatchTSTPreTrainedModel: () => (/* binding */ PatchTSTPreTrainedModel),\n/* harmony export */   Phi3ForCausalLM: () => (/* binding */ Phi3ForCausalLM),\n/* harmony export */   Phi3Model: () => (/* binding */ Phi3Model),\n/* harmony export */   Phi3PreTrainedModel: () => (/* binding */ Phi3PreTrainedModel),\n/* harmony export */   Phi3VForCausalLM: () => (/* binding */ Phi3VForCausalLM),\n/* harmony export */   Phi3VPreTrainedModel: () => (/* binding */ Phi3VPreTrainedModel),\n/* harmony export */   PhiForCausalLM: () => (/* binding */ PhiForCausalLM),\n/* harmony export */   PhiModel: () => (/* binding */ PhiModel),\n/* harmony export */   PhiPreTrainedModel: () => (/* binding */ PhiPreTrainedModel),\n/* harmony export */   PreTrainedModel: () => (/* binding */ PreTrainedModel),\n/* harmony export */   PretrainedMixin: () => (/* binding */ PretrainedMixin),\n/* harmony export */   PvtForImageClassification: () => (/* binding */ PvtForImageClassification),\n/* harmony export */   PvtModel: () => (/* binding */ PvtModel),\n/* harmony export */   PvtPreTrainedModel: () => (/* binding */ PvtPreTrainedModel),\n/* harmony export */   PyAnnoteForAudioFrameClassification: () => (/* binding */ PyAnnoteForAudioFrameClassification),\n/* harmony export */   PyAnnoteModel: () => (/* binding */ PyAnnoteModel),\n/* harmony export */   PyAnnotePreTrainedModel: () => (/* binding */ PyAnnotePreTrainedModel),\n/* harmony export */   QuestionAnsweringModelOutput: () => (/* binding */ QuestionAnsweringModelOutput),\n/* harmony export */   Qwen2ForCausalLM: () => (/* binding */ Qwen2ForCausalLM),\n/* harmony export */   Qwen2Model: () => (/* binding */ Qwen2Model),\n/* harmony export */   Qwen2PreTrainedModel: () => (/* binding */ Qwen2PreTrainedModel),\n/* harmony export */   Qwen2VLForConditionalGeneration: () => (/* binding */ Qwen2VLForConditionalGeneration),\n/* harmony export */   Qwen2VLPreTrainedModel: () => (/* binding */ Qwen2VLPreTrainedModel),\n/* harmony export */   RTDetrForObjectDetection: () => (/* binding */ RTDetrForObjectDetection),\n/* harmony export */   RTDetrModel: () => (/* binding */ RTDetrModel),\n/* harmony export */   RTDetrObjectDetectionOutput: () => (/* binding */ RTDetrObjectDetectionOutput),\n/* harmony export */   RTDetrPreTrainedModel: () => (/* binding */ RTDetrPreTrainedModel),\n/* harmony export */   ResNetForImageClassification: () => (/* binding */ ResNetForImageClassification),\n/* harmony export */   ResNetModel: () => (/* binding */ ResNetModel),\n/* harmony export */   ResNetPreTrainedModel: () => (/* binding */ ResNetPreTrainedModel),\n/* harmony export */   RoFormerForMaskedLM: () => (/* binding */ RoFormerForMaskedLM),\n/* harmony export */   RoFormerForQuestionAnswering: () => (/* binding */ RoFormerForQuestionAnswering),\n/* harmony export */   RoFormerForSequenceClassification: () => (/* binding */ RoFormerForSequenceClassification),\n/* harmony export */   RoFormerForTokenClassification: () => (/* binding */ RoFormerForTokenClassification),\n/* harmony export */   RoFormerModel: () => (/* binding */ RoFormerModel),\n/* harmony export */   RoFormerPreTrainedModel: () => (/* binding */ RoFormerPreTrainedModel),\n/* harmony export */   RobertaForMaskedLM: () => (/* binding */ RobertaForMaskedLM),\n/* harmony export */   RobertaForQuestionAnswering: () => (/* binding */ RobertaForQuestionAnswering),\n/* harmony export */   RobertaForSequenceClassification: () => (/* binding */ RobertaForSequenceClassification),\n/* harmony export */   RobertaForTokenClassification: () => (/* binding */ RobertaForTokenClassification),\n/* harmony export */   RobertaModel: () => (/* binding */ RobertaModel),\n/* harmony export */   RobertaPreTrainedModel: () => (/* binding */ RobertaPreTrainedModel),\n/* harmony export */   SamImageSegmentationOutput: () => (/* binding */ SamImageSegmentationOutput),\n/* harmony export */   SamModel: () => (/* binding */ SamModel),\n/* harmony export */   SamPreTrainedModel: () => (/* binding */ SamPreTrainedModel),\n/* harmony export */   SapiensForDepthEstimation: () => (/* binding */ SapiensForDepthEstimation),\n/* harmony export */   SapiensForNormalEstimation: () => (/* binding */ SapiensForNormalEstimation),\n/* harmony export */   SapiensForSemanticSegmentation: () => (/* binding */ SapiensForSemanticSegmentation),\n/* harmony export */   SapiensPreTrainedModel: () => (/* binding */ SapiensPreTrainedModel),\n/* harmony export */   SegformerForImageClassification: () => (/* binding */ SegformerForImageClassification),\n/* harmony export */   SegformerForSemanticSegmentation: () => (/* binding */ SegformerForSemanticSegmentation),\n/* harmony export */   SegformerModel: () => (/* binding */ SegformerModel),\n/* harmony export */   SegformerPreTrainedModel: () => (/* binding */ SegformerPreTrainedModel),\n/* harmony export */   Seq2SeqLMOutput: () => (/* binding */ Seq2SeqLMOutput),\n/* harmony export */   SequenceClassifierOutput: () => (/* binding */ SequenceClassifierOutput),\n/* harmony export */   SiglipModel: () => (/* binding */ SiglipModel),\n/* harmony export */   SiglipPreTrainedModel: () => (/* binding */ SiglipPreTrainedModel),\n/* harmony export */   SiglipTextModel: () => (/* binding */ SiglipTextModel),\n/* harmony export */   SiglipVisionModel: () => (/* binding */ SiglipVisionModel),\n/* harmony export */   SmolVLMForConditionalGeneration: () => (/* binding */ SmolVLMForConditionalGeneration),\n/* harmony export */   SpeechT5ForSpeechToText: () => (/* binding */ SpeechT5ForSpeechToText),\n/* harmony export */   SpeechT5ForTextToSpeech: () => (/* binding */ SpeechT5ForTextToSpeech),\n/* harmony export */   SpeechT5HifiGan: () => (/* binding */ SpeechT5HifiGan),\n/* harmony export */   SpeechT5Model: () => (/* binding */ SpeechT5Model),\n/* harmony export */   SpeechT5PreTrainedModel: () => (/* binding */ SpeechT5PreTrainedModel),\n/* harmony export */   SqueezeBertForMaskedLM: () => (/* binding */ SqueezeBertForMaskedLM),\n/* harmony export */   SqueezeBertForQuestionAnswering: () => (/* binding */ SqueezeBertForQuestionAnswering),\n/* harmony export */   SqueezeBertForSequenceClassification: () => (/* binding */ SqueezeBertForSequenceClassification),\n/* harmony export */   SqueezeBertModel: () => (/* binding */ SqueezeBertModel),\n/* harmony export */   SqueezeBertPreTrainedModel: () => (/* binding */ SqueezeBertPreTrainedModel),\n/* harmony export */   StableLmForCausalLM: () => (/* binding */ StableLmForCausalLM),\n/* harmony export */   StableLmModel: () => (/* binding */ StableLmModel),\n/* harmony export */   StableLmPreTrainedModel: () => (/* binding */ StableLmPreTrainedModel),\n/* harmony export */   Starcoder2ForCausalLM: () => (/* binding */ Starcoder2ForCausalLM),\n/* harmony export */   Starcoder2Model: () => (/* binding */ Starcoder2Model),\n/* harmony export */   Starcoder2PreTrainedModel: () => (/* binding */ Starcoder2PreTrainedModel),\n/* harmony export */   StyleTextToSpeech2Model: () => (/* binding */ StyleTextToSpeech2Model),\n/* harmony export */   StyleTextToSpeech2PreTrainedModel: () => (/* binding */ StyleTextToSpeech2PreTrainedModel),\n/* harmony export */   Swin2SRForImageSuperResolution: () => (/* binding */ Swin2SRForImageSuperResolution),\n/* harmony export */   Swin2SRModel: () => (/* binding */ Swin2SRModel),\n/* harmony export */   Swin2SRPreTrainedModel: () => (/* binding */ Swin2SRPreTrainedModel),\n/* harmony export */   SwinForImageClassification: () => (/* binding */ SwinForImageClassification),\n/* harmony export */   SwinForSemanticSegmentation: () => (/* binding */ SwinForSemanticSegmentation),\n/* harmony export */   SwinModel: () => (/* binding */ SwinModel),\n/* harmony export */   SwinPreTrainedModel: () => (/* binding */ SwinPreTrainedModel),\n/* harmony export */   T5ForConditionalGeneration: () => (/* binding */ T5ForConditionalGeneration),\n/* harmony export */   T5Model: () => (/* binding */ T5Model),\n/* harmony export */   T5PreTrainedModel: () => (/* binding */ T5PreTrainedModel),\n/* harmony export */   TableTransformerForObjectDetection: () => (/* binding */ TableTransformerForObjectDetection),\n/* harmony export */   TableTransformerModel: () => (/* binding */ TableTransformerModel),\n/* harmony export */   TableTransformerObjectDetectionOutput: () => (/* binding */ TableTransformerObjectDetectionOutput),\n/* harmony export */   TableTransformerPreTrainedModel: () => (/* binding */ TableTransformerPreTrainedModel),\n/* harmony export */   TokenClassifierOutput: () => (/* binding */ TokenClassifierOutput),\n/* harmony export */   TrOCRForCausalLM: () => (/* binding */ TrOCRForCausalLM),\n/* harmony export */   TrOCRPreTrainedModel: () => (/* binding */ TrOCRPreTrainedModel),\n/* harmony export */   UltravoxModel: () => (/* binding */ UltravoxModel),\n/* harmony export */   UltravoxPreTrainedModel: () => (/* binding */ UltravoxPreTrainedModel),\n/* harmony export */   UniSpeechForCTC: () => (/* binding */ UniSpeechForCTC),\n/* harmony export */   UniSpeechForSequenceClassification: () => (/* binding */ UniSpeechForSequenceClassification),\n/* harmony export */   UniSpeechModel: () => (/* binding */ UniSpeechModel),\n/* harmony export */   UniSpeechPreTrainedModel: () => (/* binding */ UniSpeechPreTrainedModel),\n/* harmony export */   UniSpeechSatForAudioFrameClassification: () => (/* binding */ UniSpeechSatForAudioFrameClassification),\n/* harmony export */   UniSpeechSatForCTC: () => (/* binding */ UniSpeechSatForCTC),\n/* harmony export */   UniSpeechSatForSequenceClassification: () => (/* binding */ UniSpeechSatForSequenceClassification),\n/* harmony export */   UniSpeechSatModel: () => (/* binding */ UniSpeechSatModel),\n/* harmony export */   UniSpeechSatPreTrainedModel: () => (/* binding */ UniSpeechSatPreTrainedModel),\n/* harmony export */   ViTForImageClassification: () => (/* binding */ ViTForImageClassification),\n/* harmony export */   ViTMAEModel: () => (/* binding */ ViTMAEModel),\n/* harmony export */   ViTMAEPreTrainedModel: () => (/* binding */ ViTMAEPreTrainedModel),\n/* harmony export */   ViTMSNForImageClassification: () => (/* binding */ ViTMSNForImageClassification),\n/* harmony export */   ViTMSNModel: () => (/* binding */ ViTMSNModel),\n/* harmony export */   ViTMSNPreTrainedModel: () => (/* binding */ ViTMSNPreTrainedModel),\n/* harmony export */   ViTModel: () => (/* binding */ ViTModel),\n/* harmony export */   ViTPreTrainedModel: () => (/* binding */ ViTPreTrainedModel),\n/* harmony export */   VisionEncoderDecoderModel: () => (/* binding */ VisionEncoderDecoderModel),\n/* harmony export */   VitMatteForImageMatting: () => (/* binding */ VitMatteForImageMatting),\n/* harmony export */   VitMattePreTrainedModel: () => (/* binding */ VitMattePreTrainedModel),\n/* harmony export */   VitPoseForPoseEstimation: () => (/* binding */ VitPoseForPoseEstimation),\n/* harmony export */   VitPosePreTrainedModel: () => (/* binding */ VitPosePreTrainedModel),\n/* harmony export */   VitsModel: () => (/* binding */ VitsModel),\n/* harmony export */   VitsModelOutput: () => (/* binding */ VitsModelOutput),\n/* harmony export */   VitsPreTrainedModel: () => (/* binding */ VitsPreTrainedModel),\n/* harmony export */   Wav2Vec2BertForCTC: () => (/* binding */ Wav2Vec2BertForCTC),\n/* harmony export */   Wav2Vec2BertForSequenceClassification: () => (/* binding */ Wav2Vec2BertForSequenceClassification),\n/* harmony export */   Wav2Vec2BertModel: () => (/* binding */ Wav2Vec2BertModel),\n/* harmony export */   Wav2Vec2BertPreTrainedModel: () => (/* binding */ Wav2Vec2BertPreTrainedModel),\n/* harmony export */   Wav2Vec2ForAudioFrameClassification: () => (/* binding */ Wav2Vec2ForAudioFrameClassification),\n/* harmony export */   Wav2Vec2ForCTC: () => (/* binding */ Wav2Vec2ForCTC),\n/* harmony export */   Wav2Vec2ForSequenceClassification: () => (/* binding */ Wav2Vec2ForSequenceClassification),\n/* harmony export */   Wav2Vec2Model: () => (/* binding */ Wav2Vec2Model),\n/* harmony export */   Wav2Vec2PreTrainedModel: () => (/* binding */ Wav2Vec2PreTrainedModel),\n/* harmony export */   WavLMForAudioFrameClassification: () => (/* binding */ WavLMForAudioFrameClassification),\n/* harmony export */   WavLMForCTC: () => (/* binding */ WavLMForCTC),\n/* harmony export */   WavLMForSequenceClassification: () => (/* binding */ WavLMForSequenceClassification),\n/* harmony export */   WavLMForXVector: () => (/* binding */ WavLMForXVector),\n/* harmony export */   WavLMModel: () => (/* binding */ WavLMModel),\n/* harmony export */   WavLMPreTrainedModel: () => (/* binding */ WavLMPreTrainedModel),\n/* harmony export */   WeSpeakerResNetModel: () => (/* binding */ WeSpeakerResNetModel),\n/* harmony export */   WeSpeakerResNetPreTrainedModel: () => (/* binding */ WeSpeakerResNetPreTrainedModel),\n/* harmony export */   WhisperForConditionalGeneration: () => (/* binding */ WhisperForConditionalGeneration),\n/* harmony export */   WhisperModel: () => (/* binding */ WhisperModel),\n/* harmony export */   WhisperPreTrainedModel: () => (/* binding */ WhisperPreTrainedModel),\n/* harmony export */   XLMForQuestionAnswering: () => (/* binding */ XLMForQuestionAnswering),\n/* harmony export */   XLMForSequenceClassification: () => (/* binding */ XLMForSequenceClassification),\n/* harmony export */   XLMForTokenClassification: () => (/* binding */ XLMForTokenClassification),\n/* harmony export */   XLMModel: () => (/* binding */ XLMModel),\n/* harmony export */   XLMPreTrainedModel: () => (/* binding */ XLMPreTrainedModel),\n/* harmony export */   XLMRobertaForMaskedLM: () => (/* binding */ XLMRobertaForMaskedLM),\n/* harmony export */   XLMRobertaForQuestionAnswering: () => (/* binding */ XLMRobertaForQuestionAnswering),\n/* harmony export */   XLMRobertaForSequenceClassification: () => (/* binding */ XLMRobertaForSequenceClassification),\n/* harmony export */   XLMRobertaForTokenClassification: () => (/* binding */ XLMRobertaForTokenClassification),\n/* harmony export */   XLMRobertaModel: () => (/* binding */ XLMRobertaModel),\n/* harmony export */   XLMRobertaPreTrainedModel: () => (/* binding */ XLMRobertaPreTrainedModel),\n/* harmony export */   XLMWithLMHeadModel: () => (/* binding */ XLMWithLMHeadModel),\n/* harmony export */   XVectorOutput: () => (/* binding */ XVectorOutput),\n/* harmony export */   YolosForObjectDetection: () => (/* binding */ YolosForObjectDetection),\n/* harmony export */   YolosModel: () => (/* binding */ YolosModel),\n/* harmony export */   YolosObjectDetectionOutput: () => (/* binding */ YolosObjectDetectionOutput),\n/* harmony export */   YolosPreTrainedModel: () => (/* binding */ YolosPreTrainedModel)\n/* harmony export */ });\n/* harmony import */ var _configs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configs.js */ \"./src/configs.js\");\n/* harmony import */ var _backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./backends/onnx.js */ \"./src/backends/onnx.js\");\n/* harmony import */ var _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/dtypes.js */ \"./src/utils/dtypes.js\");\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generation/logits_process.js */ \"./src/generation/logits_process.js\");\n/* harmony import */ var _generation_configuration_utils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./generation/configuration_utils.js */ \"./src/generation/configuration_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/image.js */ \"./src/utils/image.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./generation/stopping_criteria.js */ \"./src/generation/stopping_criteria.js\");\n/* harmony import */ var _generation_logits_sampler_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./generation/logits_sampler.js */ \"./src/generation/logits_sampler.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./env.js */ \"./src/env.js\");\n/* harmony import */ var _models_whisper_generation_whisper_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./models/whisper/generation_whisper.js */ \"./src/models/whisper/generation_whisper.js\");\n/* harmony import */ var _models_whisper_common_whisper_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./models/whisper/common_whisper.js */ \"./src/models/whisper/common_whisper.js\");\n\n/**\n * @file Definitions of all models available in Transformers.js.\n * \n * **Example:** Load and run an `AutoModel`.\n * \n * ```javascript\n * import { AutoModel, AutoTokenizer } from '@huggingface/transformers';\n * \n * let tokenizer = await AutoTokenizer.from_pretrained('Xenova/bert-base-uncased');\n * let model = await AutoModel.from_pretrained('Xenova/bert-base-uncased');\n * \n * let inputs = await tokenizer('I love transformers!');\n * let { logits } = await model(inputs);\n * // Tensor {\n * //     data: Float32Array(183132) [-7.117443084716797, -7.107812881469727, -7.092104911804199, ...]\n * //     dims: (3) [1, 6, 30522],\n * //     type: \"float32\",\n * //     size: 183132,\n * // }\n * ```\n * \n * We also provide other `AutoModel`s (listed below), which you can use in the same way as the Python library. For example:\n * \n * **Example:** Load and run an `AutoModelForSeq2SeqLM`.\n * ```javascript\n * import { AutoModelForSeq2SeqLM, AutoTokenizer } from '@huggingface/transformers';\n * \n * let tokenizer = await AutoTokenizer.from_pretrained('Xenova/t5-small');\n * let model = await AutoModelForSeq2SeqLM.from_pretrained('Xenova/t5-small');\n * \n * let { input_ids } = await tokenizer('translate English to German: I love transformers!');\n * let outputs = await model.generate(input_ids);\n * let decoded = tokenizer.decode(outputs[0], { skip_special_tokens: true });\n * // 'Ich liebe Transformatoren!'\n * ```\n * \n * @module models\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//////////////////////////////////////////////////\n// Model types: used internally\nconst MODEL_TYPES = {\n    EncoderOnly: 0,\n    EncoderDecoder: 1,\n    Seq2Seq: 2,\n    Vision2Seq: 3,\n    DecoderOnly: 4,\n    MaskGeneration: 5,\n    ImageTextToText: 6,\n    Musicgen: 7,\n    MultiModality: 8,\n    Phi3V: 9,\n    AudioTextToText: 10,\n    AutoEncoder: 11,\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Helper functions\n\n// NOTE: These will be populated fully later\nconst MODEL_TYPE_MAPPING = new Map();\nconst MODEL_NAME_TO_CLASS_MAPPING = new Map();\nconst MODEL_CLASS_TO_NAME_MAPPING = new Map();\n\n\n/**\n * Constructs an InferenceSession using a model file located at the specified path.\n * @param {string} pretrained_model_name_or_path The path to the directory containing the model file.\n * @param {string} fileName The name of the model file.\n * @param {import('./utils/hub.js').PretrainedModelOptions} options Additional options for loading the model.\n * @returns {Promise<{buffer_or_path: Uint8Array|string, session_options: Object, session_config: Object}>} A Promise that resolves to the data needed to create an InferenceSession object.\n * @private\n */\nasync function getSession(pretrained_model_name_or_path, fileName, options) {\n    const custom_config = options.config?.['transformers.js_config'] ?? {};\n    let device = options.device ?? custom_config.device;\n    if (device && typeof device !== 'string') {\n        if (device.hasOwnProperty(fileName)) {\n            device = device[fileName];\n        } else {\n            console.warn(`device not specified for \"${fileName}\". Using the default device.`);\n            device = null;\n        }\n    }\n\n    // If the device is not specified, we use the default (supported) execution providers.\n    const selectedDevice = /** @type {import(\"./utils/devices.js\").DeviceType} */(\n        device ?? (_env_js__WEBPACK_IMPORTED_MODULE_14__.apis.IS_NODE_ENV ? 'cpu' : 'wasm')\n    );\n    const executionProviders = (0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.deviceToExecutionProviders)(selectedDevice);\n\n    // If options.dtype is specified, we use it to choose the suffix for the model file.\n    // Otherwise, we use the default dtype for the device.\n    let dtype = options.dtype ?? custom_config.dtype;\n    if (typeof dtype !== 'string') {\n        if (dtype && dtype.hasOwnProperty(fileName)) {\n            dtype = dtype[fileName];\n        } else {\n            dtype = _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_DEVICE_DTYPE_MAPPING[selectedDevice] ?? _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.fp32;\n            console.warn(`dtype not specified for \"${fileName}\". Using the default dtype (${dtype}) for this device (${selectedDevice}).`);\n        }\n    }\n\n    if (dtype === _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.auto) {\n        // Try to choose the auto dtype based on the custom config\n        let config_dtype = custom_config.dtype;\n        if (typeof config_dtype !== 'string') {\n            config_dtype = config_dtype[fileName];\n        }\n\n        if (config_dtype && config_dtype !== _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.auto && _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.hasOwnProperty(config_dtype)) {\n            // Defined by the custom config, and is not \"auto\"\n            dtype = config_dtype;\n        } else {\n            // Choose default dtype based on device, falling back to fp32\n            dtype = _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_DEVICE_DTYPE_MAPPING[selectedDevice] ?? _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.fp32;\n        }\n    }\n\n    const selectedDtype = /** @type {import(\"./utils/dtypes.js\").DataType} */(dtype);\n\n    if (!_utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(selectedDtype)) {\n        throw new Error(`Invalid dtype: ${selectedDtype}. Should be one of: ${Object.keys(_utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES).join(', ')}`);\n    } else if (selectedDtype === _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DATA_TYPES.fp16 && selectedDevice === 'webgpu' && !(await (0,_utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.isWebGpuFp16Supported)())) {\n        throw new Error(`The device (${selectedDevice}) does not support fp16.`);\n    }\n\n    // Only valid for models with a decoder\n    const kv_cache_dtype = custom_config.kv_cache_dtype\n        ? (typeof custom_config.kv_cache_dtype === 'string'\n            ? custom_config.kv_cache_dtype\n            : custom_config.kv_cache_dtype[selectedDtype] ?? 'float32')\n        : undefined;\n\n    if (kv_cache_dtype && !['float32', 'float16'].includes(kv_cache_dtype)) {\n        throw new Error(`Invalid kv_cache_dtype: ${kv_cache_dtype}. Should be one of: float32, float16`);\n    }\n\n    const session_config = {\n        dtype: selectedDtype,\n        kv_cache_dtype,\n    }\n\n    // Construct the model file name\n    const suffix = _utils_dtypes_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_DTYPE_SUFFIX_MAPPING[selectedDtype];\n    const baseName = `${fileName}${suffix}.onnx`;\n    const modelFileName = `${options.subfolder ?? ''}/${baseName}`;\n\n    const session_options = { ...options.session_options };\n\n    // Overwrite `executionProviders` if not specified\n    session_options.executionProviders ??= executionProviders;\n\n    // Overwrite `freeDimensionOverrides` if specified in config and not set in session options\n    const free_dimension_overrides = custom_config.free_dimension_overrides;\n    if (free_dimension_overrides) {\n        session_options.freeDimensionOverrides ??= free_dimension_overrides;\n    } else if (selectedDevice.startsWith('webnn') && !session_options.freeDimensionOverrides) {\n        console.warn(\n            'WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within \"transformers.js_config\". ' +\n            'When `free_dimension_overrides` is not set, you may experience significant performance degradation.'\n        );\n    }\n\n    const bufferOrPathPromise = (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.getModelFile)(pretrained_model_name_or_path, modelFileName, true, options, _env_js__WEBPACK_IMPORTED_MODULE_14__.apis.IS_NODE_ENV);\n\n    // handle onnx external data files\n    const use_external_data_format = options.use_external_data_format ?? custom_config.use_external_data_format;\n    /** @type {Promise<string|{path: string, data: Uint8Array}>[]} */\n    let externalDataPromises = [];\n    if (use_external_data_format) {\n        let external_data_format;\n        if (typeof use_external_data_format === 'object') {\n            if (use_external_data_format.hasOwnProperty(baseName)) {\n                external_data_format = use_external_data_format[baseName];\n            } else if (use_external_data_format.hasOwnProperty(fileName)) {\n                external_data_format = use_external_data_format[fileName];\n            } else {\n                external_data_format = false;\n            }\n        } else {\n            external_data_format = use_external_data_format;\n        }\n\n        const num_chunks = +external_data_format; // (false=0, true=1, number remains the same)\n        if (num_chunks > _utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.MAX_EXTERNAL_DATA_CHUNKS) {\n            throw new Error(`The number of external data chunks (${num_chunks}) exceeds the maximum allowed value (${_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.MAX_EXTERNAL_DATA_CHUNKS}).`);\n        }\n        for (let i = 0; i < num_chunks; ++i) {\n            const path = `${baseName}_data${i === 0 ? '' : '_' + i}`;\n            const fullPath = `${options.subfolder ?? ''}/${path}`;\n            externalDataPromises.push(new Promise(async (resolve, reject) => {\n                const data = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.getModelFile)(pretrained_model_name_or_path, fullPath, true, options, _env_js__WEBPACK_IMPORTED_MODULE_14__.apis.IS_NODE_ENV);\n                resolve(data instanceof Uint8Array ? { path, data } : path);\n            }));\n        }\n\n    } else if (session_options.externalData !== undefined) {\n        externalDataPromises = session_options.externalData.map(async (ext) => {\n            // if the external data is a string, fetch the file and replace the string with its content\n            // @ts-expect-error TS2339\n            if (typeof ext.data === \"string\") {\n                // @ts-expect-error TS2339\n                const ext_buffer = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.getModelFile)(pretrained_model_name_or_path, ext.data, true, options);\n                // @ts-expect-error TS2698\n                return { ...ext, data: ext_buffer };\n            }\n            return ext;\n        });\n    }\n\n    if (externalDataPromises.length > 0) {\n        const externalData = await Promise.all(externalDataPromises);\n        if (!_env_js__WEBPACK_IMPORTED_MODULE_14__.apis.IS_NODE_ENV) {\n            session_options.externalData = externalData;\n        }\n    }\n\n    if (selectedDevice === 'webgpu') {\n        const shapes = (0,_configs_js__WEBPACK_IMPORTED_MODULE_0__.getKeyValueShapes)(options.config, {\n            prefix: 'present',\n        });\n        if (Object.keys(shapes).length > 0 && !(0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.isONNXProxy)()) {\n            // Only set preferredOutputLocation if shapes are present and we aren't proxying ONNX\n            /** @type {Record<string, import('onnxruntime-common').Tensor.DataLocation>} */\n            const preferredOutputLocation = {};\n            for (const key in shapes) {\n                preferredOutputLocation[key] = 'gpu-buffer';\n            }\n            session_options.preferredOutputLocation = preferredOutputLocation;\n        }\n    }\n\n    const buffer_or_path = await bufferOrPathPromise;\n\n    return { buffer_or_path, session_options, session_config };\n}\n\n/**\n * Helper function to create multiple InferenceSession objects.\n * \n * @param {string} pretrained_model_name_or_path The path to the directory containing the model file.\n * @param {Record<string, string>} names The names of the model files to load.\n * @param {import('./utils/hub.js').PretrainedModelOptions} options Additional options for loading the model.\n * @returns {Promise<Record<string, any>>} A Promise that resolves to a dictionary of InferenceSession objects.\n * @private\n */\nasync function constructSessions(pretrained_model_name_or_path, names, options) {\n    return Object.fromEntries(await Promise.all(\n        Object.keys(names).map(async (name) => {\n            const { buffer_or_path, session_options, session_config } = await getSession(pretrained_model_name_or_path, names[name], options);\n            const session = await (0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.createInferenceSession)(buffer_or_path, session_options, session_config);\n            return [name, session];\n        })\n    ));\n}\n\n/**\n * Helper function to load multiple optional configuration files\n * @param {string} pretrained_model_name_or_path The path to the directory containing the config file.\n * @param {Record<string, string>} names The names of the config files to load.\n * @param {import('./utils/hub.js').PretrainedModelOptions} options Additional options for loading the configs.\n * @returns {Promise<Record<string, any>>} A Promise that resolves to a dictionary of configuration objects.\n * @private\n */\nasync function getOptionalConfigs(pretrained_model_name_or_path, names, options) {\n    return Object.fromEntries(await Promise.all(\n        Object.keys(names).map(async (name) => {\n            const config = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_5__.getModelJSON)(pretrained_model_name_or_path, names[name], false, options);\n            return [name, config];\n        })\n    ));\n}\n\n/**\n * Validate model inputs\n * @param {Object} session The InferenceSession object that will be run.\n * @param {Object} inputs The inputs to check.\n * @returns {Record<string, Tensor>} The checked inputs.\n * @throws {Error} If any inputs are missing.\n * @private\n */\nfunction validateInputs(session, inputs) {\n    /**\n     * NOTE: Create either a shallow or deep copy based on `onnx.wasm.proxy`\n     * @type {Record<string, Tensor>}\n     */\n    const checkedInputs = Object.create(null);\n    const missingInputs = [];\n    for (const inputName of session.inputNames) {\n        const tensor = inputs[inputName];\n        // Rare case where one of the model's input names corresponds to a built-in\n        // object name (e.g., toString), which would cause a simple (!tensor) check to fail,\n        // because it's not undefined but a function.\n        if (!(tensor instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor)) {\n            missingInputs.push(inputName);\n            continue;\n        }\n        // NOTE: When `env.wasm.proxy is true` the tensor is moved across the Worker\n        // boundary, transferring ownership to the worker and invalidating the tensor.\n        // So, in this case, we simply sacrifice a clone for it.\n        checkedInputs[inputName] = (0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.isONNXProxy)() ? tensor.clone() : tensor;\n    }\n    if (missingInputs.length > 0) {\n        throw new Error(\n            `An error occurred during model execution: \"Missing the following inputs: ${missingInputs.join(', ')}.`);\n    }\n\n    const numInputsProvided = Object.keys(inputs).length;\n    const numInputsNeeded = session.inputNames.length;\n    if (numInputsProvided > numInputsNeeded) {\n        // No missing inputs, but too many inputs were provided.\n        // Warn the user and ignore the extra inputs.\n        let ignored = Object.keys(inputs).filter(inputName => !session.inputNames.includes(inputName));\n        console.warn(`WARNING: Too many inputs were provided (${numInputsProvided} > ${numInputsNeeded}). The following inputs will be ignored: \"${ignored.join(', ')}\".`);\n    }\n\n    return checkedInputs;\n}\n\n/**\n * Executes an InferenceSession using the specified inputs.\n * NOTE: `inputs` must contain at least the input names of the model.\n *  - If additional inputs are passed, they will be ignored.\n *  - If inputs are missing, an error will be thrown.\n * \n * @param {Object} session The InferenceSession object to run.\n * @param {Object} inputs An object that maps input names to input tensors.\n * @returns {Promise<Object>} A Promise that resolves to an object that maps output names to output tensors.\n * @private\n */\nasync function sessionRun(session, inputs) {\n    const checkedInputs = validateInputs(session, inputs);\n    try {\n        // pass the original ort tensor\n        const ortFeed = Object.fromEntries(Object.entries(checkedInputs).map(([k, v]) => [k, v.ort_tensor]));\n        let output = await session.run(ortFeed);\n        output = replaceTensors(output);\n        return output;\n    } catch (e) {\n        // Error messages can be long (nested) and uninformative. For this reason,\n        // we apply minor formatting to show the most important information\n        const formatted = Object.fromEntries(Object.entries(checkedInputs)\n            .map(([k, { type, dims, data }]) => [k, {\n                // Extract these properties from the underlying ORT tensor\n                type, dims, data,\n            }]));\n\n        // This usually occurs when the inputs are of the wrong type.\n        console.error(`An error occurred during model execution: \"${e}\".`);\n        console.error('Inputs given to model:', formatted);\n        throw e;\n    }\n}\n\n/**\n * Replaces ONNX Tensor objects with custom Tensor objects to support additional functions.\n * @param {Object} obj The object to replace tensor objects in.\n * @returns {Object} The object with tensor objects replaced by custom Tensor objects.\n * @private\n */\nfunction replaceTensors(obj) {\n    for (let prop in obj) {\n        if ((0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.isONNXTensor)(obj[prop])) {\n            obj[prop] = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(obj[prop]);\n        } else if (typeof obj[prop] === 'object') {\n            replaceTensors(obj[prop]);\n        }\n    }\n    return obj;\n}\n\n\n/**\n * Converts an array or Tensor of integers to an int64 Tensor.\n * @param {any[]|Tensor} items The input integers to be converted.\n * @returns {Tensor} The int64 Tensor with the converted values.\n * @throws {Error} If the input array is empty or the input is a batched Tensor and not all sequences have the same length.\n * @private\n */\nfunction toI64Tensor(items) {\n    if (items instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor) {\n        return items;\n    }\n    // items is an array\n    if (items.length === 0) {\n        throw Error(\"items must be non-empty\");\n    }\n\n    if (Array.isArray(items[0])) {\n        // batched\n        if (items.some(x => x.length !== items[0].length)) {\n            throw Error(\"Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.\")\n        }\n\n        return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64',\n            BigInt64Array.from(items.flat().map(x => BigInt(x))),\n            [items.length, items[0].length]\n        );\n    } else {\n        //flat\n        return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64',\n            BigInt64Array.from(items.map(x => BigInt(x))),\n            [1, items.length]\n        );\n    }\n}\n\n/**\n * Creates a boolean tensor with a single value.\n * @param {boolean} value The value of the tensor.\n * @returns {Tensor} The boolean tensor.\n * @private\n */\nfunction boolTensor(value) {\n    return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('bool', [value], [1]);\n}\n\n// JS doesn't support mixins, so we define some reused functions here, and allow \"this\" to be passed in\n/**\n * Perform forward pass on the seq2seq model (both encoder and decoder).\n * @param {Object} self The seq2seq model object.\n * @param {Object} model_inputs The input object for the model containing encoder and decoder inputs.\n * @returns {Promise<Seq2SeqLMOutput>} Promise that resolves with the output of the seq2seq model.\n * @private\n */\nasync function seq2seqForward(self, model_inputs) {\n    let { encoder_outputs, input_ids, decoder_input_ids, ...other_decoder_inputs } = model_inputs;\n    // Encode if needed\n    if (!encoder_outputs) {\n        const encoder_inputs = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(model_inputs, self.sessions['model'].inputNames);\n        // Encoder outputs are not given, so we must compute them.\n        encoder_outputs = (await encoderForward(self, encoder_inputs)).last_hidden_state;\n    }\n\n    other_decoder_inputs.input_ids = decoder_input_ids;\n    other_decoder_inputs.encoder_hidden_states = encoder_outputs;\n\n    if (self.sessions['decoder_model_merged'].inputNames.includes('encoder_attention_mask')) {\n        other_decoder_inputs.encoder_attention_mask = model_inputs.attention_mask\n    }\n\n    const decoderResults = await decoderForward(self, other_decoder_inputs, true);\n\n    return decoderResults;\n}\n\n/**\n * Forward pass of an encoder model.\n * @param {Object} self The encoder model.\n * @param {Object} model_inputs The input data to be used for the forward pass.\n * @returns {Promise<Object>} The model's outputs.\n * @private\n */\nasync function encoderForward(self, model_inputs) {\n    const session = self.sessions['model'];\n    const encoderFeeds = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(model_inputs, session.inputNames);\n\n    if (session.inputNames.includes('inputs_embeds') && !encoderFeeds.inputs_embeds) {\n        if (!model_inputs.input_ids) {\n            throw new Error('Both `input_ids` and `inputs_embeds` are missing in the model inputs.');\n        }\n        encoderFeeds.inputs_embeds = await self.encode_text({ input_ids: model_inputs.input_ids });\n    }\n    if (session.inputNames.includes('token_type_ids') && !encoderFeeds.token_type_ids) {\n        if (!encoderFeeds.input_ids) {\n            throw new Error('Both `input_ids` and `token_type_ids` are missing in the model inputs.');\n        }\n        // Assign default `token_type_ids` (all zeroes) to the `encoderFeeds` if the model expects it,\n        // but they weren't created by the tokenizer.\n        encoderFeeds.token_type_ids = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.zeros_like)(encoderFeeds.input_ids);\n    }\n    if (session.inputNames.includes('pixel_mask') && !encoderFeeds.pixel_mask) {\n        if (!encoderFeeds.pixel_values) {\n            throw new Error('Both `pixel_values` and `pixel_mask` are missing in the model inputs.');\n        }\n        // Assign default `pixel_mask` (all ones) to the `encoderFeeds` if the model expects it,\n        // but they weren't created by the processor.\n        const dims = encoderFeeds.pixel_values.dims;\n        encoderFeeds.pixel_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([dims[0], dims[2], dims[3]]);\n    }\n\n    return await sessionRun(session, encoderFeeds);\n}\n\nasync function autoEncoderForward(self, model_inputs) {\n    const encoded = await self.encode(model_inputs);\n    const decoded = await self.decode(encoded);\n    return decoded;\n}\n\n/**\n * Forward pass of a decoder model.\n * @param {Object} self The decoder model.\n * @param {Object} model_inputs The input data to be used for the forward pass.\n * @returns {Promise<Object>} The logits and past key values.\n * @private\n */\nasync function decoderForward(self, model_inputs, is_encoder_decoder = false) {\n\n    const session = self.sessions[\n        is_encoder_decoder ? 'decoder_model_merged' : 'model'\n    ]\n\n    const { past_key_values, ...new_model_inputs } = model_inputs;\n\n    if (session.inputNames.includes('use_cache_branch')) {\n        new_model_inputs.use_cache_branch = boolTensor(!!past_key_values);\n    }\n    if (session.inputNames.includes('position_ids') && new_model_inputs.attention_mask && !new_model_inputs.position_ids) {\n        // NOTE: Handle a special case for paligemma models, where positions are 1-indexed\n        const start_index = self.config.model_type === 'paligemma' ? 1 : 0;\n        new_model_inputs.position_ids = createPositionIds(new_model_inputs, past_key_values, start_index);\n    }\n\n    // Unpack the `past_key_values` object into model inputs\n    self.addPastKeyValues(new_model_inputs, past_key_values);\n\n    // Select only the inputs that are needed for the current session\n    const fixed = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(new_model_inputs, session.inputNames);\n    return await sessionRun(session, fixed);\n}\n\n\n\nfunction default_merge_input_ids_with_features({\n    modality_token_id,\n    inputs_embeds,\n    modality_features,\n    input_ids,\n    attention_mask,\n}) {\n    const token_positions = input_ids.tolist().map(ids =>\n        ids.reduce((acc, x, idx) => {\n            if (x == modality_token_id) acc.push(idx);\n            return acc;\n        }, [])\n    );\n    const n_tokens = token_positions.reduce((acc, x) => acc + x.length, 0);\n    const n_features = modality_features.dims[0];\n    if (n_tokens !== n_features) {\n        throw new Error(`Number of tokens and features do not match: tokens: ${n_tokens}, features ${n_features}`);\n    }\n\n    // Equivalent to performing a masked_scatter\n    let img = 0;\n    for (let i = 0; i < token_positions.length; ++i) {\n        const tokens = token_positions[i];\n        const embeds = inputs_embeds[i];\n        for (let j = 0; j < tokens.length; ++j) {\n            embeds[tokens[j]].data.set(modality_features[img++].data)\n        }\n    }\n    return { inputs_embeds, attention_mask }\n}\n\n\nfunction default_merge_input_ids_with_image_features({\n    image_token_id,\n    inputs_embeds,\n    image_features,\n    input_ids,\n    attention_mask,\n}) {\n    return default_merge_input_ids_with_features({\n        modality_token_id: image_token_id,\n        inputs_embeds,\n        modality_features: image_features,\n        input_ids,\n        attention_mask,\n    })\n}\n\nfunction default_merge_input_ids_with_audio_features({\n    audio_token_id,\n    inputs_embeds,\n    audio_features,\n    input_ids,\n    attention_mask,\n}) {\n    return default_merge_input_ids_with_features({\n        modality_token_id: audio_token_id,\n        inputs_embeds,\n        modality_features: audio_features,\n        input_ids,\n        attention_mask,\n    })\n}\n\n/**\n * Abstract forward pass function for image-text-to-text or audio-text-to-text models.\n * @param {Object} self The model object.\n * @param {Object} params Additional parameters.\n * @param {Function} [params.encode_function] The function to encode the modality values.\n * @param {Function} [params.merge_function] The function to merge the modality features with the input embeddings.\n * @param {string} [params.modality_input_name] The modality input name.\n * @param {string} [params.modality_output_name] The modality output name.\n * @param {Tensor} [params.input_ids=null]\n * @param {Tensor} [params.attention_mask=null]\n * @param {Tensor} [params.position_ids=null]\n * @param {Tensor} [params.inputs_embeds=null]\n * @param {Tensor} [params.past_key_values=null]\n * @param {Object} [params.generation_config=null]\n * @param {Object} [params.logits_processor=null]\n * @returns {Promise<Tensor>} The model's output tensor\n * @private\n */\nasync function genericTextToTextForward(self, {\n    // Generic parameters:\n    encode_function,\n    merge_function,\n    modality_input_name,\n    modality_output_name,\n\n    // Produced by the tokenizer/processor:\n    input_ids = null,\n    attention_mask = null,\n\n    // Used during generation:\n    position_ids = null,\n    inputs_embeds = null,\n    past_key_values = null,\n\n    // Generic generation parameters\n    generation_config = null,\n    logits_processor = null,\n\n    // Additional parameters\n    ...kwargs\n}) {\n    const modality_values = kwargs[modality_input_name];\n    if (!inputs_embeds) {\n        // 1. Extract the text embeddings.\n        inputs_embeds = await self.encode_text({ input_ids, ...kwargs });\n\n        // 2. Possibly, merge text and modality values\n        if (modality_values && input_ids.dims[1] !== 1) {\n            const modality_features = await encode_function({\n                // Pass the modality values under its expected key.\n                // The caller knows whether this is audio or image.\n                [modality_input_name]: modality_values,\n                ...kwargs\n            });\n            ({ inputs_embeds, attention_mask } = merge_function({\n                [modality_output_name]: modality_features,\n                inputs_embeds,\n                input_ids,\n                attention_mask,\n            }));\n\n        } else if (past_key_values && modality_values && input_ids.dims[1] === 1) {\n            // This branch handles the cache case.\n            const target_length = input_ids.dims[1]; // always 1\n            const past_length = Object.values(past_key_values)[0].dims.at(-2);\n\n            attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([input_ids.dims[0], past_length]),\n                attention_mask.slice(null, [attention_mask.dims[1] - target_length, attention_mask.dims[1]]),\n            ], 1);\n        }\n    }\n\n    if (!position_ids) {\n\n        if (self.config.model_type === 'qwen2_vl') {\n            // Special case for qwen2_vl models\n            // @ts-ignore\n            const { image_grid_thw, video_grid_thw } = kwargs;\n            [position_ids] = self.get_rope_index(input_ids, image_grid_thw, video_grid_thw, attention_mask)\n        }\n    }\n\n    // 3. Call the decoder forward using the updated inputs.\n    const outputs = await decoderForward(self, {\n        inputs_embeds,\n        past_key_values,\n        attention_mask,\n        position_ids,\n        generation_config,\n        logits_processor,\n    }, true);\n    return outputs;\n}\n\n/**\n * Forward pass of an audio-text-to-text model.\n * @param {Object} self The audio-text-to-text model.\n * @param {Object} params The inputs for the audio-text-to-text forward pass.\n * @returns {Promise<Tensor>} The model's output tensor.\n * @private\n */\nasync function audioTextToTextForward(self, params) {\n    return await genericTextToTextForward(self, {\n        ...params,\n        modality_input_name: 'audio_values',\n        modality_output_name: 'audio_features',\n        encode_function: self.encode_audio.bind(self),\n        merge_function: self._merge_input_ids_with_audio_features.bind(self),\n    });\n}\n\n/**\n * Forward pass of an image-text-to-text model.\n * @param {Object} self The image-text-to-text model.\n * @param {Object} params The inputs for the image-text-to-text forward pass.\n * @returns {Promise<Tensor>} The model's output tensor.\n * @private\n */\nasync function imageTextToTextForward(self, params) {\n    return await genericTextToTextForward(self, {\n        ...params,\n        modality_input_name: 'pixel_values',\n        modality_output_name: 'image_features',\n        encode_function: self.encode_image.bind(self),\n        merge_function: self._merge_input_ids_with_image_features.bind(self),\n    });\n}\n\n/**\n * Helper function to perform the following:\n * ```python\n * x = attention_mask.long().cumsum(-1) - 1\n * x.masked_fill_(attention_mask == 0, 1)\n * ```\n * @param {Tensor} attention_mask\n * @returns {{data: BigInt64Array, dims: number[]}}\n */\nfunction cumsum_masked_fill(attention_mask, start_index = 0) {\n    const [bz, seq_len] = attention_mask.dims;\n    const attn_mask_data = attention_mask.data;\n\n    const data = new BigInt64Array(attn_mask_data.length);\n    for (let i = 0; i < bz; ++i) {\n        const start = i * seq_len;\n        let sum = BigInt(start_index);\n        for (let j = 0; j < seq_len; ++j) {\n            const index = start + j;\n            if (attn_mask_data[index] === 0n) {\n                data[index] = BigInt(1);\n            } else { // === 1n\n                data[index] = sum;\n                sum += attn_mask_data[index];\n            }\n        }\n    }\n    return { data, dims: attention_mask.dims };\n\n}\n\n/**\n * If the model supports providing position_ids, we create position_ids on the fly for batch generation,\n * by computing the cumulative sum of the attention mask along the sequence length dimension.\n * \n * Equivalent to:\n * ```python\n * position_ids = attention_mask.long().cumsum(-1) - 1\n * position_ids.masked_fill_(attention_mask == 0, 1)\n * if past_key_values:\n *     position_ids = position_ids[:, -input_ids.shape[1] :]\n * ```\n */\nfunction createPositionIds(model_inputs, past_key_values = null, start_index = 0) {\n    const { input_ids, inputs_embeds, attention_mask } = model_inputs;\n\n    const { data, dims } = cumsum_masked_fill(attention_mask, start_index);\n    let position_ids = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', data, dims);\n    if (past_key_values) {\n        const offset = -(input_ids ?? inputs_embeds).dims.at(1);\n        position_ids = position_ids.slice(null, [offset, null]);\n    }\n    return position_ids;\n}\n\nfunction decoder_prepare_inputs_for_generation(self, input_ids, model_inputs, generation_config) {\n    if (model_inputs.past_key_values) {\n        const past_length = Object.values(model_inputs.past_key_values)[0].dims.at(-2);\n        const { input_ids, attention_mask } = model_inputs;\n\n        // Keep only the unprocessed tokens:\n        // 1 - If the length of the attention_mask exceeds the length of input_ids, then we are in a setting where\n        // some of the inputs are exclusively passed as part of the cache (e.g. when passing input_embeds as\n        // input)\n        if (attention_mask && attention_mask.dims[1] > input_ids.dims[1]) {\n            // NOTE: not needed since we only pass the generated tokens to the next forward pass\n            // const offset = -(attention_mask.dims[1] - past_length);\n            // model_inputs.input_ids = input_ids.slice(null, [offset, null]);\n        }\n        // 2 - If the past_length is smaller than input_ids', then input_ids holds all input tokens.\n        // We can discard input_ids based on the past_length.\n        else if (past_length < input_ids.dims[1]) {\n            // NOTE: Required for phi models.\n            // See https://github.com/huggingface/transformers/issues/30809#issuecomment-2111918479 for more information.\n            model_inputs.input_ids = input_ids.slice(null, [past_length, null]);\n        }\n        // 3 - Otherwise (past_length >= input_ids.shape[1]), let's assume input_ids only has unprocessed tokens.\n        else {\n            if (\n                // NOTE: Only used by VLMs (!= so that null matches undefined)\n                self.config.image_token_index != null &&\n                // Equivalent to `self.config.image_token_index in input_ids` (== so that int matches bigint)\n                input_ids.data.some(x => x == self.config.image_token_index)\n            ) {\n                // TODO: Support multiple image tokens\n                const num_image_tokens = self.config.num_image_tokens;\n                if (!num_image_tokens) {\n                    throw new Error('`num_image_tokens` is missing in the model configuration.');\n                }\n\n                const num_new_tokens = input_ids.dims[1] - (past_length - num_image_tokens);\n                model_inputs.input_ids = input_ids.slice(null, [-num_new_tokens, null]);\n\n                // TODO: The attention mask should be formed from the attention mask passed in model_inputs\n                model_inputs.attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([1, past_length + num_new_tokens]);\n            }\n        }\n    }\n\n    return model_inputs;\n}\n\nfunction encoder_decoder_prepare_inputs_for_generation(self, input_ids, model_inputs, generation_config) {\n    if (model_inputs.past_key_values) {\n        input_ids = input_ids.map(x => [x.at(-1)]);\n    }\n\n    return {\n        ...model_inputs,\n        decoder_input_ids: toI64Tensor(input_ids),\n    };\n}\n\nfunction multimodal_text_to_text_prepare_inputs_for_generation(self, ...args) {\n    if (self.config.is_encoder_decoder) {\n        return encoder_decoder_prepare_inputs_for_generation(self, ...args);\n    } else {\n        return decoder_prepare_inputs_for_generation(self, ...args);\n    }\n}\n\nfunction multimodality_prepare_inputs_for_generation(self, input_ids, model_inputs, generation_config) {\n    const has_past_key_values = !!model_inputs.past_key_values;\n\n    if (generation_config.guidance_scale !== null && generation_config.guidance_scale > 1) {\n        if (has_past_key_values) {\n            model_inputs.input_ids = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                model_inputs.input_ids,\n                model_inputs.input_ids,\n            ], 0)\n            // NOTE: attention_mask handled in generation\n        } else {\n            model_inputs.input_ids = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                model_inputs.input_ids,\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.full_like)(model_inputs.input_ids, BigInt(generation_config.pad_token_id)),\n            ], 0);\n            model_inputs.attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                model_inputs.attention_mask,\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.full_like)(model_inputs.attention_mask, 0n),\n            ], 0);\n        }\n    }\n\n    if (has_past_key_values || !model_inputs.pixel_values) {\n        model_inputs.pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.full)([0, 0, 3, 384, 384], 1.0);\n    }\n\n    if (has_past_key_values) {\n        const num_img_tokens = 0;\n        const num_text_tokens = 1;\n        const has_image = num_img_tokens > 0 ? 1 : 0;\n\n        const batch_size = 1;\n        model_inputs.images_seq_mask = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n            'bool',\n            new Array(num_img_tokens + num_text_tokens).fill(true).fill(false, 0, num_text_tokens),\n            [batch_size, num_img_tokens + num_text_tokens],\n        );\n        model_inputs.images_emb_mask = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n            'bool',\n            new Array(num_img_tokens).fill(!!has_image),\n            [batch_size, 1, num_img_tokens],\n        );\n    }\n    return model_inputs;\n}\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n/**\n * A base class for pre-trained models that provides the model configuration and an ONNX session.\n */\nclass PreTrainedModel extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_3__.Callable {\n    main_input_name = 'input_ids';\n    forward_params = ['input_ids', 'attention_mask'];\n    /**\n     * Creates a new instance of the `PreTrainedModel` class.\n     * @param {import('./configs.js').PretrainedConfig} config The model configuration.\n     * @param {Record<string, any>} sessions The inference sessions for the model.\n     * @param {Record<string, Object>} configs Additional configuration files (e.g., generation_config.json).\n     */\n    constructor(config, sessions, configs) {\n        super();\n\n        this.config = config;\n        this.sessions = sessions;\n        this.configs = configs;\n\n        const modelName = MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor);\n        const modelType = MODEL_TYPE_MAPPING.get(modelName);\n\n        this.can_generate = false;\n        this._forward = null;\n\n        this._prepare_inputs_for_generation = null;\n        switch (modelType) {\n            case MODEL_TYPES.DecoderOnly:\n                this.can_generate = true;\n                this._forward = decoderForward;\n                this._prepare_inputs_for_generation = decoder_prepare_inputs_for_generation;\n                break;\n            case MODEL_TYPES.Seq2Seq:\n            case MODEL_TYPES.Vision2Seq:\n            case MODEL_TYPES.Musicgen:\n                this.can_generate = true;\n\n                this._forward = seq2seqForward;\n                this._prepare_inputs_for_generation = encoder_decoder_prepare_inputs_for_generation;\n                break;\n\n            case MODEL_TYPES.EncoderDecoder:\n                this._forward = seq2seqForward;\n                break;\n            case MODEL_TYPES.ImageTextToText:\n                this.can_generate = true;\n                this._forward = imageTextToTextForward;\n                this._prepare_inputs_for_generation = multimodal_text_to_text_prepare_inputs_for_generation;\n                break;\n            case MODEL_TYPES.AudioTextToText:\n                this.can_generate = true;\n                this._forward = audioTextToTextForward;\n                this._prepare_inputs_for_generation = multimodal_text_to_text_prepare_inputs_for_generation;\n                break;\n            case MODEL_TYPES.Phi3V:\n                this.can_generate = true;\n                this._prepare_inputs_for_generation = multimodal_text_to_text_prepare_inputs_for_generation;\n                break;\n            case MODEL_TYPES.MultiModality:\n                this.can_generate = true;\n                this._prepare_inputs_for_generation = multimodality_prepare_inputs_for_generation;\n                break;\n            case MODEL_TYPES.AutoEncoder:\n                this._forward = autoEncoderForward;\n                break;\n            default:\n                // should be MODEL_TYPES.EncoderOnly\n                this._forward = encoderForward;\n                break;\n        }\n\n        if (this.can_generate) {\n            this.forward_params.push('past_key_values');\n        }\n\n        /** @type {import('./configs.js').TransformersJSConfig} */\n        this.custom_config = this.config['transformers.js_config'] ?? {};\n    }\n\n    /**\n    * Disposes of all the ONNX sessions that were created during inference.\n    * @returns {Promise<unknown[]>} An array of promises, one for each ONNX session that is being disposed.\n    * @todo Use https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n    */\n    async dispose() {\n        const promises = [];\n        for (const session of Object.values(this.sessions)) {\n            if (session?.handler?.dispose) {\n                promises.push(session.handler.dispose())\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    /**\n     * Instantiate one of the model classes of the library from a pretrained model.\n     * \n     * The model class to instantiate is selected based on the `model_type` property of the config object\n     * (either passed as an argument or loaded from `pretrained_model_name_or_path` if possible)\n     * \n     * @param {string} pretrained_model_name_or_path The name or path of the pretrained model. Can be either:\n     * - A string, the *model id* of a pretrained model hosted inside a model repo on huggingface.co.\n     *   Valid model ids can be located at the root-level, like `bert-base-uncased`, or namespaced under a\n     *   user or organization name, like `dbmdz/bert-base-german-cased`.\n     * - A path to a *directory* containing model weights, e.g., `./my_model_directory/`.\n     * @param {import('./utils/hub.js').PretrainedModelOptions} options Additional options for loading the model.\n     * \n     * @returns {Promise<PreTrainedModel>} A new instance of the `PreTrainedModel` class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n        model_file_name = null,\n        subfolder = 'onnx',\n        device = null,\n        dtype = null,\n        use_external_data_format = null,\n        session_options = {},\n    } = {}) {\n\n        let options = {\n            progress_callback,\n            config,\n            cache_dir,\n            local_files_only,\n            revision,\n            model_file_name,\n            subfolder,\n            device,\n            dtype,\n            use_external_data_format,\n            session_options,\n        }\n\n        const modelName = MODEL_CLASS_TO_NAME_MAPPING.get(this);\n        const modelType = MODEL_TYPE_MAPPING.get(modelName);\n\n        config = options.config = await _configs_js__WEBPACK_IMPORTED_MODULE_0__.AutoConfig.from_pretrained(pretrained_model_name_or_path, options);\n\n        let info;\n        if (modelType === MODEL_TYPES.DecoderOnly) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: options.model_file_name ?? 'model',\n                }, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.Seq2Seq || modelType === MODEL_TYPES.Vision2Seq) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: 'encoder_model',\n                    decoder_model_merged: 'decoder_model_merged',\n                }, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.MaskGeneration) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: 'vision_encoder',\n                    prompt_encoder_mask_decoder: 'prompt_encoder_mask_decoder',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.EncoderDecoder) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: 'encoder_model',\n                    decoder_model_merged: 'decoder_model_merged',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.ImageTextToText) {\n            const sessions = {\n                embed_tokens: 'embed_tokens',\n                vision_encoder: 'vision_encoder',\n                decoder_model_merged: 'decoder_model_merged',\n            }\n            if (config.is_encoder_decoder) {\n                sessions['model'] = 'encoder_model';\n            }\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, sessions, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.AudioTextToText) {\n            const sessions = {\n                embed_tokens: 'embed_tokens',\n                audio_encoder: 'audio_encoder',\n                decoder_model_merged: 'decoder_model_merged',\n            }\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, sessions, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.Musicgen) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: 'text_encoder',\n                    decoder_model_merged: 'decoder_model_merged',\n                    encodec_decode: 'encodec_decode',\n                }, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.MultiModality) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    prepare_inputs_embeds: 'prepare_inputs_embeds',\n                    model: 'language_model',\n                    lm_head: 'lm_head',\n                    gen_head: 'gen_head',\n                    gen_img_embeds: 'gen_img_embeds',\n                    image_decode: 'image_decode',\n                }, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n\n        } else if (modelType === MODEL_TYPES.Phi3V) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    prepare_inputs_embeds: 'prepare_inputs_embeds',\n                    model: 'model',\n                    vision_encoder: 'vision_encoder',\n                }, options),\n                getOptionalConfigs(pretrained_model_name_or_path, {\n                    generation_config: 'generation_config.json',\n                }, options),\n            ]);\n        } else if (modelType === MODEL_TYPES.AutoEncoder) {\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    encoder_model: 'encoder_model',\n                    decoder_model: 'decoder_model',\n                }, options),\n            ]);\n        } else { // should be MODEL_TYPES.EncoderOnly\n            if (modelType !== MODEL_TYPES.EncoderOnly) {\n                const type = modelName ?? config?.model_type;\n                if (type !== 'custom') {\n                    console.warn(`Model type for '${type}' not found, assuming encoder-only architecture. Please report this at ${_utils_constants_js__WEBPACK_IMPORTED_MODULE_6__.GITHUB_ISSUE_URL}.`)\n                }\n            }\n            info = await Promise.all([\n                constructSessions(pretrained_model_name_or_path, {\n                    model: options.model_file_name ?? 'model',\n                }, options),\n            ]);\n        }\n\n        // @ts-ignore\n        return new this(config, ...info);\n    }\n\n    /**\n     * Runs the model with the provided inputs\n     * @param {Object} model_inputs Object containing input tensors\n     * @returns {Promise<Object>} Object containing output tensors\n     */\n    async _call(model_inputs) {\n        return await this.forward(model_inputs);\n    }\n\n    /**\n     * Forward method for a pretrained model. If not overridden by a subclass, the correct forward method\n     * will be chosen based on the model type.\n     * @param {Object} model_inputs The input data to the model in the format specified in the ONNX model.\n     * @returns {Promise<Object>} The output data from the model in the format specified in the ONNX model.\n     * @throws {Error} This method must be implemented in subclasses.\n     */\n    async forward(model_inputs) {\n        return await this._forward(this, model_inputs);\n    }\n\n    /**\n     * Get the model's generation config, if it exists.\n     * @returns {GenerationConfig|null} The model's generation config if it exists, otherwise `null`.\n     */\n    get generation_config() {\n        return this.configs?.generation_config ?? null;\n    }\n\n    /**\n     * This function returns a [`LogitsProcessorList`] list object that contains all relevant [`LogitsWarper`]\n     * instances used for multinomial sampling.\n     * @param {GenerationConfig} generation_config The generation config.\n     * @returns {LogitsProcessorList} generation_config \n     */\n    _get_logits_warper(generation_config) {\n\n        // instantiate warpers list\n        const warpers = new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.LogitsProcessorList();\n\n        if (generation_config.temperature !== null && generation_config.temperature !== 1.0) {\n            warpers.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.TemperatureLogitsWarper(generation_config.temperature));\n        }\n        if (generation_config.top_k !== null && generation_config.top_k !== 0) {\n            // TODO: add min_tokens_to_keep\n            warpers.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.TopKLogitsWarper(generation_config.top_k));\n        }\n        if (generation_config.top_p !== null && generation_config.top_p < 1.0) {\n            // TODO: add min_tokens_to_keep\n            warpers.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.TopPLogitsWarper(generation_config.top_p));\n        }\n\n        return warpers;\n    }\n\n    /**\n     * @param {GenerationConfig} generation_config \n     * @param {number} input_ids_seq_length The starting sequence length for the input ids.\n     * @returns {LogitsProcessorList}\n     * @private\n     */\n    _get_logits_processor(\n        generation_config,\n        input_ids_seq_length,\n        // encoder_input_ids, TODO\n        // prefix_allowed_tokens_fn, TODO\n        logits_processor = null\n    ) {\n        const processors = new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.LogitsProcessorList();\n\n        // if (generation_config.diversity_penalty !== null && generation_config.diversity_penalty > 0.0) {\n        //     processors.push(new HammingDiversityLogitsProcessor(\n        //         generation_config.diversity_penalty,\n        //         generation_config.num_beams,\n        //         generation_config.num_beam_groups\n        //     ));\n        // }\n\n        // if (generation_config.encoder_repetition_penalty !== null && generation_config.encoder_repetition_penalty !== 1.0) {\n        //     processors.push(new EncoderRepetitionPenaltyLogitsProcessor(\n        //         generation_config.encoder_repetition_penalty,\n        //         encoder_input_ids\n        //     ));\n        // }\n\n        if (generation_config.repetition_penalty !== null && generation_config.repetition_penalty !== 1.0) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.RepetitionPenaltyLogitsProcessor(generation_config.repetition_penalty));\n        }\n\n        if (generation_config.no_repeat_ngram_size !== null && generation_config.no_repeat_ngram_size > 0) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.NoRepeatNGramLogitsProcessor(generation_config.no_repeat_ngram_size));\n        }\n\n        // if (generation_config.encoder_no_repeat_ngram_size !== null && generation_config.encoder_no_repeat_ngram_size > 0) {\n        //     if (this.config.is_encoder_decoder) {\n        //         processors.push(new EncoderNoRepeatNGramLogitsProcessor(\n        //             generation_config.encoder_no_repeat_ngram_size,\n        //             encoder_input_ids\n        //         ));\n        //     } else {\n        //         throw new Error(\"It's impossible to use `encoder_no_repeat_ngram_size` with decoder-only architecture\");\n        //     }\n        // }\n\n        if (generation_config.bad_words_ids !== null) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.NoBadWordsLogitsProcessor(generation_config.bad_words_ids, generation_config.eos_token_id));\n        }\n\n        if (generation_config.min_length !== null && generation_config.eos_token_id !== null && generation_config.min_length > 0) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.MinLengthLogitsProcessor(generation_config.min_length, generation_config.eos_token_id));\n        }\n\n        if (generation_config.min_new_tokens !== null && generation_config.eos_token_id !== null && generation_config.min_new_tokens > 0) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.MinNewTokensLengthLogitsProcessor(\n                input_ids_seq_length,\n                generation_config.min_new_tokens,\n                generation_config.eos_token_id\n            ));\n        }\n\n        // if (prefix_allowed_tokens_fn !== null) {\n        //     processors.push(new PrefixConstrainedLogitsProcessor(\n        //         prefix_allowed_tokens_fn,\n        //         generation_config.num_beams / generation_config.num_beam_groups\n        //     ));\n        // }\n\n\n        if (generation_config.forced_bos_token_id !== null) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.ForcedBOSTokenLogitsProcessor(generation_config.forced_bos_token_id));\n        }\n\n        if (generation_config.forced_eos_token_id !== null) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.ForcedEOSTokenLogitsProcessor(\n                generation_config.max_length,\n                generation_config.forced_eos_token_id\n            ));\n        }\n\n        // if (generation_config.remove_invalid_values === true) {\n        //     processors.push(new InfNanRemoveLogitsProcessor());\n        // }\n\n        // if (generation_config.exponential_decay_length_penalty !== null) {\n        //     processors.push(new ExponentialDecayLengthPenalty(\n        //         generation_config.exponential_decay_length_penalty,\n        //         generation_config.eos_token_id,\n        //         input_ids_seq_length\n        //     ));\n        // }\n\n        // if (generation_config.suppress_tokens !== null) {\n        //     processors.push(new SuppressTokensLogitsProcessor(generation_config.suppress_tokens));\n        // }\n\n        if (generation_config.begin_suppress_tokens !== null) {\n            const begin_index = (input_ids_seq_length > 1 || generation_config.forced_bos_token_id === null)\n                ? input_ids_seq_length\n                : input_ids_seq_length + 1;\n\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.SuppressTokensAtBeginLogitsProcessor(generation_config.begin_suppress_tokens, begin_index));\n        }\n\n        // DEPRECATED: https://github.com/huggingface/transformers/pull/29485\n        // if (generation_config.forced_decoder_ids !== null) {\n        //     processors.push(new ForceTokensLogitsProcessor(generation_config.forced_decoder_ids));\n        // }\n\n\n        // 8. prepare batched CFG externally\n        if (generation_config.guidance_scale !== null && generation_config.guidance_scale > 1) {\n            processors.push(new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.ClassifierFreeGuidanceLogitsProcessor(generation_config.guidance_scale));\n        }\n\n        if (logits_processor !== null) {\n            processors.extend(logits_processor)\n        }\n\n        // `LogitNormalization` should always be the last logit processor, when present\n        // if (generation_config.renormalize_logits === true) {\n        //     processors.push(new LogitNormalization());\n        // }\n\n        return processors;\n    }\n\n    /**\n     * This function merges multiple generation configs together to form a final generation config to be used by the model for text generation.\n     * It first creates an empty `GenerationConfig` object, then it applies the model's own `generation_config` property to it. Finally, if a `generation_config` object was passed in the arguments, it overwrites the corresponding properties in the final config with those of the passed config object.\n     * @param {GenerationConfig|null} generation_config A `GenerationConfig` object containing generation parameters.\n     * @param {Object} kwargs Additional generation parameters to be used in place of those in the `generation_config` object.\n     * @returns {GenerationConfig} The final generation config object to be used by the model for text generation.\n     */\n    _prepare_generation_config(generation_config, kwargs, cls = _generation_configuration_utils_js__WEBPACK_IMPORTED_MODULE_8__.GenerationConfig) {\n        // Create empty generation config (contains defaults)\n        // We pass `this.config` so that if `eos_token_id` or `bos_token_id` exist in the model's config, we will use them\n        const config = { ...this.config };\n        for (const key of [\"decoder\", \"generator\", \"text_config\"]) {\n            // Special case: some models have generation attributes set in the decoder.\n            // Use them if still unset in the generation config.\n            if (key in config) {\n                Object.assign(config, config[key]);\n            }\n        }\n\n        const gen_config = new cls(config);\n\n        // Apply model's generation config, if it exists\n        Object.assign(gen_config, this.generation_config ?? {});\n\n        // Next, use any generation config specified by the user\n        // when calling `generate`\n        if (generation_config) {\n            Object.assign(gen_config, generation_config);\n        }\n\n        // Finally, if any kwargs were passed, use them to overwrite\n        if (kwargs) {\n            Object.assign(gen_config, (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(kwargs, Object.getOwnPropertyNames(gen_config)));\n        }\n\n        return gen_config;\n    }\n\n    /**\n     * \n     * @param {GenerationConfig} generation_config \n     * @param {StoppingCriteriaList} [stopping_criteria=null] \n     */\n    _get_stopping_criteria(generation_config, stopping_criteria = null) {\n        const criteria = new _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_12__.StoppingCriteriaList();\n\n        if (generation_config.max_length !== null) {\n            criteria.push(new _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_12__.MaxLengthCriteria(\n                generation_config.max_length,\n                this.config.max_position_embeddings ?? null,\n            ));\n        }\n        // if (generation_config.max_time !== null) {\n        //     criteria.push(new MaxTimeCriteria(generation_config.max_time));\n        // }\n        if (generation_config.eos_token_id !== null) {\n            criteria.push(new _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_12__.EosTokenCriteria(generation_config.eos_token_id));\n        }\n\n        if (stopping_criteria) {\n            criteria.extend(stopping_criteria);\n        }\n        return criteria;\n\n    }\n\n    /**\n     * Confirms that the model class is compatible with generation.\n     * If not, raises an exception that points to the right class to use.\n     */\n    _validate_model_class() {\n        if (!this.can_generate) {\n            const generate_compatible_mappings = [\n                MODEL_FOR_CAUSAL_LM_MAPPING_NAMES,\n                // MODEL_FOR_CAUSAL_IMAGE_MODELING_MAPPING, // TODO\n                MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES,\n                MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES,\n                MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES,\n            ];\n\n            const modelName = MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor);\n\n            const generate_compatible_classes = new Set();\n            const modelType = this.config.model_type;\n            for (const model_mapping of generate_compatible_mappings) {\n                const supported_models = model_mapping.get(modelType);\n                if (supported_models) {\n                    generate_compatible_classes.add(supported_models[0]);\n                }\n            }\n\n            let errorMessage = `The current model class (${modelName}) is not compatible with \\`.generate()\\`, as it doesn't have a language model head.`\n            if (generate_compatible_classes.size > 0) {\n                errorMessage += ` Please use the following class instead: ${[...generate_compatible_classes].join(', ')}`;\n            }\n            throw Error(errorMessage);\n        }\n    }\n\n    prepare_inputs_for_generation(...args) {\n        return this._prepare_inputs_for_generation(this, ...args);\n    }\n\n    /**\n     * \n     * @param {Object} inputs\n     * @param {bigint[][]} inputs.generated_input_ids\n     * @param {Object} inputs.outputs\n     * @param {Object} inputs.model_inputs\n     * @param {boolean} inputs.is_encoder_decoder\n     * @returns {Object} The updated model inputs for the next generation iteration.\n     */\n    _update_model_kwargs_for_generation({ generated_input_ids, outputs, model_inputs, is_encoder_decoder }) {\n        // update past_key_values\n        model_inputs['past_key_values'] = this.getPastKeyValues(outputs, model_inputs.past_key_values);\n\n        // update inputs for next run\n        model_inputs['input_ids'] = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', generated_input_ids.flat(), [generated_input_ids.length, 1]);\n\n        if (!is_encoder_decoder) {\n            // update attention mask\n            model_inputs.attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)(\n                [\n                    model_inputs.attention_mask,\n                    (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([model_inputs.attention_mask.dims[0], 1]),\n                ], 1\n            );\n        } else if ('decoder_attention_mask' in model_inputs) {\n            // TODO: update decoder attention mask if the model requires it\n        }\n\n        // force recreate position_ids in next iteration\n        model_inputs['position_ids'] = null;\n\n        return model_inputs;\n    }\n\n    /**\n     * This function extracts the model-specific `inputs` for generation.\n     * @param {Object} params\n     * @param {Tensor} [params.inputs=null]\n     * @param {number} [params.bos_token_id=null]\n     * @param {Record<string, Tensor|number[]>} [params.model_kwargs]\n     * @returns {{inputs_tensor: Tensor, model_inputs: Record<string, Tensor>, model_input_name: string}} The model-specific inputs for generation.\n     */\n    _prepare_model_inputs({ inputs, bos_token_id, model_kwargs }) {\n        const model_inputs = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(model_kwargs, this.forward_params);\n        const input_name = this.main_input_name;\n        if (input_name in model_inputs) {\n            if (inputs) {\n                throw new Error(\n                    \"`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. \" +\n                    \"Make sure to either pass {inputs} or {input_name}=...\"\n                );\n            }\n        } else {\n            model_inputs[input_name] = inputs;\n        }\n\n        const inputs_tensor = model_inputs[input_name];\n\n        return { inputs_tensor, model_inputs, model_input_name: input_name };\n    }\n\n    async _prepare_encoder_decoder_kwargs_for_generation({ inputs_tensor, model_inputs, model_input_name, generation_config }) {\n        if (\n            this.sessions['model'].inputNames.includes('inputs_embeds')\n            && !model_inputs.inputs_embeds\n            && '_prepare_inputs_embeds' in this\n        ) {\n            // Encoder expects `inputs_embeds` instead of `input_ids`\n            const { input_ids, pixel_values, attention_mask, ...kwargs } = model_inputs;\n            // @ts-ignore\n            const prepared_inputs = await this._prepare_inputs_embeds(model_inputs);\n            model_inputs = {\n                ...kwargs,\n                ...(0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(prepared_inputs, ['inputs_embeds', 'attention_mask']),\n            };\n        }\n        let { last_hidden_state } = await encoderForward(this, model_inputs);\n\n        // for classifier free guidance we need to add a 'null' input to our encoder hidden states\n        if (generation_config.guidance_scale !== null && generation_config.guidance_scale > 1) {\n\n            last_hidden_state = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                last_hidden_state,\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.full_like)(last_hidden_state, 0.0),\n            ], 0);\n\n            if ('attention_mask' in model_inputs) {\n                model_inputs['attention_mask'] = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                    model_inputs['attention_mask'],\n                    (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.zeros_like)(model_inputs['attention_mask']),\n                ], 0);\n            }\n\n        } else if (model_inputs.decoder_input_ids) {\n            // Ensure that the encoder outputs have the same batch size as the decoder inputs,\n            // allowing for more efficient batched generation for single inputs\n            const decoder_input_ids_batch_size = toI64Tensor(model_inputs.decoder_input_ids).dims[0];\n            if (decoder_input_ids_batch_size !== last_hidden_state.dims[0]) {\n                if (last_hidden_state.dims[0] !== 1) {\n                    throw new Error(\n                        `The encoder outputs have a different batch size (${last_hidden_state.dims[0]}) than the decoder inputs (${decoder_input_ids_batch_size}).`\n                    )\n                }\n                last_hidden_state = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)(Array.from({ length: decoder_input_ids_batch_size }, () => last_hidden_state), 0);\n            }\n        }\n        model_inputs['encoder_outputs'] = last_hidden_state;\n\n        return model_inputs;\n    }\n\n    /**\n     * Prepares `decoder_input_ids` for generation with encoder-decoder models\n     * @param {*} param0 \n     */\n    _prepare_decoder_input_ids_for_generation({ batch_size, model_input_name, model_kwargs, decoder_start_token_id, bos_token_id, generation_config }) {\n        let { decoder_input_ids, ...model_inputs } = model_kwargs;\n\n        // Prepare input ids if the user has not defined `decoder_input_ids` manually.\n        if (!(decoder_input_ids instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor)) {\n            if (!decoder_input_ids) {\n                decoder_start_token_id ??= bos_token_id;\n\n                if (this.config.model_type === 'musicgen') {\n                    // Custom logic (TODO: move to Musicgen class)\n                    decoder_input_ids = Array.from({\n                        // @ts-expect-error TS2339\n                        length: batch_size * this.config.decoder.num_codebooks\n                    }, () => [decoder_start_token_id]);\n\n                } else if (Array.isArray(decoder_start_token_id)) {\n                    if (decoder_start_token_id.length !== batch_size) {\n                        throw new Error(\n                            `\\`decoder_start_token_id\\` expcted to have length ${batch_size} but got ${decoder_start_token_id.length}`\n                        )\n                    }\n                    decoder_input_ids = decoder_start_token_id;\n                } else {\n                    decoder_input_ids = Array.from({\n                        length: batch_size,\n                    }, () => [decoder_start_token_id]);\n                }\n            } else if (!Array.isArray(decoder_input_ids[0])) {\n                // Correct batch size\n                decoder_input_ids = Array.from({\n                    length: batch_size,\n                }, () => decoder_input_ids);\n            }\n            decoder_input_ids = toI64Tensor(decoder_input_ids);\n        }\n\n        model_kwargs['decoder_attention_mask'] = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones_like)(decoder_input_ids);\n\n        return { input_ids: decoder_input_ids, model_inputs };\n    }\n\n    /**\n     * Generates sequences of token ids for models with a language modeling head.\n     * @param {import('./generation/parameters.js').GenerationFunctionParameters} options\n     * @returns {Promise<ModelOutput|Tensor>} The output of the model, which can contain the generated token ids, attentions, and scores.\n     */\n    async generate({\n        inputs = null,\n        generation_config = null,\n        logits_processor = null,\n        stopping_criteria = null,\n        streamer = null,\n\n        // inputs_attention_mask = null,\n        ...kwargs\n    }) {\n        this._validate_model_class();\n\n        // Update generation config with defaults and kwargs\n        generation_config = this._prepare_generation_config(generation_config, kwargs);\n\n        // 3. Define model inputs\n        let { inputs_tensor, model_inputs, model_input_name } = this._prepare_model_inputs({\n            inputs,\n            model_kwargs: kwargs,\n        });\n\n        const is_encoder_decoder = this.config.is_encoder_decoder;\n\n        // 4. Define other model kwargs\n        if (!is_encoder_decoder) {\n            // decoder-only models should use left-padding for generation\n        } else if (!('encoder_outputs' in model_inputs)) {\n            // if model is encoder decoder encoder_outputs are created\n            // and added to `model_kwargs`\n            model_inputs = await this._prepare_encoder_decoder_kwargs_for_generation(\n                { inputs_tensor, model_inputs, model_input_name, generation_config }\n            )\n        }\n\n        // 5. Prepare `input_ids` which will be used for auto-regressive generation\n        // TODO: Update to align with HF transformers' implementation\n        let input_ids;\n        if (is_encoder_decoder) {\n            // Generating from the encoder outputs\n            ({ input_ids, model_inputs } = this._prepare_decoder_input_ids_for_generation({\n                batch_size: model_inputs[model_input_name].dims.at(0),\n                model_input_name,\n                model_kwargs: model_inputs,\n                decoder_start_token_id: generation_config.decoder_start_token_id,\n                bos_token_id: generation_config.bos_token_id,\n                generation_config,\n            }));\n        } else {\n            input_ids = model_inputs[model_input_name]\n        }\n\n        // 6. Prepare `max_length` depending on other stopping criteria.\n        let input_ids_length = input_ids.dims.at(-1);\n\n        if (generation_config.max_new_tokens !== null) {\n            generation_config.max_length = input_ids_length + generation_config.max_new_tokens;\n        }\n\n        // input_ids_length = model_inputs[model_input_name].dims.at(1);\n        // // inputs instanceof Tensor ?  : inputs.length;\n\n        // // decoder-only\n        // if (input_ids_length === 0) {\n        //     throw Error(\"Must supply a non-empty array of input token ids.\")\n        // }\n\n        // let decoder_input_ids =\n        // generation_config.decoder_input_ids\n        // ?? generation_config.decoder_start_token_id\n        // ?? generation_config.bos_token_id\n        // ?? generation_config.eos_token_id;\n\n        // Update logits processor\n        // 8. prepare distribution pre_processing samplers\n        const prepared_logits_processor = this._get_logits_processor(\n            generation_config,\n            input_ids_length,\n            logits_processor,\n        )\n\n        // 9. prepare stopping criteria\n        const prepared_stopping_criteria = this._get_stopping_criteria(\n            generation_config, stopping_criteria\n        )\n\n        // /** @type {number[]} */\n        // let eos_token_ids = generation_config.eos_token_id;\n        // if (eos_token_ids !== null && !Array.isArray(eos_token_ids)) {\n        //     eos_token_ids = [eos_token_ids];\n        // }\n\n        const numInputs = model_inputs[model_input_name].dims.at(0);\n\n        // TODO:\n        // done is a list of booleans to keep track of which inputs are done\n        // const done = new Array(numInputs).fill(false);\n        // For efficiency purposes, we remove completed rows from model_inputs\n        // when the beam is complete, and we keep track of the row index\n        // const rowIndexToBatchIndex = new Map();\n\n        const sampler = _generation_logits_sampler_js__WEBPACK_IMPORTED_MODULE_13__.LogitsSampler.getSampler(generation_config);\n\n        // TODO make > numInputs\n        const scores = new Array(numInputs).fill(0);\n        /** @type {bigint[][]} */\n        const all_input_ids = input_ids.tolist();\n        if (streamer) {\n            streamer.put(all_input_ids);\n        }\n        // const all_generated_input_ids = Array.from({ length: numInputs }, () => []);\n\n        // NOTE: For now, we don't support spawning new beams\n        // TODO: when we do, we simply copy past key values and accumulate into single large tensor\n\n        ////////////////////////////////////////////////////\n        // Generic search which handles 4 generation modes:\n        // - GenerationMode.GREEDY_SEARCH\n        // - GenerationMode.SAMPLE\n        // - GenerationMode.BEAM_SEARCH\n        // - GenerationMode.BEAM_SAMPLE\n        ////////////////////////////////////////////////////\n        let outputs;\n        let attentions = {};\n        while (true) {\n            // prepare model inputs\n            model_inputs = this.prepare_inputs_for_generation(all_input_ids, model_inputs, generation_config);\n            outputs = await this.forward(model_inputs);\n\n            if (generation_config.output_attentions && generation_config.return_dict_in_generate) {\n                // Get attentions if they are present\n                const token_attentions = this.getAttentions(outputs);\n                for (const key in token_attentions) {\n                    if (!(key in attentions)) {\n                        attentions[key] = [];\n                    }\n                    attentions[key].push(token_attentions[key]);\n                }\n            }\n\n            // Logits are of the form [batch_size, out_seq_length, vocab_size]\n            // In most cases, this will be [batch_size, 1, vocab_size]\n            // So, we select the last token's logits:\n            // (equivalent to `logits = outputs.logits[:, -1, :]`)\n            const logits = outputs.logits.slice(null, -1, null);\n\n            const next_tokens_scores = prepared_logits_processor(all_input_ids, logits);\n\n            /** @type {[bigint][]} */\n            const generated_input_ids = [];\n            // const new_kv_cache = [];// NOTE: Only used for beam search when concatenating new kv\n            // Loop over each batch\n            for (let batch_idx = 0; batch_idx < next_tokens_scores.dims.at(0); ++batch_idx) {\n                const logs = next_tokens_scores[batch_idx];\n\n                const sampledTokens = await sampler(logs);\n                for (const [newTokenId, logProb] of sampledTokens) {\n                    const bigint = BigInt(newTokenId);\n                    // TODO: If branching, use previous beam as a starting point\n                    // update generated ids, model inputs, and length for next step\n                    scores[batch_idx] += logProb;\n                    all_input_ids[batch_idx].push(bigint);\n                    generated_input_ids.push([bigint]);\n\n                    // TODO: Support beam search\n                    break;\n                }\n            }\n            if (streamer) {\n                streamer.put(generated_input_ids);\n            }\n\n            const stop = prepared_stopping_criteria(all_input_ids);\n            if (stop.every(x => x)) {\n                break;\n            }\n\n            model_inputs = this._update_model_kwargs_for_generation({\n                generated_input_ids, outputs, model_inputs, is_encoder_decoder,\n            });\n        }\n\n        if (streamer) {\n            streamer.end();\n        }\n\n        // Retrieve and dispose all final past key values (including encoder attentions)\n        const past_key_values = this.getPastKeyValues(outputs, model_inputs.past_key_values, true);\n\n        // TODO: ensure all_input_ids is padded correctly...\n        const sequences = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', all_input_ids.flat(), [all_input_ids.length, all_input_ids[0].length]);\n\n        if (generation_config.return_dict_in_generate) {\n            return {\n                sequences,\n                past_key_values,\n                ...attentions,\n                // TODO:\n                // scores,\n                // logits,\n            }\n        } else {\n            // Dispose all remaining tensors\n            for (const tensor of Object.values(outputs)) {\n                if (tensor.location === 'gpu-buffer') {\n                    tensor.dispose();\n                }\n            }\n            return sequences;\n        }\n    }\n\n    /**\n     * Returns an object containing past key values from the given decoder results object.\n     *\n     * @param {Object} decoderResults The decoder results object.\n     * @param {Object} pastKeyValues The previous past key values.\n     * @returns {Object} An object containing past key values.\n     */\n    getPastKeyValues(decoderResults, pastKeyValues, disposeEncoderPKVs = false) {\n        const pkvs = Object.create(null);\n\n        for (const name in decoderResults) {\n            if (name.startsWith('present')) {\n                const newName = name.replace('present', 'past_key_values');\n                const is_encoder_pkv = name.includes('encoder');\n                if (is_encoder_pkv && pastKeyValues) {\n                    // Optimization introduced by optimum to reuse past key values.\n                    // So, we just replace the constant outputs (`decoderResults[name]`) with the previous past key values.\n                    // https://github.com/huggingface/optimum/blob/0bf2c05fb7e1182b52d21b703cfc95fd9e4ea3dc/optimum/onnxruntime/base.py#L677-L704\n                    pkvs[newName] = pastKeyValues[newName];\n                } else { // decoder or using first encoder PKVs\n                    pkvs[newName] = decoderResults[name];\n                }\n\n                if (pastKeyValues && (!is_encoder_pkv || disposeEncoderPKVs)) {\n                    // - Always dispose decoder PKVs\n                    // - Only dispose encoder past key values when requested (after generation)\n                    const t = pastKeyValues[newName];\n                    if (t.location === 'gpu-buffer') {\n                        t.dispose();\n                    }\n                }\n            }\n        }\n        return pkvs;\n    }\n\n    /**\n     * Returns an object containing attentions from the given model output object.\n     *\n     * @param {Object} model_output The output of the model.\n     * @returns {{cross_attentions?: Tensor[]}} An object containing attentions.\n     */\n    getAttentions(model_output) {\n        const attentions = {};\n\n        for (const attnName of ['cross_attentions', 'encoder_attentions', 'decoder_attentions']) {\n            for (const name in model_output) {\n                if (name.startsWith(attnName)) {\n                    if (!(attnName in attentions)) {\n                        attentions[attnName] = [];\n                    }\n                    attentions[attnName].push(model_output[name]);\n                }\n            }\n        }\n        return attentions;\n    }\n\n    /**\n     * Adds past key values to the decoder feeds object. If pastKeyValues is null, creates new tensors for past key values.\n     *\n     * @param {Object} decoderFeeds The decoder feeds object to add past key values to.\n     * @param {Object} pastKeyValues An object containing past key values.\n     */\n    addPastKeyValues(decoderFeeds, pastKeyValues) {\n        if (pastKeyValues) {\n            Object.assign(decoderFeeds, pastKeyValues)\n        } else {\n            const session = this.sessions['decoder_model_merged'] ?? this.sessions['model'];\n            const dtype = session?.config?.kv_cache_dtype ?? 'float32';\n            const empty = (dtype === 'float16') ? new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.DataTypeMap.float16() : [];\n\n            const batch_size = (decoderFeeds[this.main_input_name] ?? decoderFeeds.attention_mask)?.dims?.[0] ?? 1;\n            const shapes = (0,_configs_js__WEBPACK_IMPORTED_MODULE_0__.getKeyValueShapes)(this.config, { batch_size });\n\n            for (const name in shapes) {\n                decoderFeeds[name] = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(dtype, empty, shapes[name]);\n            }\n        }\n    }\n\n    async encode_image({ pixel_values }) {\n        // image_inputs === { pixel_values }\n        const features = (await sessionRun(this.sessions['vision_encoder'], { pixel_values })).image_features;\n        // @ts-expect-error TS2339\n        if (!this.config.num_image_tokens) {\n            console.warn(\n                'The number of image tokens was not set in the model configuration. ' +\n                `Setting it to the number of features detected by the vision encoder (${features.dims[1]}).`\n            )\n            // @ts-expect-error TS2339\n            this.config.num_image_tokens = features.dims[1];\n        }\n        return features;\n    }\n\n    async encode_text({ input_ids }) {\n        // text_inputs === { input_ids, attention_mask }\n        return (await sessionRun(this.sessions['embed_tokens'], { input_ids })).inputs_embeds;\n    }\n\n    async encode_audio({ audio_values }) {\n        // audio_inputs === { audio_values }\n        return (await sessionRun(this.sessions['audio_encoder'], { audio_values })).audio_features;\n    }\n}\n\n//////////////////////////////////////////////////\n// Base model output class\nclass ModelOutput { }\n\n/**\n * Base class for model's outputs, with potential hidden states and attentions.\n */\nclass BaseModelOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.last_hidden_state Sequence of hidden-states at the output of the last layer of the model.\n     * @param {Tensor} [output.hidden_states] Hidden-states of the model at the output of each layer plus the optional initial embedding outputs.\n     * @param {Tensor} [output.attentions] Attentions weights after the attention softmax, used to compute the weighted average in the self-attention heads.\n     */\n    constructor({ last_hidden_state, hidden_states = null, attentions = null }) {\n        super();\n        this.last_hidden_state = last_hidden_state;\n        this.hidden_states = hidden_states;\n        this.attentions = attentions;\n    }\n}\n//////////////////////////////////////////////////\n// Bert models\nclass BertPreTrainedModel extends PreTrainedModel { }\nclass BertModel extends BertPreTrainedModel { }\n\n/**\n * BertForMaskedLM is a class representing a BERT model for masked language modeling.\n */\nclass BertForMaskedLM extends BertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * BertForSequenceClassification is a class representing a BERT model for sequence classification.\n */\nclass BertForSequenceClassification extends BertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * BertForTokenClassification is a class representing a BERT model for token classification.\n */\nclass BertForTokenClassification extends BertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * BertForQuestionAnswering is a class representing a BERT model for question answering.\n */\nclass BertForQuestionAnswering extends BertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// ModernBert models\nclass ModernBertPreTrainedModel extends PreTrainedModel { }\nclass ModernBertModel extends ModernBertPreTrainedModel { }\n\nclass ModernBertForMaskedLM extends ModernBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\nclass ModernBertForSequenceClassification extends ModernBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\nclass ModernBertForTokenClassification extends ModernBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// NomicBert models\nclass NomicBertPreTrainedModel extends PreTrainedModel { }\nclass NomicBertModel extends NomicBertPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// RoFormer models\nclass RoFormerPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare RoFormer Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass RoFormerModel extends RoFormerPreTrainedModel { }\n\n/**\n * RoFormer Model with a `language modeling` head on top.\n */\nclass RoFormerForMaskedLM extends RoFormerPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RoFormer Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass RoFormerForSequenceClassification extends RoFormerPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RoFormer Model with a token classification head on top (a linear layer on top of the hidden-states output)\n * e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass RoFormerForTokenClassification extends RoFormerPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RoFormer Model with a span classification head on top for extractive question-answering tasks like SQuAD\n * (a linear layers on top of the hidden-states output to compute `span start logits` and `span end logits`).\n */\nclass RoFormerForQuestionAnswering extends RoFormerPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n// TODO: Add RoFormerForCausalLM and RoFormerForMultipleChoice\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// ConvBert models\nclass ConvBertPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare ConvBERT Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass ConvBertModel extends ConvBertPreTrainedModel { }\n\n/**\n * ConvBERT Model with a language modeling head on top.\n */\nclass ConvBertForMaskedLM extends ConvBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ConvBERT Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass ConvBertForSequenceClassification extends ConvBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ConvBERT Model with a token classification head on top (a linear layer on top of the hidden-states output)\n * e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass ConvBertForTokenClassification extends ConvBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ConvBERT Model with a span classification head on top for extractive question-answering tasks like SQuAD\n * (a linear layers on top of the hidden-states output to compute `span start logits` and `span end logits`)\n */\nclass ConvBertForQuestionAnswering extends ConvBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Electra models\nclass ElectraPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Electra Model transformer outputting raw hidden-states without any specific head on top.\n * Identical to the BERT model except that it uses an additional linear layer between the embedding\n * layer and the encoder if the hidden size and embedding size are different.\n */\nclass ElectraModel extends ElectraPreTrainedModel { }\n// TODO add ElectraForPreTraining\n/**\n * Electra model with a language modeling head on top.\n */\nclass ElectraForMaskedLM extends ElectraPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ELECTRA Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass ElectraForSequenceClassification extends ElectraPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * Electra model with a token classification head on top.\n */\nclass ElectraForTokenClassification extends ElectraPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * LECTRA Model with a span classification head on top for extractive question-answering tasks like SQuAD\n * (a linear layers on top of the hidden-states output to compute `span start logits` and `span end logits`).\n */\nclass ElectraForQuestionAnswering extends ElectraPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// CamemBERT models\nclass CamembertPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare CamemBERT Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass CamembertModel extends CamembertPreTrainedModel { }\n\n/**\n * CamemBERT Model with a `language modeling` head on top.\n */\nclass CamembertForMaskedLM extends CamembertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * CamemBERT Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output) e.g. for GLUE tasks.\n */\nclass CamembertForSequenceClassification extends CamembertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * CamemBERT Model with a token classification head on top (a linear layer on top of the hidden-states output) e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass CamembertForTokenClassification extends CamembertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * CamemBERT Model with a span classification head on top for extractive question-answering tasks\n */\nclass CamembertForQuestionAnswering extends CamembertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// DeBERTa models\nclass DebertaPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare DeBERTa Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass DebertaModel extends DebertaPreTrainedModel { }\n\n/**\n * DeBERTa Model with a `language modeling` head on top.\n */\nclass DebertaForMaskedLM extends DebertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass DebertaForSequenceClassification extends DebertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa Model with a token classification head on top (a linear layer on top of the hidden-states output) e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass DebertaForTokenClassification extends DebertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa Model with a span classification head on top for extractive question-answering tasks like SQuAD (a linear\n * layers on top of the hidden-states output to compute `span start logits` and `span end logits`).\n */\nclass DebertaForQuestionAnswering extends DebertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// DeBERTa-v2 models\nclass DebertaV2PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare DeBERTa-V2 Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass DebertaV2Model extends DebertaV2PreTrainedModel { }\n\n/**\n * DeBERTa-V2 Model with a `language modeling` head on top.\n */\nclass DebertaV2ForMaskedLM extends DebertaV2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa-V2 Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass DebertaV2ForSequenceClassification extends DebertaV2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa-V2 Model with a token classification head on top (a linear layer on top of the hidden-states output) e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass DebertaV2ForTokenClassification extends DebertaV2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DeBERTa-V2 Model with a span classification head on top for extractive question-answering tasks like SQuAD (a linear\n * layers on top of the hidden-states output to compute `span start logits` and `span end logits`).\n */\nclass DebertaV2ForQuestionAnswering extends DebertaV2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// DistilBert models\nclass DistilBertPreTrainedModel extends PreTrainedModel { }\nclass DistilBertModel extends DistilBertPreTrainedModel { }\n\n/**\n * DistilBertForSequenceClassification is a class representing a DistilBERT model for sequence classification.\n */\nclass DistilBertForSequenceClassification extends DistilBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DistilBertForTokenClassification is a class representing a DistilBERT model for token classification.\n */\nclass DistilBertForTokenClassification extends DistilBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n\n/**\n * DistilBertForQuestionAnswering is a class representing a DistilBERT model for question answering.\n */\nclass DistilBertForQuestionAnswering extends DistilBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * DistilBertForMaskedLM is a class representing a DistilBERT model for masking task.\n */\nclass DistilBertForMaskedLM extends DistilBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// ESM models\nclass EsmPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare ESM Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass EsmModel extends EsmPreTrainedModel { }\n\n/**\n * ESM Model with a `language modeling` head on top.\n */\nclass EsmForMaskedLM extends EsmPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ESM Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass EsmForSequenceClassification extends EsmPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * ESM Model with a token classification head on top (a linear layer on top of the hidden-states output)\n * e.g. for Named-Entity-Recognition (NER) tasks.\n */\nclass EsmForTokenClassification extends EsmPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// MobileBert models\nclass MobileBertPreTrainedModel extends PreTrainedModel { }\nclass MobileBertModel extends MobileBertPreTrainedModel { }\n\n/**\n * MobileBertForMaskedLM is a class representing a MobileBERT model for masking task.\n */\nclass MobileBertForMaskedLM extends MobileBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * MobileBert Model transformer with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass MobileBertForSequenceClassification extends MobileBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * MobileBert Model with a span classification head on top for extractive question-answering tasks\n */\nclass MobileBertForQuestionAnswering extends MobileBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MPNet models\nclass MPNetPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare MPNet Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass MPNetModel extends MPNetPreTrainedModel { }\n\n/**\n * MPNetForMaskedLM is a class representing a MPNet model for masked language modeling.\n */\nclass MPNetForMaskedLM extends MPNetPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} An object containing the model's output logits for masked language modeling.\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * MPNetForSequenceClassification is a class representing a MPNet model for sequence classification.\n */\nclass MPNetForSequenceClassification extends MPNetPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * MPNetForTokenClassification is a class representing a MPNet model for token classification.\n */\nclass MPNetForTokenClassification extends MPNetPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * MPNetForQuestionAnswering is a class representing a MPNet model for question answering.\n */\nclass MPNetForQuestionAnswering extends MPNetPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} An object containing the model's output logits for question answering.\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// SqueezeBert models\nclass SqueezeBertPreTrainedModel extends PreTrainedModel { }\nclass SqueezeBertModel extends SqueezeBertPreTrainedModel { }\nclass SqueezeBertForMaskedLM extends SqueezeBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\nclass SqueezeBertForSequenceClassification extends SqueezeBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass SqueezeBertForQuestionAnswering extends SqueezeBertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Albert models\nclass AlbertPreTrainedModel extends PreTrainedModel { }\nclass AlbertModel extends AlbertPreTrainedModel { }\nclass AlbertForSequenceClassification extends AlbertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass AlbertForQuestionAnswering extends AlbertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\nclass AlbertForMaskedLM extends AlbertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// T5 models\nclass T5PreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        'attention_mask',\n        'encoder_outputs',\n        'decoder_input_ids',\n        'decoder_attention_mask',\n        'past_key_values',\n    ];\n};\n\nclass T5Model extends T5PreTrainedModel { }\n\n/**\n * T5Model is a class representing a T5 model for conditional generation.\n */\nclass T5ForConditionalGeneration extends T5PreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// LONGT5 models\n/**\n * An abstract class to handle weights initialization and a simple interface for downloading and loading pretrained models.\n */\nclass LongT5PreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare LONGT5 Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass LongT5Model extends LongT5PreTrainedModel { }\n\n/**\n * LONGT5 Model with a `language modeling` head on top.\n */\nclass LongT5ForConditionalGeneration extends LongT5PreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// MT5 models\nclass MT5PreTrainedModel extends PreTrainedModel { };\n\nclass MT5Model extends MT5PreTrainedModel { }\n\n/**\n * A class representing a conditional sequence-to-sequence model based on the MT5 architecture.\n */\nclass MT5ForConditionalGeneration extends MT5PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Bart models\nclass BartPretrainedModel extends PreTrainedModel { };\n\n/**\n * The bare BART Model outputting raw hidden-states without any specific head on top.\n */\nclass BartModel extends BartPretrainedModel { }\n\n/**\n * The BART Model with a language modeling head. Can be used for summarization.\n */\nclass BartForConditionalGeneration extends BartPretrainedModel { }\n\n/**\n * Bart model with a sequence classification/head on top (a linear layer on top of the pooled output)\n */\nclass BartForSequenceClassification extends BartPretrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MBart models\nclass MBartPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare MBART Model outputting raw hidden-states without any specific head on top.\n */\nclass MBartModel extends MBartPreTrainedModel { }\n\n/**\n * The MBART Model with a language modeling head. Can be used for summarization, after fine-tuning the pretrained models.\n */\nclass MBartForConditionalGeneration extends MBartPreTrainedModel { }\n\n/**\n * MBart model with a sequence classification/head on top (a linear layer on top of the pooled output).\n */\nclass MBartForSequenceClassification extends MBartPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n\nclass MBartForCausalLM extends MBartPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Blenderbot models\nclass BlenderbotPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare Blenderbot Model outputting raw hidden-states without any specific head on top.\n */\nclass BlenderbotModel extends BlenderbotPreTrainedModel { }\n\n/**\n * The Blenderbot Model with a language modeling head. Can be used for summarization.\n */\nclass BlenderbotForConditionalGeneration extends BlenderbotPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Blenderbot models\nclass BlenderbotSmallPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare BlenderbotSmall Model outputting raw hidden-states without any specific head on top.\n */\nclass BlenderbotSmallModel extends BlenderbotSmallPreTrainedModel { }\n\n/**\n * The BlenderbotSmall Model with a language modeling head. Can be used for summarization.\n */\nclass BlenderbotSmallForConditionalGeneration extends BlenderbotSmallPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Roberta models\nclass RobertaPreTrainedModel extends PreTrainedModel { }\nclass RobertaModel extends RobertaPreTrainedModel { }\n\n/**\n * RobertaForMaskedLM class for performing masked language modeling on Roberta models.\n */\nclass RobertaForMaskedLM extends RobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RobertaForSequenceClassification class for performing sequence classification on Roberta models.\n */\nclass RobertaForSequenceClassification extends RobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RobertaForTokenClassification class for performing token classification on Roberta models.\n */\nclass RobertaForTokenClassification extends RobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * RobertaForQuestionAnswering class for performing question answering on Roberta models.\n */\nclass RobertaForQuestionAnswering extends RobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// XLM models\n/**\n * An abstract class to handle weights initialization and a simple interface for downloading and loading pretrained models.\n */\nclass XLMPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare XLM Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass XLMModel extends XLMPreTrainedModel { }\n\n/**\n * The XLM Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass XLMWithLMHeadModel extends XLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLM Model with a sequence classification/regression head on top (a linear layer on top of the pooled output)\n */\nclass XLMForSequenceClassification extends XLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLM Model with a token classification head on top (a linear layer on top of the hidden-states output)\n */\nclass XLMForTokenClassification extends XLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLM Model with a span classification head on top for extractive question-answering tasks\n */\nclass XLMForQuestionAnswering extends XLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// XLMRoberta models\nclass XLMRobertaPreTrainedModel extends PreTrainedModel { }\nclass XLMRobertaModel extends XLMRobertaPreTrainedModel { }\n\n/**\n * XLMRobertaForMaskedLM class for performing masked language modeling on XLMRoberta models.\n */\nclass XLMRobertaForMaskedLM extends XLMRobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<MaskedLMOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new MaskedLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLMRobertaForSequenceClassification class for performing sequence classification on XLMRoberta models.\n */\nclass XLMRobertaForSequenceClassification extends XLMRobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLMRobertaForTokenClassification class for performing token classification on XLMRoberta models.\n */\nclass XLMRobertaForTokenClassification extends XLMRobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for token classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * XLMRobertaForQuestionAnswering class for performing question answering on XLMRoberta models.\n */\nclass XLMRobertaForQuestionAnswering extends XLMRobertaPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     *\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<QuestionAnsweringModelOutput>} returned object\n     */\n    async _call(model_inputs) {\n        return new QuestionAnsweringModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Audio Spectrogram Transformer (AST) models\nclass ASTPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare AST Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass ASTModel extends ASTPreTrainedModel { }\n\n/**\n * Audio Spectrogram Transformer model with an audio classification head on top\n * (a linear layer on top of the pooled output) e.g. for datasets like AudioSet, Speech Commands v2.\n */\nclass ASTForAudioClassification extends ASTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Whisper models\nclass WhisperPreTrainedModel extends PreTrainedModel {\n\n    requires_attention_mask = false;\n    main_input_name = 'input_features';\n    forward_params = [\n        'input_features',\n        'attention_mask',\n        'decoder_input_ids',\n        'decoder_attention_mask',\n        'past_key_values',\n    ];\n};\n\n/**\n * WhisperModel class for training Whisper models without a language model head.\n */\nclass WhisperModel extends WhisperPreTrainedModel { }\n\n\n/**\n * WhisperForConditionalGeneration class for generating conditional outputs from Whisper models.\n */\nclass WhisperForConditionalGeneration extends WhisperPreTrainedModel {\n\n    _prepare_generation_config(generation_config, kwargs) {\n        return /** @type {WhisperGenerationConfig} */ (super._prepare_generation_config(generation_config, kwargs, _models_whisper_generation_whisper_js__WEBPACK_IMPORTED_MODULE_15__.WhisperGenerationConfig));\n    }\n\n    /**\n     * \n     * @param {WhisperGenerationConfig} generation_config \n     */\n    _retrieve_init_tokens(generation_config) {\n        // prefix tokens are of the form: \n        //  - Multilingual: <|startoftranscript|> <|lang_id|> <|task|> [<|notimestamps|>]\n        //  - English-only: <|startoftranscript|> [<|notimestamps|>]\n\n        // 1. Handle <|startoftranscript|> token\n        const init_tokens = [generation_config.decoder_start_token_id];\n\n        // 2. Handle <|lang_id|> and <|task> tokens\n        let language = generation_config.language;\n        const task = generation_config.task;\n        if (generation_config.is_multilingual) {\n            if (!language) {\n                // TODO: Implement language detection\n                console.warn('No language specified - defaulting to English (en).');\n                language = 'en';\n            }\n\n            // Add language token\n            const language_code = (0,_models_whisper_common_whisper_js__WEBPACK_IMPORTED_MODULE_16__.whisper_language_to_code)(language);\n            const language_token = `<|${language_code}|>`;\n            init_tokens.push(generation_config.lang_to_id[language_token])\n\n            // Add task token\n            // NOTE: Defaults to 'transcribe' if no task is specified\n            init_tokens.push(generation_config.task_to_id[task ?? 'transcribe']);\n\n        } else if (language || task) {\n            throw new Error(\n                \"Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.\"\n            )\n        }\n\n        // 3. Handle <|notimestamps|> token\n        if (\n            !generation_config.return_timestamps\n            && generation_config.no_timestamps_token_id\n            && init_tokens.at(-1) !== generation_config.no_timestamps_token_id\n        ) {\n            init_tokens.push(generation_config.no_timestamps_token_id);\n        } else if (\n            generation_config.return_timestamps\n            &&\n            init_tokens.at(-1) === generation_config.no_timestamps_token_id\n        ) {\n            console.warn(\"<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`.\");\n            init_tokens.pop();\n        }\n\n        // let's make sure we don't pass `null` tokens as prompt tokens\n        return init_tokens.filter(token => token != null);\n    }\n\n    /**\n     * Transcribes or translates log-mel input features to a sequence of auto-regressively generated token ids.\n     * @param {import('./models/whisper/generation_whisper.js').WhisperGenerationFunctionParameters} options\n     * @returns {Promise<ModelOutput|Tensor>} The output of the model, which can contain the generated token ids, attentions, and scores.\n     */\n    async generate({\n        inputs = null,\n        generation_config = null,\n        logits_processor = null,\n        stopping_criteria = null,\n\n        // Whisper-specific options (passed to kwargs)\n        // prompt_ids = null,\n        // language = null,\n        // task = null,\n\n        ...kwargs\n    }) {\n        generation_config = this._prepare_generation_config(generation_config, kwargs);\n\n        const init_tokens = kwargs.decoder_input_ids ?? this._retrieve_init_tokens(generation_config);\n\n        if (generation_config.return_timestamps) {\n            logits_processor ??= new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.LogitsProcessorList();\n            logits_processor.push(\n                new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.WhisperTimeStampLogitsProcessor(generation_config, init_tokens)\n            );\n        }\n\n        if (generation_config.begin_suppress_tokens) {\n            logits_processor ??= new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.LogitsProcessorList();\n            logits_processor.push(\n                new _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_7__.SuppressTokensAtBeginLogitsProcessor(generation_config.begin_suppress_tokens, init_tokens.length)\n            );\n        }\n\n        if (generation_config.return_token_timestamps) {\n            if (!generation_config.alignment_heads) {\n                throw new Error(\n                    \"Model generation config has no `alignment_heads`, token-level timestamps not available. \" +\n                    \"See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.\"\n                )\n            }\n\n            if (generation_config.task === 'translate') {\n                console.warn(\"Token-level timestamps may not be reliable for task 'translate'.\")\n            }\n\n            generation_config.output_attentions = true;\n            generation_config.return_dict_in_generate = true;\n        }\n\n        const outputs = await super.generate({\n            inputs,\n            generation_config,\n            logits_processor,\n            decoder_input_ids: init_tokens,\n            ...kwargs\n        });\n\n        if (generation_config.return_token_timestamps) {\n            outputs[\"token_timestamps\"] = this._extract_token_timestamps(\n                // @ts-expect-error TS2345\n                outputs,\n                generation_config.alignment_heads,\n                generation_config.num_frames,\n            );\n        }\n\n        return outputs;\n    }\n\n    /**\n     * Calculates token-level timestamps using the encoder-decoder cross-attentions and\n     * dynamic time-warping (DTW) to map each output token to a position in the input audio.\n     * If `num_frames` is specified, the encoder-decoder cross-attentions will be cropped before applying DTW.\n     * @param {Object} generate_outputs Outputs generated by the model\n     * @param {Tensor[][]} generate_outputs.cross_attentions The cross attentions output by the model\n     * @param {Tensor} generate_outputs.sequences The sequences output by the model\n     * @param {number[][]} alignment_heads Alignment heads of the model\n     * @param {number} [num_frames=null] Number of frames in the input audio.\n     * @param {number} [time_precision=0.02] Precision of the timestamps in seconds\n     * @returns {Tensor} tensor containing the timestamps in seconds for each predicted token\n     */\n    _extract_token_timestamps(generate_outputs, alignment_heads, num_frames = null, time_precision = 0.02) {\n        if (!generate_outputs.cross_attentions) {\n            throw new Error(\n                \"Model outputs must contain cross attentions to extract timestamps. \" +\n                \"This is most likely because the model was not exported with `output_attentions=True`.\"\n            )\n        }\n        if (num_frames == null) {\n            console.warn(\n                \"`num_frames` has not been set, meaning the entire audio will be analyzed. \" +\n                \"This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).\"\n            );\n        }\n\n        // @ts-expect-error TS2339\n        let median_filter_width = this.config.median_filter_width;\n        if (median_filter_width === undefined) {\n            console.warn(\"Model config has no `median_filter_width`, using default value of 7.\")\n            median_filter_width = 7;\n        }\n\n        // TODO: Improve batch processing\n        const batch = generate_outputs.cross_attentions;\n        // Create a list with `decoder_layers` elements, each a tensor of shape\n        // (batch size, attention_heads, output length, input length).\n        // @ts-expect-error TS2339\n        const cross_attentions = Array.from({ length: this.config.decoder_layers },\n            // Concatenate the cross attentions for each layer across sequence length dimension.\n            (_, i) => (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)(batch.map(x => x[i]), 2)\n        );\n\n        const weights = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.stack)(alignment_heads.map(([l, h]) => {\n            if (l >= cross_attentions.length) {\n                throw new Error(`Layer index ${l} is out of bounds for cross attentions (length ${cross_attentions.length}).`)\n            }\n            return num_frames\n                ? cross_attentions[l].slice(null, h, null, [0, num_frames])\n                : cross_attentions[l].slice(null, h);\n        })).transpose(1, 0, 2, 3);\n\n        const [std, calculatedMean] = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.std_mean)(weights, -2, 0, true);\n\n        // Normalize and smoothen the weights.\n        const smoothedWeights = weights.clone(); // [1, 8, seqLength, 1500]\n\n        for (let a = 0; a < smoothedWeights.dims[0]; ++a) {\n            const aTensor = smoothedWeights[a]; // [8, seqLength, 1500]\n\n            for (let b = 0; b < aTensor.dims[0]; ++b) {\n                const bTensor = aTensor[b]; // [seqLength, 1500]\n\n                const stdTensorData = std[a][b][0].data; // [1500]\n                const meanTensorData = calculatedMean[a][b][0].data; // [1500]\n\n                for (let c = 0; c < bTensor.dims[0]; ++c) {\n\n                    let cTensorData = bTensor[c].data; // [1500]\n                    for (let d = 0; d < cTensorData.length; ++d) {\n                        cTensorData[d] = (cTensorData[d] - meanTensorData[d]) / stdTensorData[d]\n                    }\n\n                    // Apply median filter.\n                    cTensorData.set((0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.medianFilter)(cTensorData, median_filter_width))\n                }\n            }\n        }\n\n        // Average the different cross-attention heads.\n        const batchedMatrices = [(0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.mean)(smoothedWeights, 1)];\n\n        const timestampsShape = generate_outputs.sequences.dims;\n\n        const timestamps = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n            'float32',\n            new Float32Array(timestampsShape[0] * timestampsShape[1]),\n            timestampsShape\n        );\n\n        // Perform dynamic time warping on each element of the batch.\n        for (let batch_idx = 0; batch_idx < timestampsShape[0]; ++batch_idx) {\n            // NOTE: Since we run only one batch at a time, we can squeeze to get the same dimensions\n            // as the python implementation\n            const matrix = batchedMatrices[batch_idx].neg().squeeze_(0);\n            const [text_indices, time_indices] = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.dynamic_time_warping)(matrix.tolist());\n\n            const diffs = Array.from({ length: text_indices.length - 1 }, (v, i) => text_indices[i + 1] - text_indices[i]);\n            const jumps = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.mergeArrays)([1], diffs).map(x => !!x); // convert to boolean\n\n            const jump_times = [];\n            for (let i = 0; i < jumps.length; ++i) {\n                if (jumps[i]) {\n                    // NOTE: No point in rounding here, since we set to Float32Array later\n                    jump_times.push(time_indices[i] * time_precision);\n                }\n            }\n            timestamps[batch_idx].data.set(jump_times, 1)\n        }\n\n        return timestamps;\n    }\n}\n//////////////////////////////////////////////////\n\nclass LiteWhisperForConditionalGeneration extends WhisperForConditionalGeneration { }\n\n//////////////////////////////////////////////////\n// Moonshine models\nclass MoonshinePreTrainedModel extends PreTrainedModel {\n\n    requires_attention_mask = false;\n    main_input_name = 'input_values';\n    forward_params = [\n        'input_values',\n        'decoder_input_ids',\n        'past_key_values',\n    ];\n};\n\n/**\n * MoonshineModel class for training Moonshine models without a language model head.\n */\nclass MoonshineModel extends MoonshinePreTrainedModel { }\n\nclass MoonshineForConditionalGeneration extends MoonshinePreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n/**\n * Vision Encoder-Decoder model based on OpenAI's GPT architecture for image captioning and other vision tasks\n */\nclass VisionEncoderDecoderModel extends PreTrainedModel {\n    main_input_name = 'pixel_values';\n    forward_params = [\n        // Encoder inputs\n        'pixel_values',\n\n        // Decoder inpputs\n        'decoder_input_ids',\n        'encoder_hidden_states',\n        'past_key_values',\n    ];\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// LLaVa Models\nclass LlavaPreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        'attention_mask',\n        'pixel_values',\n        'position_ids',\n        'past_key_values',\n    ];\n}\n\n/**\n * The LLAVA model which consists of a vision backbone and a language model.\n */\nclass LlavaForConditionalGeneration extends LlavaPreTrainedModel {\n\n    _merge_input_ids_with_image_features({\n        inputs_embeds,\n        image_features,\n        input_ids,\n        attention_mask,\n    }) {\n\n        // @ts-expect-error TS2339\n        const image_token_index = this.config.image_token_index;\n\n        const idsList = input_ids.tolist();\n\n        // NOTE: we use .findIndex instead of .indexOf to perform weak comparison (==) between BigInt and Number\n        const indexOfImage = idsList.map(x => x.findIndex(x => x == image_token_index));\n\n        const noImages = indexOfImage.every(x => x === -1);\n        const allImages = indexOfImage.every(x => x !== -1);\n        if (!noImages && !allImages) {\n            // Check for padding reasons\n            throw new Error('Every input should contain either 0 or 1 image token.');\n        }\n\n        if (noImages) {\n            return {\n                inputs_embeds,\n                attention_mask,\n            }\n        }\n\n        const stacked = [];\n        const stacked_attention_mask = [];\n        for (let i = 0; i < indexOfImage.length; ++i) {\n            const index = indexOfImage[i];\n\n            const e = inputs_embeds[i];\n            const im = image_features[i];\n            const am = attention_mask[i];\n            stacked.push(\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                    e.slice([0, index]),\n                    im,\n                    e.slice([index + 1, e.dims[0]]),\n                ], 0)\n            );\n\n            stacked_attention_mask.push(\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                    am.slice([0, index]),\n                    (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([im.dims[0]]),\n                    am.slice([index + 1, am.dims[0]])\n                ], 0)\n            )\n        }\n\n        return {\n            inputs_embeds: (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.stack)(stacked, 0),\n            attention_mask: (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.stack)(stacked_attention_mask, 0),\n        }\n    }\n}\n//////////////////////////////////////////////////\n\nclass LlavaOnevisionForConditionalGeneration extends LlavaForConditionalGeneration { } // NOTE: extends LlavaForConditionalGeneration\nclass Moondream1ForConditionalGeneration extends LlavaForConditionalGeneration { } // NOTE: extends LlavaForConditionalGeneration\n\nclass Florence2PreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        // Encoder inputs\n        'input_ids',\n        'inputs_embeds',\n        'attention_mask',\n        'pixel_values',\n\n        // Decoder inputs\n        'encoder_outputs',\n        'decoder_input_ids',\n        'decoder_inputs_embeds',\n        'decoder_attention_mask',\n        'past_key_values',\n    ];\n    main_input_name = 'inputs_embeds';\n}\n\nclass Florence2ForConditionalGeneration extends Florence2PreTrainedModel {\n\n    _merge_input_ids_with_image_features({\n        inputs_embeds,\n        image_features,\n        input_ids,\n        attention_mask,\n    }) {\n        return {\n            inputs_embeds: (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                image_features, // image embeds\n                inputs_embeds, // task prefix embeds\n            ], 1),\n            attention_mask: (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)([\n                (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)(image_features.dims.slice(0, 2)), // image attention mask\n                attention_mask, // task prefix attention mask\n            ], 1),\n        }\n    }\n\n    async _prepare_inputs_embeds({ input_ids, pixel_values, inputs_embeds, attention_mask }) {\n        if (!input_ids && !pixel_values) {\n            throw new Error('Either `input_ids` or `pixel_values` should be provided.');\n        }\n\n        // 1. Possibly, extract the input embeddings\n        let text_features, image_features;\n        if (input_ids) {\n            text_features = await this.encode_text({ input_ids });\n        }\n        if (pixel_values) {\n            image_features = await this.encode_image({ pixel_values });\n        }\n\n        // 2. Possibly, merge text and images\n        if (text_features && image_features) {\n            ({ inputs_embeds, attention_mask } = this._merge_input_ids_with_image_features({\n                inputs_embeds: text_features,\n                image_features,\n                input_ids,\n                attention_mask,\n            }));\n        } else {\n            inputs_embeds = text_features || image_features;\n        }\n\n        return { inputs_embeds, attention_mask };\n    }\n\n    async forward({\n        input_ids,\n        pixel_values,\n        attention_mask,\n        decoder_input_ids,\n        decoder_attention_mask,\n        encoder_outputs,\n        past_key_values,\n\n        inputs_embeds,\n        decoder_inputs_embeds,\n    }) {\n        if (!inputs_embeds) {\n            ({ inputs_embeds, attention_mask } = await this._prepare_inputs_embeds({ input_ids, pixel_values, inputs_embeds, attention_mask }));\n        }\n\n        if (!encoder_outputs) {\n            // Must compute encoder outputs\n            let { last_hidden_state } = await encoderForward(this, { inputs_embeds, attention_mask });\n            encoder_outputs = last_hidden_state;\n        }\n\n        if (!decoder_inputs_embeds) {\n            if (!decoder_input_ids) {\n                throw new Error('Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.');\n            }\n            decoder_inputs_embeds = await this.encode_text({ input_ids: decoder_input_ids });\n        }\n\n        const decoderFeeds = {\n            inputs_embeds: decoder_inputs_embeds,\n            attention_mask: decoder_attention_mask,\n            encoder_attention_mask: attention_mask,\n            encoder_hidden_states: encoder_outputs,\n            past_key_values,\n        };\n        const decoder_outputs = await decoderForward(this, decoderFeeds, true);\n        return decoder_outputs;\n    }\n}\n\nclass PaliGemmaPreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        // 'inputs_embeds',\n        'attention_mask',\n        'pixel_values',\n        'position_ids',\n        'past_key_values',\n    ];\n}\n\nclass PaliGemmaForConditionalGeneration extends PaliGemmaPreTrainedModel {\n    _merge_input_ids_with_image_features(kwargs) {\n        const vision_hidden_size = kwargs.image_features.dims.at(-1);\n        const reshaped_image_hidden_states = kwargs.image_features.view(-1, vision_hidden_size);\n\n        return default_merge_input_ids_with_image_features({\n            // @ts-ignore\n            image_token_id: this.config.image_token_index,\n            ...kwargs,\n            image_features: reshaped_image_hidden_states,\n        })\n    }\n}\n\n//////////////////////////////////////////////////\n// Idefics3 Models\nclass Idefics3PreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        'attention_mask',\n        'pixel_values',\n        'pixel_attention_mask',\n        'position_ids',\n        'past_key_values',\n    ];\n}\n\n/**\n * The Idefics3 model which consists of a vision backbone and a language model.\n */\nclass Idefics3ForConditionalGeneration extends Idefics3PreTrainedModel {\n\n    async encode_image({ pixel_values, pixel_attention_mask }) {\n        const features = (await sessionRun(this.sessions['vision_encoder'], { pixel_values, pixel_attention_mask })).image_features;\n        return features;\n    }\n\n    _merge_input_ids_with_image_features(kwargs) {\n        const vision_hidden_size = kwargs.image_features.dims.at(-1);\n        const reshaped_image_hidden_states = kwargs.image_features.view(-1, vision_hidden_size);\n\n        return default_merge_input_ids_with_image_features({\n            // @ts-ignore\n            image_token_id: this.config.image_token_id,\n            ...kwargs,\n            image_features: reshaped_image_hidden_states,\n        })\n    }\n}\n//////////////////////////////////////////////////\n\n/**\n * The SmolVLM Model with a language modeling head.\n * It is made up a SigLIP vision encoder, with a language modeling head on top.\n */\nclass SmolVLMForConditionalGeneration extends Idefics3ForConditionalGeneration { }\n\n//////////////////////////////////////////////////\nclass Phi3VPreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        'inputs_embeds',\n        'attention_mask',\n        'position_ids',\n        'pixel_values',\n        'image_sizes',\n        'past_key_values',\n    ];\n}\nclass Phi3VForCausalLM extends Phi3VPreTrainedModel {\n\n    async forward({\n        // Produced by the tokenizer/processor:\n        input_ids = null,\n        attention_mask = null,\n        pixel_values = null,\n        image_sizes = null,\n\n        // Used during generation:\n        position_ids = null,\n        inputs_embeds = null,\n        past_key_values = null,\n\n        // Generic generation parameters\n        generation_config = null,\n        logits_processor = null,\n\n        // TODO: needed?\n        ...kwargs\n    }) {\n        if (!inputs_embeds) {\n            let image_features;\n            if (pixel_values && input_ids.dims[1] !== 1) {\n                if (!image_sizes) {\n                    throw new Error('`image_sizes` must be provided when `pixel_values` is provided.');\n                }\n\n                // Encode the image\n                ({ image_features } = await sessionRun(this.sessions['vision_encoder'], {\n                    pixel_values,\n                    image_sizes,\n                }));\n            } else {\n                const hidden_size = this.config.normalized_config.hidden_size;\n                image_features = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n                    'float32',\n                    [],\n                    [0, hidden_size],\n                );\n            }\n\n            ({ inputs_embeds } = await sessionRun(this.sessions['prepare_inputs_embeds'], {\n                input_ids,\n                image_features,\n            }));\n        }\n\n        const outputs = await decoderForward(this, {\n            inputs_embeds,\n            past_key_values,\n            attention_mask,\n            position_ids,\n            generation_config,\n            logits_processor,\n        }, false);\n        return outputs;\n    }\n}\n\n//////////////////////////////////////////////////\nclass CLIPPreTrainedModel extends PreTrainedModel { }\n\n/**\n * CLIP Text and Vision Model with a projection layers on top\n * \n * **Example:** Perform zero-shot image classification with a `CLIPModel`.\n * \n * ```javascript\n * import { AutoTokenizer, AutoProcessor, CLIPModel, RawImage } from '@huggingface/transformers';\n * \n * // Load tokenizer, processor, and model\n * let tokenizer = await AutoTokenizer.from_pretrained('Xenova/clip-vit-base-patch16');\n * let processor = await AutoProcessor.from_pretrained('Xenova/clip-vit-base-patch16');\n * let model = await CLIPModel.from_pretrained('Xenova/clip-vit-base-patch16');\n * \n * // Run tokenization\n * let texts = ['a photo of a car', 'a photo of a football match']\n * let text_inputs = tokenizer(texts, { padding: true, truncation: true });\n * \n * // Read image and run processor\n * let image = await RawImage.read('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/football-match.jpg');\n * let image_inputs = await processor(image);\n * \n * // Run model with both text and pixel inputs\n * let output = await model({ ...text_inputs, ...image_inputs });\n * // {\n * //   logits_per_image: Tensor {\n * //     dims: [ 1, 2 ],\n * //     data: Float32Array(2) [ 18.579734802246094, 24.31830596923828 ],\n * //   },\n * //   logits_per_text: Tensor {\n * //     dims: [ 2, 1 ],\n * //     data: Float32Array(2) [ 18.579734802246094, 24.31830596923828 ],\n * //   },\n * //   text_embeds: Tensor {\n * //     dims: [ 2, 512 ],\n * //     data: Float32Array(1024) [ ... ],\n * //   },\n * //   image_embeds: Tensor {\n * //     dims: [ 1, 512 ],\n * //     data: Float32Array(512) [ ... ],\n * //   }\n * // }\n * ```\n */\nclass CLIPModel extends CLIPPreTrainedModel { }\n\n/**\n * The text model from CLIP without any head or projection on top.\n */\nclass CLIPTextModel extends CLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'text_model',\n        });\n    }\n}\n\n/**\n * CLIP Text Model with a projection layer on top (a linear layer on top of the pooled output)\n * \n * **Example:** Compute text embeddings with `CLIPTextModelWithProjection`.\n * \n * ```javascript\n * import { AutoTokenizer, CLIPTextModelWithProjection } from '@huggingface/transformers';\n * \n * // Load tokenizer and text model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/clip-vit-base-patch16');\n * const text_model = await CLIPTextModelWithProjection.from_pretrained('Xenova/clip-vit-base-patch16');\n * \n * // Run tokenization\n * let texts = ['a photo of a car', 'a photo of a football match'];\n * let text_inputs = tokenizer(texts, { padding: true, truncation: true });\n * \n * // Compute embeddings\n * const { text_embeds } = await text_model(text_inputs);\n * // Tensor {\n * //   dims: [ 2, 512 ],\n * //   type: 'float32',\n * //   data: Float32Array(1024) [ ... ],\n * //   size: 1024\n * // }\n * ```\n */\nclass CLIPTextModelWithProjection extends CLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'text_model',\n        });\n    }\n}\n\n/**\n * The vision model from CLIP without any head or projection on top.\n */\nclass CLIPVisionModel extends CLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'vision_model',\n        });\n    }\n}\n\n/**\n * CLIP Vision Model with a projection layer on top (a linear layer on top of the pooled output)\n * \n * **Example:** Compute vision embeddings with `CLIPVisionModelWithProjection`.\n * \n * ```javascript\n * import { AutoProcessor, CLIPVisionModelWithProjection, RawImage} from '@huggingface/transformers';\n * \n * // Load processor and vision model\n * const processor = await AutoProcessor.from_pretrained('Xenova/clip-vit-base-patch16');\n * const vision_model = await CLIPVisionModelWithProjection.from_pretrained('Xenova/clip-vit-base-patch16');\n * \n * // Read image and run processor\n * let image = await RawImage.read('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/football-match.jpg');\n * let image_inputs = await processor(image);\n * \n * // Compute embeddings\n * const { image_embeds } = await vision_model(image_inputs);\n * // Tensor {\n * //   dims: [ 1, 512 ],\n * //   type: 'float32',\n * //   data: Float32Array(512) [ ... ],\n * //   size: 512\n * // }\n * ```\n */\nclass CLIPVisionModelWithProjection extends CLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'vision_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// SigLIP models\nclass SiglipPreTrainedModel extends PreTrainedModel { }\n\n/**\n * SigLIP Text and Vision Model with a projection layers on top\n * \n * **Example:** Perform zero-shot image classification with a `SiglipModel`.\n * \n * ```javascript\n * import { AutoTokenizer, AutoProcessor, SiglipModel, RawImage } from '@huggingface/transformers';\n * \n * // Load tokenizer, processor, and model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/siglip-base-patch16-224');\n * const processor = await AutoProcessor.from_pretrained('Xenova/siglip-base-patch16-224');\n * const model = await SiglipModel.from_pretrained('Xenova/siglip-base-patch16-224');\n * \n * // Run tokenization\n * const texts = ['a photo of 2 cats', 'a photo of 2 dogs'];\n * const text_inputs = tokenizer(texts, { padding: 'max_length', truncation: true });\n * \n * // Read image and run processor\n * const image = await RawImage.read('http://images.cocodataset.org/val2017/000000039769.jpg');\n * const image_inputs = await processor(image);\n * \n * // Run model with both text and pixel inputs\n * const output = await model({ ...text_inputs, ...image_inputs });\n * // {\n * //   logits_per_image: Tensor {\n * //     dims: [ 1, 2 ],\n * //     data: Float32Array(2) [ -1.6019744873046875, -10.720091819763184 ],\n * //   },\n * //   logits_per_text: Tensor {\n * //     dims: [ 2, 1 ],\n * //     data: Float32Array(2) [ -1.6019744873046875, -10.720091819763184 ],\n * //   },\n * //   text_embeds: Tensor {\n * //     dims: [ 2, 768 ],\n * //     data: Float32Array(1536) [ ... ],\n * //   },\n * //   image_embeds: Tensor {\n * //     dims: [ 1, 768 ],\n * //     data: Float32Array(768) [ ... ],\n * //   }\n * // }\n * ```\n */\nclass SiglipModel extends SiglipPreTrainedModel { }\n\n/**\n * The text model from SigLIP without any head or projection on top.\n * \n * **Example:** Compute text embeddings with `SiglipTextModel`.\n * \n * ```javascript\n * import { AutoTokenizer, SiglipTextModel } from '@huggingface/transformers';\n * \n * // Load tokenizer and text model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/siglip-base-patch16-224');\n * const text_model = await SiglipTextModel.from_pretrained('Xenova/siglip-base-patch16-224');\n * \n * // Run tokenization\n * const texts = ['a photo of 2 cats', 'a photo of 2 dogs'];\n * const text_inputs = tokenizer(texts, { padding: 'max_length', truncation: true });\n * \n * // Compute embeddings\n * const { pooler_output } = await text_model(text_inputs);\n * // Tensor {\n * //   dims: [ 2, 768 ],\n * //   type: 'float32',\n * //   data: Float32Array(1536) [ ... ],\n * //   size: 1536\n * // }\n * ```\n */\nclass SiglipTextModel extends SiglipPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'text_model',\n        });\n    }\n}\n\n/**\n * The vision model from SigLIP without any head or projection on top.\n * \n * **Example:** Compute vision embeddings with `SiglipVisionModel`.\n * \n * ```javascript\n * import { AutoProcessor, SiglipVisionModel, RawImage} from '@huggingface/transformers';\n * \n * // Load processor and vision model\n * const processor = await AutoProcessor.from_pretrained('Xenova/siglip-base-patch16-224');\n * const vision_model = await SiglipVisionModel.from_pretrained('Xenova/siglip-base-patch16-224');\n * \n * // Read image and run processor\n * const image = await RawImage.read('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/football-match.jpg');\n * const image_inputs = await processor(image);\n * \n * // Compute embeddings\n * const { pooler_output } = await vision_model(image_inputs);\n * // Tensor {\n * //   dims: [ 1, 768 ],\n * //   type: 'float32',\n * //   data: Float32Array(768) [ ... ],\n * //   size: 768\n * // }\n * ```\n */\nclass SiglipVisionModel extends CLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'vision_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n// ChineseCLIP models\nclass ChineseCLIPPreTrainedModel extends PreTrainedModel { }\n\nclass ChineseCLIPModel extends ChineseCLIPPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// JinaCLIP models\nclass JinaCLIPPreTrainedModel extends PreTrainedModel { }\n\nclass JinaCLIPModel extends JinaCLIPPreTrainedModel {\n    async forward(model_inputs) {\n        const missing_text_inputs = !model_inputs.input_ids;\n        const missing_image_inputs = !model_inputs.pixel_values;\n\n        if (missing_text_inputs && missing_image_inputs) {\n            throw new Error('Either `input_ids` or `pixel_values` should be provided.');\n        }\n\n        // If either `input_ids` or `pixel_values` aren't passed, we need to create dummy input since the model requires a value to be specified.\n        if (missing_text_inputs) {\n            // NOTE: We cannot pass zero-dimension tensor as input for input_ids.\n            // Fortunately, the majority of time is spent in the vision encoder, so this shouldn't significantly impact performance.\n            model_inputs.input_ids = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones)([model_inputs.pixel_values.dims[0], 1]);\n        }\n\n        if (missing_image_inputs) {\n            // NOTE: Since we create a zero-sized tensor, this does not increase computation time.\n            // @ts-ignore\n            const { image_size } = this.config.vision_config;\n            model_inputs.pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.full)([0, 3, image_size, image_size], 0.0); // (pass zero-dimension tensor)\n        }\n\n        const { text_embeddings, image_embeddings, l2norm_text_embeddings, l2norm_image_embeddings } = await super.forward(model_inputs);\n\n        const result = {};\n        if (!missing_text_inputs) {\n            result.text_embeddings = text_embeddings;\n            result.l2norm_text_embeddings = l2norm_text_embeddings;\n        }\n        if (!missing_image_inputs) {\n            result.image_embeddings = image_embeddings;\n            result.l2norm_image_embeddings = l2norm_image_embeddings;\n        }\n        return result\n    }\n}\n\nclass JinaCLIPTextModel extends JinaCLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'text_model',\n        });\n    }\n}\n\nclass JinaCLIPVisionModel extends JinaCLIPPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'vision_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// CLIPSeg models\nclass CLIPSegPreTrainedModel extends PreTrainedModel { }\n\nclass CLIPSegModel extends CLIPSegPreTrainedModel { }\n\n/**\n * CLIPSeg model with a Transformer-based decoder on top for zero-shot and one-shot image segmentation.\n * \n * **Example:** Perform zero-shot image segmentation with a `CLIPSegForImageSegmentation` model.\n * \n * ```javascript\n * import { AutoTokenizer, AutoProcessor, CLIPSegForImageSegmentation, RawImage } from '@huggingface/transformers';\n * \n * // Load tokenizer, processor, and model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/clipseg-rd64-refined');\n * const processor = await AutoProcessor.from_pretrained('Xenova/clipseg-rd64-refined');\n * const model = await CLIPSegForImageSegmentation.from_pretrained('Xenova/clipseg-rd64-refined');\n * \n * // Run tokenization\n * const texts = ['a glass', 'something to fill', 'wood', 'a jar'];\n * const text_inputs = tokenizer(texts, { padding: true, truncation: true });\n * \n * // Read image and run processor\n * const image = await RawImage.read('https://github.com/timojl/clipseg/blob/master/example_image.jpg?raw=true');\n * const image_inputs = await processor(image);\n * \n * // Run model with both text and pixel inputs\n * const { logits } = await model({ ...text_inputs, ...image_inputs });\n * // logits: Tensor {\n * //   dims: [4, 352, 352],\n * //   type: 'float32',\n * //   data: Float32Array(495616) [ ... ],\n * //   size: 495616\n * // }\n * ```\n * \n * You can visualize the predictions as follows:\n * ```javascript\n * const preds = logits\n *   .unsqueeze_(1)\n *   .sigmoid_()\n *   .mul_(255)\n *   .round_()\n *   .to('uint8');\n * \n * for (let i = 0; i < preds.dims[0]; ++i) {\n *   const img = RawImage.fromTensor(preds[i]);\n *   img.save(`prediction_${i}.png`);\n * }\n * ```\n */\nclass CLIPSegForImageSegmentation extends CLIPSegPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// GPT2 models\nclass GPT2PreTrainedModel extends PreTrainedModel { }\n\nclass GPT2Model extends GPT2PreTrainedModel { }\n\n/**\n * GPT-2 language model head on top of the GPT-2 base model. This model is suitable for text generation tasks.\n */\nclass GPT2LMHeadModel extends GPT2PreTrainedModel { }\n// export class GPT2ForSequenceClassification extends GPT2PreTrainedModel {\n// TODO\n// }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// JAIS models\nclass JAISPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare JAIS Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass JAISModel extends JAISPreTrainedModel { }\n\n/**\n * The JAIS Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass JAISLMHeadModel extends JAISPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// GPTNeo models\nclass GPTNeoPreTrainedModel extends PreTrainedModel { }\nclass GPTNeoModel extends GPTNeoPreTrainedModel { }\n\nclass GPTNeoForCausalLM extends GPTNeoPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// GPTNeoX models\nclass GPTNeoXPreTrainedModel extends PreTrainedModel { }\nclass GPTNeoXModel extends GPTNeoXPreTrainedModel { }\n\nclass GPTNeoXForCausalLM extends GPTNeoXPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// GPT-J models\nclass GPTJPreTrainedModel extends PreTrainedModel { }\n\nclass GPTJModel extends GPTJPreTrainedModel { }\n\nclass GPTJForCausalLM extends GPTJPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// GPTBigCode models\nclass GPTBigCodePreTrainedModel extends PreTrainedModel { }\n\nclass GPTBigCodeModel extends GPTBigCodePreTrainedModel { }\n\nclass GPTBigCodeForCausalLM extends GPTBigCodePreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// CodeGen models\nclass CodeGenPreTrainedModel extends PreTrainedModel { }\n/**\n * CodeGenModel is a class representing a code generation model without a language model head.\n */\nclass CodeGenModel extends CodeGenPreTrainedModel { }\n\n/**\n * CodeGenForCausalLM is a class that represents a code generation model based on the GPT-2 architecture. It extends the `CodeGenPreTrainedModel` class.\n */\nclass CodeGenForCausalLM extends CodeGenPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// LLama models\n\n/**\n * The bare LLama Model outputting raw hidden-states without any specific head on top.\n */\nclass LlamaPreTrainedModel extends PreTrainedModel { }\n/**\n * The bare LLaMA Model outputting raw hidden-states without any specific head on top.\n */\nclass LlamaModel extends LlamaPreTrainedModel { }\n\nclass LlamaForCausalLM extends LlamaPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Helium models\nclass HeliumPreTrainedModel extends PreTrainedModel { }\nclass HeliumModel extends HeliumPreTrainedModel { }\nclass HeliumForCausalLM extends HeliumPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Glm models\nclass GlmPreTrainedModel extends PreTrainedModel { }\nclass GlmModel extends GlmPreTrainedModel { }\nclass GlmForCausalLM extends GlmPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// EXAONE models\nclass ExaonePreTrainedModel extends PreTrainedModel { }\nclass ExaoneModel extends ExaonePreTrainedModel { }\nclass ExaoneForCausalLM extends ExaonePreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// MobileLLM models\nclass MobileLLMPreTrainedModel extends PreTrainedModel { }\nclass MobileLLMModel extends MobileLLMPreTrainedModel { }\nclass MobileLLMForCausalLM extends MobileLLMPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// OLMo models\nclass OlmoPreTrainedModel extends PreTrainedModel { }\nclass OlmoModel extends OlmoPreTrainedModel { }\nclass OlmoForCausalLM extends OlmoPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// OLMo2 models\nclass Olmo2PreTrainedModel extends PreTrainedModel { }\nclass Olmo2Model extends Olmo2PreTrainedModel { }\nclass Olmo2ForCausalLM extends Olmo2PreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Granite models\nclass GranitePreTrainedModel extends PreTrainedModel { }\nclass GraniteModel extends GranitePreTrainedModel { }\nclass GraniteForCausalLM extends GranitePreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Cohere models\n\n/**\n * The bare Cohere Model outputting raw hidden-states without any specific head on top.\n */\nclass CoherePreTrainedModel extends PreTrainedModel { }\nclass CohereModel extends CoherePreTrainedModel { }\n\nclass CohereForCausalLM extends CoherePreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Gemma models\n\n/**\n * The bare Gemma Model outputting raw hidden-states without any specific head on top.\n */\nclass GemmaPreTrainedModel extends PreTrainedModel { }\n/**\n * The bare Gemma Model outputting raw hidden-states without any specific head on top.\n */\nclass GemmaModel extends GemmaPreTrainedModel { }\n\nclass GemmaForCausalLM extends GemmaPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Gemma2 models\n\n/**\n * The bare Gemma2 Model outputting raw hidden-states without any specific head on top.\n */\nclass Gemma2PreTrainedModel extends PreTrainedModel { }\n/**\n * The bare Gemma2 Model outputting raw hidden-states without any specific head on top.\n */\nclass Gemma2Model extends Gemma2PreTrainedModel { }\n\nclass Gemma2ForCausalLM extends Gemma2PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass OpenELMPreTrainedModel extends PreTrainedModel { }\nclass OpenELMModel extends OpenELMPreTrainedModel { }\n\nclass OpenELMForCausalLM extends OpenELMPreTrainedModel { }\n\n\n//////////////////////////////////////////////////\n// Qwen2 models\n\n/**\n * The bare Qwen2 Model outputting raw hidden-states without any specific head on top.\n */\nclass Qwen2PreTrainedModel extends PreTrainedModel { }\n/**\n * The bare Qwen2 Model outputting raw hidden-states without any specific head on top.\n */\nclass Qwen2Model extends Qwen2PreTrainedModel { }\n\nclass Qwen2ForCausalLM extends Qwen2PreTrainedModel { }\n//////////////////////////////////////////////////\n\nclass Qwen2VLPreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        // Text inputs\n        'input_ids',\n        'attention_mask',\n        'position_ids',\n        'past_key_values',\n\n        // Vision inputs\n        'pixel_values',\n        'image_grid_thw',\n    ];\n}\nclass Qwen2VLForConditionalGeneration extends Qwen2VLPreTrainedModel {\n\n    /**\n     * Calculate the 3D rope index based on image and video's temporal, height and width in LLM.\n     *\n     * Explanation:\n     *     Each embedding sequence contains vision embedding and text embedding or just contains text embedding.\n     *\n     *     For pure text embedding sequence, the rotary position embedding has no difference with mordern LLMs.\n     *     Examples:\n     *         input_ids: [T T T T T], here T is for text.\n     *         temporal position_ids: [0, 1, 2, 3, 4]\n     *         height position_ids: [0, 1, 2, 3, 4]\n     *         width position_ids: [0, 1, 2, 3, 4]\n     *\n     *     For vision and text embedding sequence, we calculate 3D rotary position embedding for vision part\n     *     and 1D rotary position embeddin for text part.\n     *     Examples:\n     *         Assume we have a video input with 3 temporal patches, 2 height patches and 2 width patches.\n     *         input_ids: [V V V V V V V V V V V V T T T T T], here V is for vision.\n     *         vision temporal position_ids: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2]\n     *         vision height position_ids: [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]\n     *         vision width position_ids: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]\n     *         text temporal position_ids: [3, 4, 5, 6, 7]\n     *         text height position_ids: [3, 4, 5, 6, 7]\n     *         text width position_ids: [3, 4, 5, 6, 7]\n     *         Here we calculate the text start position_ids as the max vision position_ids plus 1.\n     * \n     * @param {Tensor} input_ids Indices of input sequence tokens in the vocabulary. Tensor of shape `(batch_size, sequence_length)`.\n     * @param {Tensor} image_grid_thw (Optional) The temporal, height and width of feature shape of each image in LLM. Tensor of shape `(num_images, 3)`.\n     * @param {Tensor} video_grid_thw (Optional) The temporal, height and width of feature shape of each video in LLM. Tensor of shape `(num_videos, 3)`.\n     * @param {Tensor} attention_mask (Optional) Mask to avoid performing attention on padding token indices. Tensor of shape `(batch_size, sequence_length)`. Mask values selected in `[0, 1]`:\n     * - 1 for tokens that are **not masked**,\n     * - 0 for tokens that are **masked**.\n     * @returns {[Tensor, Tensor]} [position_ids, mrope_position_deltas] with:\n     * - position_ids: Tensor of shape `(3, batch_size, sequence_length)`.\n     * - mrope_position_deltas: Tensor of shape `(batch_size)`.\n     */\n    get_rope_index(input_ids, image_grid_thw, video_grid_thw, attention_mask) {\n        // @ts-ignore\n        const { vision_config, image_token_id, video_token_id, vision_start_token_id } = this.config;\n        const spatial_merge_size = vision_config.spatial_merge_size ?? 2;\n\n        const mrope_position_deltas = [];\n        if (image_grid_thw || video_grid_thw) {\n            let total_input_ids = input_ids.tolist();\n            if (!attention_mask) {\n                attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.ones_like)(input_ids);\n            }\n\n            const attention_mask_list = attention_mask.tolist();\n            const position_ids_list = Array.from({ length: 3 }, _ => Array.from({ length: input_ids.dims[0] }, _ => Array.from({ length: input_ids.dims[1] }, _ => 1)));\n\n            const image_grid_thw_list = image_grid_thw ? image_grid_thw.tolist() : [];\n            const video_grid_thw_list = video_grid_thw ? video_grid_thw.tolist() : [];\n\n            let image_index = 0;\n            let video_index = 0;\n            for (let i = 0; i < total_input_ids.length; ++i) {\n                const ids = total_input_ids[i].filter((_, j) => attention_mask_list[i][j] == 1);\n\n                const vision_start_indices = ids.reduce((acc, x, idx) => {\n                    if (x == vision_start_token_id) acc.push(idx);\n                    return acc;\n                }, []);\n\n                const vision_tokens = vision_start_indices.map(x => ids[x + 1]);\n                const image_nums = vision_tokens.filter(x => x == image_token_id).length;\n                const video_nums = vision_tokens.filter(x => x == video_token_id).length;\n\n                /** @type {number[][]} */\n                let llm_pos_ids_list = [];\n                let st = 0;\n                let remain_images = image_nums;\n                let remain_videos = video_nums;\n                for (let j = 0; j < vision_tokens.length; ++j) {\n                    const next_image_token = ids.findIndex((x, i) => i > st && x == image_token_id);\n                    const next_video_token = ids.findIndex((x, i) => i > st && x == video_token_id);\n\n                    const ed_image = (remain_images > 0 && next_image_token !== -1)\n                        ? next_image_token\n                        : ids.length + 1;\n\n                    const ed_video = (remain_videos > 0 && next_video_token !== -1)\n                        ? next_video_token\n                        : ids.length + 1;\n\n                    let ed;\n                    let t, h, w;\n                    if (ed_image < ed_video) {\n                        ([t, h, w] = image_grid_thw_list[image_index]);\n                        ++image_index;\n                        --remain_images;\n                        ed = ed_image;\n                    } else {\n                        ([t, h, w] = video_grid_thw_list[video_index]);\n                        ++video_index;\n                        --remain_videos;\n                        ed = ed_video;\n                    }\n\n                    const [llm_grid_t, llm_grid_h, llm_grid_w] = [\n                        Number(t),\n                        Math.floor(Number(h) / spatial_merge_size),\n                        Math.floor(Number(w) / spatial_merge_size)\n                    ]\n                    const text_len = ed - st;\n                    const st_idx = llm_pos_ids_list.length > 0\n                        ? (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.max)(llm_pos_ids_list.at(-1))[0] + 1\n                        : 0;\n\n                    llm_pos_ids_list.push(\n                        Array.from({ length: 3 * text_len }, (_, i) => st_idx + (i % text_len))\n                    )\n\n                    const offset = text_len + st_idx;\n                    const grid_size = llm_grid_t * llm_grid_h * llm_grid_w;\n                    const t_index = Array.from({ length: grid_size }, (_, i) => offset + Math.floor(i / (llm_grid_h * llm_grid_w)))\n                    const h_index = Array.from({ length: grid_size }, (_, i) => offset + Math.floor(i / llm_grid_w) % llm_grid_h)\n                    const w_index = Array.from({ length: grid_size }, (_, i) => offset + i % llm_grid_w)\n\n                    llm_pos_ids_list.push([t_index, h_index, w_index].flat())\n\n                    st = ed + grid_size;\n                }\n\n                if (st < ids.length) {\n                    const st_idx = llm_pos_ids_list.length > 0\n                        ? (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.max)(llm_pos_ids_list.at(-1))[0] + 1\n                        : 0;\n                    const text_len = ids.length - st;\n\n                    llm_pos_ids_list.push(\n                        Array.from({ length: 3 * text_len }, (_, i) => (st_idx + (i % text_len)))\n                    )\n                }\n\n                // NOTE: Each item in llm_pos_ids_list is an array of shape (3, text_len),\n                // meaning to perform concatenation along dim=1, we can do the following:\n                const num_items = llm_pos_ids_list.reduce((acc, x) => acc + x.length, 0);\n                /** @type {number[]} */\n                const llm_positions = new Array(num_items);\n                let index = 0;\n                for (let x = 0; x < 3; ++x) {\n                    for (let y = 0; y < llm_pos_ids_list.length; ++y) {\n                        const val = llm_pos_ids_list[y];\n                        const text_len = val.length / 3;\n                        for (let z = x * text_len; z < (x + 1) * text_len; ++z) {\n                            llm_positions[index++] = val[z];\n                        }\n                    }\n                }\n\n                let count = 0;\n                const attn_mask = attention_mask_list[i];\n                for (let y = 0; y < attn_mask.length; ++y) {\n                    if (attn_mask[y] == 1) {\n                        for (let x = 0; x < 3; ++x) {\n                            position_ids_list[x][i][y] = llm_positions[x * num_items / 3 + count];\n                        }\n                        ++count;\n                    }\n                }\n\n                const max_llm_positions = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.max)(llm_positions)[0];\n                mrope_position_deltas.push(max_llm_positions + 1 - total_input_ids[i].length);\n            }\n\n            return [\n                new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', position_ids_list.flat(Infinity), [3, input_ids.dims[0], input_ids.dims[1]]),\n                new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', mrope_position_deltas, [mrope_position_deltas.length, 1]),\n            ];\n\n        } else { // Text-only\n            if (attention_mask) {\n                const { data, dims } = cumsum_masked_fill(attention_mask);\n\n                const position_ids = BigInt64Array.from(\n                    { length: 3 * data.length },\n                    (_, i) => data[i % data.length]\n                );\n                /** @type {bigint[]} */\n                const mrope_position_deltas = Array.from(\n                    { length: dims[0] },\n                    (_, i) => (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_11__.max)(data.subarray(dims[1] * i, dims[1] * (i + 1)))[0] + 1n + BigInt(dims[1])\n                );\n\n                return [\n                    new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', position_ids, [3, ...dims]),\n                    new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', mrope_position_deltas, [mrope_position_deltas.length, 1]),\n                ]\n            } else {\n                const [batch_size, seq_length] = input_ids.dims;\n                const position_ids = BigInt64Array.from(\n                    { length: 3 * batch_size * seq_length },\n                    (_, i) => BigInt(Math.floor(i % seq_length / batch_size)),\n                );\n\n                return [\n                    new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor('int64', position_ids, [3, ...input_ids.dims]),\n                    (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.zeros)([batch_size, 1]),\n                ]\n            }\n        }\n    }\n\n    async encode_image({ pixel_values, image_grid_thw }) {\n        const features = (await sessionRun(this.sessions['vision_encoder'], { pixel_values, grid_thw: image_grid_thw })).image_features;\n        return features;\n    }\n\n    _merge_input_ids_with_image_features(kwargs) {\n        return default_merge_input_ids_with_image_features({\n            // @ts-ignore\n            image_token_id: this.config.image_token_id,\n            ...kwargs\n        })\n    }\n\n    prepare_inputs_for_generation(input_ids, model_inputs, generation_config) {\n        // Overwritten -- in specific circumstances we don't want to forward image inputs to the model\n        if (model_inputs.attention_mask && !model_inputs.position_ids) {\n            // Calculate position_ids and rope_deltas\n            if (!model_inputs.past_key_values) {\n                ([model_inputs.position_ids, model_inputs.rope_deltas] = this.get_rope_index(\n                    model_inputs.input_ids,\n                    model_inputs.image_grid_thw,\n                    model_inputs.video_grid_thw,\n                    model_inputs.attention_mask,\n                ));\n\n            } else {\n                model_inputs.pixel_values = null;\n                // model_inputs.pixel_values_videos = null;\n\n                const delta = BigInt(Object.values(model_inputs.past_key_values)[0].dims.at(-2));\n                const rope_deltas_list = model_inputs.rope_deltas.map(x => delta + x);\n                model_inputs.position_ids = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.stack)([rope_deltas_list, rope_deltas_list, rope_deltas_list], 0)\n            }\n        }\n\n        return model_inputs;\n    }\n}\n\n\n//////////////////////////////////////////////////\n// Phi models\nclass PhiPreTrainedModel extends PreTrainedModel { }\n/**\n * The bare Phi Model outputting raw hidden-states without any specific head on top.\n */\nclass PhiModel extends PhiPreTrainedModel { }\n\nclass PhiForCausalLM extends PhiPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Phi3 models\nclass Phi3PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Phi3 Model outputting raw hidden-states without any specific head on top.\n */\nclass Phi3Model extends Phi3PreTrainedModel { }\n\nclass Phi3ForCausalLM extends Phi3PreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Bloom models\n/**\n * The Bloom Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass BloomPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Bloom Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass BloomModel extends BloomPreTrainedModel { }\n\n/**\n * The Bloom Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass BloomForCausalLM extends BloomPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MPT models\nclass MptPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Mpt Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass MptModel extends MptPreTrainedModel { }\n\n/**\n * The MPT Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass MptForCausalLM extends MptPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// OPT models\nclass OPTPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare OPT Model outputting raw hidden-states without any specific head on top.\n */\nclass OPTModel extends OPTPreTrainedModel { }\n\n/**\n * The OPT Model transformer with a language modeling head on top (linear layer with weights tied to the input embeddings).\n */\nclass OPTForCausalLM extends OPTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass ViTPreTrainedModel extends PreTrainedModel { }\nclass ViTModel extends ViTPreTrainedModel { }\nclass ViTForImageClassification extends ViTPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass IJepaPreTrainedModel extends PreTrainedModel { }\nclass IJepaModel extends IJepaPreTrainedModel { }\nclass IJepaForImageClassification extends IJepaPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass VitPosePreTrainedModel extends PreTrainedModel { }\n\n/**\n * The VitPose model with a pose estimation head on top.\n */\nclass VitPoseForPoseEstimation extends VitPosePreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass PvtPreTrainedModel extends PreTrainedModel { }\nclass PvtModel extends PvtPreTrainedModel { }\nclass PvtForImageClassification extends PvtPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass ViTMAEPreTrainedModel extends PreTrainedModel { }\nclass ViTMAEModel extends ViTMAEPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass ViTMSNPreTrainedModel extends PreTrainedModel { }\nclass ViTMSNModel extends ViTMSNPreTrainedModel { }\nclass ViTMSNForImageClassification extends ViTMSNPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass GroupViTPreTrainedModel extends PreTrainedModel { }\nclass GroupViTModel extends GroupViTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass FastViTPreTrainedModel extends PreTrainedModel { }\nclass FastViTModel extends FastViTPreTrainedModel { }\nclass FastViTForImageClassification extends FastViTPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass VitMattePreTrainedModel extends PreTrainedModel { }\n\n/**\n * ViTMatte framework leveraging any vision backbone e.g. for ADE20k, CityScapes.\n * \n * **Example:** Perform image matting with a `VitMatteForImageMatting` model.\n * ```javascript\n * import { AutoProcessor, VitMatteForImageMatting, RawImage } from '@huggingface/transformers';\n * \n * // Load processor and model\n * const processor = await AutoProcessor.from_pretrained('Xenova/vitmatte-small-distinctions-646');\n * const model = await VitMatteForImageMatting.from_pretrained('Xenova/vitmatte-small-distinctions-646');\n * \n * // Load image and trimap\n * const image = await RawImage.fromURL('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/vitmatte_image.png');\n * const trimap = await RawImage.fromURL('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/vitmatte_trimap.png');\n * \n * // Prepare image + trimap for the model\n * const inputs = await processor(image, trimap);\n * \n * // Predict alpha matte\n * const { alphas } = await model(inputs);\n * // Tensor {\n * //   dims: [ 1, 1, 640, 960 ],\n * //   type: 'float32',\n * //   size: 614400,\n * //   data: Float32Array(614400) [ 0.9894027709960938, 0.9970508813858032, ... ]\n * // }\n * ```\n * \n * You can visualize the alpha matte as follows:\n * ```javascript\n * import { Tensor, cat } from '@huggingface/transformers';\n * \n * // Visualize predicted alpha matte\n * const imageTensor = image.toTensor();\n * \n * // Convert float (0-1) alpha matte to uint8 (0-255)\n * const alphaChannel = alphas\n *   .squeeze(0)\n *   .mul_(255)\n *   .clamp_(0, 255)\n *   .round_()\n *   .to('uint8');\n * \n * // Concatenate original image with predicted alpha\n * const imageData = cat([imageTensor, alphaChannel], 0);\n * \n * // Save output image\n * const outputImage = RawImage.fromTensor(imageData);\n * outputImage.save('output.png');\n * ```\n */\nclass VitMatteForImageMatting extends VitMattePreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new ImageMattingOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass MobileViTPreTrainedModel extends PreTrainedModel { }\nclass MobileViTModel extends MobileViTPreTrainedModel { }\nclass MobileViTForImageClassification extends MobileViTPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n// TODO: MobileViTForSemanticSegmentation\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass MobileViTV2PreTrainedModel extends PreTrainedModel { }\nclass MobileViTV2Model extends MobileViTV2PreTrainedModel { }\nclass MobileViTV2ForImageClassification extends MobileViTV2PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n// TODO: MobileViTV2ForSemanticSegmentation\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass OwlViTPreTrainedModel extends PreTrainedModel { }\nclass OwlViTModel extends OwlViTPreTrainedModel { }\nclass OwlViTForObjectDetection extends OwlViTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass Owlv2PreTrainedModel extends PreTrainedModel { }\nclass Owlv2Model extends Owlv2PreTrainedModel { }\nclass Owlv2ForObjectDetection extends Owlv2PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Beit Models\nclass BeitPreTrainedModel extends PreTrainedModel { }\nclass BeitModel extends BeitPreTrainedModel { }\nclass BeitForImageClassification extends BeitPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass DetrPreTrainedModel extends PreTrainedModel { }\nclass DetrModel extends DetrPreTrainedModel { }\nclass DetrForObjectDetection extends DetrPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new DetrObjectDetectionOutput(await super._call(model_inputs));\n    }\n}\n\nclass DetrForSegmentation extends DetrPreTrainedModel {\n    /**\n     * Runs the model with the provided inputs\n     * @param {Object} model_inputs Model inputs\n     * @returns {Promise<DetrSegmentationOutput>} Object containing segmentation outputs\n     */\n    async _call(model_inputs) {\n        return new DetrSegmentationOutput(await super._call(model_inputs));\n    }\n}\n\nclass DetrObjectDetectionOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Classification logits (including no-object) for all queries.\n     * @param {Tensor} output.pred_boxes Normalized boxes coordinates for all queries, represented as (center_x, center_y, width, height).\n     * These values are normalized in [0, 1], relative to the size of each individual image in the batch (disregarding possible padding).\n     */\n    constructor({ logits, pred_boxes }) {\n        super();\n        this.logits = logits;\n        this.pred_boxes = pred_boxes;\n    }\n}\n\nclass DetrSegmentationOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits The output logits of the model.\n     * @param {Tensor} output.pred_boxes Predicted boxes.\n     * @param {Tensor} output.pred_masks Predicted masks.\n     */\n    constructor({ logits, pred_boxes, pred_masks }) {\n        super();\n        this.logits = logits;\n        this.pred_boxes = pred_boxes;\n        this.pred_masks = pred_masks;\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass RTDetrPreTrainedModel extends PreTrainedModel { }\nclass RTDetrModel extends RTDetrPreTrainedModel { }\nclass RTDetrForObjectDetection extends RTDetrPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new RTDetrObjectDetectionOutput(await super._call(model_inputs));\n    }\n}\n\nclass RTDetrObjectDetectionOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Classification logits (including no-object) for all queries.\n     * @param {Tensor} output.pred_boxes Normalized boxes coordinates for all queries, represented as (center_x, center_y, width, height).\n     * These values are normalized in [0, 1], relative to the size of each individual image in the batch (disregarding possible padding).\n     */\n    constructor({ logits, pred_boxes }) {\n        super();\n        this.logits = logits;\n        this.pred_boxes = pred_boxes;\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass TableTransformerPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Table Transformer Model (consisting of a backbone and encoder-decoder Transformer)\n * outputting raw hidden-states without any specific head on top.\n */\nclass TableTransformerModel extends TableTransformerPreTrainedModel { }\n\n/**\n * Table Transformer Model (consisting of a backbone and encoder-decoder Transformer)\n * with object detection heads on top, for tasks such as COCO detection.\n */\nclass TableTransformerForObjectDetection extends TableTransformerPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new TableTransformerObjectDetectionOutput(await super._call(model_inputs));\n    }\n}\nclass TableTransformerObjectDetectionOutput extends DetrObjectDetectionOutput { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass DeiTPreTrainedModel extends PreTrainedModel { }\nclass DeiTModel extends DeiTPreTrainedModel { }\nclass DeiTForImageClassification extends DeiTPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass HieraPreTrainedModel extends PreTrainedModel { }\nclass HieraModel extends HieraPreTrainedModel { }\nclass HieraForImageClassification extends HieraPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n/**\n * An abstract class to handle weights initialization and a simple interface for downloading and loading pretrained models.\n */\nclass ResNetPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare ResNet model outputting raw features without any specific head on top.\n */\nclass ResNetModel extends ResNetPreTrainedModel { }\n\n/**\n * ResNet Model with an image classification head on top (a linear layer on top of the pooled features), e.g. for ImageNet.\n */\nclass ResNetForImageClassification extends ResNetPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass SwinPreTrainedModel extends PreTrainedModel { }\nclass SwinModel extends SwinPreTrainedModel { }\nclass SwinForImageClassification extends SwinPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass SwinForSemanticSegmentation extends SwinPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass Swin2SRPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Swin2SR Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass Swin2SRModel extends Swin2SRPreTrainedModel { }\n\n/**\n * Swin2SR Model transformer with an upsampler head on top for image super resolution and restoration.\n * \n * **Example:** Super-resolution w/ `Xenova/swin2SR-classical-sr-x2-64`.\n * \n * ```javascript\n * import { AutoProcessor, Swin2SRForImageSuperResolution, RawImage } from '@huggingface/transformers';\n * \n * // Load processor and model\n * const model_id = 'Xenova/swin2SR-classical-sr-x2-64';\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * const model = await Swin2SRForImageSuperResolution.from_pretrained(model_id);\n * \n * // Prepare model inputs\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/butterfly.jpg';\n * const image = await RawImage.fromURL(url);\n * const inputs = await processor(image);\n * \n * // Run model\n * const outputs = await model(inputs);\n * \n * // Convert Tensor to RawImage\n * const output = outputs.reconstruction.squeeze().clamp_(0, 1).mul_(255).round_().to('uint8');\n * const outputImage = RawImage.fromTensor(output);\n * // RawImage {\n * //   data: Uint8Array(786432) [ 41, 31, 24, ... ],\n * //   width: 512,\n * //   height: 512,\n * //   channels: 3\n * // }\n * ```\n */\nclass Swin2SRForImageSuperResolution extends Swin2SRPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass DPTPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare DPT Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass DPTModel extends DPTPreTrainedModel { }\n\n/**\n * DPT Model with a depth estimation head on top (consisting of 3 convolutional layers) e.g. for KITTI, NYUv2.\n * \n * **Example:** Depth estimation w/ `Xenova/dpt-hybrid-midas`.\n * ```javascript\n * import { DPTForDepthEstimation, AutoProcessor, RawImage, interpolate_4d } from '@huggingface/transformers';\n * \n * // Load model and processor\n * const model_id = 'Xenova/dpt-hybrid-midas';\n * const model = await DPTForDepthEstimation.from_pretrained(model_id);\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * \n * // Load image from URL\n * const url = 'http://images.cocodataset.org/val2017/000000039769.jpg';\n * const image = await RawImage.read(url);\n * \n * // Prepare image for the model\n * const inputs = await processor(image);\n * \n * // Run model\n * const { predicted_depth } = await model(inputs);\n * \n * // Interpolate to original size\n * const prediction = (await interpolate_4d(predicted_depth.unsqueeze(1), {\n     * size: image.size.reverse(),\n     * mode: 'bilinear',\n * })).squeeze(1);\n * \n * // Visualize the prediction\n * const min = prediction.min().item();\n * const max = prediction.max().item();\n * const formatted = prediction.sub_(min).div_(max - min).mul_(255).to('uint8');\n * const depth = RawImage.fromTensor(formatted);\n * // RawImage {\n * //   data: Uint8Array(307200) [ 85, 85, 84, ... ],\n * //   width: 640,\n * //   height: 480,\n * //   channels: 1\n * // }\n * ```\n */\nclass DPTForDepthEstimation extends DPTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass DepthAnythingPreTrainedModel extends PreTrainedModel { }\n\n/**\n * Depth Anything Model with a depth estimation head on top (consisting of 3 convolutional layers) e.g. for KITTI, NYUv2.\n */\nclass DepthAnythingForDepthEstimation extends DepthAnythingPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass SapiensPreTrainedModel extends PreTrainedModel { }\nclass SapiensForSemanticSegmentation extends SapiensPreTrainedModel { }\nclass SapiensForDepthEstimation extends SapiensPreTrainedModel { }\nclass SapiensForNormalEstimation extends SapiensPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass DepthProPreTrainedModel extends PreTrainedModel { }\nclass DepthProForDepthEstimation extends DepthProPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass MaskFormerPreTrainedModel extends PreTrainedModel { }\nclass MaskFormerModel extends MaskFormerPreTrainedModel { }\nclass MaskFormerForInstanceSegmentation extends MaskFormerPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass GLPNPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare GLPN encoder (Mix-Transformer) outputting raw hidden-states without any specific head on top.\n */\nclass GLPNModel extends GLPNPreTrainedModel { }\n\n/**\n * import { GLPNForDepthEstimation, AutoProcessor, RawImage, interpolate_4d } from '@huggingface/transformers';\n * \n * // Load model and processor\n * const model_id = 'Xenova/glpn-kitti';\n * const model = await GLPNForDepthEstimation.from_pretrained(model_id);\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * \n * // Load image from URL\n * const url = 'http://images.cocodataset.org/val2017/000000039769.jpg';\n * const image = await RawImage.read(url);\n * \n * // Prepare image for the model\n * const inputs = await processor(image);\n * \n * // Run model\n * const { predicted_depth } = await model(inputs);\n * \n * // Interpolate to original size\n * const prediction = (await interpolate_4d(predicted_depth.unsqueeze(1), {\n     * size: image.size.reverse(),\n     * mode: 'bilinear',\n * })).squeeze(1);\n * \n * // Visualize the prediction\n * const min = prediction.min().item();\n * const max = prediction.max().item();\n * const formatted = prediction.sub_(min).div_(max - min).mul_(255).to('uint8');\n * const depth = RawImage.fromTensor(formatted);\n * // RawImage {\n * //   data: Uint8Array(307200) [ 85, 85, 84, ... ],\n * //   width: 640,\n * //   height: 480,\n * //   channels: 1\n * // }\n * ```\n */\nclass GLPNForDepthEstimation extends GLPNPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass DonutSwinPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Donut Swin Model transformer outputting raw hidden-states without any specific head on top.\n * \n * **Example:** Step-by-step Document Parsing.\n * \n * ```javascript\n * import { AutoProcessor, AutoTokenizer, AutoModelForVision2Seq, RawImage } from '@huggingface/transformers';\n * \n * // Choose model to use\n * const model_id = 'Xenova/donut-base-finetuned-cord-v2';\n * \n * // Prepare image inputs\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/receipt.png';\n * const image = await RawImage.read(url);\n * const image_inputs = await processor(image);\n * \n * // Prepare decoder inputs\n * const tokenizer = await AutoTokenizer.from_pretrained(model_id);\n * const task_prompt = '<s_cord-v2>';\n * const decoder_input_ids = tokenizer(task_prompt, {\n *   add_special_tokens: false,\n * }).input_ids;\n * \n * // Create the model\n * const model = await AutoModelForVision2Seq.from_pretrained(model_id);\n * \n * // Run inference\n * const output = await model.generate(image_inputs.pixel_values, {\n *   decoder_input_ids,\n *   max_length: model.config.decoder.max_position_embeddings,\n * });\n * \n * // Decode output\n * const decoded = tokenizer.batch_decode(output)[0];\n * // <s_cord-v2><s_menu><s_nm> CINNAMON SUGAR</s_nm><s_unitprice> 17,000</s_unitprice><s_cnt> 1 x</s_cnt><s_price> 17,000</s_price></s_menu><s_sub_total><s_subtotal_price> 17,000</s_subtotal_price></s_sub_total><s_total><s_total_price> 17,000</s_total_price><s_cashprice> 20,000</s_cashprice><s_changeprice> 3,000</s_changeprice></s_total></s>\n * ```\n * \n * **Example:** Step-by-step Document Visual Question Answering (DocVQA)\n * \n * ```javascript\n * import { AutoProcessor, AutoTokenizer, AutoModelForVision2Seq, RawImage } from '@huggingface/transformers';\n * \n * // Choose model to use\n * const model_id = 'Xenova/donut-base-finetuned-docvqa';\n * \n * // Prepare image inputs\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/invoice.png';\n * const image = await RawImage.read(url);\n * const image_inputs = await processor(image);\n * \n * // Prepare decoder inputs\n * const tokenizer = await AutoTokenizer.from_pretrained(model_id);\n * const question = 'What is the invoice number?';\n * const task_prompt = `<s_docvqa><s_question>${question}</s_question><s_answer>`;\n * const decoder_input_ids = tokenizer(task_prompt, {\n *   add_special_tokens: false,\n * }).input_ids;\n * \n * // Create the model\n * const model = await AutoModelForVision2Seq.from_pretrained(model_id);\n * \n * // Run inference\n * const output = await model.generate(image_inputs.pixel_values, {\n *   decoder_input_ids,\n *   max_length: model.config.decoder.max_position_embeddings,\n * });\n * \n * // Decode output\n * const decoded = tokenizer.batch_decode(output)[0];\n * // <s_docvqa><s_question> What is the invoice number?</s_question><s_answer> us-001</s_answer></s>\n * ```\n */\nclass DonutSwinModel extends DonutSwinPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass ConvNextPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare ConvNext model outputting raw features without any specific head on top.\n */\nclass ConvNextModel extends ConvNextPreTrainedModel { }\n\n/**\n * ConvNext Model with an image classification head on top (a linear layer on top of the pooled features), e.g. for ImageNet.\n */\nclass ConvNextForImageClassification extends ConvNextPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass ConvNextV2PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare ConvNextV2 model outputting raw features without any specific head on top.\n */\nclass ConvNextV2Model extends ConvNextV2PreTrainedModel { }\n\n/**\n * ConvNextV2 Model with an image classification head on top (a linear layer on top of the pooled features), e.g. for ImageNet.\n */\nclass ConvNextV2ForImageClassification extends ConvNextV2PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass Dinov2PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare DINOv2 Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass Dinov2Model extends Dinov2PreTrainedModel { }\n\n/**\n * Dinov2 Model transformer with an image classification head on top (a linear layer on top of the final hidden state of the [CLS] token) e.g. for ImageNet.\n */\nclass Dinov2ForImageClassification extends Dinov2PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass Dinov2WithRegistersPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Dinov2WithRegisters Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass Dinov2WithRegistersModel extends Dinov2WithRegistersPreTrainedModel { }\n\n/**\n * Dinov2WithRegisters Model transformer with an image classification head on top (a linear layer on top of the final hidden state of the [CLS] token) e.g. for ImageNet.\n */\nclass Dinov2WithRegistersForImageClassification extends Dinov2WithRegistersPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\nclass GroundingDinoPreTrainedModel extends PreTrainedModel { }\nclass GroundingDinoForObjectDetection extends GroundingDinoPreTrainedModel { }\n\n//////////////////////////////////////////////////\nclass YolosPreTrainedModel extends PreTrainedModel { }\nclass YolosModel extends YolosPreTrainedModel { }\nclass YolosForObjectDetection extends YolosPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new YolosObjectDetectionOutput(await super._call(model_inputs));\n    }\n}\n\nclass YolosObjectDetectionOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Classification logits (including no-object) for all queries.\n     * @param {Tensor} output.pred_boxes Normalized boxes coordinates for all queries, represented as (center_x, center_y, width, height).\n     * These values are normalized in [0, 1], relative to the size of each individual image in the batch (disregarding possible padding).\n     */\n    constructor({ logits, pred_boxes }) {\n        super();\n        this.logits = logits;\n        this.pred_boxes = pred_boxes;\n    }\n}\n//////////////////////////////////////////////////\n\n\n\n\n//////////////////////////////////////////////////\nclass SamPreTrainedModel extends PreTrainedModel { }\n\n/**\n * Segment Anything Model (SAM) for generating segmentation masks, given an input image\n * and optional 2D location and bounding boxes.\n * \n * **Example:** Perform mask generation w/ `Xenova/sam-vit-base`.\n * ```javascript\n * import { SamModel, AutoProcessor, RawImage } from '@huggingface/transformers';\n * \n * const model = await SamModel.from_pretrained('Xenova/sam-vit-base');\n * const processor = await AutoProcessor.from_pretrained('Xenova/sam-vit-base');\n * \n * const img_url = 'https://huggingface.co/ybelkada/segment-anything/resolve/main/assets/car.png';\n * const raw_image = await RawImage.read(img_url);\n * const input_points = [[[450, 600]]] // 2D localization of a window\n * \n * const inputs = await processor(raw_image, { input_points });\n * const outputs = await model(inputs);\n * \n * const masks = await processor.post_process_masks(outputs.pred_masks, inputs.original_sizes, inputs.reshaped_input_sizes);\n * // [\n * //   Tensor {\n * //     dims: [ 1, 3, 1764, 2646 ],\n * //     type: 'bool',\n * //     data: Uint8Array(14002632) [ ... ],\n * //     size: 14002632\n * //   }\n * // ]\n * const scores = outputs.iou_scores;\n * // Tensor {\n * //   dims: [ 1, 1, 3 ],\n * //   type: 'float32',\n * //   data: Float32Array(3) [\n * //     0.8892380595207214,\n * //     0.9311248064041138,\n * //     0.983696699142456\n * //   ],\n * //   size: 3\n * // }\n * ```\n */\nclass SamModel extends SamPreTrainedModel {\n\n    /**\n     * Compute image embeddings and positional image embeddings, given the pixel values of an image.\n     * @param {Object} model_inputs Object containing the model inputs.\n     * @param {Tensor} model_inputs.pixel_values Pixel values obtained using a `SamProcessor`.\n     * @returns {Promise<{ image_embeddings: Tensor, image_positional_embeddings: Tensor }>} The image embeddings and positional image embeddings.\n     */\n    async get_image_embeddings({ pixel_values }) {\n        // in:\n        //  - pixel_values: tensor.float32[batch_size,3,1024,1024]\n        // \n        // out:\n        //  - image_embeddings: tensor.float32[batch_size,256,64,64]\n        //  - image_positional_embeddings: tensor.float32[batch_size,256,64,64]\n        return await encoderForward(this, { pixel_values })\n    }\n\n    /**\n     * @typedef {Object} SamModelInputs Object containing the model inputs.\n     * @property {Tensor} pixel_values Pixel values as a Tensor with shape `(batch_size, num_channels, height, width)`.\n     * These can be obtained using a `SamProcessor`.\n     * @property {Tensor} [input_points] Input 2D spatial points with shape `(batch_size, num_points, 2)`.\n     * This is used by the prompt encoder to encode the prompt.\n     * @property {Tensor} [input_labels] Input labels for the points, as a Tensor of shape `(batch_size, point_batch_size, num_points)`.\n     * This is used by the prompt encoder to encode the prompt. There are 4 types of labels:\n     *  - `1`: the point is a point that contains the object of interest\n     *  - `0`: the point is a point that does not contain the object of interest\n     *  - `-1`: the point corresponds to the background\n     *  - `-10`: the point is a padding point, thus should be ignored by the prompt encoder\n     * @property {Tensor} [input_boxes] Input bounding boxes with shape `(batch_size, num_boxes, 4)`.\n     * @property {Tensor} [image_embeddings] Image embeddings used by the mask decoder.\n     * @property {Tensor} [image_positional_embeddings] Image positional embeddings used by the mask decoder.\n     */\n\n    /**\n     * @param {SamModelInputs} model_inputs Object containing the model inputs.\n     * @returns {Promise<Object>} The output of the model.\n     */\n    async forward(model_inputs) {\n        if (!model_inputs.image_embeddings || !model_inputs.image_positional_embeddings) {\n            // Compute the image embeddings if they are missing\n            model_inputs = {\n                ...model_inputs,\n                ...(await this.get_image_embeddings(model_inputs))\n            }\n        }\n\n        if (!model_inputs.input_labels && model_inputs.input_points) {\n            // Set default input labels if they are missing\n            const shape = model_inputs.input_points.dims.slice(0, -1);\n            const numElements = shape.reduce((a, b) => a * b, 1);\n            model_inputs.input_labels = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n                'int64',\n                new BigInt64Array(numElements).fill(1n),\n                shape\n            );\n        }\n\n        const decoder_inputs = {\n            image_embeddings: model_inputs.image_embeddings,\n            image_positional_embeddings: model_inputs.image_positional_embeddings,\n        };\n        if (model_inputs.input_points) {\n            decoder_inputs.input_points = model_inputs.input_points;\n        }\n        if (model_inputs.input_labels) {\n            decoder_inputs.input_labels = model_inputs.input_labels;\n        }\n        if (model_inputs.input_boxes) {\n            decoder_inputs.input_boxes = model_inputs.input_boxes;\n        }\n\n        // Returns:\n        //  - iou_scores: tensor.float32[batch_size,point_batch_size,3]\n        //  - pred_masks: tensor.float32[batch_size,point_batch_size,3,256,256]\n        return await sessionRun(this.sessions['prompt_encoder_mask_decoder'], decoder_inputs);\n    }\n\n    /**\n     * Runs the model with the provided inputs\n     * @param {Object} model_inputs Model inputs\n     * @returns {Promise<SamImageSegmentationOutput>} Object containing segmentation outputs\n     */\n    async _call(model_inputs) {\n        return new SamImageSegmentationOutput(await super._call(model_inputs));\n    }\n}\n\n\n/**\n * Base class for Segment-Anything model's output.\n */\nclass SamImageSegmentationOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.iou_scores The output logits of the model.\n     * @param {Tensor} output.pred_masks Predicted boxes.\n     */\n    constructor({ iou_scores, pred_masks }) {\n        super();\n        this.iou_scores = iou_scores;\n        this.pred_masks = pred_masks;\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// MarianMT models\nclass MarianPreTrainedModel extends PreTrainedModel { };\n\nclass MarianModel extends MarianPreTrainedModel { }\n\nclass MarianMTModel extends MarianPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// M2M100 models\nclass M2M100PreTrainedModel extends PreTrainedModel { };\n\nclass M2M100Model extends M2M100PreTrainedModel { }\n\nclass M2M100ForConditionalGeneration extends M2M100PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Wav2Vec2 models\nclass Wav2Vec2PreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare Wav2Vec2 Model transformer outputting raw hidden-states without any specific head on top.\n * \n * **Example:** Load and run a `Wav2Vec2Model` for feature extraction.\n * \n * ```javascript\n * import { AutoProcessor, AutoModel, read_audio } from '@huggingface/transformers';\n * \n * // Read and preprocess audio\n * const processor = await AutoProcessor.from_pretrained('Xenova/mms-300m');\n * const audio = await read_audio('https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac', 16000);\n * const inputs = await processor(audio);\n * \n * // Run model with inputs\n * const model = await AutoModel.from_pretrained('Xenova/mms-300m');\n * const output = await model(inputs);\n * // {\n * //   last_hidden_state: Tensor {\n * //     dims: [ 1, 1144, 1024 ],\n * //     type: 'float32',\n * //     data: Float32Array(1171456) [ ... ],\n * //     size: 1171456\n * //   }\n * // }\n * ```\n */\nclass Wav2Vec2Model extends Wav2Vec2PreTrainedModel { }\n\nclass Wav2Vec2ForCTC extends Wav2Vec2PreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_values Float values of input raw speech waveform.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\nclass Wav2Vec2ForSequenceClassification extends Wav2Vec2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * Wav2Vec2 Model with a frame classification head on top for tasks like Speaker Diarization.\n */\nclass Wav2Vec2ForAudioFrameClassification extends Wav2Vec2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// PyAnnote models\nclass PyAnnotePreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare PyAnnote Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass PyAnnoteModel extends PyAnnotePreTrainedModel { }\n\n/**\n * PyAnnote Model with a frame classification head on top for tasks like Speaker Diarization.\n * \n * **Example:** Load and run a `PyAnnoteForAudioFrameClassification` for speaker diarization.\n * \n * ```javascript\n * import { AutoProcessor, AutoModelForAudioFrameClassification, read_audio } from '@huggingface/transformers';\n * \n * // Load model and processor\n * const model_id = 'onnx-community/pyannote-segmentation-3.0';\n * const model = await AutoModelForAudioFrameClassification.from_pretrained(model_id);\n * const processor = await AutoProcessor.from_pretrained(model_id);\n * \n * // Read and preprocess audio\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/mlk.wav';\n * const audio = await read_audio(url, processor.feature_extractor.config.sampling_rate);\n * const inputs = await processor(audio);\n * \n * // Run model with inputs\n * const { logits } = await model(inputs);\n * // {\n * //   logits: Tensor {\n * //     dims: [ 1, 767, 7 ],  // [batch_size, num_frames, num_classes]\n * //     type: 'float32',\n * //     data: Float32Array(5369) [ ... ],\n * //     size: 5369\n * //   }\n * // }\n * \n * const result = processor.post_process_speaker_diarization(logits, audio.length);\n * // [\n * //   [\n * //     { id: 0, start: 0, end: 1.0512535626298245, confidence: 0.8220156481664611 },\n * //     { id: 2, start: 1.0512535626298245, end: 2.3398869619825127, confidence: 0.9008811707860472 },\n * //     ...\n * //   ]\n * // ]\n * \n * // Display result\n * console.table(result[0], ['start', 'end', 'id', 'confidence']);\n * // ┌─────────┬────────────────────┬────────────────────┬────┬─────────────────────┐\n * // │ (index) │ start              │ end                │ id │ confidence          │\n * // ├─────────┼────────────────────┼────────────────────┼────┼─────────────────────┤\n * // │ 0       │ 0                  │ 1.0512535626298245 │ 0  │ 0.8220156481664611  │\n * // │ 1       │ 1.0512535626298245 │ 2.3398869619825127 │ 2  │ 0.9008811707860472  │\n * // │ 2       │ 2.3398869619825127 │ 3.5946089560890773 │ 0  │ 0.7521651315796233  │\n * // │ 3       │ 3.5946089560890773 │ 4.578039708226655  │ 2  │ 0.8491978128022479  │\n * // │ 4       │ 4.578039708226655  │ 4.594995410849717  │ 0  │ 0.2935352600416393  │\n * // │ 5       │ 4.594995410849717  │ 6.121008646925269  │ 3  │ 0.6788051309866024  │\n * // │ 6       │ 6.121008646925269  │ 6.256654267909762  │ 0  │ 0.37125512393851134 │\n * // │ 7       │ 6.256654267909762  │ 8.630452635138397  │ 2  │ 0.7467035186353542  │\n * // │ 8       │ 8.630452635138397  │ 10.088643060721703 │ 0  │ 0.7689364814666032  │\n * // │ 9       │ 10.088643060721703 │ 12.58113134631177  │ 2  │ 0.9123324509131324  │\n * // │ 10      │ 12.58113134631177  │ 13.005023911888312 │ 0  │ 0.4828358177572041  │\n * // └─────────┴────────────────────┴────────────────────┴────┴─────────────────────┘\n * ```\n */\nclass PyAnnoteForAudioFrameClassification extends PyAnnotePreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// WeSpeakerResNet models\nclass WeSpeakerResNetPreTrainedModel extends PreTrainedModel { };\nclass WeSpeakerResNetModel extends WeSpeakerResNetPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// UniSpeech models\nclass UniSpeechPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare UniSpeech Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass UniSpeechModel extends UniSpeechPreTrainedModel { }\n\n/**\n * UniSpeech Model with a `language modeling` head on top for Connectionist Temporal Classification (CTC).\n */\nclass UniSpeechForCTC extends UniSpeechPreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_values Float values of input raw speech waveform.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * UniSpeech Model with a sequence classification head on top (a linear layer over the pooled output).\n */\nclass UniSpeechForSequenceClassification extends UniSpeechPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// UniSpeechSat models\nclass UniSpeechSatPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare UniSpeechSat Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass UniSpeechSatModel extends UniSpeechSatPreTrainedModel { }\n\n/**\n * UniSpeechSat Model with a `language modeling` head on top for Connectionist Temporal Classification (CTC).\n */\nclass UniSpeechSatForCTC extends UniSpeechSatPreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_values Float values of input raw speech waveform.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * UniSpeechSat Model with a sequence classification head on top (a linear layer over the pooled output).\n */\nclass UniSpeechSatForSequenceClassification extends UniSpeechSatPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * UniSpeechSat Model with a frame classification head on top for tasks like Speaker Diarization.\n */\nclass UniSpeechSatForAudioFrameClassification extends UniSpeechSatPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Wav2Vec2Bert models\nclass Wav2Vec2BertPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare Wav2Vec2Bert Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass Wav2Vec2BertModel extends Wav2Vec2BertPreTrainedModel { }\n\n/**\n * Wav2Vec2Bert Model with a `language modeling` head on top for Connectionist Temporal Classification (CTC).\n */\nclass Wav2Vec2BertForCTC extends Wav2Vec2BertPreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_features Float values of input mel-spectrogram.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * Wav2Vec2Bert Model with a sequence classification head on top (a linear layer over the pooled output).\n */\nclass Wav2Vec2BertForSequenceClassification extends Wav2Vec2BertPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Hubert models\nclass HubertPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Hubert Model transformer outputting raw hidden-states without any specific head on top.\n * \n * **Example:** Load and run a `HubertModel` for feature extraction.\n * \n * ```javascript\n * import { AutoProcessor, AutoModel, read_audio } from '@huggingface/transformers';\n * \n * // Read and preprocess audio\n * const processor = await AutoProcessor.from_pretrained('Xenova/hubert-base-ls960');\n * const audio = await read_audio('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav', 16000);\n * const inputs = await processor(audio);\n * \n * // Load and run model with inputs\n * const model = await AutoModel.from_pretrained('Xenova/hubert-base-ls960');\n * const output = await model(inputs);\n * // {\n * //   last_hidden_state: Tensor {\n * //     dims: [ 1, 549, 768 ],\n * //     type: 'float32',\n * //     data: Float32Array(421632) [0.0682469978928566, 0.08104046434164047, -0.4975186586380005, ...],\n * //     size: 421632\n * //   }\n * // }\n * ```\n */\nclass HubertModel extends Wav2Vec2PreTrainedModel { }\n\n/**\n * Hubert Model with a `language modeling` head on top for Connectionist Temporal Classification (CTC).\n */\nclass HubertForCTC extends Wav2Vec2PreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_values Float values of input raw speech waveform.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * Hubert Model with a sequence classification head on top (a linear layer over the pooled output) for tasks like SUPERB Keyword Spotting.\n */\nclass HubertForSequenceClassification extends Wav2Vec2PreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// WavLM models\n/**\n * An abstract class to handle weights initialization and a simple interface for downloading and loading pretrained models.\n */\nclass WavLMPreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare WavLM Model transformer outputting raw hidden-states without any specific head on top.\n * \n * **Example:** Load and run a `WavLMModel` for feature extraction.\n * \n * ```javascript\n * import { AutoProcessor, AutoModel, read_audio } from '@huggingface/transformers';\n * \n * // Read and preprocess audio\n * const processor = await AutoProcessor.from_pretrained('Xenova/wavlm-base');\n * const audio = await read_audio('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav', 16000);\n * const inputs = await processor(audio);\n * \n * // Run model with inputs\n * const model = await AutoModel.from_pretrained('Xenova/wavlm-base');\n * const output = await model(inputs);\n * // {\n * //   last_hidden_state: Tensor {\n * //     dims: [ 1, 549, 768 ],\n * //     type: 'float32',\n * //     data: Float32Array(421632) [-0.349443256855011, -0.39341306686401367,  0.022836603224277496, ...],\n * //     size: 421632\n * //   }\n * // }\n * ```\n */\nclass WavLMModel extends WavLMPreTrainedModel { }\n\n/**\n * WavLM Model with a `language modeling` head on top for Connectionist Temporal Classification (CTC).\n */\nclass WavLMForCTC extends WavLMPreTrainedModel {\n    /**\n     * @param {Object} model_inputs\n     * @param {Tensor} model_inputs.input_values Float values of input raw speech waveform.\n     * @param {Tensor} model_inputs.attention_mask Mask to avoid performing convolution and attention on padding token indices. Mask values selected in [0, 1]\n     */\n    async _call(model_inputs) {\n        return new CausalLMOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * WavLM Model with a sequence classification head on top (a linear layer over the pooled output).\n */\nclass WavLMForSequenceClassification extends WavLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<SequenceClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * WavLM Model with an XVector feature extraction head on top for tasks like Speaker Verification.\n * \n * **Example:** Extract speaker embeddings with `WavLMForXVector`.\n * ```javascript\n * import { AutoProcessor, AutoModel, read_audio } from '@huggingface/transformers';\n * \n * // Read and preprocess audio\n * const processor = await AutoProcessor.from_pretrained('Xenova/wavlm-base-plus-sv');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const audio = await read_audio(url, 16000);\n * const inputs = await processor(audio);\n * \n * // Run model with inputs\n * const model = await AutoModel.from_pretrained('Xenova/wavlm-base-plus-sv');\n * const outputs = await model(inputs);\n * // {\n * //   logits: Tensor {\n * //     dims: [ 1, 512 ],\n * //     type: 'float32',\n * //     data: Float32Array(512) [0.5847219228744507, ...],\n * //     size: 512\n * //   },\n * //   embeddings: Tensor {\n * //     dims: [ 1, 512 ],\n * //     type: 'float32',\n * //     data: Float32Array(512) [-0.09079201519489288, ...],\n * //     size: 512\n * //   }\n * // }\n * ```\n */\nclass WavLMForXVector extends WavLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<XVectorOutput>} An object containing the model's output logits and speaker embeddings.\n     */\n    async _call(model_inputs) {\n        return new XVectorOutput(await super._call(model_inputs));\n    }\n}\n\n/**\n * WavLM Model with a frame classification head on top for tasks like Speaker Diarization.\n * \n * **Example:** Perform speaker diarization with `WavLMForAudioFrameClassification`.\n * ```javascript\n * import { AutoProcessor, AutoModelForAudioFrameClassification, read_audio } from '@huggingface/transformers';\n * \n * // Read and preprocess audio\n * const processor = await AutoProcessor.from_pretrained('Xenova/wavlm-base-plus-sd');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const audio = await read_audio(url, 16000);\n * const inputs = await processor(audio);\n * \n * // Run model with inputs\n * const model = await AutoModelForAudioFrameClassification.from_pretrained('Xenova/wavlm-base-plus-sd');\n * const { logits } = await model(inputs);\n * // {\n * //   logits: Tensor {\n * //     dims: [ 1, 549, 2 ],  // [batch_size, num_frames, num_speakers]\n * //     type: 'float32',\n * //     data: Float32Array(1098) [-3.5301010608673096, ...],\n * //     size: 1098\n * //   }\n * // }\n * \n * const labels = logits[0].sigmoid().tolist().map(\n *     frames => frames.map(speaker => speaker > 0.5 ? 1 : 0)\n * );\n * console.log(labels); // labels is a one-hot array of shape (num_frames, num_speakers)\n * // [\n * //     [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0],\n * //     [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0],\n * //     [0, 0], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1],\n * //     ...\n * // ]\n * ```\n */\nclass WavLMForAudioFrameClassification extends WavLMPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<TokenClassifierOutput>} An object containing the model's output logits for sequence classification.\n     */\n    async _call(model_inputs) {\n        return new TokenClassifierOutput(await super._call(model_inputs));\n    }\n}\n\nclass StyleTextToSpeech2PreTrainedModel extends PreTrainedModel { }\nclass StyleTextToSpeech2Model extends StyleTextToSpeech2PreTrainedModel { }\n\n//////////////////////////////////////////////////\n// SpeechT5 models\n/**\n * An abstract class to handle weights initialization and a simple interface for downloading and loading pretrained models.\n */\nclass SpeechT5PreTrainedModel extends PreTrainedModel { };\n\n/**\n * The bare SpeechT5 Encoder-Decoder Model outputting raw hidden-states without any specific pre- or post-nets.\n */\nclass SpeechT5Model extends SpeechT5PreTrainedModel { };\n\n/**\n * SpeechT5 Model with a speech encoder and a text decoder.\n * \n * **Example:** Generate speech from text with `SpeechT5ForSpeechToText`.\n * ```javascript\n * import { AutoTokenizer, AutoProcessor, SpeechT5ForTextToSpeech, SpeechT5HifiGan, Tensor } from '@huggingface/transformers';\n * \n * // Load the tokenizer and processor\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/speecht5_tts');\n * const processor = await AutoProcessor.from_pretrained('Xenova/speecht5_tts');\n * \n * // Load the models\n * // NOTE: We use the full-precision versions as they are more accurate\n * const model = await SpeechT5ForTextToSpeech.from_pretrained('Xenova/speecht5_tts', { dtype: 'fp32' });\n * const vocoder = await SpeechT5HifiGan.from_pretrained('Xenova/speecht5_hifigan', { dtype: 'fp32' });\n * \n * // Load speaker embeddings from URL\n * const speaker_embeddings_data = new Float32Array(\n *     await (await fetch('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/speaker_embeddings.bin')).arrayBuffer()\n * );\n * const speaker_embeddings = new Tensor(\n *     'float32',\n *     speaker_embeddings_data,\n *     [1, speaker_embeddings_data.length]\n * )\n * \n * // Run tokenization\n * const { input_ids } = tokenizer('Hello, my dog is cute');\n * \n * // Generate waveform\n * const { waveform } = await model.generate_speech(input_ids, speaker_embeddings, { vocoder });\n * console.log(waveform)\n * // Tensor {\n * //   dims: [ 26112 ],\n * //   type: 'float32',\n * //   size: 26112,\n * //   data: Float32Array(26112) [ -0.00043630177970044315, -0.00018082228780258447, ... ],\n * // }\n * ```\n */\nclass SpeechT5ForSpeechToText extends SpeechT5PreTrainedModel { }\n\n/**\n * SpeechT5 Model with a text encoder and a speech decoder.\n */\nclass SpeechT5ForTextToSpeech extends SpeechT5PreTrainedModel {\n\n    /**\n     * @typedef {Object} SpeechOutput\n     * @property {Tensor} [spectrogram] The predicted log-mel spectrogram of shape\n     * `(output_sequence_length, config.num_mel_bins)`. Returned when no `vocoder` is provided\n     * @property {Tensor} [waveform] The predicted waveform of shape `(num_frames,)`. Returned when a `vocoder` is provided.\n     * @property {Tensor} [cross_attentions] The outputs of the decoder's cross-attention layers of shape\n     * `(config.decoder_layers, config.decoder_attention_heads, output_sequence_length, input_sequence_length)`. returned when `output_cross_attentions` is `true`.\n     */\n\n    /**\n     * Converts a sequence of input tokens into a sequence of mel spectrograms, which are subsequently turned into a speech waveform using a vocoder.\n     * @param {Tensor} input_values Indices of input sequence tokens in the vocabulary.\n     * @param {Tensor} speaker_embeddings Tensor containing the speaker embeddings.\n     * @param {Object} options Optional parameters for generating speech.\n     * @param {number} [options.threshold=0.5] The generated sequence ends when the predicted stop token probability exceeds this value.\n     * @param {number} [options.minlenratio=0.0] Used to calculate the minimum required length for the output sequence.\n     * @param {number} [options.maxlenratio=20.0] Used to calculate the maximum allowed length for the output sequence.\n     * @param {Object} [options.vocoder=null] The vocoder that converts the mel spectrogram into a speech waveform. If `null`, the output is the mel spectrogram.\n     * @param {boolean} [options.output_cross_attentions=false] Whether or not to return the attentions tensors of the decoder's cross-attention layers.\n     * @returns {Promise<SpeechOutput>} A promise which resolves to an object containing the spectrogram, waveform, and cross-attention tensors.\n     */\n    async generate_speech(input_values, speaker_embeddings, {\n        threshold = 0.5,\n        minlenratio = 0.0,\n        maxlenratio = 20.0,\n        vocoder = null,\n        // output_cross_attentions = false, // TODO add\n    } = {}) {\n\n        const model_inputs = {\n            input_ids: input_values\n        }\n\n        const { encoder_outputs, encoder_attention_mask } = await encoderForward(this, model_inputs);\n\n        // @ts-expect-error TS2339\n        const r = encoder_outputs.dims[1] / this.config.reduction_factor;\n        const maxlen = Math.floor(r * maxlenratio);\n        const minlen = Math.floor(r * minlenratio);\n\n        // @ts-expect-error TS2339\n        const num_mel_bins = this.config.num_mel_bins;\n\n        let spectrogramParts = [];\n        let past_key_values = null;\n        let decoder_outputs = null;\n        let idx = 0;\n\n        while (true) {\n            ++idx;\n\n            const use_cache_branch = boolTensor(!!decoder_outputs);\n            let output_sequence;\n            if (decoder_outputs) {\n                output_sequence = decoder_outputs.output_sequence_out;\n            } else {\n                output_sequence = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n                    'float32',\n                    new Float32Array(num_mel_bins),\n                    [1, 1, num_mel_bins],\n                )\n            }\n            let decoderFeeds = {\n                use_cache_branch,\n                output_sequence,\n                encoder_attention_mask: encoder_attention_mask,\n                speaker_embeddings: speaker_embeddings,\n                encoder_hidden_states: encoder_outputs,\n            };\n\n            this.addPastKeyValues(decoderFeeds, past_key_values);\n            decoder_outputs = await sessionRun(this.sessions['decoder_model_merged'], decoderFeeds);\n            past_key_values = this.getPastKeyValues(decoder_outputs, past_key_values);\n\n            const { prob, spectrum } = decoder_outputs;\n            spectrogramParts.push(spectrum);\n\n            if (idx >= minlen && (\n                // Finished when stop token or maximum length is reached.\n                Array.from(prob.data).filter(p => p >= threshold).length > 0 || idx >= maxlen\n            )) {\n                break;\n            }\n        }\n\n        const spectrogram = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.cat)(spectrogramParts);\n        const { waveform } = await sessionRun(vocoder.sessions['model'], { spectrogram });\n\n        return {\n            spectrogram,\n            waveform,\n            // cross_attentions: null, // TODO add\n        }\n    }\n}\n\n/**\n * HiFi-GAN vocoder.\n * \n * See [SpeechT5ForSpeechToText](./models#module_models.SpeechT5ForSpeechToText) for example usage.\n */\nclass SpeechT5HifiGan extends PreTrainedModel {\n    main_input_name = 'spectrogram';\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// TrOCR models\nclass TrOCRPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The TrOCR Decoder with a language modeling head.\n */\nclass TrOCRForCausalLM extends TrOCRPreTrainedModel { }\n\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Mistral models\n/**\n * The bare Mistral Model outputting raw hidden-states without any specific head on top.\n */\nclass MistralPreTrainedModel extends PreTrainedModel { }\n\nclass MistralModel extends MistralPreTrainedModel { }\n\nclass MistralForCausalLM extends MistralPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Starcoder2 models\n/**\n * The bare Starcoder2 Model outputting raw hidden-states without any specific head on top.\n */\nclass Starcoder2PreTrainedModel extends PreTrainedModel { }\n\nclass Starcoder2Model extends Starcoder2PreTrainedModel { }\n\nclass Starcoder2ForCausalLM extends Starcoder2PreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Falcon models\n/**\n * The bare Falcon Model outputting raw hidden-states without any specific head on top.\n */\nclass FalconPreTrainedModel extends PreTrainedModel { }\n\nclass FalconModel extends FalconPreTrainedModel { }\n\nclass FalconForCausalLM extends FalconPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// CLAP models\nclass ClapPreTrainedModel extends PreTrainedModel { }\n\nclass ClapModel extends ClapPreTrainedModel { }\n\n/**\n * CLAP Text Model with a projection layer on top (a linear layer on top of the pooled output).\n * \n * **Example:** Compute text embeddings with `ClapTextModelWithProjection`.\n * \n * ```javascript\n * import { AutoTokenizer, ClapTextModelWithProjection } from '@huggingface/transformers';\n * \n * // Load tokenizer and text model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/clap-htsat-unfused');\n * const text_model = await ClapTextModelWithProjection.from_pretrained('Xenova/clap-htsat-unfused');\n * \n * // Run tokenization\n * const texts = ['a sound of a cat', 'a sound of a dog'];\n * const text_inputs = tokenizer(texts, { padding: true, truncation: true });\n * \n * // Compute embeddings\n * const { text_embeds } = await text_model(text_inputs);\n * // Tensor {\n * //   dims: [ 2, 512 ],\n * //   type: 'float32',\n * //   data: Float32Array(1024) [ ... ],\n * //   size: 1024\n * // }\n * ```\n */\nclass ClapTextModelWithProjection extends ClapPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'text_model',\n        });\n    }\n}\n\n/**\n * CLAP Audio Model with a projection layer on top (a linear layer on top of the pooled output).\n * \n * **Example:** Compute audio embeddings with `ClapAudioModelWithProjection`.\n * \n * ```javascript\n * import { AutoProcessor, ClapAudioModelWithProjection, read_audio } from '@huggingface/transformers';\n * \n * // Load processor and audio model\n * const processor = await AutoProcessor.from_pretrained('Xenova/clap-htsat-unfused');\n * const audio_model = await ClapAudioModelWithProjection.from_pretrained('Xenova/clap-htsat-unfused');\n * \n * // Read audio and run processor\n * const audio = await read_audio('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cat_meow.wav');\n * const audio_inputs = await processor(audio);\n * \n * // Compute embeddings\n * const { audio_embeds } = await audio_model(audio_inputs);\n * // Tensor {\n * //   dims: [ 1, 512 ],\n * //   type: 'float32',\n * //   data: Float32Array(512) [ ... ],\n * //   size: 512\n * // }\n * ```\n */\nclass ClapAudioModelWithProjection extends ClapPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'audio_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// VITS models\nclass VitsPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The complete VITS model, for text-to-speech synthesis.\n * \n * **Example:** Generate speech from text with `VitsModel`.\n * ```javascript\n * import { AutoTokenizer, VitsModel } from '@huggingface/transformers';\n * \n * // Load the tokenizer and model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/mms-tts-eng');\n * const model = await VitsModel.from_pretrained('Xenova/mms-tts-eng');\n * \n * // Run tokenization\n * const inputs = tokenizer('I love transformers');\n * \n * // Generate waveform\n * const { waveform } = await model(inputs);\n * // Tensor {\n * //   dims: [ 1, 35328 ],\n * //   type: 'float32',\n * //   data: Float32Array(35328) [ ... ],\n * //   size: 35328,\n * // }\n * ```\n */\nclass VitsModel extends VitsPreTrainedModel {\n    /**\n     * Calls the model on new inputs.\n     * @param {Object} model_inputs The inputs to the model.\n     * @returns {Promise<VitsModelOutput>} The outputs for the VITS model.\n     */\n    async _call(model_inputs) {\n        return new VitsModelOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Segformer models\nclass SegformerPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare SegFormer encoder (Mix-Transformer) outputting raw hidden-states without any specific head on top.\n */\nclass SegformerModel extends SegformerPreTrainedModel { }\n\n/**\n * SegFormer Model transformer with an image classification head on top (a linear layer on top of the final hidden states) e.g. for ImageNet.\n */\nclass SegformerForImageClassification extends SegformerPreTrainedModel { }\n\n/**\n * SegFormer Model transformer with an all-MLP decode head on top e.g. for ADE20k, CityScapes.\n */\nclass SegformerForSemanticSegmentation extends SegformerPreTrainedModel { }\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// StableLm models\nclass StableLmPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare StableLm Model transformer outputting raw hidden-states without any specific head on top.\n */\nclass StableLmModel extends StableLmPreTrainedModel { }\n\n/**\n * StableLm Model with a `language modeling` head on top for Causal Language Modeling (with past).\n */\nclass StableLmForCausalLM extends StableLmPreTrainedModel { }\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\nclass EfficientNetPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare EfficientNet model outputting raw features without any specific head on top.\n */\nclass EfficientNetModel extends EfficientNetPreTrainedModel { }\n\n/**\n * EfficientNet Model with an image classification head on top (a linear layer on top of the pooled features).\n */\nclass EfficientNetForImageClassification extends EfficientNetPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Musicgen models\nclass MusicgenPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare Musicgen decoder model outputting raw hidden-states without any specific head on top.\n */\nclass MusicgenModel extends MusicgenPreTrainedModel { }\n\n/**\n * The MusicGen decoder model with a language modelling head on top.\n */\nclass MusicgenForCausalLM extends MusicgenPreTrainedModel { }\n\n/**\n * The composite MusicGen model with a text encoder, audio encoder and Musicgen decoder,\n * for music generation tasks with one or both of text and audio prompts.\n * \n * **Example:** Generate music from text with `Xenova/musicgen-small`.\n * ```javascript\n * import { AutoTokenizer, MusicgenForConditionalGeneration } from '@huggingface/transformers';\n * \n * // Load tokenizer and model\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/musicgen-small');\n * const model = await MusicgenForConditionalGeneration.from_pretrained(\n *   'Xenova/musicgen-small', { dtype: 'fp32' }\n * );\n * \n * // Prepare text input\n * const prompt = '80s pop track with bassy drums and synth';\n * const inputs = tokenizer(prompt);\n * \n * // Generate audio\n * const audio_values = await model.generate({\n *   ...inputs,\n *   max_new_tokens: 512,\n *   do_sample: true,\n *   guidance_scale: 3,\n * });\n * \n * // (Optional) Write the output to a WAV file\n * import wavefile from 'wavefile';\n * import fs from 'fs';\n * \n * const wav = new wavefile.WaveFile();\n * wav.fromScratch(1, model.config.audio_encoder.sampling_rate, '32f', audio_values.data);\n * fs.writeFileSync('musicgen_out.wav', wav.toBuffer());\n * ```\n */\nclass MusicgenForConditionalGeneration extends PreTrainedModel { // NOTE: not MusicgenPreTrainedModel\n    forward_params = [\n        'input_ids',\n        'attention_mask',\n        'encoder_outputs',\n        'decoder_input_ids',\n        'decoder_attention_mask',\n        'past_key_values',\n    ];\n\n    /**\n     * Apply the pattern mask to the final ids,\n     * then revert the pattern delay mask by filtering the pad token id in a single step.\n     * @param {Tensor} outputs The output tensor from the model.\n     * @returns {Tensor} The filtered output tensor.\n     */\n    _apply_and_filter_by_delay_pattern_mask(outputs) {\n        const [bs_x_codebooks, seqLength] = outputs.dims;\n        // @ts-expect-error TS2339\n        const num_codebooks = this.config.decoder.num_codebooks;\n        const upperBound = (seqLength - num_codebooks);\n\n        let newDataSize = 0;\n        for (let i = 0; i < outputs.size; ++i) {\n            // @ts-expect-error TS2339\n            if (outputs.data[i] === this.config.decoder.pad_token_id) {\n                continue;\n            }\n\n            const row = (i % seqLength);\n            const col = Math.floor(i / seqLength) % num_codebooks;\n\n            const diff = row - col;\n            if (diff > 0 && diff <= upperBound) {\n                outputs.data[newDataSize++] = outputs.data[i];\n            }\n        }\n\n        const batch_size = Math.floor(bs_x_codebooks / num_codebooks);\n        const inferred = newDataSize / (batch_size * num_codebooks);\n        // TODO: assert `inferred` is an integer\n        return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_9__.Tensor(\n            outputs.type,\n            outputs.data.slice(0, newDataSize),\n            [batch_size, num_codebooks, inferred]\n        );\n    }\n\n\n    prepare_inputs_for_generation(input_ids, model_inputs, generation_config) {\n        // apply the delay pattern mask\n        let clonedInputIds = structuredClone(input_ids);\n        for (let i = 0; i < clonedInputIds.length; ++i) {\n            for (let j = 0; j < clonedInputIds[i].length; ++j) {\n                // @ts-expect-error TS2339\n                if ((i % this.config.decoder.num_codebooks) >= j) {\n                    // @ts-expect-error TS2339\n                    clonedInputIds[i][j] = BigInt(this.config.decoder.pad_token_id);\n                }\n            }\n        }\n        // for classifier free guidance we need to replicate the decoder args across the batch dim\n        // (we'll split these before sampling)\n        if (generation_config.guidance_scale !== null && generation_config.guidance_scale > 1) {\n            // [batch, seqLength] -> [2 * batch, seqLength]\n            clonedInputIds = clonedInputIds.concat(clonedInputIds);\n        }\n\n        const prepped = super.prepare_inputs_for_generation(clonedInputIds, model_inputs, generation_config);\n        return prepped;\n    }\n\n    /**\n     * Generates sequences of token ids for models with a language modeling head.\n     * @param {import('./generation/parameters.js').GenerationFunctionParameters} options\n     * @returns {Promise<ModelOutput|Tensor>} The output of the model, which can contain the generated token ids, attentions, and scores.\n     */\n    async generate(options) {\n\n        const output_ids = await super.generate(options);\n\n        // apply the pattern mask to the final ids\n        // tensor: int64[1,batch_size,4,chunk_length]\n        const audio_codes = this._apply_and_filter_by_delay_pattern_mask(\n            /** @type {Tensor} */(output_ids)\n        ).unsqueeze_(0); // append the frame dimension back to the audio codes\n\n        const { audio_values } = await sessionRun(this.sessions['encodec_decode'], { audio_codes })\n\n        return audio_values;\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MobileNetV1 models\nclass MobileNetV1PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare MobileNetV1 model outputting raw hidden-states without any specific head on top.\n */\nclass MobileNetV1Model extends MobileNetV1PreTrainedModel { }\n\n/**\n * MobileNetV1 model with an image classification head on top (a linear layer on top of the pooled features),\n * e.g. for ImageNet.\n */\nclass MobileNetV1ForImageClassification extends MobileNetV1PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\n\nclass MobileNetV1ForSemanticSegmentation extends MobileNetV1PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MobileNetV2 models\nclass MobileNetV2PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare MobileNetV2 model outputting raw hidden-states without any specific head on top.\n */\nclass MobileNetV2Model extends MobileNetV2PreTrainedModel { }\n\n/**\n * MobileNetV2 model with an image classification head on top (a linear layer on top of the pooled features),\n * e.g. for ImageNet.\n */\nclass MobileNetV2ForImageClassification extends MobileNetV2PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass MobileNetV2ForSemanticSegmentation extends MobileNetV2PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MobileNetV3 models\nclass MobileNetV3PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare MobileNetV3 model outputting raw hidden-states without any specific head on top.\n */\nclass MobileNetV3Model extends MobileNetV3PreTrainedModel { }\n\n/**\n * MobileNetV3 model with an image classification head on top (a linear layer on top of the pooled features),\n * e.g. for ImageNet.\n */\nclass MobileNetV3ForImageClassification extends MobileNetV3PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass MobileNetV3ForSemanticSegmentation extends MobileNetV3PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// MobileNetV4 models\nclass MobileNetV4PreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare MobileNetV4 model outputting raw hidden-states without any specific head on top.\n */\nclass MobileNetV4Model extends MobileNetV4PreTrainedModel { }\n\n/**\n * MobileNetV4 model with an image classification head on top (a linear layer on top of the pooled features),\n * e.g. for ImageNet.\n */\nclass MobileNetV4ForImageClassification extends MobileNetV4PreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new SequenceClassifierOutput(await super._call(model_inputs));\n    }\n}\nclass MobileNetV4ForSemanticSegmentation extends MobileNetV4PreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Decision Transformer models\nclass DecisionTransformerPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The model builds upon the GPT2 architecture to perform autoregressive prediction of actions in an offline RL setting.\n * Refer to the paper for more details: https://arxiv.org/abs/2106.01345\n */\nclass DecisionTransformerModel extends DecisionTransformerPreTrainedModel { }\n\n//////////////////////////////////////////////////\n\nclass MultiModalityPreTrainedModel extends PreTrainedModel { }\nclass MultiModalityCausalLM extends MultiModalityPreTrainedModel {\n    forward_params = [\n        // prepare_inputs_embeds\n        'input_ids',\n        'pixel_values',\n        'images_seq_mask',\n        'images_emb_mask',\n\n        // language_model\n        'attention_mask',\n        'position_ids',\n        'past_key_values',\n    ];\n\n    /**\n     * @param {ConstructorParameters<typeof MultiModalityPreTrainedModel>} args\n     */\n    constructor(...args) {\n        super(...args);\n\n        // State-based approach to switch out which heads to use during generation\n        this._generation_mode = 'text';\n    }\n\n    async forward(model_inputs) {\n        const mode = this._generation_mode ?? 'text';\n\n        // TODO support re-using PKVs for input_ids.dims[1] !== 1\n        // if (model_inputs.past_key_values) {\n        //     //  && model_inputs.input_ids.dims[1] === 1\n        // }\n\n        let output_1;\n        if (mode === 'text' || !model_inputs.past_key_values) {\n            const session = this.sessions['prepare_inputs_embeds'];\n            const prep_inputs = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(model_inputs, session.inputNames);\n            output_1 = await sessionRun(session, prep_inputs);\n        } else {\n            const session = this.sessions['gen_img_embeds'];\n            const prep_inputs = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)({\n                image_ids: model_inputs.input_ids,\n            }, session.inputNames);\n            output_1 = await sessionRun(session, prep_inputs);\n        }\n\n        const input_2 = { ...model_inputs, ...output_1 }\n        const output_2 = await decoderForward(this, input_2);\n\n        const head = this.sessions[\n            mode === 'text'\n                ? 'lm_head'\n                : 'gen_head'\n        ];\n        if (!head) {\n            throw new Error(`Unable to find \"${head}\" generation head`);\n        }\n\n        const output_3 = await sessionRun(head, (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.pick)(output_2, head.inputNames))\n\n        return {\n            ...output_1,\n            ...output_2,\n            ...output_3,\n        };\n    }\n\n    /**\n     * @param {import('./generation/parameters.js').GenerationFunctionParameters} options\n     */\n    async generate(options) {\n        this._generation_mode = 'text';\n        return super.generate(options);\n    }\n\n    /**\n     * @param {import('./generation/parameters.js').GenerationFunctionParameters} options\n     */\n    async generate_images(options) {\n        this._generation_mode = 'image';\n\n        const start_num_tokens = (options.inputs ?? options[this.main_input_name]).dims[1];\n        const all_tokens = await super.generate(options);\n\n        const generated_tokens = (/** @type {Tensor} */(all_tokens)).slice(null, [start_num_tokens, null])\n\n        const image_decode = this.sessions['image_decode'];\n        const { decoded_image } = await sessionRun(image_decode, {\n            generated_tokens,\n        });\n\n        // Equivalent to `np.clip((dec + 1) / 2 * 255, 0, 255)`\n        const clamped = decoded_image\n            .add_(1)\n            .mul_(255 / 2)\n            .clamp_(0, 255)\n            .to('uint8');\n\n        // Return as a list of images\n        const images = [];\n        for (const tensor of clamped) {\n            const img = _utils_image_js__WEBPACK_IMPORTED_MODULE_10__.RawImage.fromTensor(tensor);\n            images.push(img);\n        }\n        return images;\n    }\n}\n\nclass MgpstrModelOutput extends ModelOutput {\n    constructor({ char_logits, bpe_logits, wp_logits }) {\n        super();\n        this.char_logits = char_logits;\n        this.bpe_logits = bpe_logits;\n        this.wp_logits = wp_logits;\n    }\n\n    get logits() {\n        return [this.char_logits, this.bpe_logits, this.wp_logits];\n    }\n}\n\nclass MgpstrPreTrainedModel extends PreTrainedModel { }\n\n/**\n * MGP-STR Model transformer with three classification heads on top\n * (three A^3 modules and three linear layer on top of the transformer encoder output) for scene text recognition (STR).\n */\nclass MgpstrForSceneTextRecognition extends MgpstrPreTrainedModel {\n    /**\n     * @param {any} model_inputs\n     */\n    async _call(model_inputs) {\n        return new MgpstrModelOutput(await super._call(model_inputs));\n    }\n}\n\n//////////////////////////////////////////////////\n// PatchTST Transformer models\nclass PatchTSTPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare PatchTST Model outputting raw hidden-states without any specific head.\n */\nclass PatchTSTModel extends PatchTSTPreTrainedModel { }\n\n/**\n * The PatchTST for prediction model.\n */\nclass PatchTSTForPrediction extends PatchTSTPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// PatchTSMixer Transformer models\nclass PatchTSMixerPreTrainedModel extends PreTrainedModel { }\n\n/**\n * The bare PatchTSMixer Model outputting raw hidden-states without any specific head.\n */\nclass PatchTSMixerModel extends PatchTSMixerPreTrainedModel { }\n\n/**\n * The PatchTSMixer for prediction model.\n */\nclass PatchTSMixerForPrediction extends PatchTSMixerPreTrainedModel { }\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass UltravoxPreTrainedModel extends PreTrainedModel {\n    forward_params = [\n        'input_ids',\n        'attention_mask',\n        'position_ids',\n        'audio_values',\n        'past_key_values',\n    ];\n}\n\nclass UltravoxModel extends UltravoxPreTrainedModel {\n\n    _merge_input_ids_with_audio_features(kwargs) {\n        const audio_hidden_size = kwargs.audio_features.dims.at(-1);\n        const reshaped_audio_features = kwargs.audio_features.view(-1, audio_hidden_size);\n\n        return default_merge_input_ids_with_audio_features({\n            // @ts-ignore\n            audio_token_id: this.config.ignore_index,\n            ...kwargs,\n            audio_features: reshaped_audio_features,\n        })\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// Mimi models\nclass MimiPreTrainedModel extends PreTrainedModel {\n    main_input_name = 'input_values';\n    forward_params = ['input_values'];\n}\n\nclass MimiEncoderOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.audio_codes Discrete code embeddings, of shape `(batch_size, num_quantizers, codes_length)`.\n     */\n    constructor({ audio_codes }) {\n        super();\n        this.audio_codes = audio_codes;\n    }\n}\n\nclass MimiDecoderOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.audio_values Decoded audio values, of shape `(batch_size, num_channels, sequence_length)`.\n     */\n    constructor({ audio_values }) {\n        super();\n        this.audio_values = audio_values;\n    }\n}\n\n/**\n * The Mimi neural audio codec model.\n */\nclass MimiModel extends MimiPreTrainedModel {\n    /**\n     * Encodes the input audio waveform into discrete codes.\n     * @param {Object} inputs Model inputs\n     * @param {Tensor} [inputs.input_values] Float values of the input audio waveform, of shape `(batch_size, channels, sequence_length)`).\n     * @returns {Promise<MimiEncoderOutput>} The output tensor of shape `(batch_size, num_codebooks, sequence_length)`.\n     */\n    async encode(inputs) {\n        return new MimiEncoderOutput(await sessionRun(this.sessions['encoder_model'], inputs));\n    }\n\n    /**\n     * Decodes the given frames into an output audio waveform.\n     * @param {MimiEncoderOutput} inputs The encoded audio codes.\n     * @returns {Promise<MimiDecoderOutput>} The output tensor of shape `(batch_size, num_channels, sequence_length)`.\n     */\n    async decode(inputs) {\n        return new MimiDecoderOutput(await sessionRun(this.sessions['decoder_model'], inputs));\n    }\n}\n\nclass MimiEncoderModel extends MimiPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'encoder_model',\n        });\n    }\n}\nclass MimiDecoderModel extends MimiPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'decoder_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////\n// Dac models\nclass DacPreTrainedModel extends PreTrainedModel {\n    main_input_name = 'input_values';\n    forward_params = ['input_values'];\n}\n\nclass DacEncoderOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.audio_codes Discrete code embeddings, of shape `(batch_size, num_quantizers, codes_length)`.\n     */\n    constructor({ audio_codes }) {\n        super();\n        this.audio_codes = audio_codes;\n    }\n}\n\nclass DacDecoderOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.audio_values Decoded audio values, of shape `(batch_size, num_channels, sequence_length)`.\n     */\n    constructor({ audio_values }) {\n        super();\n        this.audio_values = audio_values;\n    }\n}\n\n/**\n * The DAC (Descript Audio Codec) model.\n */\nclass DacModel extends DacPreTrainedModel {\n    /**\n     * Encodes the input audio waveform into discrete codes.\n     * @param {Object} inputs Model inputs\n     * @param {Tensor} [inputs.input_values] Float values of the input audio waveform, of shape `(batch_size, channels, sequence_length)`).\n     * @returns {Promise<DacEncoderOutput>} The output tensor of shape `(batch_size, num_codebooks, sequence_length)`.\n     */\n    async encode(inputs) {\n        return new DacEncoderOutput(await sessionRun(this.sessions['encoder_model'], inputs));\n    }\n\n    /**\n     * Decodes the given frames into an output audio waveform.\n     * @param {DacEncoderOutput} inputs The encoded audio codes.\n     * @returns {Promise<DacDecoderOutput>} The output tensor of shape `(batch_size, num_channels, sequence_length)`.\n     */\n    async decode(inputs) {\n        return new DacDecoderOutput(await sessionRun(this.sessions['decoder_model'], inputs));\n    }\n}\n\nclass DacEncoderModel extends DacPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'encoder_model',\n        });\n    }\n}\nclass DacDecoderModel extends DacPreTrainedModel {\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options = {}) {\n        return super.from_pretrained(pretrained_model_name_or_path, {\n            ...options,\n            // Update default model file name if not provided\n            model_file_name: options.model_file_name ?? 'decoder_model',\n        });\n    }\n}\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\n// AutoModels, used to simplify construction of PreTrainedModels\n// (uses config to instantiate correct class)\n\n/**\n * Base class of all AutoModels. Contains the `from_pretrained` function\n * which is used to instantiate pretrained models.\n */\nclass PretrainedMixin {\n    /**\n     * Mapping from model type to model class.\n     * @type {Map<string, Object>[]}\n     */\n    static MODEL_CLASS_MAPPINGS = null;\n\n    /**\n     * Whether to attempt to instantiate the base class (`PretrainedModel`) if \n     * the model type is not found in the mapping.\n     */\n    static BASE_IF_FAIL = false;\n\n\n    /** @type {typeof PreTrainedModel.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n        model_file_name = null,\n        subfolder = 'onnx',\n        device = null,\n        dtype = null,\n        use_external_data_format = null,\n        session_options = {},\n    } = {}) {\n\n        const options = {\n            progress_callback,\n            config,\n            cache_dir,\n            local_files_only,\n            revision,\n            model_file_name,\n            subfolder,\n            device,\n            dtype,\n            use_external_data_format,\n            session_options,\n        }\n        options.config = await _configs_js__WEBPACK_IMPORTED_MODULE_0__.AutoConfig.from_pretrained(pretrained_model_name_or_path, options);\n\n        if (!this.MODEL_CLASS_MAPPINGS) {\n            throw new Error(\"`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: \" + this.name);\n        }\n        const model_type = options.config.model_type;\n        for (const MODEL_CLASS_MAPPING of this.MODEL_CLASS_MAPPINGS) {\n            let modelInfo = MODEL_CLASS_MAPPING.get(model_type);\n            if (!modelInfo) {\n                // As a fallback, we check if model_type is specified as the exact class\n                for (const cls of MODEL_CLASS_MAPPING.values()) {\n                    if (cls[0] === model_type) {\n                        modelInfo = cls;\n                        break;\n                    }\n                }\n                if (!modelInfo) continue; // Item not found in this mapping\n            }\n            return await modelInfo[1].from_pretrained(pretrained_model_name_or_path, options);\n        }\n\n        if (this.BASE_IF_FAIL) {\n            if (!(CUSTOM_ARCHITECTURES.has(model_type))) {\n                console.warn(`Unknown model class \"${model_type}\", attempting to construct from base class.`);\n            }\n            return await PreTrainedModel.from_pretrained(pretrained_model_name_or_path, options);\n        } else {\n            throw Error(`Unsupported model type: ${model_type}`)\n        }\n    }\n}\n\nconst MODEL_MAPPING_NAMES_ENCODER_ONLY = new Map([\n    ['bert', ['BertModel', BertModel]],\n    ['modernbert', ['ModernBertModel', ModernBertModel]],\n    ['nomic_bert', ['NomicBertModel', NomicBertModel]],\n    ['roformer', ['RoFormerModel', RoFormerModel]],\n    ['electra', ['ElectraModel', ElectraModel]],\n    ['esm', ['EsmModel', EsmModel]],\n    ['convbert', ['ConvBertModel', ConvBertModel]],\n    ['camembert', ['CamembertModel', CamembertModel]],\n    ['deberta', ['DebertaModel', DebertaModel]],\n    ['deberta-v2', ['DebertaV2Model', DebertaV2Model]],\n    ['mpnet', ['MPNetModel', MPNetModel]],\n    ['albert', ['AlbertModel', AlbertModel]],\n    ['distilbert', ['DistilBertModel', DistilBertModel]],\n    ['roberta', ['RobertaModel', RobertaModel]],\n    ['xlm', ['XLMModel', XLMModel]],\n    ['xlm-roberta', ['XLMRobertaModel', XLMRobertaModel]],\n    ['clap', ['ClapModel', ClapModel]],\n    ['clip', ['CLIPModel', CLIPModel]],\n    ['clipseg', ['CLIPSegModel', CLIPSegModel]],\n    ['chinese_clip', ['ChineseCLIPModel', ChineseCLIPModel]],\n    ['siglip', ['SiglipModel', SiglipModel]],\n    ['jina_clip', ['JinaCLIPModel', JinaCLIPModel]],\n    ['mobilebert', ['MobileBertModel', MobileBertModel]],\n    ['squeezebert', ['SqueezeBertModel', SqueezeBertModel]],\n    ['wav2vec2', ['Wav2Vec2Model', Wav2Vec2Model]],\n    ['wav2vec2-bert', ['Wav2Vec2BertModel', Wav2Vec2BertModel]],\n    ['unispeech', ['UniSpeechModel', UniSpeechModel]],\n    ['unispeech-sat', ['UniSpeechSatModel', UniSpeechSatModel]],\n    ['hubert', ['HubertModel', HubertModel]],\n    ['wavlm', ['WavLMModel', WavLMModel]],\n    ['audio-spectrogram-transformer', ['ASTModel', ASTModel]],\n    ['vits', ['VitsModel', VitsModel]],\n    ['pyannote', ['PyAnnoteModel', PyAnnoteModel]],\n    ['wespeaker-resnet', ['WeSpeakerResNetModel', WeSpeakerResNetModel]],\n\n    ['detr', ['DetrModel', DetrModel]],\n    ['rt_detr', ['RTDetrModel', RTDetrModel]],\n    ['table-transformer', ['TableTransformerModel', TableTransformerModel]],\n    ['vit', ['ViTModel', ViTModel]],\n    ['ijepa', ['IJepaModel', IJepaModel]],\n    ['pvt', ['PvtModel', PvtModel]],\n    ['vit_msn', ['ViTMSNModel', ViTMSNModel]],\n    ['vit_mae', ['ViTMAEModel', ViTMAEModel]],\n    ['groupvit', ['GroupViTModel', GroupViTModel]],\n    ['fastvit', ['FastViTModel', FastViTModel]],\n    ['mobilevit', ['MobileViTModel', MobileViTModel]],\n    ['mobilevitv2', ['MobileViTV2Model', MobileViTV2Model]],\n    ['owlvit', ['OwlViTModel', OwlViTModel]],\n    ['owlv2', ['Owlv2Model', Owlv2Model]],\n    ['beit', ['BeitModel', BeitModel]],\n    ['deit', ['DeiTModel', DeiTModel]],\n    ['hiera', ['HieraModel', HieraModel]],\n    ['convnext', ['ConvNextModel', ConvNextModel]],\n    ['convnextv2', ['ConvNextV2Model', ConvNextV2Model]],\n    ['dinov2', ['Dinov2Model', Dinov2Model]],\n    ['dinov2_with_registers', ['Dinov2WithRegistersModel', Dinov2WithRegistersModel]],\n    ['resnet', ['ResNetModel', ResNetModel]],\n    ['swin', ['SwinModel', SwinModel]],\n    ['swin2sr', ['Swin2SRModel', Swin2SRModel]],\n    ['donut-swin', ['DonutSwinModel', DonutSwinModel]],\n    ['yolos', ['YolosModel', YolosModel]],\n    ['dpt', ['DPTModel', DPTModel]],\n    ['glpn', ['GLPNModel', GLPNModel]],\n\n    ['hifigan', ['SpeechT5HifiGan', SpeechT5HifiGan]],\n    ['efficientnet', ['EfficientNetModel', EfficientNetModel]],\n\n    ['decision_transformer', ['DecisionTransformerModel', DecisionTransformerModel]],\n    ['patchtst', ['PatchTSTForPrediction', PatchTSTModel]],\n    ['patchtsmixer', ['PatchTSMixerForPrediction', PatchTSMixerModel]],\n\n    ['mobilenet_v1', ['MobileNetV1Model', MobileNetV1Model]],\n    ['mobilenet_v2', ['MobileNetV2Model', MobileNetV2Model]],\n    ['mobilenet_v3', ['MobileNetV3Model', MobileNetV3Model]],\n    ['mobilenet_v4', ['MobileNetV4Model', MobileNetV4Model]],\n\n    ['maskformer', ['MaskFormerModel', MaskFormerModel]],\n    ['mgp-str', ['MgpstrForSceneTextRecognition', MgpstrForSceneTextRecognition]],\n\n    ['style_text_to_speech_2', ['StyleTextToSpeech2Model', StyleTextToSpeech2Model]],\n]);\n\nconst MODEL_MAPPING_NAMES_ENCODER_DECODER = new Map([\n    ['t5', ['T5Model', T5Model]],\n    ['longt5', ['LongT5Model', LongT5Model]],\n    ['mt5', ['MT5Model', MT5Model]],\n    ['bart', ['BartModel', BartModel]],\n    ['mbart', ['MBartModel', MBartModel]],\n    ['marian', ['MarianModel', MarianModel]],\n    ['whisper', ['WhisperModel', WhisperModel]],\n    ['m2m_100', ['M2M100Model', M2M100Model]],\n    ['blenderbot', ['BlenderbotModel', BlenderbotModel]],\n    ['blenderbot-small', ['BlenderbotSmallModel', BlenderbotSmallModel]],\n]);\n\nconst MODEL_MAPPING_NAMES_AUTO_ENCODER = new Map([\n    ['mimi', ['MimiModel', MimiModel]],\n    ['dac', ['DacModel', DacModel]],\n]);\n\nconst MODEL_MAPPING_NAMES_DECODER_ONLY = new Map([\n    ['bloom', ['BloomModel', BloomModel]],\n    ['jais', ['JAISModel', JAISModel]],\n    ['gpt2', ['GPT2Model', GPT2Model]],\n    ['gptj', ['GPTJModel', GPTJModel]],\n    ['gpt_bigcode', ['GPTBigCodeModel', GPTBigCodeModel]],\n    ['gpt_neo', ['GPTNeoModel', GPTNeoModel]],\n    ['gpt_neox', ['GPTNeoXModel', GPTNeoXModel]],\n    ['codegen', ['CodeGenModel', CodeGenModel]],\n    ['llama', ['LlamaModel', LlamaModel]],\n    ['exaone', ['ExaoneModel', ExaoneModel]],\n    ['olmo', ['OlmoModel', OlmoModel]],\n    ['olmo2', ['Olmo2Model', Olmo2Model]],\n    ['mobilellm', ['MobileLLMModel', MobileLLMModel]],\n    ['granite', ['GraniteModel', GraniteModel]],\n    ['cohere', ['CohereModel', CohereModel]],\n    ['gemma', ['GemmaModel', GemmaModel]],\n    ['gemma2', ['Gemma2Model', Gemma2Model]],\n    ['helium', ['HeliumModel', HeliumModel]],\n    ['glm', ['GlmModel', GlmModel]],\n    ['openelm', ['OpenELMModel', OpenELMModel]],\n    ['qwen2', ['Qwen2Model', Qwen2Model]],\n    ['phi', ['PhiModel', PhiModel]],\n    ['phi3', ['Phi3Model', Phi3Model]],\n    ['mpt', ['MptModel', MptModel]],\n    ['opt', ['OPTModel', OPTModel]],\n    ['mistral', ['MistralModel', MistralModel]],\n    ['starcoder2', ['Starcoder2Model', Starcoder2Model]],\n    ['falcon', ['FalconModel', FalconModel]],\n    ['stablelm', ['StableLmModel', StableLmModel]],\n]);\n\nconst MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES = new Map([\n    ['speecht5', ['SpeechT5ForSpeechToText', SpeechT5ForSpeechToText]],\n    ['whisper', ['WhisperForConditionalGeneration', WhisperForConditionalGeneration]],\n    ['lite-whisper', ['LiteWhisperForConditionalGeneration', LiteWhisperForConditionalGeneration]],\n    ['moonshine', ['MoonshineForConditionalGeneration', MoonshineForConditionalGeneration]],\n]);\n\nconst MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES = new Map([\n    ['speecht5', ['SpeechT5ForTextToSpeech', SpeechT5ForTextToSpeech]],\n]);\n\nconst MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES = new Map([\n    ['vits', ['VitsModel', VitsModel]],\n    ['musicgen', ['MusicgenForConditionalGeneration', MusicgenForConditionalGeneration]],\n]);\n\nconst MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES = new Map([\n    ['bert', ['BertForSequenceClassification', BertForSequenceClassification]],\n    ['modernbert', ['ModernBertForSequenceClassification', ModernBertForSequenceClassification]],\n    ['roformer', ['RoFormerForSequenceClassification', RoFormerForSequenceClassification]],\n    ['electra', ['ElectraForSequenceClassification', ElectraForSequenceClassification]],\n    ['esm', ['EsmForSequenceClassification', EsmForSequenceClassification]],\n    ['convbert', ['ConvBertForSequenceClassification', ConvBertForSequenceClassification]],\n    ['camembert', ['CamembertForSequenceClassification', CamembertForSequenceClassification]],\n    ['deberta', ['DebertaForSequenceClassification', DebertaForSequenceClassification]],\n    ['deberta-v2', ['DebertaV2ForSequenceClassification', DebertaV2ForSequenceClassification]],\n    ['mpnet', ['MPNetForSequenceClassification', MPNetForSequenceClassification]],\n    ['albert', ['AlbertForSequenceClassification', AlbertForSequenceClassification]],\n    ['distilbert', ['DistilBertForSequenceClassification', DistilBertForSequenceClassification]],\n    ['roberta', ['RobertaForSequenceClassification', RobertaForSequenceClassification]],\n    ['xlm', ['XLMForSequenceClassification', XLMForSequenceClassification]],\n    ['xlm-roberta', ['XLMRobertaForSequenceClassification', XLMRobertaForSequenceClassification]],\n    ['bart', ['BartForSequenceClassification', BartForSequenceClassification]],\n    ['mbart', ['MBartForSequenceClassification', MBartForSequenceClassification]],\n    ['mobilebert', ['MobileBertForSequenceClassification', MobileBertForSequenceClassification]],\n    ['squeezebert', ['SqueezeBertForSequenceClassification', SqueezeBertForSequenceClassification]],\n]);\n\nconst MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES = new Map([\n    ['bert', ['BertForTokenClassification', BertForTokenClassification]],\n    ['modernbert', ['ModernBertForTokenClassification', ModernBertForTokenClassification]],\n    ['roformer', ['RoFormerForTokenClassification', RoFormerForTokenClassification]],\n    ['electra', ['ElectraForTokenClassification', ElectraForTokenClassification]],\n    ['esm', ['EsmForTokenClassification', EsmForTokenClassification]],\n    ['convbert', ['ConvBertForTokenClassification', ConvBertForTokenClassification]],\n    ['camembert', ['CamembertForTokenClassification', CamembertForTokenClassification]],\n    ['deberta', ['DebertaForTokenClassification', DebertaForTokenClassification]],\n    ['deberta-v2', ['DebertaV2ForTokenClassification', DebertaV2ForTokenClassification]],\n    ['mpnet', ['MPNetForTokenClassification', MPNetForTokenClassification]],\n    ['distilbert', ['DistilBertForTokenClassification', DistilBertForTokenClassification]],\n    ['roberta', ['RobertaForTokenClassification', RobertaForTokenClassification]],\n    ['xlm', ['XLMForTokenClassification', XLMForTokenClassification]],\n    ['xlm-roberta', ['XLMRobertaForTokenClassification', XLMRobertaForTokenClassification]],\n]);\n\nconst MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES = new Map([\n    ['t5', ['T5ForConditionalGeneration', T5ForConditionalGeneration]],\n    ['longt5', ['LongT5ForConditionalGeneration', LongT5ForConditionalGeneration]],\n    ['mt5', ['MT5ForConditionalGeneration', MT5ForConditionalGeneration]],\n    ['bart', ['BartForConditionalGeneration', BartForConditionalGeneration]],\n    ['mbart', ['MBartForConditionalGeneration', MBartForConditionalGeneration]],\n    ['marian', ['MarianMTModel', MarianMTModel]],\n    ['m2m_100', ['M2M100ForConditionalGeneration', M2M100ForConditionalGeneration]],\n    ['blenderbot', ['BlenderbotForConditionalGeneration', BlenderbotForConditionalGeneration]],\n    ['blenderbot-small', ['BlenderbotSmallForConditionalGeneration', BlenderbotSmallForConditionalGeneration]],\n]);\n\nconst MODEL_FOR_CAUSAL_LM_MAPPING_NAMES = new Map([\n    ['bloom', ['BloomForCausalLM', BloomForCausalLM]],\n    ['gpt2', ['GPT2LMHeadModel', GPT2LMHeadModel]],\n    ['jais', ['JAISLMHeadModel', JAISLMHeadModel]],\n    ['gptj', ['GPTJForCausalLM', GPTJForCausalLM]],\n    ['gpt_bigcode', ['GPTBigCodeForCausalLM', GPTBigCodeForCausalLM]],\n    ['gpt_neo', ['GPTNeoForCausalLM', GPTNeoForCausalLM]],\n    ['gpt_neox', ['GPTNeoXForCausalLM', GPTNeoXForCausalLM]],\n    ['codegen', ['CodeGenForCausalLM', CodeGenForCausalLM]],\n    ['llama', ['LlamaForCausalLM', LlamaForCausalLM]],\n    ['exaone', ['ExaoneForCausalLM', ExaoneForCausalLM]],\n    ['olmo', ['OlmoForCausalLM', OlmoForCausalLM]],\n    ['olmo2', ['Olmo2ForCausalLM', Olmo2ForCausalLM]],\n    ['mobilellm', ['MobileLLMForCausalLM', MobileLLMForCausalLM]],\n    ['granite', ['GraniteForCausalLM', GraniteForCausalLM]],\n    ['cohere', ['CohereForCausalLM', CohereForCausalLM]],\n    ['gemma', ['GemmaForCausalLM', GemmaForCausalLM]],\n    ['gemma2', ['Gemma2ForCausalLM', Gemma2ForCausalLM]],\n    ['helium', ['HeliumForCausalLM', HeliumForCausalLM]],\n    ['glm', ['GlmForCausalLM', GlmForCausalLM]],\n    ['openelm', ['OpenELMForCausalLM', OpenELMForCausalLM]],\n    ['qwen2', ['Qwen2ForCausalLM', Qwen2ForCausalLM]],\n    ['phi', ['PhiForCausalLM', PhiForCausalLM]],\n    ['phi3', ['Phi3ForCausalLM', Phi3ForCausalLM]],\n    ['mpt', ['MptForCausalLM', MptForCausalLM]],\n    ['opt', ['OPTForCausalLM', OPTForCausalLM]],\n    ['mbart', ['MBartForCausalLM', MBartForCausalLM]],\n    ['mistral', ['MistralForCausalLM', MistralForCausalLM]],\n    ['starcoder2', ['Starcoder2ForCausalLM', Starcoder2ForCausalLM]],\n    ['falcon', ['FalconForCausalLM', FalconForCausalLM]],\n    ['trocr', ['TrOCRForCausalLM', TrOCRForCausalLM]],\n    ['stablelm', ['StableLmForCausalLM', StableLmForCausalLM]],\n\n    // Also image-text-to-text\n    ['phi3_v', ['Phi3VForCausalLM', Phi3VForCausalLM]],\n]);\n\nconst MODEL_FOR_MULTIMODALITY_MAPPING_NAMES = new Map([\n    ['multi_modality', ['MultiModalityCausalLM', MultiModalityCausalLM]],\n]);\n\n\nconst MODEL_FOR_MASKED_LM_MAPPING_NAMES = new Map([\n    ['bert', ['BertForMaskedLM', BertForMaskedLM]],\n    ['modernbert', ['ModernBertForMaskedLM', ModernBertForMaskedLM]],\n    ['roformer', ['RoFormerForMaskedLM', RoFormerForMaskedLM]],\n    ['electra', ['ElectraForMaskedLM', ElectraForMaskedLM]],\n    ['esm', ['EsmForMaskedLM', EsmForMaskedLM]],\n    ['convbert', ['ConvBertForMaskedLM', ConvBertForMaskedLM]],\n    ['camembert', ['CamembertForMaskedLM', CamembertForMaskedLM]],\n    ['deberta', ['DebertaForMaskedLM', DebertaForMaskedLM]],\n    ['deberta-v2', ['DebertaV2ForMaskedLM', DebertaV2ForMaskedLM]],\n    ['mpnet', ['MPNetForMaskedLM', MPNetForMaskedLM]],\n    ['albert', ['AlbertForMaskedLM', AlbertForMaskedLM]],\n    ['distilbert', ['DistilBertForMaskedLM', DistilBertForMaskedLM]],\n    ['roberta', ['RobertaForMaskedLM', RobertaForMaskedLM]],\n    ['xlm', ['XLMWithLMHeadModel', XLMWithLMHeadModel]],\n    ['xlm-roberta', ['XLMRobertaForMaskedLM', XLMRobertaForMaskedLM]],\n    ['mobilebert', ['MobileBertForMaskedLM', MobileBertForMaskedLM]],\n    ['squeezebert', ['SqueezeBertForMaskedLM', SqueezeBertForMaskedLM]],\n]);\n\nconst MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES = new Map([\n    ['bert', ['BertForQuestionAnswering', BertForQuestionAnswering]],\n    ['roformer', ['RoFormerForQuestionAnswering', RoFormerForQuestionAnswering]],\n    ['electra', ['ElectraForQuestionAnswering', ElectraForQuestionAnswering]],\n    ['convbert', ['ConvBertForQuestionAnswering', ConvBertForQuestionAnswering]],\n    ['camembert', ['CamembertForQuestionAnswering', CamembertForQuestionAnswering]],\n    ['deberta', ['DebertaForQuestionAnswering', DebertaForQuestionAnswering]],\n    ['deberta-v2', ['DebertaV2ForQuestionAnswering', DebertaV2ForQuestionAnswering]],\n    ['mpnet', ['MPNetForQuestionAnswering', MPNetForQuestionAnswering]],\n    ['albert', ['AlbertForQuestionAnswering', AlbertForQuestionAnswering]],\n    ['distilbert', ['DistilBertForQuestionAnswering', DistilBertForQuestionAnswering]],\n    ['roberta', ['RobertaForQuestionAnswering', RobertaForQuestionAnswering]],\n    ['xlm', ['XLMForQuestionAnswering', XLMForQuestionAnswering]],\n    ['xlm-roberta', ['XLMRobertaForQuestionAnswering', XLMRobertaForQuestionAnswering]],\n    ['mobilebert', ['MobileBertForQuestionAnswering', MobileBertForQuestionAnswering]],\n    ['squeezebert', ['SqueezeBertForQuestionAnswering', SqueezeBertForQuestionAnswering]],\n]);\n\nconst MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES = new Map([\n    ['vision-encoder-decoder', ['VisionEncoderDecoderModel', VisionEncoderDecoderModel]],\n    ['idefics3', ['Idefics3ForConditionalGeneration', Idefics3ForConditionalGeneration]],\n    ['smolvlm', ['SmolVLMForConditionalGeneration', SmolVLMForConditionalGeneration]],\n]);\n\nconst MODEL_FOR_IMAGE_TEXT_TO_TEXT_MAPPING_NAMES = new Map([\n    ['llava', ['LlavaForConditionalGeneration', LlavaForConditionalGeneration]],\n    ['llava_onevision', ['LlavaOnevisionForConditionalGeneration', LlavaOnevisionForConditionalGeneration]],\n    ['moondream1', ['Moondream1ForConditionalGeneration', Moondream1ForConditionalGeneration]],\n    ['florence2', ['Florence2ForConditionalGeneration', Florence2ForConditionalGeneration]],\n    ['qwen2-vl', ['Qwen2VLForConditionalGeneration', Qwen2VLForConditionalGeneration]],\n    ['idefics3', ['Idefics3ForConditionalGeneration', Idefics3ForConditionalGeneration]],\n    ['smolvlm', ['SmolVLMForConditionalGeneration', SmolVLMForConditionalGeneration]],\n    ['paligemma', ['PaliGemmaForConditionalGeneration', PaliGemmaForConditionalGeneration]],\n]);\n\nconst MODEL_FOR_AUDIO_TEXT_TO_TEXT_MAPPING_NAMES = new Map([\n    ['ultravox', ['UltravoxModel', UltravoxModel]],\n]);\n\n\nconst MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING_NAMES = new Map([\n    ['vision-encoder-decoder', ['VisionEncoderDecoderModel', VisionEncoderDecoderModel]],\n]);\n\nconst MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES = new Map([\n    ['vit', ['ViTForImageClassification', ViTForImageClassification]],\n    ['ijepa', ['IJepaForImageClassification', IJepaForImageClassification]],\n    ['pvt', ['PvtForImageClassification', PvtForImageClassification]],\n    ['vit_msn', ['ViTMSNForImageClassification', ViTMSNForImageClassification]],\n    ['fastvit', ['FastViTForImageClassification', FastViTForImageClassification]],\n    ['mobilevit', ['MobileViTForImageClassification', MobileViTForImageClassification]],\n    ['mobilevitv2', ['MobileViTV2ForImageClassification', MobileViTV2ForImageClassification]],\n    ['beit', ['BeitForImageClassification', BeitForImageClassification]],\n    ['deit', ['DeiTForImageClassification', DeiTForImageClassification]],\n    ['hiera', ['HieraForImageClassification', HieraForImageClassification]],\n    ['convnext', ['ConvNextForImageClassification', ConvNextForImageClassification]],\n    ['convnextv2', ['ConvNextV2ForImageClassification', ConvNextV2ForImageClassification]],\n    ['dinov2', ['Dinov2ForImageClassification', Dinov2ForImageClassification]],\n    ['dinov2_with_registers', ['Dinov2WithRegistersForImageClassification', Dinov2WithRegistersForImageClassification]],\n    ['resnet', ['ResNetForImageClassification', ResNetForImageClassification]],\n    ['swin', ['SwinForImageClassification', SwinForImageClassification]],\n    ['segformer', ['SegformerForImageClassification', SegformerForImageClassification]],\n    ['efficientnet', ['EfficientNetForImageClassification', EfficientNetForImageClassification]],\n    ['mobilenet_v1', ['MobileNetV1ForImageClassification', MobileNetV1ForImageClassification]],\n    ['mobilenet_v2', ['MobileNetV2ForImageClassification', MobileNetV2ForImageClassification]],\n    ['mobilenet_v3', ['MobileNetV3ForImageClassification', MobileNetV3ForImageClassification]],\n    ['mobilenet_v4', ['MobileNetV4ForImageClassification', MobileNetV4ForImageClassification]],\n]);\n\nconst MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES = new Map([\n    ['detr', ['DetrForObjectDetection', DetrForObjectDetection]],\n    ['rt_detr', ['RTDetrForObjectDetection', RTDetrForObjectDetection]],\n    ['table-transformer', ['TableTransformerForObjectDetection', TableTransformerForObjectDetection]],\n    ['yolos', ['YolosForObjectDetection', YolosForObjectDetection]],\n]);\n\nconst MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES = new Map([\n    ['owlvit', ['OwlViTForObjectDetection', OwlViTForObjectDetection]],\n    ['owlv2', ['Owlv2ForObjectDetection', Owlv2ForObjectDetection]],\n    ['grounding-dino', ['GroundingDinoForObjectDetection', GroundingDinoForObjectDetection]],\n]);\n\nconst MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES = new Map([\n    // TODO: Do not add new models here\n    ['detr', ['DetrForSegmentation', DetrForSegmentation]],\n    ['clipseg', ['CLIPSegForImageSegmentation', CLIPSegForImageSegmentation]],\n]);\n\nconst MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES = new Map([\n    ['segformer', ['SegformerForSemanticSegmentation', SegformerForSemanticSegmentation]],\n    ['sapiens', ['SapiensForSemanticSegmentation', SapiensForSemanticSegmentation]],\n\n    ['swin', ['SwinForSemanticSegmentation', SwinForSemanticSegmentation]],\n    ['mobilenet_v1', ['MobileNetV1ForSemanticSegmentation', MobileNetV1ForSemanticSegmentation]],\n    ['mobilenet_v2', ['MobileNetV2ForSemanticSegmentation', MobileNetV2ForSemanticSegmentation]],\n    ['mobilenet_v3', ['MobileNetV3ForSemanticSegmentation', MobileNetV3ForSemanticSegmentation]],\n    ['mobilenet_v4', ['MobileNetV4ForSemanticSegmentation', MobileNetV4ForSemanticSegmentation]],\n]);\n\nconst MODEL_FOR_UNIVERSAL_SEGMENTATION_MAPPING_NAMES = new Map([\n    ['detr', ['DetrForSegmentation', DetrForSegmentation]],\n    ['maskformer', ['MaskFormerForInstanceSegmentation', MaskFormerForInstanceSegmentation]],\n]);\n\nconst MODEL_FOR_MASK_GENERATION_MAPPING_NAMES = new Map([\n    ['sam', ['SamModel', SamModel]],\n]);\n\nconst MODEL_FOR_CTC_MAPPING_NAMES = new Map([\n    ['wav2vec2', ['Wav2Vec2ForCTC', Wav2Vec2ForCTC]],\n    ['wav2vec2-bert', ['Wav2Vec2BertForCTC', Wav2Vec2BertForCTC]],\n    ['unispeech', ['UniSpeechForCTC', UniSpeechForCTC]],\n    ['unispeech-sat', ['UniSpeechSatForCTC', UniSpeechSatForCTC]],\n    ['wavlm', ['WavLMForCTC', WavLMForCTC]],\n    ['hubert', ['HubertForCTC', HubertForCTC]],\n]);\n\nconst MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES = new Map([\n    ['wav2vec2', ['Wav2Vec2ForSequenceClassification', Wav2Vec2ForSequenceClassification]],\n    ['wav2vec2-bert', ['Wav2Vec2BertForSequenceClassification', Wav2Vec2BertForSequenceClassification]],\n    ['unispeech', ['UniSpeechForSequenceClassification', UniSpeechForSequenceClassification]],\n    ['unispeech-sat', ['UniSpeechSatForSequenceClassification', UniSpeechSatForSequenceClassification]],\n    ['wavlm', ['WavLMForSequenceClassification', WavLMForSequenceClassification]],\n    ['hubert', ['HubertForSequenceClassification', HubertForSequenceClassification]],\n    ['audio-spectrogram-transformer', ['ASTForAudioClassification', ASTForAudioClassification]],\n]);\n\nconst MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES = new Map([\n    ['wavlm', ['WavLMForXVector', WavLMForXVector]],\n]);\n\nconst MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES = new Map([\n    ['unispeech-sat', ['UniSpeechSatForAudioFrameClassification', UniSpeechSatForAudioFrameClassification]],\n    ['wavlm', ['WavLMForAudioFrameClassification', WavLMForAudioFrameClassification]],\n    ['wav2vec2', ['Wav2Vec2ForAudioFrameClassification', Wav2Vec2ForAudioFrameClassification]],\n    ['pyannote', ['PyAnnoteForAudioFrameClassification', PyAnnoteForAudioFrameClassification]],\n]);\n\nconst MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES = new Map([\n    ['vitmatte', ['VitMatteForImageMatting', VitMatteForImageMatting]],\n]);\n\nconst MODEL_FOR_TIME_SERIES_PREDICTION_MAPPING_NAMES = new Map([\n    ['patchtst', ['PatchTSTForPrediction', PatchTSTForPrediction]],\n    ['patchtsmixer', ['PatchTSMixerForPrediction', PatchTSMixerForPrediction]],\n])\n\nconst MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES = new Map([\n    ['swin2sr', ['Swin2SRForImageSuperResolution', Swin2SRForImageSuperResolution]],\n])\n\nconst MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES = new Map([\n    ['dpt', ['DPTForDepthEstimation', DPTForDepthEstimation]],\n    ['depth_anything', ['DepthAnythingForDepthEstimation', DepthAnythingForDepthEstimation]],\n    ['glpn', ['GLPNForDepthEstimation', GLPNForDepthEstimation]],\n    ['sapiens', ['SapiensForDepthEstimation', SapiensForDepthEstimation]],\n    ['depth_pro', ['DepthProForDepthEstimation', DepthProForDepthEstimation]],\n])\n\nconst MODEL_FOR_NORMAL_ESTIMATION_MAPPING_NAMES = new Map([\n    ['sapiens', ['SapiensForNormalEstimation', SapiensForNormalEstimation]],\n])\n\nconst MODEL_FOR_POSE_ESTIMATION_MAPPING_NAMES = new Map([\n    ['vitpose', ['VitPoseForPoseEstimation', VitPoseForPoseEstimation]],\n])\n\n// NOTE: This is custom to Transformers.js, and is necessary because certain models\n// (e.g., CLIP) are split into vision and text components\nconst MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES = new Map([\n    ['clip', ['CLIPVisionModelWithProjection', CLIPVisionModelWithProjection]],\n    ['siglip', ['SiglipVisionModel', SiglipVisionModel]],\n    ['jina_clip', ['JinaCLIPVisionModel', JinaCLIPVisionModel]],\n])\n\nconst MODEL_CLASS_TYPE_MAPPING = [\n    // MODEL_MAPPING_NAMES:\n    [MODEL_MAPPING_NAMES_ENCODER_ONLY, MODEL_TYPES.EncoderOnly],\n    [MODEL_MAPPING_NAMES_ENCODER_DECODER, MODEL_TYPES.EncoderDecoder],\n    [MODEL_MAPPING_NAMES_DECODER_ONLY, MODEL_TYPES.DecoderOnly],\n    [MODEL_MAPPING_NAMES_AUTO_ENCODER, MODEL_TYPES.AutoEncoder],\n\n    [MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES, MODEL_TYPES.Seq2Seq],\n    [MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES, MODEL_TYPES.Seq2Seq],\n    [MODEL_FOR_CAUSAL_LM_MAPPING_NAMES, MODEL_TYPES.DecoderOnly],\n    [MODEL_FOR_MULTIMODALITY_MAPPING_NAMES, MODEL_TYPES.MultiModality],\n    [MODEL_FOR_MASKED_LM_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES, MODEL_TYPES.Vision2Seq],\n    [MODEL_FOR_IMAGE_TEXT_TO_TEXT_MAPPING_NAMES, MODEL_TYPES.ImageTextToText],\n    [MODEL_FOR_AUDIO_TEXT_TO_TEXT_MAPPING_NAMES, MODEL_TYPES.AudioTextToText],\n    [MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_UNIVERSAL_SEGMENTATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_TIME_SERIES_PREDICTION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_NORMAL_ESTIMATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_POSE_ESTIMATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_MASK_GENERATION_MAPPING_NAMES, MODEL_TYPES.MaskGeneration],\n    [MODEL_FOR_CTC_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES, MODEL_TYPES.Seq2Seq],\n    [MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n    [MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n\n    // Custom:\n    [MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES, MODEL_TYPES.EncoderOnly],\n];\n\nfor (const [mappings, type] of MODEL_CLASS_TYPE_MAPPING) {\n    // @ts-ignore\n    for (const [name, model] of mappings.values()) {\n        MODEL_TYPE_MAPPING.set(name, type);\n        MODEL_CLASS_TO_NAME_MAPPING.set(model, name);\n        MODEL_NAME_TO_CLASS_MAPPING.set(name, model);\n    }\n}\n\nconst CUSTOM_MAPPING = [\n    // OVERRIDE:\n    // TODO: Refactor to allow class to specify model\n    ['MusicgenForConditionalGeneration', MusicgenForConditionalGeneration, MODEL_TYPES.Musicgen],\n    ['Phi3VForCausalLM', Phi3VForCausalLM, MODEL_TYPES.Phi3V],\n\n    ['CLIPTextModelWithProjection', CLIPTextModelWithProjection, MODEL_TYPES.EncoderOnly],\n    ['SiglipTextModel', SiglipTextModel, MODEL_TYPES.EncoderOnly],\n    ['JinaCLIPTextModel', JinaCLIPTextModel, MODEL_TYPES.EncoderOnly],\n    ['ClapTextModelWithProjection', ClapTextModelWithProjection, MODEL_TYPES.EncoderOnly],\n    ['ClapAudioModelWithProjection', ClapAudioModelWithProjection, MODEL_TYPES.EncoderOnly],\n\n    ['DacEncoderModel', DacEncoderModel, MODEL_TYPES.EncoderOnly],\n    ['DacDecoderModel', DacDecoderModel, MODEL_TYPES.EncoderOnly],\n    ['MimiEncoderModel', MimiEncoderModel, MODEL_TYPES.EncoderOnly],\n    ['MimiDecoderModel', MimiDecoderModel, MODEL_TYPES.EncoderOnly],\n]\nfor (const [name, model, type] of CUSTOM_MAPPING) {\n    MODEL_TYPE_MAPPING.set(name, type);\n    MODEL_CLASS_TO_NAME_MAPPING.set(model, name);\n    MODEL_NAME_TO_CLASS_MAPPING.set(name, model);\n}\n\nconst CUSTOM_ARCHITECTURES = new Map([\n    ['modnet', MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES],\n    ['birefnet', MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES],\n    ['isnet', MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES],\n    ['ben', MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES],\n]);\nfor (const [name, mapping] of CUSTOM_ARCHITECTURES.entries()) {\n    mapping.set(name, ['PreTrainedModel', PreTrainedModel])\n    MODEL_TYPE_MAPPING.set(name, MODEL_TYPES.EncoderOnly);\n    MODEL_CLASS_TO_NAME_MAPPING.set(PreTrainedModel, name);\n    MODEL_NAME_TO_CLASS_MAPPING.set(name, PreTrainedModel);\n}\n\n\n/**\n * Helper class which is used to instantiate pretrained models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModel.from_pretrained('Xenova/bert-base-uncased');\n */\nclass AutoModel extends PretrainedMixin {\n    /** @type {Map<string, Object>[]} */\n    // @ts-ignore\n    static MODEL_CLASS_MAPPINGS = MODEL_CLASS_TYPE_MAPPING.map(x => x[0]);\n    static BASE_IF_FAIL = true;\n}\n\n/**\n * Helper class which is used to instantiate pretrained sequence classification models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForSequenceClassification.from_pretrained('Xenova/distilbert-base-uncased-finetuned-sst-2-english');\n */\nclass AutoModelForSequenceClassification extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained token classification models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForTokenClassification.from_pretrained('Xenova/distilbert-base-multilingual-cased-ner-hrl');\n */\nclass AutoModelForTokenClassification extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained sequence-to-sequence models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForSeq2SeqLM.from_pretrained('Xenova/t5-small');\n */\nclass AutoModelForSeq2SeqLM extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained sequence-to-sequence speech-to-text models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForSpeechSeq2Seq.from_pretrained('openai/whisper-tiny.en');\n */\nclass AutoModelForSpeechSeq2Seq extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained sequence-to-sequence text-to-spectrogram models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForTextToSpectrogram.from_pretrained('microsoft/speecht5_tts');\n */\nclass AutoModelForTextToSpectrogram extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained text-to-waveform models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForTextToSpectrogram.from_pretrained('facebook/mms-tts-eng');\n */\nclass AutoModelForTextToWaveform extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained causal language models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForCausalLM.from_pretrained('Xenova/gpt2');\n */\nclass AutoModelForCausalLM extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_CAUSAL_LM_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained masked language models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForMaskedLM.from_pretrained('Xenova/bert-base-uncased');\n */\nclass AutoModelForMaskedLM extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_MASKED_LM_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained question answering models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForQuestionAnswering.from_pretrained('Xenova/distilbert-base-cased-distilled-squad');\n */\nclass AutoModelForQuestionAnswering extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained vision-to-sequence models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForVision2Seq.from_pretrained('Xenova/vit-gpt2-image-captioning');\n */\nclass AutoModelForVision2Seq extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained image classification models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForImageClassification.from_pretrained('Xenova/vit-base-patch16-224');\n */\nclass AutoModelForImageClassification extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained image segmentation models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForImageSegmentation.from_pretrained('Xenova/detr-resnet-50-panoptic');\n */\nclass AutoModelForImageSegmentation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained image segmentation models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForSemanticSegmentation.from_pretrained('nvidia/segformer-b3-finetuned-cityscapes-1024-1024');\n */\nclass AutoModelForSemanticSegmentation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained universal image segmentation models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForUniversalSegmentation.from_pretrained('hf-internal-testing/tiny-random-MaskFormerForInstanceSegmentation');\n */\nclass AutoModelForUniversalSegmentation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_UNIVERSAL_SEGMENTATION_MAPPING_NAMES];\n}\n\n/**\n * Helper class which is used to instantiate pretrained object detection models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForObjectDetection.from_pretrained('Xenova/detr-resnet-50');\n */\nclass AutoModelForObjectDetection extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES];\n}\n\nclass AutoModelForZeroShotObjectDetection extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES];\n}\n\n\n/**\n * Helper class which is used to instantiate pretrained mask generation models with the `from_pretrained` function.\n * The chosen model class is determined by the type specified in the model config.\n * \n * @example\n * let model = await AutoModelForMaskGeneration.from_pretrained('Xenova/sam-vit-base');\n */\nclass AutoModelForMaskGeneration extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_MASK_GENERATION_MAPPING_NAMES];\n}\n\nclass AutoModelForCTC extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_CTC_MAPPING_NAMES];\n}\n\nclass AutoModelForAudioClassification extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES];\n}\n\nclass AutoModelForXVector extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES];\n}\n\nclass AutoModelForAudioFrameClassification extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES];\n}\n\nclass AutoModelForDocumentQuestionAnswering extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING_NAMES];\n}\n\nclass AutoModelForImageMatting extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES];\n}\n\nclass AutoModelForImageToImage extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES];\n}\n\nclass AutoModelForDepthEstimation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES];\n}\n\nclass AutoModelForNormalEstimation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_NORMAL_ESTIMATION_MAPPING_NAMES];\n}\n\nclass AutoModelForPoseEstimation extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_POSE_ESTIMATION_MAPPING_NAMES];\n}\n\nclass AutoModelForImageFeatureExtraction extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES];\n}\n\nclass AutoModelForImageTextToText extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_IMAGE_TEXT_TO_TEXT_MAPPING_NAMES];\n}\n\nclass AutoModelForAudioTextToText extends PretrainedMixin {\n    static MODEL_CLASS_MAPPINGS = [MODEL_FOR_AUDIO_TEXT_TO_TEXT_MAPPING_NAMES];\n}\n\n//////////////////////////////////////////////////\n\n//////////////////////////////////////////////////\nclass Seq2SeqLMOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits The output logits of the model.\n     * @param {Tensor} output.past_key_values An tensor of key/value pairs that represent the previous state of the model.\n     * @param {Tensor} output.encoder_outputs The output of the encoder in a sequence-to-sequence model.\n     * @param {Tensor} [output.decoder_attentions] Attentions weights of the decoder, after the attention softmax, used to compute the weighted average in the self-attention heads.\n     * @param {Tensor} [output.cross_attentions] Attentions weights of the decoder's cross-attention layer, after the attention softmax, used to compute the weighted average in the cross-attention heads.\n     */\n    constructor({ logits, past_key_values, encoder_outputs, decoder_attentions = null, cross_attentions = null }) {\n        super();\n        this.logits = logits;\n        this.past_key_values = past_key_values;\n        this.encoder_outputs = encoder_outputs;\n        this.decoder_attentions = decoder_attentions;\n        this.cross_attentions = cross_attentions;\n    }\n}\n\n/**\n * Base class for outputs of sentence classification models.\n */\nclass SequenceClassifierOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits classification (or regression if config.num_labels==1) scores (before SoftMax).\n     * @param {Record<string, Tensor>} [output.attentions] Object of `torch.FloatTensor` (one for each layer) of shape `(batch_size, num_heads, sequence_length, sequence_length)`.\n     * Attentions weights after the attention softmax, used to compute the weighted average in the self-attention heads.\n     */\n    constructor({ logits, ...attentions }) {\n        super();\n        this.logits = logits;\n        const attentions_list = Object.values(attentions);\n        if (attentions_list.length > 0) {\n            // Only set attentions if they are not empty\n            this.attentions = attentions_list;\n        }\n    }\n}\n\n/**\n * Base class for outputs of XVector models.\n */\nclass XVectorOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Classification hidden states before AMSoftmax, of shape `(batch_size, config.xvector_output_dim)`.\n     * @param {Tensor} output.embeddings Utterance embeddings used for vector similarity-based retrieval, of shape `(batch_size, config.xvector_output_dim)`.\n     */\n    constructor({ logits, embeddings }) {\n        super();\n        this.logits = logits;\n        this.embeddings = embeddings;\n    }\n}\n\n/**\n * Base class for outputs of token classification models.\n */\nclass TokenClassifierOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Classification scores (before SoftMax).\n     */\n    constructor({ logits }) {\n        super();\n        this.logits = logits;\n    }\n}\n\n/**\n * Base class for masked language models outputs.\n */\nclass MaskedLMOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Prediction scores of the language modeling head (scores for each vocabulary token before SoftMax).\n     */\n    constructor({ logits }) {\n        super();\n        this.logits = logits;\n    }\n}\n\n/**\n * Base class for outputs of question answering models.\n */\nclass QuestionAnsweringModelOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.start_logits Span-start scores (before SoftMax).\n     * @param {Tensor} output.end_logits Span-end scores (before SoftMax).\n     */\n    constructor({ start_logits, end_logits }) {\n        super();\n        this.start_logits = start_logits;\n        this.end_logits = end_logits;\n    }\n}\n\n\n/**\n * Base class for causal language model (or autoregressive) outputs.\n */\nclass CausalLMOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Prediction scores of the language modeling head (scores for each vocabulary token before softmax).\n     */\n    constructor({ logits }) {\n        super();\n        this.logits = logits;\n    }\n}\n\n/**\n * Base class for causal language model (or autoregressive) outputs.\n */\nclass CausalLMOutputWithPast extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.logits Prediction scores of the language modeling head (scores for each vocabulary token before softmax).\n     * @param {Tensor} output.past_key_values Contains pre-computed hidden-states (key and values in the self-attention blocks)\n     * that can be used (see `past_key_values` input) to speed up sequential decoding.\n     */\n    constructor({ logits, past_key_values }) {\n        super();\n        this.logits = logits;\n        this.past_key_values = past_key_values;\n    }\n}\n\nclass ImageMattingOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.alphas Estimated alpha values, of shape `(batch_size, num_channels, height, width)`.\n     */\n    constructor({ alphas }) {\n        super();\n        this.alphas = alphas;\n    }\n}\n\n/**\n * Describes the outputs for the VITS model.\n */\nclass VitsModelOutput extends ModelOutput {\n    /**\n     * @param {Object} output The output of the model.\n     * @param {Tensor} output.waveform The final audio waveform predicted by the model, of shape `(batch_size, sequence_length)`.\n     * @param {Tensor} output.spectrogram The log-mel spectrogram predicted at the output of the flow model.\n     * This spectrogram is passed to the Hi-Fi GAN decoder model to obtain the final audio waveform.\n     */\n    constructor({ waveform, spectrogram }) {\n        super();\n        this.waveform = waveform;\n        this.spectrogram = spectrogram;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js\":\n/*!******************************************************************************************************!*\\\n  !*** ./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js ***!\n  \\******************************************************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASTFeatureExtractor: () => (/* binding */ ASTFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/audio.js */ \"./src/utils/audio.js\");\n\n\n\n\n\nclass ASTFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    constructor(config) {\n        super(config);\n\n        const sampling_rate = this.config.sampling_rate;\n        const mel_filters = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            256, // num_frequency_bins\n            this.config.num_mel_bins, // num_mel_filters\n            20, // min_frequency\n            Math.floor(sampling_rate / 2), // max_frequency\n            sampling_rate, // sampling_rate\n            null, // norm\n            \"kaldi\", // mel_scale\n            true, // triangularize_in_mel_space\n        );\n\n        // Do padding:\n        for (let i = 0; i < mel_filters.length; ++i) {\n            mel_filters[i].push(0);\n        }\n        this.mel_filters = mel_filters;\n\n        this.window = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.window_function)(400, 'hann', {\n            periodic: false,\n        })\n\n        this.mean = this.config.mean;\n        this.std = this.config.std;\n    }\n\n    /**\n     * Computes the log-Mel spectrogram of the provided audio waveform.\n     * @param {Float32Array|Float64Array} waveform The audio waveform to process.\n     * @param {number} max_length The maximum number of frames to return.\n     * @returns {Promise<Tensor>} An object containing the log-Mel spectrogram data as a Float32Array and its dimensions as an array of numbers.\n     */\n    async _extract_fbank_features(waveform, max_length) {\n        // NOTE: We don't pad/truncate since that is passed in as `max_num_frames`\n        return (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.spectrogram)(\n            waveform,\n            this.window, // window\n            400, // frame_length\n            160, // hop_length\n            {\n                fft_length: 512,\n                power: 2.0,\n                center: false,\n                preemphasis: 0.97,\n                mel_filters: this.mel_filters,\n                log_mel: 'log',\n                mel_floor: 1.192092955078125e-07,\n                remove_dc_offset: true,\n\n                // Custom\n                max_num_frames: max_length,\n                transpose: true,\n            }\n        )\n    }\n\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_values: Tensor }>} A Promise resolving to an object containing the extracted input features as a Tensor.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'ASTFeatureExtractor');\n\n        const features = await this._extract_fbank_features(audio, this.config.max_length);\n        if (this.config.do_normalize) {\n            // Normalize the input audio spectrogram to have mean=0, std=0.5\n            const denom = this.std * 2;\n            const features_data = features.data;\n            for (let i = 0; i < features_data.length; ++i) {\n                features_data[i] = (features_data[i] - this.mean) / denom;\n            }\n        }\n\n        return {\n            input_values: features.unsqueeze_(0)\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/auto/feature_extraction_auto.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/auto/feature_extraction_auto.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoFeatureExtractor: () => (/* binding */ AutoFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _feature_extractors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../feature_extractors.js */ \"./src/models/feature_extractors.js\");\n\n\n\n\n\n\nclass AutoFeatureExtractor {\n\n    /** @type {typeof FeatureExtractor.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options={}) {\n\n        const preprocessorConfig = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_1__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.FEATURE_EXTRACTOR_NAME, true, options);\n\n        // Determine feature extractor class\n        const key = preprocessorConfig.feature_extractor_type;\n        const feature_extractor_class = _feature_extractors_js__WEBPACK_IMPORTED_MODULE_3__[key];\n\n        if (!feature_extractor_class) {\n            throw new Error(`Unknown feature_extractor_type: '${key}'. Please report this at ${_utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.GITHUB_ISSUE_URL}.`);\n        }\n\n        // Instantiate feature extractor\n        return new feature_extractor_class(preprocessorConfig);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/auto/image_processing_auto.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/auto/image_processing_auto.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoImageProcessor: () => (/* binding */ AutoImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _image_processors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../image_processors.js */ \"./src/models/image_processors.js\");\n\n\n\n\n\n\nclass AutoImageProcessor {\n\n    /** @type {typeof ImageProcessor.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options={}) {\n\n        const preprocessorConfig = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_1__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.IMAGE_PROCESSOR_NAME, true, options);\n\n        // Determine image processor class\n        const key = preprocessorConfig.image_processor_type ?? preprocessorConfig.feature_extractor_type;\n        let image_processor_class = _image_processors_js__WEBPACK_IMPORTED_MODULE_3__[key];\n\n        if (!image_processor_class) {\n            if (key !== undefined) {\n                // Only log a warning if the class is not found and the key is set.\n                console.warn(`Image processor type '${key}' not found, assuming base ImageProcessor. Please report this at ${_utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.GITHUB_ISSUE_URL}.`)\n            }\n            image_processor_class = _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_2__.ImageProcessor;\n        }\n\n        // Instantiate image processor\n        return new image_processor_class(preprocessorConfig);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/auto/processing_auto.js\":\n/*!********************************************!*\\\n  !*** ./src/models/auto/processing_auto.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoProcessor: () => (/* binding */ AutoProcessor)\n/* harmony export */ });\n/* harmony import */ var _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/constants.js */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _processors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../processors.js */ \"./src/models/processors.js\");\n/* harmony import */ var _image_processors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../image_processors.js */ \"./src/models/image_processors.js\");\n/* harmony import */ var _feature_extractors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../feature_extractors.js */ \"./src/models/feature_extractors.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Helper class which is used to instantiate pretrained processors with the `from_pretrained` function.\n * The chosen processor class is determined by the type specified in the processor config.\n * \n * **Example:** Load a processor using `from_pretrained`.\n * ```javascript\n * let processor = await AutoProcessor.from_pretrained('openai/whisper-tiny.en');\n * ```\n * \n * **Example:** Run an image through a processor.\n * ```javascript\n * let processor = await AutoProcessor.from_pretrained('Xenova/clip-vit-base-patch16');\n * let image = await RawImage.read('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/football-match.jpg');\n * let image_inputs = await processor(image);\n * // {\n * //   \"pixel_values\": {\n * //     \"dims\": [ 1, 3, 224, 224 ],\n * //     \"type\": \"float32\",\n * //     \"data\": Float32Array [ -1.558687686920166, -1.558687686920166, -1.5440893173217773, ... ],\n * //     \"size\": 150528\n * //   },\n * //   \"original_sizes\": [\n * //     [ 533, 800 ]\n * //   ],\n * //   \"reshaped_input_sizes\": [\n * //     [ 224, 224 ]\n * //   ]\n * // }\n * ```\n */\nclass AutoProcessor {\n\n    /** @type {typeof Processor.from_pretrained} */\n    static async from_pretrained(pretrained_model_name_or_path, options={}) {\n\n        // TODO: first check for processor.json \n        const preprocessorConfig = await (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_1__.getModelJSON)(pretrained_model_name_or_path, _utils_constants_js__WEBPACK_IMPORTED_MODULE_0__.IMAGE_PROCESSOR_NAME, true, options);\n\n        const { image_processor_type, feature_extractor_type, processor_class } = preprocessorConfig;\n        if (processor_class && _processors_js__WEBPACK_IMPORTED_MODULE_3__[processor_class]) {\n            return _processors_js__WEBPACK_IMPORTED_MODULE_3__[processor_class].from_pretrained(pretrained_model_name_or_path, options);\n        }\n\n        if (!image_processor_type && !feature_extractor_type) {\n            throw new Error('No `image_processor_type` or `feature_extractor_type` found in the config.');\n        }\n\n        const components = {};\n        if (image_processor_type) {\n            const image_processor_class = _image_processors_js__WEBPACK_IMPORTED_MODULE_4__[image_processor_type];\n            if (!image_processor_class) {\n                throw new Error(`Unknown image_processor_type: '${image_processor_type}'.`);\n            }\n            components.image_processor = new image_processor_class(preprocessorConfig);\n        }\n\n        if (feature_extractor_type) {\n            const image_processor_class = _image_processors_js__WEBPACK_IMPORTED_MODULE_4__[feature_extractor_type];\n            if (image_processor_class) {\n                // Handle legacy case where image processors were specified as feature extractors\n                components.image_processor = new image_processor_class(preprocessorConfig);\n            } else {\n                const feature_extractor_class = _feature_extractors_js__WEBPACK_IMPORTED_MODULE_5__[feature_extractor_type];\n                if (!feature_extractor_class) {\n                    throw new Error(`Unknown feature_extractor_type: '${feature_extractor_type}'.`);\n                }\n                components.feature_extractor = new feature_extractor_class(preprocessorConfig);\n            }\n        }\n\n        const config = {};\n        return new _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor(config, components);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/beit/image_processing_beit.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/beit/image_processing_beit.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BeitFeatureExtractor: () => (/* binding */ BeitFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass BeitFeatureExtractor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/bit/image_processing_bit.js\":\n/*!************************************************!*\\\n  !*** ./src/models/bit/image_processing_bit.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BitImageProcessor: () => (/* binding */ BitImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass BitImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/chinese_clip/image_processing_chinese_clip.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/chinese_clip/image_processing_chinese_clip.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChineseCLIPFeatureExtractor: () => (/* binding */ ChineseCLIPFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass ChineseCLIPFeatureExtractor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/clap/feature_extraction_clap.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/clap/feature_extraction_clap.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClapFeatureExtractor: () => (/* binding */ ClapFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/audio.js */ \"./src/utils/audio.js\");\n\n\n\n\n\nclass ClapFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    constructor(config) {\n        super(config);\n\n        this.mel_filters = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            this.config.nb_frequency_bins, // num_frequency_bins\n            this.config.feature_size, // num_mel_filters\n            this.config.frequency_min, // min_frequency\n            this.config.frequency_max, // max_frequency\n            this.config.sampling_rate, // sampling_rate\n            null, // norm\n            \"htk\", // mel_scale\n        );\n\n        this.mel_filters_slaney = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            this.config.nb_frequency_bins, // num_frequency_bins\n            this.config.feature_size, // num_mel_filters\n            this.config.frequency_min, // min_frequency\n            this.config.frequency_max, // max_frequency\n            this.config.sampling_rate, // sampling_rate\n            \"slaney\", // norm\n            \"slaney\", // mel_scale\n        );\n\n        this.window = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.window_function)(this.config.fft_window_size, 'hann')\n\n    }\n\n\n    /**\n     * Extracts the mel spectrogram and prepares it for the mode based on the `truncation` and `padding` arguments.\n     * \n     * Four different path are possible:\n     *   - `truncation=\"fusion\"` and the length of the waveform is greater than the max length: the mel spectrogram\n     *     will be computed on the entire audio. 3 random crops and a dowsampled version of the full mel spectrogram\n     *     are then stacked together. They will later be used for `feature_fusion`.\n     *   - `truncation=\"rand_trunc\"` and the length of the waveform is smaller than the max length: the audio is\n     *     padded based on `padding`.\n     *   - `truncation=\"fusion\"` and the length of the waveform is smaller than the max length: the audio is padded\n     *     based on `padding`, and is repeated `4` times.\n     *   - `truncation=\"rand_trunc\"` and the length of the waveform is greater than the max length: the mel\n     *     spectrogram will be computed on a random crop of the waveform.\n     * \n     * @param {Float32Array|Float64Array} waveform The input waveform.\n     * @param {number} max_length The maximum length of the waveform.\n     * @param {string} truncation The truncation strategy to use.\n     * @param {string} padding The padding strategy to use.\n     * @returns {Promise<Tensor>} An object containing the mel spectrogram data as a Float32Array, its dimensions as an array of numbers, and a boolean indicating whether the waveform was longer than the max length.\n     * @private\n     */\n    async _get_input_mel(waveform, max_length, truncation, padding) {\n\n        /** @type {Tensor} */\n        let input_mel;\n        let longer = false;\n        const diff = waveform.length - max_length;\n        if (diff > 0) {\n            if (truncation === 'rand_trunc') {\n                longer = true;\n                const idx = Math.floor(Math.random() * (diff + 1));\n                waveform = waveform.subarray(idx, idx + max_length);\n\n                input_mel = await this._extract_fbank_features(waveform, this.mel_filters_slaney, this.config.nb_max_samples);\n            } else {\n                // TODO implement fusion strategy\n                throw new Error(`Truncation strategy \"${truncation}\" not implemented`)\n            }\n        } else {\n            if (diff < 0) {\n                let padded = new Float64Array(max_length); // already padded with zeros\n                padded.set(waveform);\n\n                if (padding === 'repeat') {\n                    for (let i = waveform.length; i < max_length; i += waveform.length) {\n                        padded.set(waveform.subarray(0, Math.min(waveform.length, max_length - i)), i);\n                    }\n                } else if (padding === 'repeatpad') {\n                    for (let i = waveform.length; i < -diff; i += waveform.length) {\n                        padded.set(waveform, i);\n                    }\n                }\n                waveform = padded;\n            }\n\n            if (truncation === 'fusion') {\n                throw new Error(`Truncation strategy \"${truncation}\" not implemented`)\n            }\n\n            input_mel = await this._extract_fbank_features(waveform, this.mel_filters_slaney, this.config.nb_max_samples);\n        }\n\n        return input_mel.unsqueeze_(0);\n    }\n\n    /**\n     * Compute the log-mel spectrogram of the provided `waveform` using the Hann window.\n     * In CLAP, two different filter banks are used depending on the truncation pattern:\n     *  - `self.mel_filters`: they correspond to the default parameters of `torchaudio` which can be obtained from\n     *    calling `torchaudio.transforms.MelSpectrogram().mel_scale.fb`. These filters are used when `truncation`\n     *    is set to `\"fusion\"`.\n     *  - `self.mel_filteres_slaney` : they correspond to the default parameters of `librosa` which used\n     *    `librosa.filters.mel` when computing the mel spectrogram. These filters were only used in the original\n     *    implementation when the truncation mode is not `\"fusion\"`.\n     * \n     * @param {Float32Array|Float64Array} waveform The audio waveform to process.\n     * @param {number[][]} mel_filters The mel filters to use.\n     * @param {number} [max_length=null] The maximum number of frames to return.\n     * @returns {Promise<Tensor>} An object containing the log-Mel spectrogram data as a Float32Array and its dimensions as an array of numbers.\n     */\n    async _extract_fbank_features(waveform, mel_filters, max_length = null) {\n        // NOTE: We don't pad/truncate since that is passed in as `max_num_frames`\n        return (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.spectrogram)(\n            waveform,\n            this.window, // window\n            this.config.fft_window_size, // frame_length\n            this.config.hop_length, // hop_length\n            {\n                power: 2.0,\n                mel_filters,\n                log_mel: 'dB',\n\n                // Custom\n                max_num_frames: max_length,\n                do_pad: false,\n                transpose: true,\n            }\n        )\n    }\n\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_features: Tensor }>} A Promise resolving to an object containing the extracted input features as a Tensor.\n     */\n    async _call(audio, {\n        max_length = null,\n    } = {}) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'ClapFeatureExtractor');\n\n        // convert to mel spectrogram, truncate and pad if needed.\n        const padded_inputs = await this._get_input_mel(\n            audio,\n            max_length ?? this.config.nb_max_samples,\n            this.config.truncation,\n            this.config.padding,\n        );\n\n        return {\n            input_features: padded_inputs.unsqueeze_(0),\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/clip/image_processing_clip.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/clip/image_processing_clip.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLIPFeatureExtractor: () => (/* binding */ CLIPFeatureExtractor),\n/* harmony export */   CLIPImageProcessor: () => (/* binding */ CLIPImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass CLIPImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass CLIPFeatureExtractor extends CLIPImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/convnext/image_processing_convnext.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/convnext/image_processing_convnext.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvNextFeatureExtractor: () => (/* binding */ ConvNextFeatureExtractor),\n/* harmony export */   ConvNextImageProcessor: () => (/* binding */ ConvNextImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass ConvNextImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        super(config);\n\n        /**\n         * Percentage of the image to crop. Only has an effect if this.size < 384.\n         */\n        // @ts-expect-error TS2339\n        this.crop_pct = this.config.crop_pct ?? (224 / 256);\n    }\n\n    async resize(image) {\n        const shortest_edge = this.size?.shortest_edge;\n        if (shortest_edge === undefined) {\n            throw new Error(`Size dictionary must contain 'shortest_edge' key.`);\n        }\n\n        if (shortest_edge < 384) {\n            // maintain same ratio, resizing shortest edge to shortest_edge/crop_pct\n            const resize_shortest_edge = Math.floor(shortest_edge / this.crop_pct);\n\n            const [newWidth, newHeight] = this.get_resize_output_image_size(image, {\n                shortest_edge: resize_shortest_edge,\n            });\n\n            image = await image.resize(newWidth, newHeight, {\n                resample: this.resample,\n            });\n\n            // then crop to (shortest_edge, shortest_edge)\n            image = await image.center_crop(shortest_edge, shortest_edge);\n        } else {\n            // warping (no cropping) when evaluated at 384 or larger\n            image = await image.resize(shortest_edge, shortest_edge, {\n                resample: this.resample,\n            });\n        }\n\n        return image;\n    }\n}\nclass ConvNextFeatureExtractor extends ConvNextImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/dac/feature_extraction_dac.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/dac/feature_extraction_dac.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DacFeatureExtractor: () => (/* binding */ DacFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _encodec_feature_extraction_encodec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encodec/feature_extraction_encodec.js */ \"./src/models/encodec/feature_extraction_encodec.js\");\n\n\nclass DacFeatureExtractor extends _encodec_feature_extraction_encodec_js__WEBPACK_IMPORTED_MODULE_0__.EncodecFeatureExtractor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/deit/image_processing_deit.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/deit/image_processing_deit.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeiTFeatureExtractor: () => (/* binding */ DeiTFeatureExtractor),\n/* harmony export */   DeiTImageProcessor: () => (/* binding */ DeiTImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass DeiTImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass DeiTFeatureExtractor extends DeiTImageProcessor { }\n\n/***/ }),\n\n/***/ \"./src/models/detr/image_processing_detr.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/detr/image_processing_detr.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DetrFeatureExtractor: () => (/* binding */ DetrFeatureExtractor),\n/* harmony export */   DetrImageProcessor: () => (/* binding */ DetrImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\n\n/**\n * @typedef {object} DetrFeatureExtractorResultProps\n * @property {import('../../utils/tensor.js').Tensor} pixel_mask\n * @typedef {import('../../base/image_processors_utils.js').ImageProcessorResult & DetrFeatureExtractorResultProps} DetrFeatureExtractorResult\n */\n\nclass DetrImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /**\n     * Calls the feature extraction process on an array of images, preprocesses\n     * each image, and concatenates the resulting features into a single Tensor.\n     * @param {import('../../utils/image.js').RawImage[]} images The image(s) to extract features from.\n     * @returns {Promise<DetrFeatureExtractorResult>} An object containing the concatenated pixel values of the preprocessed images.\n     */\n    async _call(images) {\n        const result = await super._call(images);\n\n        // TODO support differently-sized images, for now assume all images are the same size.\n        // TODO support different mask sizes (not just 64x64)\n        // Currently, just fill pixel mask with 1s\n        const maskSize = [result.pixel_values.dims[0], 64, 64];\n        const pixel_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.full)(maskSize, 1n);\n\n        return { ...result, pixel_mask };\n    }\n\n    /** @type {typeof post_process_object_detection} */\n    post_process_object_detection(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_object_detection)(...args);\n    }\n\n    /** @type {typeof post_process_panoptic_segmentation} */\n    post_process_panoptic_segmentation(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_panoptic_segmentation)(...args);\n    }\n\n    /** @type {typeof post_process_instance_segmentation} */\n    post_process_instance_segmentation(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_instance_segmentation)(...args);\n    }\n}\n\nclass DetrFeatureExtractor extends DetrImageProcessor { } // NOTE: extends DetrImageProcessor  \n\n\n/***/ }),\n\n/***/ \"./src/models/donut/image_processing_donut.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/donut/image_processing_donut.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DonutFeatureExtractor: () => (/* binding */ DonutFeatureExtractor),\n/* harmony export */   DonutImageProcessor: () => (/* binding */ DonutImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass DonutImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    pad_image(pixelData, imgDims, padSize, options = {}) {\n        const [imageHeight, imageWidth, imageChannels] = imgDims;\n\n        let image_mean = this.image_mean;\n        if (!Array.isArray(this.image_mean)) {\n            image_mean = new Array(imageChannels).fill(image_mean);\n        }\n\n        let image_std = this.image_std;\n        if (!Array.isArray(image_std)) {\n            image_std = new Array(imageChannels).fill(image_mean);\n        }\n\n        const constant_values = image_mean.map((x, i) => - x / image_std[i]);\n\n        return super.pad_image(pixelData, imgDims, padSize, {\n            center: true,\n\n            // Since normalization is done after padding, we need to use certain constant values to ensure the same behaviour is observed.\n            // For more information, see https://github.com/huggingface/transformers/blob/main/src/transformers/models/donut/image_processing_donut.py#L433-L451\n            constant_values,\n            ...options,\n        });\n    }\n}\nclass DonutFeatureExtractor extends DonutImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/dpt/image_processing_dpt.js\":\n/*!************************************************!*\\\n  !*** ./src/models/dpt/image_processing_dpt.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DPTFeatureExtractor: () => (/* binding */ DPTFeatureExtractor),\n/* harmony export */   DPTImageProcessor: () => (/* binding */ DPTImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass DPTImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass DPTFeatureExtractor extends DPTImageProcessor { } // NOTE: extends DPTImageProcessor\n\n\n/***/ }),\n\n/***/ \"./src/models/efficientnet/image_processing_efficientnet.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/efficientnet/image_processing_efficientnet.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EfficientNetImageProcessor: () => (/* binding */ EfficientNetImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass EfficientNetImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        super(config);\n        // @ts-expect-error TS2339\n        this.include_top = this.config.include_top ?? true;\n        if (this.include_top) {\n            this.image_std = this.image_std.map(x => x * x);\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/encodec/feature_extraction_encodec.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/encodec/feature_extraction_encodec.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncodecFeatureExtractor: () => (/* binding */ EncodecFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\nclass EncodecFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n    /**\n     * Asynchronously extracts input values from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_values: Tensor; }>} The extracted input values.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'EncodecFeatureExtractor');\n\n        if (audio instanceof Float64Array) {\n            audio = new Float32Array(audio);\n        }\n\n        const num_channels = this.config.feature_size;\n        if (audio.length % num_channels !== 0) {\n            throw new Error(`The length of the audio data must be a multiple of the number of channels (${num_channels}).`);\n        }\n\n        const shape = [\n            1,                              /* batch_size */\n            num_channels,                   /* num_channels */\n            audio.length / num_channels,    /* num_samples */\n        ];\n        return {\n            input_values: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('float32', audio, shape),\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/feature_extractors.js\":\n/*!******************************************!*\\\n  !*** ./src/models/feature_extractors.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASTFeatureExtractor: () => (/* reexport safe */ _audio_spectrogram_transformer_feature_extraction_audio_spectrogram_transformer_js__WEBPACK_IMPORTED_MODULE_0__.ASTFeatureExtractor),\n/* harmony export */   ClapFeatureExtractor: () => (/* reexport safe */ _clap_feature_extraction_clap_js__WEBPACK_IMPORTED_MODULE_2__.ClapFeatureExtractor),\n/* harmony export */   DacFeatureExtractor: () => (/* reexport safe */ _dac_feature_extraction_dac_js__WEBPACK_IMPORTED_MODULE_3__.DacFeatureExtractor),\n/* harmony export */   EncodecFeatureExtractor: () => (/* reexport safe */ _encodec_feature_extraction_encodec_js__WEBPACK_IMPORTED_MODULE_1__.EncodecFeatureExtractor),\n/* harmony export */   ImageFeatureExtractor: () => (/* reexport safe */ _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_11__.ImageProcessor),\n/* harmony export */   MoonshineFeatureExtractor: () => (/* reexport safe */ _moonshine_feature_extraction_moonshine_js__WEBPACK_IMPORTED_MODULE_4__.MoonshineFeatureExtractor),\n/* harmony export */   PyAnnoteFeatureExtractor: () => (/* reexport safe */ _pyannote_feature_extraction_pyannote_js__WEBPACK_IMPORTED_MODULE_5__.PyAnnoteFeatureExtractor),\n/* harmony export */   SeamlessM4TFeatureExtractor: () => (/* reexport safe */ _seamless_m4t_feature_extraction_seamless_m4t_js__WEBPACK_IMPORTED_MODULE_6__.SeamlessM4TFeatureExtractor),\n/* harmony export */   SpeechT5FeatureExtractor: () => (/* reexport safe */ _speecht5_feature_extraction_speecht5_js__WEBPACK_IMPORTED_MODULE_7__.SpeechT5FeatureExtractor),\n/* harmony export */   Wav2Vec2FeatureExtractor: () => (/* reexport safe */ _wav2vec2_feature_extraction_wav2vec2_js__WEBPACK_IMPORTED_MODULE_8__.Wav2Vec2FeatureExtractor),\n/* harmony export */   WeSpeakerFeatureExtractor: () => (/* reexport safe */ _wespeaker_feature_extraction_wespeaker_js__WEBPACK_IMPORTED_MODULE_9__.WeSpeakerFeatureExtractor),\n/* harmony export */   WhisperFeatureExtractor: () => (/* reexport safe */ _whisper_feature_extraction_whisper_js__WEBPACK_IMPORTED_MODULE_10__.WhisperFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _audio_spectrogram_transformer_feature_extraction_audio_spectrogram_transformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js */ \"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js\");\n/* harmony import */ var _encodec_feature_extraction_encodec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encodec/feature_extraction_encodec.js */ \"./src/models/encodec/feature_extraction_encodec.js\");\n/* harmony import */ var _clap_feature_extraction_clap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clap/feature_extraction_clap.js */ \"./src/models/clap/feature_extraction_clap.js\");\n/* harmony import */ var _dac_feature_extraction_dac_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dac/feature_extraction_dac.js */ \"./src/models/dac/feature_extraction_dac.js\");\n/* harmony import */ var _moonshine_feature_extraction_moonshine_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./moonshine/feature_extraction_moonshine.js */ \"./src/models/moonshine/feature_extraction_moonshine.js\");\n/* harmony import */ var _pyannote_feature_extraction_pyannote_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pyannote/feature_extraction_pyannote.js */ \"./src/models/pyannote/feature_extraction_pyannote.js\");\n/* harmony import */ var _seamless_m4t_feature_extraction_seamless_m4t_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./seamless_m4t/feature_extraction_seamless_m4t.js */ \"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js\");\n/* harmony import */ var _speecht5_feature_extraction_speecht5_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./speecht5/feature_extraction_speecht5.js */ \"./src/models/speecht5/feature_extraction_speecht5.js\");\n/* harmony import */ var _wav2vec2_feature_extraction_wav2vec2_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./wav2vec2/feature_extraction_wav2vec2.js */ \"./src/models/wav2vec2/feature_extraction_wav2vec2.js\");\n/* harmony import */ var _wespeaker_feature_extraction_wespeaker_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wespeaker/feature_extraction_wespeaker.js */ \"./src/models/wespeaker/feature_extraction_wespeaker.js\");\n/* harmony import */ var _whisper_feature_extraction_whisper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./whisper/feature_extraction_whisper.js */ \"./src/models/whisper/feature_extraction_whisper.js\");\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n// For legacy support, ImageFeatureExtractor is an alias for ImageProcessor\n\n\n\n/***/ }),\n\n/***/ \"./src/models/florence2/processing_florence2.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/florence2/processing_florence2.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Florence2Processor: () => (/* binding */ Florence2Processor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n\n\n\n\nclass Florence2Processor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n\n    constructor(config, components) {\n        super(config, components);\n\n        const {\n            // @ts-expect-error TS2339\n            tasks_answer_post_processing_type,\n            // @ts-expect-error TS2339\n            task_prompts_without_inputs,\n            // @ts-expect-error TS2339\n            task_prompts_with_input,\n        } = this.image_processor.config;\n\n        /** @type {Map<string, string>} */\n        this.tasks_answer_post_processing_type = new Map(Object.entries(tasks_answer_post_processing_type ?? {}));\n\n        /** @type {Map<string, string>} */\n        this.task_prompts_without_inputs = new Map(Object.entries(task_prompts_without_inputs ?? {}));\n\n        /** @type {Map<string, string>} */\n        this.task_prompts_with_input = new Map(Object.entries(task_prompts_with_input ?? {}));\n\n        this.regexes = {\n            quad_boxes: /(.+?)<loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)>/gm,\n            bboxes: /([^<]+)?<loc_(\\d+)><loc_(\\d+)><loc_(\\d+)><loc_(\\d+)>/gm,\n        }\n        this.size_per_bin = 1000;\n    }\n\n    /**\n     * Helper function to construct prompts from input texts\n     * @param {string|string[]} text\n     * @returns {string[]}\n     */\n    construct_prompts(text) {\n        if (typeof text === 'string') {\n            text = [text];\n        }\n\n        const prompts = [];\n        for (const t of text) {\n            // 1. fixed task prompts without additional inputs\n            if (this.task_prompts_without_inputs.has(t)) {\n                prompts.push(this.task_prompts_without_inputs.get(t));\n            }\n            // 2. task prompts with additional inputs \n            else {\n                for (const [task, prompt] of this.task_prompts_with_input) {\n                    if (t.includes(task)) {\n                        prompts.push(prompt.replaceAll('{input}', t).replaceAll(task, ''));\n                        break;\n                    }\n                }\n\n                // 3. default prompt\n                if (prompts.length !== text.length) {\n                    prompts.push(t);\n                }\n            }\n        }\n        return prompts;\n    }\n\n    /**\n     * Post-process the output of the model to each of the task outputs.\n     * @param {string} text The text to post-process.\n     * @param {string} task The task to post-process the text for.\n     * @param {[number, number]} image_size The size of the image. height x width.\n     */\n    post_process_generation(text, task, image_size) {\n        const task_answer_post_processing_type = this.tasks_answer_post_processing_type.get(task) ?? 'pure_text';\n\n        // remove the special tokens\n        text = text.replaceAll('<s>', '').replaceAll('</s>', '');\n\n        let final_answer;\n        switch (task_answer_post_processing_type) {\n            case 'pure_text':\n                final_answer = text;\n                break;\n\n            case 'description_with_bboxes':\n            case 'bboxes':\n            case 'phrase_grounding':\n            case 'ocr':\n                const key = task_answer_post_processing_type === 'ocr' ? 'quad_boxes' : 'bboxes';\n                const matches = text.matchAll(this.regexes[key]);\n                const labels = [];\n                const items = [];\n                for (const [_, label, ...locations] of matches) {\n                    // Push new label, or duplicate the last label\n                    labels.push(label ? label.trim() : labels.at(-1) ?? '');\n                    items.push(locations.map((x, i) =>\n                        // NOTE: Add 0.5 to use the center position of the bin as the coordinate.\n                        (Number(x) + 0.5) / this.size_per_bin * image_size[i % 2])\n                    );\n                }\n                final_answer = { labels, [key]: items };\n                break;\n\n            default:\n                throw new Error(`Task \"${task}\" (of type \"${task_answer_post_processing_type}\") not yet implemented.`);\n        }\n\n        return { [task]: final_answer }\n    }\n\n    // NOTE: images and text are switched from the python version\n    // `images` is required, `text` is optional\n    async _call(images, text=null, kwargs = {}) {\n\n        if (!images && !text){\n            throw new Error('Either text or images must be provided');\n        }\n\n        const image_inputs = await this.image_processor(images, kwargs);\n        const text_inputs = text ? this.tokenizer(text, kwargs) : {};\n\n        return {\n            ...image_inputs,\n            ...text_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/glpn/image_processing_glpn.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/glpn/image_processing_glpn.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLPNFeatureExtractor: () => (/* binding */ GLPNFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass GLPNFeatureExtractor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/grounding_dino/image_processing_grounding_dino.js\":\n/*!**********************************************************************!*\\\n  !*** ./src/models/grounding_dino/image_processing_grounding_dino.js ***!\n  \\**********************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroundingDinoImageProcessor: () => (/* binding */ GroundingDinoImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\n\n/**\n * @typedef {object} GroundingDinoFeatureExtractorResultProps\n * @property {import('../../utils/tensor.js').Tensor} pixel_mask\n * @typedef {import('../../base/image_processors_utils.js').ImageProcessorResult & GroundingDinoFeatureExtractorResultProps} GroundingDinoFeatureExtractorResult\n */\n\nclass GroundingDinoImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /**\n     * Calls the feature extraction process on an array of images, preprocesses\n     * each image, and concatenates the resulting features into a single Tensor.\n     * @param {import('../../utils/image.js').RawImage[]} images The image(s) to extract features from.\n     * @returns {Promise<GroundingDinoFeatureExtractorResult>} An object containing the concatenated pixel values of the preprocessed images.\n     */\n    async _call(images) {\n        const result = await super._call(images);\n\n        const dims = result.pixel_values.dims;\n        const pixel_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.ones)([dims[0], dims[2], dims[3]]);\n\n        return { ...result, pixel_mask };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/grounding_dino/processing_grounding_dino.js\":\n/*!****************************************************************!*\\\n  !*** ./src/models/grounding_dino/processing_grounding_dino.js ***!\n  \\****************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroundingDinoProcessor: () => (/* binding */ GroundingDinoProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\n\n\n/**\n * Get token ids of phrases from posmaps and input_ids.\n * @param {import('../../utils/tensor.js').Tensor} posmaps A boolean tensor of unbatched text-thresholded logits related to the detected bounding boxes of shape `(hidden_size, )`.\n * @param {import('../../utils/tensor.js').Tensor} input_ids A tensor of token ids of shape `(sequence_length, )`.\n */\nfunction get_phrases_from_posmap(posmaps, input_ids) {\n\n    const left_idx = 0;\n    const right_idx = posmaps.dims.at(-1) - 1;\n\n    const posmaps_list = posmaps.tolist();\n    posmaps_list.fill(false, 0, left_idx + 1);\n    posmaps_list.fill(false, right_idx);\n\n    const input_ids_list = input_ids.tolist();\n    return posmaps_list\n        .map((val, idx) => val ? idx : null)\n        .filter(idx => idx !== null)\n        .map(i => input_ids_list[i]);\n}\n\nclass GroundingDinoProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n\n    /**\n     * @typedef {import('../../utils/image.js').RawImage} RawImage\n     */\n    /**\n     * \n     * @param {RawImage|RawImage[]|RawImage[][]} images  \n     * @param {string|string[]} text \n     * @returns {Promise<any>}\n     */\n    async _call(images, text, options = {}) {\n\n        const image_inputs = images ? await this.image_processor(images, options) : {};\n        const text_inputs = text ? this.tokenizer(text, options) : {};\n\n        return {\n            ...text_inputs,\n            ...image_inputs,\n        }\n    }\n    post_process_grounded_object_detection(outputs, input_ids, {\n        box_threshold = 0.25,\n        text_threshold = 0.25,\n        target_sizes = null\n    } = {}) {\n        const { logits, pred_boxes } = outputs;\n        const batch_size = logits.dims[0];\n\n        if (target_sizes !== null && target_sizes.length !== batch_size) {\n            throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\")\n        }\n        const num_queries = logits.dims.at(1);\n\n        const probs = logits.sigmoid(); // (batch_size, num_queries, 256)\n        const scores = probs.max(-1).tolist(); // (batch_size, num_queries)\n\n        // Convert to [x0, y0, x1, y1] format\n        const boxes = pred_boxes.tolist() // (batch_size, num_queries, 4)\n            .map(batch => batch.map(box => (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_3__.center_to_corners_format)(box)));\n\n        const results = [];\n        for (let i = 0; i < batch_size; ++i) {\n            const target_size = target_sizes !== null ? target_sizes[i] : null;\n\n            // Convert from relative [0, 1] to absolute [0, height] coordinates\n            if (target_size !== null) {\n                boxes[i] = boxes[i].map(box => box.map((x, j) => x * target_size[(j + 1) % 2]));\n            }\n\n            const batch_scores = scores[i];\n            const final_scores = [];\n            const final_phrases = [];\n            const final_boxes = [];\n            for (let j = 0; j < num_queries; ++j) {\n                const score = batch_scores[j];\n                if (score <= box_threshold) {\n                    continue;\n                }\n                const box = boxes[i][j];\n                const prob = probs[i][j];\n\n                final_scores.push(score);\n                final_boxes.push(box);\n\n                const phrases = get_phrases_from_posmap(prob.gt(text_threshold), input_ids[i]);\n                final_phrases.push(phrases);\n            }\n            results.push({ scores: final_scores, boxes: final_boxes, labels: this.batch_decode(final_phrases) });\n        }\n        return results;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/idefics3/image_processing_idefics3.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/idefics3/image_processing_idefics3.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Idefics3ImageProcessor: () => (/* binding */ Idefics3ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\n\nclass Idefics3ImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        super(config);\n\n        this.do_image_splitting = config.do_image_splitting ?? true;\n        this.max_image_size = config.max_image_size;\n    }\n\n    /**\n     * @typedef {import('../../utils/image.js').RawImage} RawImage\n     * @typedef {import('../../utils/tensor.js').Tensor} Tensor\n     */\n\n    /**\n     * Calculate size to resize images to, to be multiples of `vision_encoder_max_size` while preserving the aspect ratio.\n     * @param {Tensor} pixel_values Tensor of the image to resize.\n     * @param {number} vision_encoder_max_size Maximum size of the output image. If the image is larger than this size,\n     * it will be split into patches of this size, and the original image will be concatenated with the patches, resized to max_size.\n     */\n    get_resize_for_vision_encoder(pixel_values, vision_encoder_max_size) {\n        let [height, width] = pixel_values.dims.slice(-2);\n\n        const aspect_ratio = width / height;\n        if (width >= height) {\n            width = Math.ceil(width / vision_encoder_max_size) * vision_encoder_max_size;\n            height = Math.floor(width / aspect_ratio);\n            height = Math.ceil(height / vision_encoder_max_size) * vision_encoder_max_size;\n        } else {\n            height = Math.ceil(height / vision_encoder_max_size) * vision_encoder_max_size;\n            width = Math.floor(height * aspect_ratio);\n            width = Math.ceil(width / vision_encoder_max_size) * vision_encoder_max_size;\n        }\n        return { height, width };\n    }\n\n    /** @param {RawImage|RawImage[]|RawImage[][]} images */\n    async _call(images, {\n        do_image_splitting = null,\n        return_row_col_info = false,\n    } = {}) {\n\n        /** @type {RawImage[][]} */\n        let batched_2d_images;\n        if (!Array.isArray(images)) {\n            batched_2d_images = [[images]];\n        } else {\n            if (images.length === 0 || !images[0]) {\n                throw new Error(\"No images provided.\");\n            }\n            if (!Array.isArray(images[0])) {\n                batched_2d_images = [/** @type {RawImage[]} */(images)];\n            } else {\n                batched_2d_images = /** @type {RawImage[][]} */(images);\n            }\n        }\n\n        // List of tensors, each with shape [patches, channels, height, width]\n        let all_pixel_values = [];\n        let images_list_rows = [];\n        let images_list_cols = [];\n\n        const original_sizes = [];\n        const reshaped_input_sizes = [];\n        for (const image_batch of batched_2d_images) {\n\n            let images_list = await Promise.all(image_batch.map(x => this.preprocess(x)));\n\n            // Original sizes of images\n            original_sizes.push(...images_list.map(x => x.original_size));\n\n            // Reshaped sizes of images, before padding or cropping\n            reshaped_input_sizes.push(...images_list.map(x => x.reshaped_input_size));\n\n            // Convert images to 4D tensors for easier processing\n            images_list.forEach(x => x.pixel_values.unsqueeze_(0));\n\n            const { longest_edge } = this.max_image_size;\n\n            /** @type {Tensor[]} */\n            let images_tensor;\n            if (do_image_splitting ?? this.do_image_splitting) {\n                let image_rows = new Array(images_list.length);\n                let image_cols = new Array(images_list.length);\n\n                // We first resize both height and width of each image to the nearest max_image_size multiple, disregarding the aspect ratio\n                images_tensor = await Promise.all(images_list.map(async (x, i) => {\n                    const new_size = this.get_resize_for_vision_encoder(x.pixel_values, longest_edge);\n\n                    const resized = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate_4d)(x.pixel_values, {\n                        size: [new_size.height, new_size.width],\n                    });\n\n                    const { frames, num_splits_h, num_splits_w } = await this.split_image(resized, this.max_image_size);\n                    image_rows[i] = num_splits_h;\n                    image_cols[i] = num_splits_w;\n                    return (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)(frames, 0);\n                }));\n\n                images_list_rows.push(image_rows);\n                images_list_cols.push(image_cols);\n\n            } else {\n                /** @type {[number, number]} */\n                const size = [longest_edge, longest_edge];\n                images_tensor = await Promise.all(\n                    images_list.map(x => (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate_4d)(x.pixel_values, { size }))\n                );\n\n                images_list_rows.push(new Array(images_list.length).fill(0));\n                images_list_cols.push(new Array(images_list.length).fill(0));\n            }\n\n            all_pixel_values.push((0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)(images_tensor, 0));\n        }\n\n        const batch_size = all_pixel_values.length;\n        const [n, c, h, w] = all_pixel_values[0].dims;\n\n        // Stack pixel values\n        let pixel_values;\n        let pixel_attention_mask;\n        if (batch_size === 1) {\n            pixel_values = all_pixel_values[0].unsqueeze_(0);\n            pixel_attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.full)([batch_size, n, h, w], true);\n        } else {\n            // Add padding (if necessary) to images with less patches than the maximum number of patches\n            const max_num_patches = Math.max(...all_pixel_values.map(x => x.dims.at(0)));\n\n            pixel_attention_mask = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.full)([batch_size, max_num_patches, h, w], true);\n            const pixel_attention_mask_data = pixel_attention_mask.data;\n            const pixel_attention_mask_stride = max_num_patches * h * w;\n            for (let i = 0; i < batch_size; ++i) {\n                const num_patches = all_pixel_values[i].dims[0];\n                if (num_patches < max_num_patches) {\n                    all_pixel_values[i] = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)([\n                        all_pixel_values[i],\n                        (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.full)([max_num_patches - num_patches, c, h, w], 0),\n                    ], 0);\n\n                    const start_offset = i * pixel_attention_mask_stride + num_patches * h * w;\n                    const end_offset = (i + 1) * pixel_attention_mask_stride;\n\n                    // @ts-ignore\n                    pixel_attention_mask_data.fill(false, start_offset, end_offset);\n                }\n            }\n            pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.stack)(all_pixel_values, 0);\n        }\n\n        return {\n            pixel_values,\n            pixel_attention_mask,\n\n            original_sizes,\n            reshaped_input_sizes,\n            ...(\n                return_row_col_info\n                    ? { rows: images_list_rows, cols: images_list_cols }\n                    : {}\n            ),\n        }\n    }\n\n    async split_image(pixel_values, { longest_edge }) {\n        const max_height = longest_edge;\n        const max_width = longest_edge;\n\n        const frames = [];\n\n        const [height, width] = pixel_values.dims.slice(-2);\n\n        let num_splits_h = 0, num_splits_w = 0;\n\n        if (height > max_height || width > max_width) {\n            // Calculate the number of splits\n            num_splits_h = Math.ceil(height / max_height);\n            num_splits_w = Math.ceil(width / max_width);\n\n            // Calculate the optimal width and height for the sub-images\n            const optimal_height = Math.ceil(height / num_splits_h);\n            const optimal_width = Math.ceil(width / num_splits_w);\n\n            // Iterate through each row and column\n            for (let r = 0; r < num_splits_h; ++r) {\n                for (let c = 0; c < num_splits_w; ++c) {\n                    let start_x, start_y, end_x, end_y;\n                    if (r === num_splits_h - 1) { // At bottom\n                        start_y = height - optimal_height;\n                        end_y = height;\n                    } else {\n                        start_y = r * optimal_height;\n                        end_y = (r + 1) * optimal_height;\n                    }\n                    if (c === num_splits_w - 1) { // At right\n                        start_x = width - optimal_width;\n                        end_x = width;\n                    } else {\n                        start_x = c * optimal_width;\n                        end_x = (c + 1) * optimal_width;\n                    }\n\n                    const starts = [start_y, start_x];\n                    const ends = [end_y, end_x];\n\n                    const patch = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.slice)(pixel_values, starts, ends, [2, 3]);\n                    frames.push(patch);\n                }\n            }\n\n            // Resize the global image to match max dimensions for memory efficiency\n            const global_image_height = max_height;\n            const global_image_width = max_width;\n\n            if (height !== global_image_height || width !== global_image_width) {\n                pixel_values = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate_4d)(pixel_values, {\n                    size: [global_image_height, global_image_width],\n                })\n            }\n        }\n\n        frames.push(pixel_values);\n\n        return { frames, num_splits_h, num_splits_w };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/idefics3/processing_idefics3.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/idefics3/processing_idefics3.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Idefics3Processor: () => (/* binding */ Idefics3Processor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/image.js */ \"./src/utils/image.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/core.js */ \"./src/utils/core.js\");\n\n\n\n\n\n\n\n/**\n * Prompt with expanded image tokens for when the image is split into patches.\n * @private\n */\nfunction _prompt_split_image(image_seq_len, image_rows, image_cols, fake_token_around_image, image_token, global_img_token) {\n    let text_split_images = \"\";\n    for (let n_h = 0; n_h < image_rows; ++n_h) {\n        for (let n_w = 0; n_w < image_cols; ++n_w) {\n            text_split_images += (\n                fake_token_around_image +\n                `<row_${n_h + 1}_col_${n_w + 1}>` +\n                image_token.repeat(image_seq_len)\n            );\n        }\n        text_split_images += \"\\n\";\n    }\n\n    text_split_images += (\n        `\\n${fake_token_around_image}` +\n        `${global_img_token}` +\n        image_token.repeat(image_seq_len) +\n        `${fake_token_around_image}`\n    );\n    return text_split_images;\n}\n\n/**\n * Prompt with expanded image tokens for a single image.\n * @private\n */\nfunction _prompt_single_image(image_seq_len, fake_token_around_image, image_token, global_img_token) {\n    return (\n        `${fake_token_around_image}` +\n        `${global_img_token}` +\n        image_token.repeat(image_seq_len) +\n        `${fake_token_around_image}`\n    );\n}\n\nfunction get_image_prompt_string(image_rows, image_cols, image_seq_len, fake_token_around_image, image_token, global_img_token) {\n    if (image_rows === 0 && image_cols === 0) {\n        return _prompt_single_image(\n            image_seq_len,\n            fake_token_around_image,\n            image_token,\n            global_img_token\n        );\n    }\n    return _prompt_split_image(\n        image_seq_len, image_rows, image_cols, fake_token_around_image, image_token, global_img_token\n    );\n}\n\n\nclass Idefics3Processor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static uses_processor_config = true;\n\n    fake_image_token = \"<fake_token_around_image>\";\n    image_token = \"<image>\";\n    global_img_token = \"<global-img>\";\n\n    /**\n     * \n     * @param {string|string[]} text \n     * @param {RawImage|RawImage[]|RawImage[][]} images  \n     * @returns {Promise<any>}\n     */\n    async _call(text, images = null, options = {}) {\n        options.return_row_col_info ??= true;\n\n        let image_inputs;\n\n        if (images) {\n            image_inputs = await this.image_processor(images, options);\n        }\n\n        // NOTE: We assume text is present\n        if (!Array.isArray(text)) {\n            text = [text];\n        }\n\n        const image_rows = image_inputs.rows ?? [new Array(text.length).fill(0)];\n        const image_cols = image_inputs.cols ?? [new Array(text.length).fill(0)];\n\n        const image_seq_len = this.config.image_seq_len;\n        const n_images_in_text = []\n        const prompt_strings = [];\n        for (let i = 0; i < text.length; ++i) {\n            const sample = text[i];\n            const sample_rows = image_rows[i];\n            const sample_cols = image_cols[i];\n\n            n_images_in_text.push((0,_utils_core_js__WEBPACK_IMPORTED_MODULE_4__.count)(sample, this.image_token));\n\n            // Replace the image token with fake tokens around the expanded image token sequence of length `image_seq_len`\n            const image_prompt_strings = sample_rows.map(\n                (n_rows, j) => get_image_prompt_string(\n                    n_rows,\n                    sample_cols[j],\n                    image_seq_len,\n                    this.fake_image_token,\n                    this.image_token,\n                    this.global_img_token,\n                )\n            );\n\n            const split_sample = sample.split(this.image_token);\n            if (split_sample.length === 0) {\n                throw new Error(\"The image token should be present in the text.\");\n            }\n\n            // Place in the image prompt strings where the image tokens are\n            let new_sample = split_sample[0];\n            for (let j = 0; j < image_prompt_strings.length; ++j) {\n                new_sample += image_prompt_strings[j] + split_sample[j + 1];\n            }\n            prompt_strings.push(new_sample);\n        }\n\n        const text_inputs = this.tokenizer(prompt_strings);\n\n        return {\n            ...text_inputs,\n            ...image_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/image_processors.js\":\n/*!****************************************!*\\\n  !*** ./src/models/image_processors.js ***!\n  \\****************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BeitFeatureExtractor: () => (/* reexport safe */ _beit_image_processing_beit_js__WEBPACK_IMPORTED_MODULE_0__.BeitFeatureExtractor),\n/* harmony export */   BitImageProcessor: () => (/* reexport safe */ _bit_image_processing_bit_js__WEBPACK_IMPORTED_MODULE_1__.BitImageProcessor),\n/* harmony export */   CLIPFeatureExtractor: () => (/* reexport safe */ _clip_image_processing_clip_js__WEBPACK_IMPORTED_MODULE_3__.CLIPFeatureExtractor),\n/* harmony export */   CLIPImageProcessor: () => (/* reexport safe */ _clip_image_processing_clip_js__WEBPACK_IMPORTED_MODULE_3__.CLIPImageProcessor),\n/* harmony export */   ChineseCLIPFeatureExtractor: () => (/* reexport safe */ _chinese_clip_image_processing_chinese_clip_js__WEBPACK_IMPORTED_MODULE_2__.ChineseCLIPFeatureExtractor),\n/* harmony export */   ConvNextFeatureExtractor: () => (/* reexport safe */ _convnext_image_processing_convnext_js__WEBPACK_IMPORTED_MODULE_4__.ConvNextFeatureExtractor),\n/* harmony export */   ConvNextImageProcessor: () => (/* reexport safe */ _convnext_image_processing_convnext_js__WEBPACK_IMPORTED_MODULE_4__.ConvNextImageProcessor),\n/* harmony export */   DPTFeatureExtractor: () => (/* reexport safe */ _dpt_image_processing_dpt_js__WEBPACK_IMPORTED_MODULE_8__.DPTFeatureExtractor),\n/* harmony export */   DPTImageProcessor: () => (/* reexport safe */ _dpt_image_processing_dpt_js__WEBPACK_IMPORTED_MODULE_8__.DPTImageProcessor),\n/* harmony export */   DeiTFeatureExtractor: () => (/* reexport safe */ _deit_image_processing_deit_js__WEBPACK_IMPORTED_MODULE_5__.DeiTFeatureExtractor),\n/* harmony export */   DeiTImageProcessor: () => (/* reexport safe */ _deit_image_processing_deit_js__WEBPACK_IMPORTED_MODULE_5__.DeiTImageProcessor),\n/* harmony export */   DetrFeatureExtractor: () => (/* reexport safe */ _detr_image_processing_detr_js__WEBPACK_IMPORTED_MODULE_6__.DetrFeatureExtractor),\n/* harmony export */   DetrImageProcessor: () => (/* reexport safe */ _detr_image_processing_detr_js__WEBPACK_IMPORTED_MODULE_6__.DetrImageProcessor),\n/* harmony export */   DonutFeatureExtractor: () => (/* reexport safe */ _donut_image_processing_donut_js__WEBPACK_IMPORTED_MODULE_7__.DonutFeatureExtractor),\n/* harmony export */   DonutImageProcessor: () => (/* reexport safe */ _donut_image_processing_donut_js__WEBPACK_IMPORTED_MODULE_7__.DonutImageProcessor),\n/* harmony export */   EfficientNetImageProcessor: () => (/* reexport safe */ _efficientnet_image_processing_efficientnet_js__WEBPACK_IMPORTED_MODULE_9__.EfficientNetImageProcessor),\n/* harmony export */   GLPNFeatureExtractor: () => (/* reexport safe */ _glpn_image_processing_glpn_js__WEBPACK_IMPORTED_MODULE_10__.GLPNFeatureExtractor),\n/* harmony export */   GroundingDinoImageProcessor: () => (/* reexport safe */ _grounding_dino_image_processing_grounding_dino_js__WEBPACK_IMPORTED_MODULE_11__.GroundingDinoImageProcessor),\n/* harmony export */   Idefics3ImageProcessor: () => (/* reexport safe */ _idefics3_image_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_12__.Idefics3ImageProcessor),\n/* harmony export */   JinaCLIPImageProcessor: () => (/* reexport safe */ _jina_clip_image_processing_jina_clip_js__WEBPACK_IMPORTED_MODULE_14__.JinaCLIPImageProcessor),\n/* harmony export */   LlavaOnevisionImageProcessor: () => (/* reexport safe */ _llava_onevision_image_processing_llava_onevision_js__WEBPACK_IMPORTED_MODULE_15__.LlavaOnevisionImageProcessor),\n/* harmony export */   Mask2FormerImageProcessor: () => (/* reexport safe */ _mask2former_image_processing_mask2former_js__WEBPACK_IMPORTED_MODULE_16__.Mask2FormerImageProcessor),\n/* harmony export */   MaskFormerFeatureExtractor: () => (/* reexport safe */ _maskformer_image_processing_maskformer_js__WEBPACK_IMPORTED_MODULE_17__.MaskFormerFeatureExtractor),\n/* harmony export */   MaskFormerImageProcessor: () => (/* reexport safe */ _maskformer_image_processing_maskformer_js__WEBPACK_IMPORTED_MODULE_17__.MaskFormerImageProcessor),\n/* harmony export */   MobileNetV1FeatureExtractor: () => (/* reexport safe */ _mobilenet_v1_image_processing_mobilenet_v1_js__WEBPACK_IMPORTED_MODULE_18__.MobileNetV1FeatureExtractor),\n/* harmony export */   MobileNetV1ImageProcessor: () => (/* reexport safe */ _mobilenet_v1_image_processing_mobilenet_v1_js__WEBPACK_IMPORTED_MODULE_18__.MobileNetV1ImageProcessor),\n/* harmony export */   MobileNetV2FeatureExtractor: () => (/* reexport safe */ _mobilenet_v2_image_processing_mobilenet_v2_js__WEBPACK_IMPORTED_MODULE_19__.MobileNetV2FeatureExtractor),\n/* harmony export */   MobileNetV2ImageProcessor: () => (/* reexport safe */ _mobilenet_v2_image_processing_mobilenet_v2_js__WEBPACK_IMPORTED_MODULE_19__.MobileNetV2ImageProcessor),\n/* harmony export */   MobileNetV3FeatureExtractor: () => (/* reexport safe */ _mobilenet_v3_image_processing_mobilenet_v3_js__WEBPACK_IMPORTED_MODULE_20__.MobileNetV3FeatureExtractor),\n/* harmony export */   MobileNetV3ImageProcessor: () => (/* reexport safe */ _mobilenet_v3_image_processing_mobilenet_v3_js__WEBPACK_IMPORTED_MODULE_20__.MobileNetV3ImageProcessor),\n/* harmony export */   MobileNetV4FeatureExtractor: () => (/* reexport safe */ _mobilenet_v4_image_processing_mobilenet_v4_js__WEBPACK_IMPORTED_MODULE_21__.MobileNetV4FeatureExtractor),\n/* harmony export */   MobileNetV4ImageProcessor: () => (/* reexport safe */ _mobilenet_v4_image_processing_mobilenet_v4_js__WEBPACK_IMPORTED_MODULE_21__.MobileNetV4ImageProcessor),\n/* harmony export */   MobileViTFeatureExtractor: () => (/* reexport safe */ _mobilevit_image_processing_mobilevit_js__WEBPACK_IMPORTED_MODULE_22__.MobileViTFeatureExtractor),\n/* harmony export */   MobileViTImageProcessor: () => (/* reexport safe */ _mobilevit_image_processing_mobilevit_js__WEBPACK_IMPORTED_MODULE_22__.MobileViTImageProcessor),\n/* harmony export */   NougatImageProcessor: () => (/* reexport safe */ _nougat_image_processing_nougat_js__WEBPACK_IMPORTED_MODULE_23__.NougatImageProcessor),\n/* harmony export */   OwlViTFeatureExtractor: () => (/* reexport safe */ _owlvit_image_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_25__.OwlViTFeatureExtractor),\n/* harmony export */   OwlViTImageProcessor: () => (/* reexport safe */ _owlvit_image_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_25__.OwlViTImageProcessor),\n/* harmony export */   Owlv2ImageProcessor: () => (/* reexport safe */ _owlv2_image_processing_owlv2_js__WEBPACK_IMPORTED_MODULE_24__.Owlv2ImageProcessor),\n/* harmony export */   Phi3VImageProcessor: () => (/* reexport safe */ _phi3_v_image_processing_phi3_v_js__WEBPACK_IMPORTED_MODULE_26__.Phi3VImageProcessor),\n/* harmony export */   PvtImageProcessor: () => (/* reexport safe */ _pvt_image_processing_pvt_js__WEBPACK_IMPORTED_MODULE_27__.PvtImageProcessor),\n/* harmony export */   Qwen2VLImageProcessor: () => (/* reexport safe */ _qwen2_vl_image_processing_qwen2_vl_js__WEBPACK_IMPORTED_MODULE_28__.Qwen2VLImageProcessor),\n/* harmony export */   RTDetrImageProcessor: () => (/* reexport safe */ _rt_detr_image_processing_rt_detr_js__WEBPACK_IMPORTED_MODULE_29__.RTDetrImageProcessor),\n/* harmony export */   SamImageProcessor: () => (/* reexport safe */ _sam_image_processing_sam_js__WEBPACK_IMPORTED_MODULE_30__.SamImageProcessor),\n/* harmony export */   SegformerFeatureExtractor: () => (/* reexport safe */ _segformer_image_processing_segformer_js__WEBPACK_IMPORTED_MODULE_31__.SegformerFeatureExtractor),\n/* harmony export */   SegformerImageProcessor: () => (/* reexport safe */ _segformer_image_processing_segformer_js__WEBPACK_IMPORTED_MODULE_31__.SegformerImageProcessor),\n/* harmony export */   SiglipImageProcessor: () => (/* reexport safe */ _siglip_image_processing_siglip_js__WEBPACK_IMPORTED_MODULE_32__.SiglipImageProcessor),\n/* harmony export */   SmolVLMImageProcessor: () => (/* reexport safe */ _smolvlm_image_processing_smolvlm_js__WEBPACK_IMPORTED_MODULE_33__.SmolVLMImageProcessor),\n/* harmony export */   Swin2SRImageProcessor: () => (/* reexport safe */ _swin2sr_image_processing_swin2sr_js__WEBPACK_IMPORTED_MODULE_34__.Swin2SRImageProcessor),\n/* harmony export */   VLMImageProcessor: () => (/* reexport safe */ _janus_image_processing_janus_js__WEBPACK_IMPORTED_MODULE_13__.VLMImageProcessor),\n/* harmony export */   ViTFeatureExtractor: () => (/* reexport safe */ _vit_image_processing_vit_js__WEBPACK_IMPORTED_MODULE_35__.ViTFeatureExtractor),\n/* harmony export */   ViTImageProcessor: () => (/* reexport safe */ _vit_image_processing_vit_js__WEBPACK_IMPORTED_MODULE_35__.ViTImageProcessor),\n/* harmony export */   VitMatteImageProcessor: () => (/* reexport safe */ _vitmatte_image_processing_vitmatte_js__WEBPACK_IMPORTED_MODULE_36__.VitMatteImageProcessor),\n/* harmony export */   VitPoseImageProcessor: () => (/* reexport safe */ _vitpose_image_processing_vitpose_js__WEBPACK_IMPORTED_MODULE_37__.VitPoseImageProcessor),\n/* harmony export */   YolosFeatureExtractor: () => (/* reexport safe */ _yolos_image_processing_yolos_js__WEBPACK_IMPORTED_MODULE_38__.YolosFeatureExtractor),\n/* harmony export */   YolosImageProcessor: () => (/* reexport safe */ _yolos_image_processing_yolos_js__WEBPACK_IMPORTED_MODULE_38__.YolosImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _beit_image_processing_beit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./beit/image_processing_beit.js */ \"./src/models/beit/image_processing_beit.js\");\n/* harmony import */ var _bit_image_processing_bit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bit/image_processing_bit.js */ \"./src/models/bit/image_processing_bit.js\");\n/* harmony import */ var _chinese_clip_image_processing_chinese_clip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chinese_clip/image_processing_chinese_clip.js */ \"./src/models/chinese_clip/image_processing_chinese_clip.js\");\n/* harmony import */ var _clip_image_processing_clip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clip/image_processing_clip.js */ \"./src/models/clip/image_processing_clip.js\");\n/* harmony import */ var _convnext_image_processing_convnext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convnext/image_processing_convnext.js */ \"./src/models/convnext/image_processing_convnext.js\");\n/* harmony import */ var _deit_image_processing_deit_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./deit/image_processing_deit.js */ \"./src/models/deit/image_processing_deit.js\");\n/* harmony import */ var _detr_image_processing_detr_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./detr/image_processing_detr.js */ \"./src/models/detr/image_processing_detr.js\");\n/* harmony import */ var _donut_image_processing_donut_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./donut/image_processing_donut.js */ \"./src/models/donut/image_processing_donut.js\");\n/* harmony import */ var _dpt_image_processing_dpt_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dpt/image_processing_dpt.js */ \"./src/models/dpt/image_processing_dpt.js\");\n/* harmony import */ var _efficientnet_image_processing_efficientnet_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./efficientnet/image_processing_efficientnet.js */ \"./src/models/efficientnet/image_processing_efficientnet.js\");\n/* harmony import */ var _glpn_image_processing_glpn_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./glpn/image_processing_glpn.js */ \"./src/models/glpn/image_processing_glpn.js\");\n/* harmony import */ var _grounding_dino_image_processing_grounding_dino_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./grounding_dino/image_processing_grounding_dino.js */ \"./src/models/grounding_dino/image_processing_grounding_dino.js\");\n/* harmony import */ var _idefics3_image_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./idefics3/image_processing_idefics3.js */ \"./src/models/idefics3/image_processing_idefics3.js\");\n/* harmony import */ var _janus_image_processing_janus_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./janus/image_processing_janus.js */ \"./src/models/janus/image_processing_janus.js\");\n/* harmony import */ var _jina_clip_image_processing_jina_clip_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./jina_clip/image_processing_jina_clip.js */ \"./src/models/jina_clip/image_processing_jina_clip.js\");\n/* harmony import */ var _llava_onevision_image_processing_llava_onevision_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./llava_onevision/image_processing_llava_onevision.js */ \"./src/models/llava_onevision/image_processing_llava_onevision.js\");\n/* harmony import */ var _mask2former_image_processing_mask2former_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./mask2former/image_processing_mask2former.js */ \"./src/models/mask2former/image_processing_mask2former.js\");\n/* harmony import */ var _maskformer_image_processing_maskformer_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./maskformer/image_processing_maskformer.js */ \"./src/models/maskformer/image_processing_maskformer.js\");\n/* harmony import */ var _mobilenet_v1_image_processing_mobilenet_v1_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mobilenet_v1/image_processing_mobilenet_v1.js */ \"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js\");\n/* harmony import */ var _mobilenet_v2_image_processing_mobilenet_v2_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./mobilenet_v2/image_processing_mobilenet_v2.js */ \"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js\");\n/* harmony import */ var _mobilenet_v3_image_processing_mobilenet_v3_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./mobilenet_v3/image_processing_mobilenet_v3.js */ \"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js\");\n/* harmony import */ var _mobilenet_v4_image_processing_mobilenet_v4_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./mobilenet_v4/image_processing_mobilenet_v4.js */ \"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js\");\n/* harmony import */ var _mobilevit_image_processing_mobilevit_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./mobilevit/image_processing_mobilevit.js */ \"./src/models/mobilevit/image_processing_mobilevit.js\");\n/* harmony import */ var _nougat_image_processing_nougat_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./nougat/image_processing_nougat.js */ \"./src/models/nougat/image_processing_nougat.js\");\n/* harmony import */ var _owlv2_image_processing_owlv2_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./owlv2/image_processing_owlv2.js */ \"./src/models/owlv2/image_processing_owlv2.js\");\n/* harmony import */ var _owlvit_image_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./owlvit/image_processing_owlvit.js */ \"./src/models/owlvit/image_processing_owlvit.js\");\n/* harmony import */ var _phi3_v_image_processing_phi3_v_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./phi3_v/image_processing_phi3_v.js */ \"./src/models/phi3_v/image_processing_phi3_v.js\");\n/* harmony import */ var _pvt_image_processing_pvt_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pvt/image_processing_pvt.js */ \"./src/models/pvt/image_processing_pvt.js\");\n/* harmony import */ var _qwen2_vl_image_processing_qwen2_vl_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./qwen2_vl/image_processing_qwen2_vl.js */ \"./src/models/qwen2_vl/image_processing_qwen2_vl.js\");\n/* harmony import */ var _rt_detr_image_processing_rt_detr_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./rt_detr/image_processing_rt_detr.js */ \"./src/models/rt_detr/image_processing_rt_detr.js\");\n/* harmony import */ var _sam_image_processing_sam_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sam/image_processing_sam.js */ \"./src/models/sam/image_processing_sam.js\");\n/* harmony import */ var _segformer_image_processing_segformer_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./segformer/image_processing_segformer.js */ \"./src/models/segformer/image_processing_segformer.js\");\n/* harmony import */ var _siglip_image_processing_siglip_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./siglip/image_processing_siglip.js */ \"./src/models/siglip/image_processing_siglip.js\");\n/* harmony import */ var _smolvlm_image_processing_smolvlm_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./smolvlm/image_processing_smolvlm.js */ \"./src/models/smolvlm/image_processing_smolvlm.js\");\n/* harmony import */ var _swin2sr_image_processing_swin2sr_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./swin2sr/image_processing_swin2sr.js */ \"./src/models/swin2sr/image_processing_swin2sr.js\");\n/* harmony import */ var _vit_image_processing_vit_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./vit/image_processing_vit.js */ \"./src/models/vit/image_processing_vit.js\");\n/* harmony import */ var _vitmatte_image_processing_vitmatte_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./vitmatte/image_processing_vitmatte.js */ \"./src/models/vitmatte/image_processing_vitmatte.js\");\n/* harmony import */ var _vitpose_image_processing_vitpose_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./vitpose/image_processing_vitpose.js */ \"./src/models/vitpose/image_processing_vitpose.js\");\n/* harmony import */ var _yolos_image_processing_yolos_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./yolos/image_processing_yolos.js */ \"./src/models/yolos/image_processing_yolos.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/models/janus/image_processing_janus.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/janus/image_processing_janus.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VLMImageProcessor: () => (/* binding */ VLMImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass VLMImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        super({\n            do_pad: true,\n            pad_size: {\n                width: config.image_size,\n                height: config.image_size,\n            },\n            ...config,\n        });\n        // @ts-expect-error TS2339\n        this.constant_values = this.config.background_color.map(x => x * this.rescale_factor)\n    }\n\n    pad_image(pixelData, imgDims, padSize, options) {\n        return super.pad_image(pixelData, imgDims, padSize, {\n            constant_values: this.constant_values,\n            center: true,\n            ...options,\n        });\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/janus/processing_janus.js\":\n/*!**********************************************!*\\\n  !*** ./src/models/janus/processing_janus.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VLChatProcessor: () => (/* binding */ VLChatProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/image.js */ \"./src/utils/image.js\");\n\n\n\n\n\n\n\n\nclass VLChatProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static uses_processor_config = true;\n\n    constructor(config, components) {\n        super(config, components);\n\n        this.image_tag = this.config.image_tag;\n        this.image_start_tag = this.config.image_start_tag;\n        this.image_end_tag = this.config.image_end_tag;\n        this.num_image_tokens = this.config.num_image_tokens;\n    }\n\n    /**\n     * @typedef {Object} MultimodalMessageProperties Additional properties for multimodal messages.\n     * @property {(RawImage | string | URL)[]} [images] The images in the message.\n     * @typedef {(import('../../tokenizers.js').Message & MultimodalMessageProperties)[]} MultimodalConversation The conversation possibly containing multimodal inputs.\n     */\n\n    /**\n     * @typedef {Object} VLCChatProcessorResult The processed input.\n     * @property {Tensor} input_ids The input IDs.\n     * @property {Tensor} attention_mask The attention mask.\n     * @property {Tensor} images_seq_mask The image sequence mask.\n     * @property {Tensor} images_emb_mask The image embedding mask.\n     */\n\n    /**\n     * @param {MultimodalConversation} conversation The chat messages to process.\n     * @param {Object} options Additional options for processing.\n     * @param {RawImage|RawImage[]} [options.images] The images to process, if not set in the conversation.\n     * @param {string} [options.chat_template=\"default\"] The chat template to use.\n     * @returns {Promise<VLCChatProcessorResult | VLCChatProcessorResult & import('../../base/image_processors_utils.js').ImageProcessorResult>} The processed input.\n     */\n    async _call(conversation, {\n        images = null,\n        chat_template = \"default\",\n    }={}) {\n        if (!images) {\n            images = await Promise.all(\n                conversation\n                    .filter((msg) => msg.images)\n                    .flatMap((msg) => msg.images)\n                    .map((img) => _utils_image_js__WEBPACK_IMPORTED_MODULE_5__.RawImage.read(img))\n            );\n        } else if (!Array.isArray(images)) {\n            images = [images];\n        }\n\n        const tokenizer = this.tokenizer;\n        const result = tokenizer.apply_chat_template(conversation, {\n            tokenize: false,\n            add_generation_prompt: true,\n            chat_template,\n        });\n\n        const encode = (text) => tokenizer.encode(text, { add_special_tokens: false });\n        const parts = (/** @type {string} */(result))\n            .split(this.image_tag);\n        const num_images = parts.length - 1;\n        if (images.length !== num_images) {\n            throw new Error(`Number of images provided (${images.length}) does not match number of \"${this.image_tag}\" image tags (${num_images})`);\n        }\n\n        const [\n            image_placeholder_tag_id,\n            image_start_tag_id,\n            image_end_tag_id,\n        ] = tokenizer.model.convert_tokens_to_ids([\n            this.image_tag,\n            this.image_start_tag,\n            this.image_end_tag,\n        ]);\n\n        let input_ids = encode(parts[0]);\n        let images_seq_mask = new Array(input_ids.length).fill(false);\n        for (let i = 1; i < parts.length; ++i) {\n            const placeholder_image_tokens = new Array(this.num_image_tokens).fill(image_placeholder_tag_id);\n            const tokens = encode(parts[i]);\n            input_ids = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_3__.mergeArrays)(\n                input_ids,\n                [image_start_tag_id], placeholder_image_tokens, [image_end_tag_id],\n                tokens,\n            );\n            const image_mask = new Array(this.num_image_tokens).fill(true);\n            images_seq_mask = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_3__.mergeArrays)(\n                images_seq_mask,\n                [false], image_mask, [false],\n                new Array(tokens.length).fill(false),\n            );\n        }\n\n        const dims = [1, input_ids.length];\n        const final = {\n            input_ids: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor('int64', input_ids, dims),\n            attention_mask: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor('int64', new Array(input_ids.length).fill(1), dims),\n            images_seq_mask: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor('bool', images_seq_mask, dims),\n            images_emb_mask: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor(\n                'bool',\n                new Array(num_images * this.num_image_tokens).fill(true),\n                [1, num_images, this.num_image_tokens],\n            ),\n        }\n\n        if (images && images.length > 0) {\n            const image_inputs = await this.image_processor(images);\n            // Set the batch_size dimension to 1\n            image_inputs.pixel_values.unsqueeze_(0);\n            return { ...final, ...image_inputs };\n        }\n\n        return final;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/jina_clip/image_processing_jina_clip.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/jina_clip/image_processing_jina_clip.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JinaCLIPImageProcessor: () => (/* binding */ JinaCLIPImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass JinaCLIPImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        // JinaCLIPImageProcessor uses a custom preprocessor_config.json, so we configure it here\n        const { resize_mode, fill_color, interpolation, size, ...other } = config;\n\n        const new_size = resize_mode === 'squash'\n            ? { width: size, height: size }\n            : resize_mode === 'shortest'\n                ? { shortest_edge: size }\n                : { longest_edge: size };\n\n        const resample = interpolation === 'bicubic' ? 3 : 2;\n        super({\n            ...other,\n            size: new_size,\n            resample,\n            do_center_crop: true,\n            crop_size: size,\n            do_normalize: true,\n        });\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/jina_clip/processing_jina_clip.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/jina_clip/processing_jina_clip.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JinaCLIPProcessor: () => (/* binding */ JinaCLIPProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n\n\n\n\n\nclass JinaCLIPProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n\n    async _call(text=null, images=null, kwargs = {}) {\n\n        if (!text && !images){\n            throw new Error('Either text or images must be provided');\n        }\n\n        const text_inputs = text ? this.tokenizer(text, kwargs) : {};\n        const image_inputs = images ? await this.image_processor(images, kwargs) : {};\n\n        return {\n            ...text_inputs,\n            ...image_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/llava_onevision/image_processing_llava_onevision.js\":\n/*!************************************************************************!*\\\n  !*** ./src/models/llava_onevision/image_processing_llava_onevision.js ***!\n  \\************************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LlavaOnevisionImageProcessor: () => (/* binding */ LlavaOnevisionImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass LlavaOnevisionImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {}\n\n\n/***/ }),\n\n/***/ \"./src/models/mask2former/image_processing_mask2former.js\":\n/*!****************************************************************!*\\\n  !*** ./src/models/mask2former/image_processing_mask2former.js ***!\n  \\****************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mask2FormerImageProcessor: () => (/* binding */ Mask2FormerImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _maskformer_image_processing_maskformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../maskformer/image_processing_maskformer.js */ \"./src/models/maskformer/image_processing_maskformer.js\");\n\n\n\n// NOTE: extends MaskFormerImageProcessor\nclass Mask2FormerImageProcessor extends _maskformer_image_processing_maskformer_js__WEBPACK_IMPORTED_MODULE_0__.MaskFormerImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/maskformer/image_processing_maskformer.js\":\n/*!**************************************************************!*\\\n  !*** ./src/models/maskformer/image_processing_maskformer.js ***!\n  \\**************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaskFormerFeatureExtractor: () => (/* binding */ MaskFormerFeatureExtractor),\n/* harmony export */   MaskFormerImageProcessor: () => (/* binding */ MaskFormerImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass MaskFormerImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n\n    /** @type {typeof post_process_panoptic_segmentation} */\n    post_process_panoptic_segmentation(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_panoptic_segmentation)(...args);\n    }\n    /** @type {typeof post_process_instance_segmentation} */\n    post_process_instance_segmentation(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_instance_segmentation)(...args);\n    }\n}\nclass MaskFormerFeatureExtractor extends MaskFormerImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/mgp_str/processing_mgp_str.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/mgp_str/processing_mgp_str.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MgpstrProcessor: () => (/* binding */ MgpstrProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/maths.js */ \"./src/utils/maths.js\");\n\n\n\n\n\nconst DECODE_TYPE_MAPPING = {\n    'char': ['char_decode', 1],\n    'bpe': ['bpe_decode', 2],\n    'wp': ['wp_decode', 102],\n}\nclass MgpstrProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n\n    /**\n     * @returns {import('../../tokenizers.js').MgpstrTokenizer} The character tokenizer.\n     */\n    get char_tokenizer() {\n        return this.components.char_tokenizer;\n    }\n\n    /**\n     * @returns {import('../../tokenizers.js').GPT2Tokenizer} The BPE tokenizer.\n     */\n    get bpe_tokenizer() {\n        return this.components.bpe_tokenizer;\n    }\n\n    /**\n     * @returns {import('../../tokenizers.js').BertTokenizer} The WordPiece tokenizer.\n     */\n    get wp_tokenizer() {\n        return this.components.wp_tokenizer;\n    }\n\n    /**\n     * Helper function to decode the model prediction logits.\n     * @param {import('../../utils/tensor.js').Tensor} pred_logits Model prediction logits.\n     * @param {string} format Type of model prediction. Must be one of ['char', 'bpe', 'wp'].\n     * @returns {[string[], number[]]} The decoded sentences and their confidence scores.\n     */\n    _decode_helper(pred_logits, format) {\n        if (!DECODE_TYPE_MAPPING.hasOwnProperty(format)) {\n            throw new Error(`Format ${format} is not supported.`);\n        }\n\n        const [decoder_name, eos_token] = DECODE_TYPE_MAPPING[format];\n        const decoder = this[decoder_name].bind(this);\n\n        const [batch_size, batch_max_length] = pred_logits.dims;\n        const conf_scores = [];\n        const all_ids = [];\n\n        /** @type {number[][][]} */\n        const pred_logits_list = pred_logits.tolist();\n        for (let i = 0; i < batch_size; ++i) {\n            const logits = pred_logits_list[i];\n            const ids = [];\n            const scores = [];\n\n            // Start and index=1 to skip the first token\n            for (let j = 1; j < batch_max_length; ++j) {\n                // NOTE: == to match bigint and number\n                const [max_prob, max_prob_index] = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.max)((0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.softmax)(logits[j]));\n                scores.push(max_prob);\n                if (max_prob_index == eos_token) {\n                    break;\n                }\n                ids.push(max_prob_index);\n            }\n\n            const confidence_score = scores.length > 0\n                ? scores.reduce((a, b) => a * b, 1)\n                : 0;\n\n            all_ids.push(ids);\n            conf_scores.push(confidence_score);\n        }\n\n        const decoded = decoder(all_ids);\n        return [decoded, conf_scores];\n    }\n\n    /**\n     * Convert a list of lists of char token ids into a list of strings by calling char tokenizer.\n     * @param {number[][]} sequences List of tokenized input ids.\n     * @returns {string[]} The list of char decoded sentences.\n     */\n    char_decode(sequences) {\n        return this.char_tokenizer.batch_decode(sequences).map(str => str.replaceAll(' ', ''));\n    }\n\n    /**\n     * Convert a list of lists of BPE token ids into a list of strings by calling BPE tokenizer.\n     * @param {number[][]} sequences List of tokenized input ids.\n     * @returns {string[]} The list of BPE decoded sentences.\n     */\n    bpe_decode(sequences) {\n        return this.bpe_tokenizer.batch_decode(sequences)\n    }\n\n    /**\n     * Convert a list of lists of word piece token ids into a list of strings by calling word piece tokenizer.\n     * @param {number[][]} sequences List of tokenized input ids.\n     * @returns {string[]} The list of wp decoded sentences.\n     */\n    wp_decode(sequences) {\n        return this.wp_tokenizer.batch_decode(sequences).map(str => str.replaceAll(' ', ''));\n    }\n\n    /**\n     * Convert a list of lists of token ids into a list of strings by calling decode.\n     * @param {import('../../utils/tensor.js').Tensor[]} sequences List of tokenized input ids.\n     * @returns {{generated_text: string[], scores: number[], char_preds: string[], bpe_preds: string[], wp_preds: string[]}}\n     * Dictionary of all the outputs of the decoded results.\n     * - generated_text: The final results after fusion of char, bpe, and wp.\n     * - scores: The final scores after fusion of char, bpe, and wp.\n     * - char_preds: The list of character decoded sentences.\n     * - bpe_preds: The list of BPE decoded sentences.\n     * - wp_preds: The list of wp decoded sentences.\n     */\n    // @ts-expect-error The type of this method is not compatible with the one\n    // in the base class. It might be a good idea to fix this.\n    batch_decode([char_logits, bpe_logits, wp_logits]) {\n        const [char_preds, char_scores] = this._decode_helper(char_logits, 'char');\n        const [bpe_preds, bpe_scores] = this._decode_helper(bpe_logits, 'bpe');\n        const [wp_preds, wp_scores] = this._decode_helper(wp_logits, 'wp');\n\n        const generated_text = [];\n        const scores = [];\n        for (let i = 0; i < char_preds.length; ++i) {\n            const [max_score, max_score_index] = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.max)([char_scores[i], bpe_scores[i], wp_scores[i]]);\n            generated_text.push([char_preds[i], bpe_preds[i], wp_preds[i]][max_score_index]);\n            scores.push(max_score);\n        }\n\n        return {\n            generated_text,\n            scores,\n            char_preds,\n            bpe_preds,\n            wp_preds,\n        }\n    }\n    /** @type {typeof Processor.from_pretrained} */\n    static async from_pretrained(...args) {\n        const base = await super.from_pretrained(...args);\n\n        // Load Transformers.js-compatible versions of the BPE and WordPiece tokenizers\n        const bpe_tokenizer = await _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer.from_pretrained(\"Xenova/gpt2\") // openai-community/gpt2\n        const wp_tokenizer = await _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer.from_pretrained(\"Xenova/bert-base-uncased\") // google-bert/bert-base-uncased\n\n        // Update components\n        base.components = {\n            image_processor: base.image_processor,\n            char_tokenizer: base.tokenizer,\n            bpe_tokenizer: bpe_tokenizer,\n            wp_tokenizer: wp_tokenizer,\n        }\n        return base;\n    }\n\n    async _call(images, text = null) {\n        const result = await this.image_processor(images);\n\n        if (text) {\n            result.labels = this.tokenizer(text).input_ids\n        }\n\n        return result;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/mobilenet_v1/image_processing_mobilenet_v1.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MobileNetV1FeatureExtractor: () => (/* binding */ MobileNetV1FeatureExtractor),\n/* harmony export */   MobileNetV1ImageProcessor: () => (/* binding */ MobileNetV1ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass MobileNetV1ImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass MobileNetV1FeatureExtractor extends MobileNetV1ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/mobilenet_v2/image_processing_mobilenet_v2.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MobileNetV2FeatureExtractor: () => (/* binding */ MobileNetV2FeatureExtractor),\n/* harmony export */   MobileNetV2ImageProcessor: () => (/* binding */ MobileNetV2ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass MobileNetV2ImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass MobileNetV2FeatureExtractor extends MobileNetV2ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/mobilenet_v3/image_processing_mobilenet_v3.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MobileNetV3FeatureExtractor: () => (/* binding */ MobileNetV3FeatureExtractor),\n/* harmony export */   MobileNetV3ImageProcessor: () => (/* binding */ MobileNetV3ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass MobileNetV3ImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass MobileNetV3FeatureExtractor extends MobileNetV3ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js\":\n/*!******************************************************************!*\\\n  !*** ./src/models/mobilenet_v4/image_processing_mobilenet_v4.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MobileNetV4FeatureExtractor: () => (/* binding */ MobileNetV4FeatureExtractor),\n/* harmony export */   MobileNetV4ImageProcessor: () => (/* binding */ MobileNetV4ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass MobileNetV4ImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass MobileNetV4FeatureExtractor extends MobileNetV4ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/mobilevit/image_processing_mobilevit.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/mobilevit/image_processing_mobilevit.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MobileViTFeatureExtractor: () => (/* binding */ MobileViTFeatureExtractor),\n/* harmony export */   MobileViTImageProcessor: () => (/* binding */ MobileViTImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass MobileViTImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass MobileViTFeatureExtractor extends MobileViTImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/moonshine/feature_extraction_moonshine.js\":\n/*!**************************************************************!*\\\n  !*** ./src/models/moonshine/feature_extraction_moonshine.js ***!\n  \\**************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoonshineFeatureExtractor: () => (/* binding */ MoonshineFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\nclass MoonshineFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n    /**\n     * Asynchronously extracts input values from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_values: Tensor; }>} The extracted input values.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'MoonshineFeatureExtractor');\n\n        if (audio instanceof Float64Array) {\n            audio = new Float32Array(audio);\n        }\n\n        const shape = [\n            1,            /* batch_size */\n            audio.length, /* num_samples */\n        ];\n        return {\n            input_values: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('float32', audio, shape),\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/moonshine/processing_moonshine.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/moonshine/processing_moonshine.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoonshineProcessor: () => (/* binding */ MoonshineProcessor)\n/* harmony export */ });\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n\n\n\n\n/**\n * Represents a MoonshineProcessor that extracts features from an audio input.\n */\nclass MoonshineProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__.AutoFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given audio input.\n     * @param {any} audio The audio input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(audio) {\n        return await this.feature_extractor(audio);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/nougat/image_processing_nougat.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/nougat/image_processing_nougat.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NougatImageProcessor: () => (/* binding */ NougatImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _donut_image_processing_donut_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../donut/image_processing_donut.js */ \"./src/models/donut/image_processing_donut.js\");\n\n\n\n// NOTE: extends DonutImageProcessor\nclass NougatImageProcessor extends _donut_image_processing_donut_js__WEBPACK_IMPORTED_MODULE_0__.DonutImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/owlv2/image_processing_owlv2.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/owlv2/image_processing_owlv2.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Owlv2ImageProcessor: () => (/* binding */ Owlv2ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _owlvit_image_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../owlvit/image_processing_owlvit.js */ \"./src/models/owlvit/image_processing_owlvit.js\");\n\n\n\n// NOTE: extends OwlViTImageProcessor\nclass Owlv2ImageProcessor extends _owlvit_image_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_0__.OwlViTImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/owlvit/image_processing_owlvit.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/owlvit/image_processing_owlvit.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OwlViTFeatureExtractor: () => (/* binding */ OwlViTFeatureExtractor),\n/* harmony export */   OwlViTImageProcessor: () => (/* binding */ OwlViTImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass OwlViTImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /** @type {typeof post_process_object_detection} */\n    post_process_object_detection(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_object_detection)(...args);\n    }\n}\nclass OwlViTFeatureExtractor extends OwlViTImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/owlvit/processing_owlvit.js\":\n/*!************************************************!*\\\n  !*** ./src/models/owlvit/processing_owlvit.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OwlViTProcessor: () => (/* binding */ OwlViTProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n\n\n\nclass OwlViTProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/paligemma/processing_paligemma.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/paligemma/processing_paligemma.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaliGemmaProcessor: () => (/* binding */ PaliGemmaProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n\n\n\n\nconst IMAGE_TOKEN = \"<image>\";\n\nfunction build_string_from_input(\n    prompt,\n    bos_token,\n    image_seq_len,\n    image_token,\n    num_images,\n) {\n    return `${image_token.repeat(image_seq_len * num_images)}${bos_token}${prompt}\\n`\n}\n\nclass PaliGemmaProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n    static uses_processor_config = false;\n\n    /**\n     * @typedef {import('../../utils/image.js').RawImage} RawImage\n     */\n\n    // `images` is required, `text` is optional\n    async _call(/** @type {RawImage|RawImage[]} */ images, text = null, kwargs = {}) {\n        if (!text) {\n            console.warn(\n                \"You are using PaliGemma without a text prefix. It will perform as a picture-captioning model.\"\n            )\n            text = \"\"\n        }\n\n        if (!Array.isArray(images)) {\n            images = [images]\n        }\n\n        if (!Array.isArray(text)) {\n            text = [text]\n        }\n\n        const bos_token = this.tokenizer.bos_token;\n        // @ts-expect-error TS2339\n        const image_seq_length = this.image_processor.config.image_seq_length;\n        let input_strings;\n        if (text.some((t) => t.includes(IMAGE_TOKEN))) {\n            input_strings = text.map(\n                sample => {\n                    const expanded_sample = sample.replaceAll(IMAGE_TOKEN, IMAGE_TOKEN.repeat(image_seq_length));\n                    const bos_rfind_index = expanded_sample.lastIndexOf(IMAGE_TOKEN);\n                    const bos_index = bos_rfind_index === -1 ? 0 : bos_rfind_index + IMAGE_TOKEN.length;\n                    return expanded_sample.slice(0, bos_index) + bos_token + expanded_sample.slice(bos_index) + \"\\n\";\n                }\n            )\n        } else {\n            console.warn(\n                \"You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special \" +\n                \"image tokens in the text, as many tokens as there are images per each text. It is recommended to \" +\n                \"add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images \" +\n                \"each text has and add special tokens.\"\n            )\n\n            input_strings = text.map(\n                sample => build_string_from_input(\n                    sample,\n                    bos_token,\n                    image_seq_length,\n                    IMAGE_TOKEN,\n                    images.length,\n                )\n            )\n        }\n\n        const text_inputs = this.tokenizer(input_strings, kwargs);\n        const image_inputs = await this.image_processor(images, kwargs);\n\n        return {\n            ...image_inputs,\n            ...text_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/phi3_v/image_processing_phi3_v.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/phi3_v/image_processing_phi3_v.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Phi3VImageProcessor: () => (/* binding */ Phi3VImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\nconst IMAGE_SIZE = 336;\nconst SLICE_AXES = [2, 3]; // axes to slice on\nconst { ceil, floor, sqrt } = Math;\n\nclass Phi3VImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    constructor(config) {\n        super({\n            ...config,\n            do_normalize: true,\n            do_pad: true,\n            pad_size: 'custom',\n            do_convert_rgb: true,\n            do_resize: true, // Smart resizing \"hd_transform\"\n        });\n\n        this._num_crops = config.num_crops;\n    }\n    calc_num_image_tokens_from_image_size(width, height) {\n        // @ts-expect-error\n        const { num_img_tokens } = this.config;\n        return floor(((floor((height / IMAGE_SIZE)) * floor((width / IMAGE_SIZE)) + 1) * num_img_tokens) + 1 + (floor(height / IMAGE_SIZE) + 1) * sqrt(num_img_tokens));\n    }\n\n    /** @type {ImageProcessor['get_resize_output_image_size']} */\n    get_resize_output_image_size(image, size) {\n        const hd_num = this._num_crops;\n        const [width, height] = image.size\n\n        let ratio = width / height;\n        let scale = 1;\n\n        // Calculate the scaling factor\n        while (scale * Math.ceil(scale / ratio) <= hd_num) {\n            scale += 1;\n        }\n        scale -= 1;\n\n        // Compute the new dimensions\n        const new_w = Math.floor(scale * 336);\n        const new_h = Math.floor(new_w / ratio);\n\n        return [new_w, new_h]\n    }\n\n\n    /** @type {ImageProcessor['pad_image']} */\n    pad_image(pixelData, imgDims, padSize, options = {}) {\n        // Phi3V uses a custom padding strategy:\n        // - Pad to a multiple of 336\n        // - Pad with white pixels\n        const [imageHeight, imageWidth] = imgDims;\n        const height = IMAGE_SIZE * ceil(imageHeight / IMAGE_SIZE);\n        const width = IMAGE_SIZE * ceil(imageWidth / IMAGE_SIZE);\n\n        // NOTE: Since padding is done after normalization, we need to fill with the normalized values\n        const constant_values = [1, 1, 1].map((x, i) => (x - this.image_mean[i]) / this.image_std[i]);\n        return super.pad_image(pixelData, imgDims, { width, height }, {\n            center: true,\n            constant_values,\n            ...options,\n        });\n    }\n\n    async _call(images, {\n        num_crops = null,\n    } = {}) {\n        // @ts-expect-error\n        this._num_crops = num_crops ??= this.config.num_crops;\n        if (num_crops < 4 || sqrt(num_crops) % 1 !== 0) {\n            throw new Error(\"num_crops must be a square number >= 4\");\n        }\n\n        if (!Array.isArray(images)) {\n            images = [images];\n        }\n\n        const num_images = images.length;\n        const imageData = await Promise.all(images.map(x => this.preprocess(x)));\n\n        const original_sizes = imageData.map(x => x.original_size);\n        const reshaped_input_sizes = imageData.map(x => x.reshaped_input_size);\n\n        // Process each image in batch\n        const all_pixel_values = [];\n        for (const { pixel_values } of imageData) {\n            pixel_values.unsqueeze_(0); // Easier processing as 4D tensor\n\n            const [height, width] = pixel_values.dims.slice(-2);\n\n            // Global image (Tensor of shape [num_channels, height, width])\n            const batch_pixel_values = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate_4d)(pixel_values, {\n                size: [IMAGE_SIZE, IMAGE_SIZE],\n                mode: 'bicubic',\n            });\n\n            if (num_crops > 0) {\n                const patches = [];\n                const sqrt_patches = sqrt(num_crops);\n                const patch_width = floor(width / sqrt_patches);\n                const patch_height = floor(height / sqrt_patches);\n                for (let y = 0; y < sqrt_patches; ++y) {\n                    for (let x = 0; x < sqrt_patches; ++x) {\n                        let start_x, start_y, end_x, end_y;\n                        if (y === sqrt_patches - 1) { // At bottom\n                            start_y = height - patch_height;\n                            end_y = height;\n                        } else {\n                            start_y = y * patch_height;\n                            end_y = (y + 1) * patch_height;\n                        }\n                        if (x === sqrt_patches - 1) { // At right\n                            start_x = width - patch_width;\n                            end_x = width;\n                        } else {\n                            start_x = x * patch_width;\n                            end_x = (x + 1) * patch_width;\n                        }\n\n                        const starts = [start_y, start_x];\n                        const ends = [end_y, end_x];\n                        const patch = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.slice)(pixel_values, starts, ends, SLICE_AXES);\n                        patches.push(patch);\n                    }\n                }\n\n                const resized_tensors = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.interpolate_4d)((0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)(patches, 0), {\n                    size: [IMAGE_SIZE, IMAGE_SIZE],\n                    mode: 'bicubic',\n                }); // [num_crops, 3, 336, 336]\n\n                // Concatenate the global image with the patches\n                all_pixel_values.push((0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)([batch_pixel_values, resized_tensors], 0));\n            } else {\n                // Only use the global image\n                // NOTE: Not currently supported in modelling code\n                all_pixel_values.push(batch_pixel_values);\n            }\n        }\n\n        // [num_images, 1 + num_crops, num_channels=3, height, width]\n        const pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.stack)(all_pixel_values, 0);\n\n        // Calculate padded image sizes\n        const sizes = reshaped_input_sizes.map(x => x.map(y => IMAGE_SIZE * ceil(y / IMAGE_SIZE)));\n\n        const image_sizes = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n            'int64',\n            sizes.flat(),\n            [num_images, 2],\n        );\n\n        const num_img_tokens = sizes.map(\n            ([height, width]) => this.calc_num_image_tokens_from_image_size(width, height),\n        );\n\n        return { pixel_values, original_sizes, reshaped_input_sizes, image_sizes, num_img_tokens };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/phi3_v/processing_phi3_v.js\":\n/*!************************************************!*\\\n  !*** ./src/models/phi3_v/processing_phi3_v.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Phi3VProcessor: () => (/* binding */ Phi3VProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/image.js */ \"./src/utils/image.js\");\n\n\n\n\n\nconst IMAGE_TOKEN = \"<|image|>\";\nconst IMAGE_TOKEN_PATTERN = /<\\|image_\\d+\\|>/g;\n\nclass Phi3VProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n\n    /**\n     * \n     * @param {string|string[]} text \n     * @param {RawImage|RawImage[]} images \n     * @param  { { padding?: boolean, truncation?: boolean, num_crops?: number } | undefined } options\n     * @returns {Promise<any>}\n     */\n    async _call(text, images = null, {\n        padding = true,\n        truncation = true,\n        num_crops = null,\n    } = {}) {\n\n        if (!Array.isArray(text)) {\n            text = [text];\n        }\n\n        let text_inputs, image_inputs;\n        if (images) {\n            image_inputs = await this.image_processor(images, { num_crops });\n            const { num_img_tokens } = image_inputs;\n\n            // The original implementation adds a bos_token before the image tokens\n            // TODO: Check if this affects performance, since it looks like a bug in the original implementation\n            const prompt_chunks = text.map((t, i) => t.split(IMAGE_TOKEN_PATTERN).join(IMAGE_TOKEN.repeat(num_img_tokens[i])));\n\n            text_inputs = this.tokenizer(prompt_chunks, { padding, truncation });\n\n            // The model expects image tokens to be negative, so we negate the image token ids\n            const image_token_id = this.tokenizer.model.convert_tokens_to_ids([IMAGE_TOKEN])[0];\n            text_inputs.input_ids.map_(id => (id == image_token_id) ? -id : id);\n        } else {\n            text_inputs = this.tokenizer(text);\n        }\n\n        return {\n            ...text_inputs,\n            ...image_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/processors.js\":\n/*!**********************************!*\\\n  !*** ./src/models/processors.js ***!\n  \\**********************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Florence2Processor: () => (/* reexport safe */ _florence2_processing_florence2_js__WEBPACK_IMPORTED_MODULE_0__.Florence2Processor),\n/* harmony export */   GroundingDinoProcessor: () => (/* reexport safe */ _grounding_dino_processing_grounding_dino_js__WEBPACK_IMPORTED_MODULE_1__.GroundingDinoProcessor),\n/* harmony export */   Idefics3Processor: () => (/* reexport safe */ _idefics3_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_2__.Idefics3Processor),\n/* harmony export */   JinaCLIPProcessor: () => (/* reexport safe */ _jina_clip_processing_jina_clip_js__WEBPACK_IMPORTED_MODULE_4__.JinaCLIPProcessor),\n/* harmony export */   MgpstrProcessor: () => (/* reexport safe */ _mgp_str_processing_mgp_str_js__WEBPACK_IMPORTED_MODULE_5__.MgpstrProcessor),\n/* harmony export */   MoonshineProcessor: () => (/* reexport safe */ _moonshine_processing_moonshine_js__WEBPACK_IMPORTED_MODULE_6__.MoonshineProcessor),\n/* harmony export */   OwlViTProcessor: () => (/* reexport safe */ _owlvit_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_7__.OwlViTProcessor),\n/* harmony export */   PaliGemmaProcessor: () => (/* reexport safe */ _paligemma_processing_paligemma_js__WEBPACK_IMPORTED_MODULE_9__.PaliGemmaProcessor),\n/* harmony export */   Phi3VProcessor: () => (/* reexport safe */ _phi3_v_processing_phi3_v_js__WEBPACK_IMPORTED_MODULE_8__.Phi3VProcessor),\n/* harmony export */   PyAnnoteProcessor: () => (/* reexport safe */ _pyannote_processing_pyannote_js__WEBPACK_IMPORTED_MODULE_10__.PyAnnoteProcessor),\n/* harmony export */   Qwen2VLProcessor: () => (/* reexport safe */ _qwen2_vl_processing_qwen2_vl_js__WEBPACK_IMPORTED_MODULE_11__.Qwen2VLProcessor),\n/* harmony export */   SamProcessor: () => (/* reexport safe */ _sam_processing_sam_js__WEBPACK_IMPORTED_MODULE_12__.SamProcessor),\n/* harmony export */   SmolVLMProcessor: () => (/* reexport safe */ _smolvlm_processing_smolvlm_js__WEBPACK_IMPORTED_MODULE_13__.SmolVLMProcessor),\n/* harmony export */   SpeechT5Processor: () => (/* reexport safe */ _speecht5_processing_speecht5_js__WEBPACK_IMPORTED_MODULE_14__.SpeechT5Processor),\n/* harmony export */   UltravoxProcessor: () => (/* reexport safe */ _ultravox_processing_ultravox_js__WEBPACK_IMPORTED_MODULE_15__.UltravoxProcessor),\n/* harmony export */   VLChatProcessor: () => (/* reexport safe */ _janus_processing_janus_js__WEBPACK_IMPORTED_MODULE_3__.VLChatProcessor),\n/* harmony export */   Wav2Vec2Processor: () => (/* reexport safe */ _wav2vec2_processing_wav2vec2_js__WEBPACK_IMPORTED_MODULE_16__.Wav2Vec2Processor),\n/* harmony export */   Wav2Vec2ProcessorWithLM: () => (/* reexport safe */ _wav2vec2_with_lm_processing_wav2vec2_with_lm_js__WEBPACK_IMPORTED_MODULE_17__.Wav2Vec2ProcessorWithLM),\n/* harmony export */   WhisperProcessor: () => (/* reexport safe */ _whisper_processing_whisper_js__WEBPACK_IMPORTED_MODULE_18__.WhisperProcessor)\n/* harmony export */ });\n/* harmony import */ var _florence2_processing_florence2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./florence2/processing_florence2.js */ \"./src/models/florence2/processing_florence2.js\");\n/* harmony import */ var _grounding_dino_processing_grounding_dino_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grounding_dino/processing_grounding_dino.js */ \"./src/models/grounding_dino/processing_grounding_dino.js\");\n/* harmony import */ var _idefics3_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./idefics3/processing_idefics3.js */ \"./src/models/idefics3/processing_idefics3.js\");\n/* harmony import */ var _janus_processing_janus_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./janus/processing_janus.js */ \"./src/models/janus/processing_janus.js\");\n/* harmony import */ var _jina_clip_processing_jina_clip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jina_clip/processing_jina_clip.js */ \"./src/models/jina_clip/processing_jina_clip.js\");\n/* harmony import */ var _mgp_str_processing_mgp_str_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mgp_str/processing_mgp_str.js */ \"./src/models/mgp_str/processing_mgp_str.js\");\n/* harmony import */ var _moonshine_processing_moonshine_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./moonshine/processing_moonshine.js */ \"./src/models/moonshine/processing_moonshine.js\");\n/* harmony import */ var _owlvit_processing_owlvit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./owlvit/processing_owlvit.js */ \"./src/models/owlvit/processing_owlvit.js\");\n/* harmony import */ var _phi3_v_processing_phi3_v_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./phi3_v/processing_phi3_v.js */ \"./src/models/phi3_v/processing_phi3_v.js\");\n/* harmony import */ var _paligemma_processing_paligemma_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./paligemma/processing_paligemma.js */ \"./src/models/paligemma/processing_paligemma.js\");\n/* harmony import */ var _pyannote_processing_pyannote_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pyannote/processing_pyannote.js */ \"./src/models/pyannote/processing_pyannote.js\");\n/* harmony import */ var _qwen2_vl_processing_qwen2_vl_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./qwen2_vl/processing_qwen2_vl.js */ \"./src/models/qwen2_vl/processing_qwen2_vl.js\");\n/* harmony import */ var _sam_processing_sam_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sam/processing_sam.js */ \"./src/models/sam/processing_sam.js\");\n/* harmony import */ var _smolvlm_processing_smolvlm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./smolvlm/processing_smolvlm.js */ \"./src/models/smolvlm/processing_smolvlm.js\");\n/* harmony import */ var _speecht5_processing_speecht5_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./speecht5/processing_speecht5.js */ \"./src/models/speecht5/processing_speecht5.js\");\n/* harmony import */ var _ultravox_processing_ultravox_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ultravox/processing_ultravox.js */ \"./src/models/ultravox/processing_ultravox.js\");\n/* harmony import */ var _wav2vec2_processing_wav2vec2_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./wav2vec2/processing_wav2vec2.js */ \"./src/models/wav2vec2/processing_wav2vec2.js\");\n/* harmony import */ var _wav2vec2_with_lm_processing_wav2vec2_with_lm_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./wav2vec2_with_lm/processing_wav2vec2_with_lm.js */ \"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js\");\n/* harmony import */ var _whisper_processing_whisper_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./whisper/processing_whisper.js */ \"./src/models/whisper/processing_whisper.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/models/pvt/image_processing_pvt.js\":\n/*!************************************************!*\\\n  !*** ./src/models/pvt/image_processing_pvt.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PvtImageProcessor: () => (/* binding */ PvtImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass PvtImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/pyannote/feature_extraction_pyannote.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/pyannote/feature_extraction_pyannote.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PyAnnoteFeatureExtractor: () => (/* binding */ PyAnnoteFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/maths.js */ \"./src/utils/maths.js\");\n\n\n\n\n\nclass PyAnnoteFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_values: Tensor; }>} The extracted input features.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'PyAnnoteFeatureExtractor');\n\n        if (audio instanceof Float64Array) {\n            audio = new Float32Array(audio);\n        }\n\n        const shape = [\n            1,            /* batch_size */\n            1,            /* num_channels */\n            audio.length, /* num_samples */\n        ];\n        return {\n            input_values: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('float32', audio, shape),\n        };\n    }\n\n    /**\n     * NOTE: Can return fractional values. `Math.ceil` will ensure correct value.\n     * @param {number} samples The number of frames in the audio.\n     * @returns {number} The number of frames in the audio.\n     */\n    samples_to_frames(samples) {\n        return ((samples - this.config.offset) / this.config.step);\n    }\n\n    /**\n     * Post-processes the speaker diarization logits output by the model.\n     * @param {import('../../utils/tensor.js').Tensor} logits The speaker diarization logits output by the model.\n     * @param {number} num_samples Number of samples in the input audio.\n     * @returns {Array<Array<{ id: number, start: number, end: number, confidence: number }>>} The post-processed speaker diarization results.\n     */\n    post_process_speaker_diarization(logits, num_samples) {\n        const ratio = (\n            num_samples / this.samples_to_frames(num_samples)\n        ) / this.config.sampling_rate;\n\n        const results = [];\n        for (const scores of logits.tolist()) {\n            const accumulated_segments = [];\n\n            let current_speaker = -1;\n            for (let i = 0; i < scores.length; ++i) {\n                /** @type {number[]} */\n                const probabilities = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.softmax)(scores[i]);\n                const [score, id] = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_2__.max)(probabilities);\n                const [start, end] = [i, i + 1];\n\n                if (id !== current_speaker) {\n                    // Speaker has changed\n                    current_speaker = id;\n                    accumulated_segments.push({ id, start, end, score });\n                } else {\n                    // Continue the current segment\n                    accumulated_segments.at(-1).end = end;\n                    accumulated_segments.at(-1).score += score;\n                }\n            }\n\n            results.push(accumulated_segments.map(\n                // Convert frame-space to time-space\n                // and compute the confidence\n                ({ id, start, end, score }) => ({\n                    id,\n                    start: start * ratio,\n                    end: end * ratio,\n                    confidence: score / (end - start),\n                })\n            ));\n        }\n        return results;\n    }\n\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/pyannote/processing_pyannote.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/pyannote/processing_pyannote.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PyAnnoteProcessor: () => (/* binding */ PyAnnoteProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _feature_extraction_pyannote_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature_extraction_pyannote.js */ \"./src/models/pyannote/feature_extraction_pyannote.js\");\n\n\n\nclass PyAnnoteProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static feature_extractor_class = _feature_extraction_pyannote_js__WEBPACK_IMPORTED_MODULE_1__.PyAnnoteFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given audio input.\n     * @param {any} audio The audio input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(audio) {\n        return await this.feature_extractor(audio)\n    }\n\n    /** @type {PyAnnoteFeatureExtractor['post_process_speaker_diarization']} */\n    post_process_speaker_diarization(...args) {\n        return /** @type {PyAnnoteFeatureExtractor} */(this.feature_extractor).post_process_speaker_diarization(...args);\n    }\n\n    get sampling_rate() {\n        return this.feature_extractor.config.sampling_rate;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/qwen2_vl/image_processing_qwen2_vl.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/qwen2_vl/image_processing_qwen2_vl.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Qwen2VLImageProcessor: () => (/* binding */ Qwen2VLImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\nclass Qwen2VLImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    async _call(images, ...args) {\n        const { pixel_values, original_sizes, reshaped_input_sizes } = await super._call(images, ...args);\n\n        let patches = pixel_values;\n\n        // @ts-ignore\n        const { temporal_patch_size, merge_size, patch_size } = this.config;\n        if (patches.dims[0] === 1) {\n            // Equivalent to np.tile(patches, (self.temporal_patch_size, 1, 1, 1))\n            patches = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)(Array.from({ length: temporal_patch_size }, () => patches), 0);\n        }\n\n        const grid_t = patches.dims[0] / temporal_patch_size;\n        const channel = patches.dims[1];\n        const grid_h = Math.floor(patches.dims[2] / patch_size);\n        const grid_w = Math.floor(patches.dims[3] / patch_size);\n\n        const flatten_patches = patches\n            .view(\n                grid_t,\n                temporal_patch_size,\n                channel,\n                Math.floor(grid_h / merge_size),\n                merge_size,\n                patch_size,\n                Math.floor(grid_w / merge_size),\n                merge_size,\n                patch_size,\n            )\n            .permute(0, 3, 6, 4, 7, 2, 1, 5, 8)\n            .view(\n                grid_t * grid_h * grid_w,\n                channel * temporal_patch_size * patch_size * patch_size,\n            )\n\n        const image_grid_thw = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('int64', [grid_t, grid_h, grid_w], [1, 3]);\n\n        return {\n            pixel_values: flatten_patches,\n            image_grid_thw,\n            original_sizes,\n            reshaped_input_sizes,\n        }\n    }\n}\n\n\n\n/***/ }),\n\n/***/ \"./src/models/qwen2_vl/processing_qwen2_vl.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/qwen2_vl/processing_qwen2_vl.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Qwen2VLProcessor: () => (/* binding */ Qwen2VLProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/image.js */ \"./src/utils/image.js\");\n\n\n\n\n\nclass Qwen2VLProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_2__.AutoTokenizer\n\n    /**\n     * \n     * @param {string|string[]} text \n     * @param {RawImage|RawImage[]} images \n     * @param  {...any} args \n     * @returns {Promise<any>}\n     */\n    async _call(text, images = null, ...args) {\n\n        if (!Array.isArray(text)) {\n            text = [text];\n        }\n\n        let image_inputs, image_grid_thw;\n\n        if (images) {\n            image_inputs = await this.image_processor(images);\n            image_grid_thw = image_inputs.image_grid_thw;\n        }\n\n        if (image_grid_thw) {\n            // @ts-expect-error TS2551\n            let merge_length = this.image_processor.config.merge_size ** 2;\n            let index = 0;\n\n            const image_grid_thw_list = image_grid_thw.tolist();\n            text = text.map(t => {\n                while (t.includes(\"<|image_pad|>\")) {\n                    const prod = Number(image_grid_thw_list[index++].reduce((a, b) => a * b, 1n));\n                    t = t.replace(\"<|image_pad|>\", \"<|placeholder|>\".repeat(Math.floor(prod / merge_length)));\n                }\n                return t.replaceAll(\"<|placeholder|>\", \"<|image_pad|>\");\n            });\n        }\n\n        const text_inputs = this.tokenizer(text);\n\n        return {\n            ...text_inputs,\n            ...image_inputs,\n            // TODO: ...videos_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/rt_detr/image_processing_rt_detr.js\":\n/*!********************************************************!*\\\n  !*** ./src/models/rt_detr/image_processing_rt_detr.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RTDetrImageProcessor: () => (/* binding */ RTDetrImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass RTDetrImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /** @type {typeof post_process_object_detection} */\n    post_process_object_detection(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_object_detection)(...args);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/sam/image_processing_sam.js\":\n/*!************************************************!*\\\n  !*** ./src/models/sam/image_processing_sam.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SamImageProcessor: () => (/* binding */ SamImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\n\n\n/**\n * @typedef {object} SamImageProcessorResult\n * @property {Tensor} pixel_values\n * @property {import(\"../../base/image_processors_utils.js\").HeightWidth[]} original_sizes\n * @property {import(\"../../base/image_processors_utils.js\").HeightWidth[]} reshaped_input_sizes\n * @property {Tensor} [input_points]\n * @property {Tensor} [input_labels]\n * @property {Tensor} [input_boxes]\n */\n\nclass SamImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n\n    /**\n     * \n     * @param {any} input_points \n     * @param {import(\"../../base/image_processors_utils.js\").HeightWidth[]} original_sizes \n     * @param {import(\"../../base/image_processors_utils.js\").HeightWidth[]} reshaped_input_sizes \n     * @returns {Tensor}\n     */\n    reshape_input_points(input_points, original_sizes, reshaped_input_sizes, is_bounding_box = false) {\n\n        // Make deep copy to avoid altering user's input\n        input_points = structuredClone(input_points);\n        let shape = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.calculateDimensions)(input_points);\n\n        // TODO: add support for 2D input_points\n        if (shape.length === 3) {\n            // Correct user's input\n            if (!is_bounding_box) {\n                shape = [1, ...shape];\n            }\n            input_points = [input_points];\n        } else if (shape.length !== 4) {\n            throw Error(\"The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.\")\n        }\n\n        // Reshape input points\n        for (let i = 0; i < input_points.length; ++i) { // batch_size\n            let originalImageSize = original_sizes[i];\n            let reshapedImageSize = reshaped_input_sizes[i];\n\n            let resizeFactors = [\n                reshapedImageSize[0] / originalImageSize[0],\n                reshapedImageSize[1] / originalImageSize[1]\n            ]\n\n            for (let j = 0; j < input_points[i].length; ++j) { // point_batch_size\n                for (let k = 0; k < input_points[i][j].length; ++k) { // nb_points_per_image\n                    for (let w = 0; w < input_points[i][j][k].length; ++w) { // 2 or 4\n                        input_points[i][j][k][w] *= resizeFactors[w % 2];\n                    }\n                }\n            }\n        }\n\n        return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__.Tensor(\n            'float32',\n            Float32Array.from(input_points.flat(Infinity)),\n            shape\n        )\n\n    }\n\n    /**\n     * \n     * @param {any} input_labels \n     * @param {Tensor} input_points \n     * @returns {Tensor}\n     */\n    add_input_labels(input_labels, input_points) {\n        let shape = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.calculateDimensions)(input_labels);\n        if (shape.length === 2) {\n            // Correct user's input\n            shape = [1, ...shape];\n            input_labels = [input_labels];\n        } else if (shape.length !== 3) {\n            throw Error(\"The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.\")\n        }\n\n        if (shape.some((x, i) => x !== input_points.dims[i])) {\n            throw Error(`The first ${shape.length} dimensions of 'input_points' and 'input_labels' must be the same.`)\n        }\n        return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__.Tensor(\n            'int64',\n            input_labels.flat(Infinity).map(BigInt),\n            shape,\n        )\n    }\n    /**\n     * @param {any[]} images The URL(s) of the image(s) to extract features from.\n     * @param {Object} [options] Additional options for the processor.\n     * @param {any} [options.input_points=null] A 3D or 4D array, representing the input points provided by the user.\n     * - 3D: `[point_batch_size, nb_points_per_image, 2]`. In this case, `batch_size` is assumed to be 1.\n     * - 4D: `[batch_size, point_batch_size, nb_points_per_image, 2]`.\n     * @param {any} [options.input_labels=null] A 2D or 3D array, representing the input labels for the points, used by the prompt encoder to encode the prompt.\n     * - 2D: `[point_batch_size, nb_points_per_image]`. In this case, `batch_size` is assumed to be 1.\n     * - 3D: `[batch_size, point_batch_size, nb_points_per_image]`.\n     * @param {number[][][]} [options.input_boxes=null] A 3D array of shape `(batch_size, num_boxes, 4)`, representing the input boxes provided by the user.\n     * This is used by the prompt encoder to encode the prompt. Generally yields to much better generated masks.\n     * The processor will generate a tensor, with each dimension corresponding respectively to the image batch size,\n     * the number of boxes per image and the coordinates of the top left and botton right point of the box.\n     * In the order (`x1`, `y1`, `x2`, `y2`):\n     * - `x1`: the x coordinate of the top left point of the input box\n     * - `y1`: the y coordinate of the top left point of the input box\n     * - `x2`: the x coordinate of the bottom right point of the input box\n     * - `y2`: the y coordinate of the bottom right point of the input box\n     * @returns {Promise<SamImageProcessorResult>}\n     */\n    async _call(images, {\n        input_points = null,\n        input_labels = null,\n        input_boxes = null\n    } = {}) {\n        // TODO allow user to use preprocessed images\n        /** @type {SamImageProcessorResult} */\n        const processed = await super._call(images);\n\n        if (input_points) {\n            processed.input_points = this.reshape_input_points(\n                input_points, processed.original_sizes, processed.reshaped_input_sizes\n            );\n        }\n\n        if (input_labels) {\n            if (!processed.input_points) {\n                throw Error(\"`input_points` must be provided if `input_labels` are provided.\")\n            }\n            processed.input_labels = this.add_input_labels(input_labels, processed.input_points);\n        }\n\n        if (input_boxes) {\n            processed.input_boxes = this.reshape_input_points(\n                input_boxes, processed.original_sizes, processed.reshaped_input_sizes, true,\n            );\n        }\n\n        return processed;\n    }\n\n    /**\n     * Remove padding and upscale masks to the original image size.\n     * @param {Tensor} masks Batched masks from the mask_decoder in (batch_size, num_channels, height, width) format.\n     * @param {[number, number][]} original_sizes The original sizes of each image before it was resized to the model's expected input shape, in (height, width) format.\n     * @param {[number, number][]} reshaped_input_sizes The size of each image as it is fed to the model, in (height, width) format. Used to remove padding.\n     * @param {Object} options Optional parameters for post-processing.\n     * @param {number} [options.mask_threshold] The threshold to use for binarizing the masks.\n     * @param {boolean} [options.binarize] Whether to binarize the masks.\n     * @param {Object} [options.pad_size] The target size the images were padded to before being passed to the model. If `null`, the target size is assumed to be the processor's `pad_size`.\n     * @param {number} [options.pad_size.height] The height the images were padded to.\n     * @param {number} [options.pad_size.width] The width the images were padded to.\n     * @returns {Promise<Tensor[]>} Batched masks in batch_size, num_channels, height, width) format, where (height, width) is given by original_size.\n     */\n    async post_process_masks(masks, original_sizes, reshaped_input_sizes, {\n        mask_threshold = 0.0,\n        binarize = true,\n        pad_size = null,\n    } = {}) {\n        // masks: [1, 1, 3, 256, 256]\n\n        const output_masks = [];\n\n        pad_size = pad_size ?? this.pad_size;\n\n        /** @type {[number, number]} */\n        const target_image_size = [pad_size.height, pad_size.width];\n\n        for (let i = 0; i < original_sizes.length; ++i) {\n            const original_size = original_sizes[i];\n            const reshaped_input_size = reshaped_input_sizes[i];\n\n            // Upscale mask to padded size\n            let interpolated_mask = (await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__.interpolate_4d)(\n                masks[i],\n                { mode: 'bilinear', size: target_image_size }\n            ));\n\n            // Crop mask\n            interpolated_mask = interpolated_mask.slice(null, null, [0, reshaped_input_size[0]], [0, reshaped_input_size[1]]);\n\n            // Downscale mask\n            interpolated_mask = (await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__.interpolate_4d)(\n                interpolated_mask,\n                { mode: 'bilinear', size: original_size }\n            ));\n\n            if (binarize) {\n                const data = interpolated_mask.data;\n                const binarizedMaskData = new Uint8Array(data.length);\n                for (let i = 0; i < data.length; ++i) {\n                    if (data[i] > mask_threshold) {\n                        binarizedMaskData[i] = 1;\n                    }\n                }\n                interpolated_mask = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_2__.Tensor(\n                    'bool',\n                    binarizedMaskData,\n                    interpolated_mask.dims\n                )\n            }\n\n            output_masks.push(interpolated_mask);\n        }\n\n        return output_masks;\n    }\n\n    /**\n     * Generates a list of crop boxes of different sizes. Each layer has (2**i)**2 boxes for the ith layer.\n     * @param {import(\"../../utils/image.js\").RawImage} image Input original image\n     * @param {number} target_size Target size of the resized image\n     * @param {Object} options Options for generating crop boxes \n     * @param {number} [options.crop_n_layers] If >0, mask prediction will be run again on crops of the image.\n     * Sets the number of layers to run, where each layer has 2**i_layer number of image crops.\n     * @param {number} [options.overlap_ratio] Sets the degree to which crops overlap. In the first crop layer,\n     * crops will overlap by this fraction of the image length. Later layers with more crops scale down this overlap.\n     * @param {number} [options.points_per_crop] Number of points to sample from each crop.\n     * @param {number} [options.crop_n_points_downscale_factor] The number of points-per-side sampled in layer n is\n     * scaled down by crop_n_points_downscale_factor**n.\n     * @returns {Object} An object containing the crop boxes, number of points per crop, cropped images, and input labels.\n     */\n    generate_crop_boxes(image, target_size, {\n        crop_n_layers = 0,\n        overlap_ratio = 512 / 1500,\n        points_per_crop = 32,\n        crop_n_points_downscale_factor = 1,\n    } = {}) {\n        // TODO: Implement\n        // return { crop_boxes, points_per_crop, cropped_images, input_labels }\n    }\n}\n\n\n\n/***/ }),\n\n/***/ \"./src/models/sam/processing_sam.js\":\n/*!******************************************!*\\\n  !*** ./src/models/sam/processing_sam.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SamProcessor: () => (/* binding */ SamProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n\n\n\nclass SamProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static image_processor_class = _auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoImageProcessor\n\n    async _call(...args) {\n        return await this.image_processor(...args);\n    }\n\n    post_process_masks(...args) {\n        // @ts-ignore\n        return this.image_processor.post_process_masks(...args);\n    }\n\n    reshape_input_points(...args) {\n        // @ts-ignore\n        return this.image_processor.reshape_input_points(...args);\n    }\n}\n\n/***/ }),\n\n/***/ \"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js\":\n/*!********************************************************************!*\\\n  !*** ./src/models/seamless_m4t/feature_extraction_seamless_m4t.js ***!\n  \\********************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SeamlessM4TFeatureExtractor: () => (/* binding */ SeamlessM4TFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/audio.js */ \"./src/utils/audio.js\");\n\n\n\n\nclass SeamlessM4TFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    constructor(config) {\n        super(config);\n\n        const sampling_rate = this.config.sampling_rate;\n        const mel_filters = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            256, // num_frequency_bins\n            this.config.num_mel_bins, // num_mel_filters\n            20, // min_frequency\n            Math.floor(sampling_rate / 2), // max_frequency\n            sampling_rate, // sampling_rate\n            null, // norm\n            \"kaldi\", // mel_scale\n            true, // triangularize_in_mel_space\n        );\n\n        // Do padding:\n        for (let i = 0; i < mel_filters.length; ++i) {\n            mel_filters[i].push(0);\n        }\n        this.mel_filters = mel_filters;\n\n        this.window = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.window_function)(400, 'povey', {\n            periodic: false,\n        })\n    }\n\n    /**\n     * Computes the log-Mel spectrogram of the provided audio waveform.\n     * @param {Float32Array|Float64Array} waveform The audio waveform to process.\n     * @param {number} max_length The maximum number of frames to return.\n     * @returns {Promise<Tensor>} An object containing the log-Mel spectrogram data as a Float32Array and its dimensions as an array of numbers.\n     */\n    async _extract_fbank_features(waveform, max_length) {\n        // NOTE: We don't pad/truncate since that is passed in as `max_num_frames`\n\n        // Kaldi compliance: 16-bit signed integers\n        // 32768 == 2 ** 15\n        waveform = waveform.map((/** @type {number} */ x) => x * 32768)\n\n        return (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.spectrogram)(\n            waveform,\n            this.window, // window\n            400, // frame_length\n            160, // hop_length\n            {\n                fft_length: 512,\n                power: 2.0,\n                center: false,\n                preemphasis: 0.97,\n                mel_filters: this.mel_filters,\n                log_mel: 'log',\n                mel_floor: 1.192092955078125e-07,\n                remove_dc_offset: true,\n\n                // Custom\n                max_num_frames: max_length,\n                transpose: true,\n            }\n        )\n    }\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @param {Object} options Optional parameters for feature extraction.\n     * @param {boolean} [options.padding=true] Whether to pad the sequence to a multiple of `pad_to_multiple_of`.\n     * @param {number} [options.pad_to_multiple_of=2] The number to pad the sequence to a multiple of.\n     * @param {boolean} [options.do_normalize_per_mel_bins=true] Whether or not to zero-mean unit-variance normalize the input per mel-channel.\n     * @param {boolean} [options.return_attention_mask=true] Whether to return the attention mask.\n     * @returns {Promise<{ input_features: Tensor, attention_mask?: Tensor }>} A Promise resolving to an object containing the extracted input features and attention masks as Tensors.\n     */\n    async _call(audio, {\n        padding = true,\n        pad_to_multiple_of = 2,\n        do_normalize_per_mel_bins = true,\n        return_attention_mask = true,\n    } = {}) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'SeamlessM4TFeatureExtractor');\n\n        let features = await this._extract_fbank_features(audio, this.config.max_length);\n\n        if (do_normalize_per_mel_bins) {\n            const [num_features, feature_size] = features.dims;\n            const data = features.data;\n            for (let i = 0; i < feature_size; ++i) {\n                let sum = 0;\n                for (let j = 0; j < num_features; ++j) {\n                    sum += data[j * feature_size + i];\n                }\n\n                const mean = sum / num_features;\n\n                let variance = 0;\n                for (let j = 0; j < num_features; ++j) {\n                    variance += (data[j * feature_size + i] - mean) ** 2;\n                }\n                variance /= num_features - 1; // NOTE: We use ddof=1\n\n                const std = Math.sqrt(variance + 1e-7);\n                for (let j = 0; j < num_features; ++j) {\n                    const index = j * feature_size + i;\n                    data[index] = (data[index] - mean) / std;\n                }\n            }\n        }\n\n        let padded_attention_mask;\n        if (padding) {\n            const [num_frames, num_channels] = features.dims;\n            const data = /** @type {Float32Array} */(features.data);\n\n            const pad_size = num_frames % pad_to_multiple_of;\n            if (pad_size > 0) {\n                const padded_data = new Float32Array(num_channels * (num_frames + pad_size));\n                padded_data.set(data)\n                padded_data.fill(this.config.padding_value, data.length)\n\n                const numPaddedFrames = num_frames + pad_size;\n                features = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n                    features.type,\n                    padded_data,\n                    [numPaddedFrames, num_channels],\n                )\n\n                if (return_attention_mask) {\n                    padded_attention_mask = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n                        'int64',\n                        new BigInt64Array(numPaddedFrames),\n                        [1, numPaddedFrames],\n                    );\n                    /** @type {BigInt64Array} */ (padded_attention_mask.data).fill(1n, 0, num_frames);\n                }\n            }\n        }\n\n        const [num_frames, num_channels] = features.dims;\n\n        const stride = this.config.stride;\n        const remainder = num_frames % stride;\n        if (remainder !== 0) {\n            throw new Error(`The number of frames (${num_frames}) must be a multiple of the stride (${stride}).`)\n        }\n\n        const input_features = features.view(\n            1,\n            Math.floor(num_frames / stride),\n            num_channels * stride,\n        );\n\n        const result = { input_features }\n\n        if (return_attention_mask) {\n            const reshapedNumFrames = input_features.dims[1];\n\n            const attention_mask_data = new BigInt64Array(reshapedNumFrames);\n\n            if (padded_attention_mask) {\n                const padded_attention_mask_data = padded_attention_mask.data;\n                for (let i = 1, j = 0; i < num_frames; i += stride, ++j) {\n                    attention_mask_data[j] = padded_attention_mask_data[i];\n                }\n            } else {\n                attention_mask_data.fill(1n);\n            }\n            result.attention_mask = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n                'int64',\n                attention_mask_data,\n                [1, reshapedNumFrames],\n            );\n        }\n\n        return result;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/segformer/image_processing_segformer.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/segformer/image_processing_segformer.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SegformerFeatureExtractor: () => (/* binding */ SegformerFeatureExtractor),\n/* harmony export */   SegformerImageProcessor: () => (/* binding */ SegformerImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\n\nclass SegformerImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /** @type {typeof post_process_semantic_segmentation} */\n    post_process_semantic_segmentation(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_semantic_segmentation)(...args);\n    }\n}\nclass SegformerFeatureExtractor extends SegformerImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/siglip/image_processing_siglip.js\":\n/*!******************************************************!*\\\n  !*** ./src/models/siglip/image_processing_siglip.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SiglipImageProcessor: () => (/* binding */ SiglipImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass SiglipImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/smolvlm/image_processing_smolvlm.js\":\n/*!********************************************************!*\\\n  !*** ./src/models/smolvlm/image_processing_smolvlm.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmolVLMImageProcessor: () => (/* reexport safe */ _idefics3_image_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_0__.Idefics3ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _idefics3_image_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../idefics3/image_processing_idefics3.js */ \"./src/models/idefics3/image_processing_idefics3.js\");\n\n\n\n\n/***/ }),\n\n/***/ \"./src/models/smolvlm/processing_smolvlm.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/smolvlm/processing_smolvlm.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmolVLMProcessor: () => (/* reexport safe */ _idefics3_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_0__.Idefics3Processor)\n/* harmony export */ });\n/* harmony import */ var _idefics3_processing_idefics3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../idefics3/processing_idefics3.js */ \"./src/models/idefics3/processing_idefics3.js\");\n\n\n\n\n/***/ }),\n\n/***/ \"./src/models/speecht5/feature_extraction_speecht5.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/speecht5/feature_extraction_speecht5.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeechT5FeatureExtractor: () => (/* binding */ SpeechT5FeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n\n\n\nclass SpeechT5FeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor { }\n\n\n/***/ }),\n\n/***/ \"./src/models/speecht5/processing_speecht5.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/speecht5/processing_speecht5.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpeechT5Processor: () => (/* binding */ SpeechT5Processor)\n/* harmony export */ });\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n\n\n\n\nclass SpeechT5Processor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_0__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given input.\n     * @param {any} input The input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(input) {\n        return await this.feature_extractor(input)\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/swin2sr/image_processing_swin2sr.js\":\n/*!********************************************************!*\\\n  !*** ./src/models/swin2sr/image_processing_swin2sr.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Swin2SRImageProcessor: () => (/* binding */ Swin2SRImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass Swin2SRImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    pad_image(pixelData, imgDims, padSize, options = {}) {\n        // NOTE: In this case, `padSize` represents the size of the sliding window for the local attention.\n        // In other words, the image is padded so that its width and height are multiples of `padSize`.\n        const [imageHeight, imageWidth, imageChannels] = imgDims;\n\n        return super.pad_image(pixelData, imgDims, {\n            // NOTE: For Swin2SR models, the original python implementation adds padding even when the image's width/height is already\n            // a multiple of `pad_size`. However, this is most likely a bug (PR: https://github.com/mv-lab/swin2sr/pull/19).\n            // For this reason, we only add padding when the image's width/height is not a multiple of `pad_size`.\n            width: imageWidth + (padSize - imageWidth % padSize) % padSize,\n            height: imageHeight + (padSize - imageHeight % padSize) % padSize,\n        }, {\n            mode: 'symmetric',\n            center: false,\n            constant_values: -1,\n            ...options,\n        })\n    }\n}\n\n/***/ }),\n\n/***/ \"./src/models/ultravox/processing_ultravox.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/ultravox/processing_ultravox.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UltravoxProcessor: () => (/* binding */ UltravoxProcessor)\n/* harmony export */ });\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n\n\n\n\n/**\n * Represents a UltravoxProcessor that extracts features from an audio input.\n */\nclass UltravoxProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__.AutoFeatureExtractor\n    static uses_processor_config = true;\n\n    /**\n     * @param {string} text The text input to process.\n     * @param {Float32Array} audio The audio input to process.\n     */\n    async _call(text, audio = null, kwargs = {}) {\n        // TODO: Support batched inputs\n        if (Array.isArray(text)) {\n            throw new Error(\"Batched inputs are not supported yet.\");\n        }\n\n        let audio_inputs = {};\n        if (audio) {\n            const audio_len = audio.length;\n            const { input_features } = await this.feature_extractor(audio, {\n                ...kwargs,\n                max_length: audio_len,\n            });\n            const nb_encoder_frames = Math.round(audio_len / this.config.encoder_ds_factor + 1e-4);\n\n            // NOTE: The python version appears to have an off-by-one error.\n            const audio_embed_frames = 1 + Math.ceil(nb_encoder_frames / this.config.stack_factor);\n            audio_inputs[\"audio_token_len\"] = [audio_embed_frames];\n            audio_inputs[\"audio_values\"] = input_features;\n\n            const image_token = this.config.audio_placeholder;\n            if (!text.includes(image_token)) {\n                throw new Error(`The input text does not contain the image token ${image_token}.`);\n            }\n            text = text.replaceAll(image_token, image_token.repeat(audio_embed_frames));\n        }\n\n        const text_inputs = this.tokenizer(text, {\n            add_special_tokens: false,\n            ...kwargs,\n        });\n\n        return {\n            ...text_inputs,\n            ...audio_inputs,\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/vit/image_processing_vit.js\":\n/*!************************************************!*\\\n  !*** ./src/models/vit/image_processing_vit.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ViTFeatureExtractor: () => (/* binding */ ViTFeatureExtractor),\n/* harmony export */   ViTImageProcessor: () => (/* binding */ ViTImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass ViTImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor { }\nclass ViTFeatureExtractor extends ViTImageProcessor { }\n\n\n\n/***/ }),\n\n/***/ \"./src/models/vitmatte/image_processing_vitmatte.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/vitmatte/image_processing_vitmatte.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VitMatteImageProcessor: () => (/* binding */ VitMatteImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\n\nclass VitMatteImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /**\n     * Calls the feature extraction process on an array of images, preprocesses\n     * each image, and concatenates the resulting features into a single Tensor.\n     * @param {import(\"../../utils/image.js\").RawImage[]} images The image(s) to extract features from.\n     * @param {import(\"../../utils/image.js\").RawImage[]} trimaps The trimaps(s) to extract features from.\n     * @returns {Promise<import(\"../../base/image_processors_utils.js\").ImageProcessorResult>} An object containing the concatenated pixel values of the preprocessed images.\n     */\n    async _call(images, trimaps) {\n        if (!Array.isArray(images)) {\n            images = [images];\n        }\n        if (!Array.isArray(trimaps)) {\n            trimaps = [trimaps];\n        }\n\n        const imageData = await Promise.all(images.map(x => this.preprocess(x)));\n        const trimapData = await Promise.all(trimaps.map(x => this.preprocess(x, {\n            do_normalize: false,\n            do_convert_rgb: false,\n            do_convert_grayscale: true,\n        })));\n\n\n        // Stack pixel values\n        const pixel_values = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.stack)(imageData.map(\n            // Concatenate images and trimaps\n            (x, i) => (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.cat)([x.pixel_values, trimapData[i].pixel_values], 0)\n        ), 0);\n\n        return {\n            pixel_values,\n\n            // Original sizes of images\n            original_sizes: imageData.map(x => x.original_size),\n\n            // Reshaped sizes of images, before padding or cropping\n            reshaped_input_sizes: imageData.map(x => x.reshaped_input_size),\n        }\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/vitpose/image_processing_vitpose.js\":\n/*!********************************************************!*\\\n  !*** ./src/models/vitpose/image_processing_vitpose.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VitPoseImageProcessor: () => (/* binding */ VitPoseImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass VitPoseImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n\n    /**\n     * Transform the heatmaps into keypoint predictions and transform them back to the image.\n     * NOTE: This is a naive implementation and does not include advanced post-processing techniques,\n     * so the results may not be as accurate as the original implementation.\n     * @param {import('../../utils/tensor.js').Tensor} outputs The model outputs.\n     * @param {[number, number, number, number][][]} boxes List or array of bounding boxes for each image.\n     * Each box should be a list of 4 floats representing the bounding box coordinates in COCO format (top_left_x, top_left_y, width, height).\n     * @returns {{\n     *   bbox: [number, number, number, number],\n     *   scores: number[],\n     *   labels: number[],\n     *   keypoints: [number, number][]\n     * }[][]} List of keypoints predictions for each image.\n     */\n    post_process_pose_estimation(outputs, boxes, {\n        threshold = null,\n        // TODO:\n        // kernel_size = 11,\n        // target_sizes = null,\n    } = {}) {\n        // NOTE: boxes are 3D (batch_size, num_boxes, 4)\n        const heatmaps = outputs.tolist();\n        const [batch_size, num_classes, height, width] = outputs.dims;\n\n        const results = [];\n        for (let b = 0; b < batch_size; ++b) {\n            const heatmap = heatmaps[b];\n            const bboxes = boxes[b];\n\n            const batch_results = [];\n            for (let n = 0; n < bboxes.length; ++n) {\n                const bbox = bboxes[n];\n\n                const keypoints = [];\n                const scores = [];\n                const labels = [];\n\n                const xScale = bbox.at(-2) / width;\n                const yScale = bbox.at(-1) / height;\n                for (let c = 0; c < heatmap.length; ++c) {\n                    let [xWeightedSum, yWeightedSum] = [0, 0];\n                    let sum = 0;\n                    let score = -Infinity;\n                    const row = heatmap[c];\n                    for (let y = 0; y < row.length; ++y) {\n                        const col = row[y];\n                        for (let x = 0; x < col.length; ++x) {\n                            const value = col[x];\n                            sum += value;\n\n                            score = Math.max(score, value);\n\n                            // Get weighted sum of positions\n                            // TODO: Determine best offsets\n                            xWeightedSum += (x + 0.5) * value;\n                            yWeightedSum += (y) * value;\n                        }\n                    }\n\n                    // Ignore low scores, if threshold is set\n                    if (threshold != null && score < threshold) continue;\n\n                    /** @type {[number, number]} */\n                    const keypoint = [\n                        xScale * xWeightedSum / sum,\n                        yScale * yWeightedSum / sum,\n                    ]\n                    keypoints.push(keypoint);\n                    labels.push(c);\n                    scores.push(score);\n                }\n                batch_results.push({\n                    bbox,\n                    scores,\n                    labels,\n                    keypoints,\n                });\n            }\n            results.push(batch_results);\n        }\n        return results;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/wav2vec2/feature_extraction_wav2vec2.js\":\n/*!************************************************************!*\\\n  !*** ./src/models/wav2vec2/feature_extraction_wav2vec2.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wav2Vec2FeatureExtractor: () => (/* binding */ Wav2Vec2FeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n\n\n\nclass Wav2Vec2FeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    /**\n     * @param {Float32Array} input_values \n     * @returns {Float32Array} \n     */\n    _zero_mean_unit_var_norm(input_values) {\n        // TODO support batch?\n        const sum = input_values.reduce((a, b) => a + b, 0);\n        const mean = sum / input_values.length;\n        const variance = input_values.reduce((a, b) => a + (b - mean) ** 2, 0) / input_values.length;\n        return input_values.map(x => (x - mean) / Math.sqrt(variance + 1e-7));\n    }\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_values: Tensor; attention_mask: Tensor }>} A Promise resolving to an object containing the extracted input features and attention mask as Tensors.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'Wav2Vec2FeatureExtractor');\n\n        if (audio instanceof Float64Array) {\n            audio = new Float32Array(audio);\n        }\n\n        let input_values = audio;\n\n        // zero-mean and unit-variance normalization\n        if (this.config.do_normalize) {\n            input_values = this._zero_mean_unit_var_norm(input_values);\n        }\n\n        // TODO: allow user to pass in attention mask\n        const shape = [1, input_values.length];\n        return {\n            input_values: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('float32', input_values, shape),\n            attention_mask: new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor('int64', new BigInt64Array(input_values.length).fill(1n), shape)\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/wav2vec2/processing_wav2vec2.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/wav2vec2/processing_wav2vec2.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wav2Vec2Processor: () => (/* binding */ Wav2Vec2Processor)\n/* harmony export */ });\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n\n\n\n\nclass Wav2Vec2Processor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given audio input.\n     * @param {any} audio The audio input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(audio) {\n        return await this.feature_extractor(audio)\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js\":\n/*!********************************************************************!*\\\n  !*** ./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js ***!\n  \\********************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wav2Vec2ProcessorWithLM: () => (/* binding */ Wav2Vec2ProcessorWithLM)\n/* harmony export */ });\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n\n\n\n\nclass Wav2Vec2ProcessorWithLM extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_1__.AutoFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given audio input.\n     * @param {any} audio The audio input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(audio) {\n        return await this.feature_extractor(audio)\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/wespeaker/feature_extraction_wespeaker.js\":\n/*!**************************************************************!*\\\n  !*** ./src/models/wespeaker/feature_extraction_wespeaker.js ***!\n  \\**************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WeSpeakerFeatureExtractor: () => (/* binding */ WeSpeakerFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/audio.js */ \"./src/utils/audio.js\");\n\n\n\n\n\nclass WeSpeakerFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    constructor(config) {\n        super(config);\n\n        const sampling_rate = this.config.sampling_rate;\n        const mel_filters = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            256, // num_frequency_bins\n            this.config.num_mel_bins, // num_mel_filters\n            20, // min_frequency\n            Math.floor(sampling_rate / 2), // max_frequency\n            sampling_rate, // sampling_rate\n            null, // norm\n            \"kaldi\", // mel_scale\n            true, // triangularize_in_mel_space\n        );\n\n        // Do padding:\n        for (let i = 0; i < mel_filters.length; ++i) {\n            mel_filters[i].push(0);\n        }\n        this.mel_filters = mel_filters;\n\n        this.window = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.window_function)(400, 'hamming', {\n            periodic: false,\n        })\n        this.min_num_frames = this.config.min_num_frames;\n    }\n\n    /**\n     * Computes the log-Mel spectrogram of the provided audio waveform.\n     * @param {Float32Array|Float64Array} waveform The audio waveform to process.\n     * @returns {Promise<Tensor>} An object containing the log-Mel spectrogram data as a Float32Array and its dimensions as an array of numbers.\n     */\n    async _extract_fbank_features(waveform) {\n        // Kaldi compliance: 16-bit signed integers\n        // 32768 == 2 ** 15\n        waveform = waveform.map((/** @type {number} */ x) => x * 32768)\n\n        return (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.spectrogram)(\n            waveform,\n            this.window, // window\n            400, // frame_length\n            160, // hop_length\n            {\n                fft_length: 512,\n                power: 2.0,\n                center: false,\n                preemphasis: 0.97,\n                mel_filters: this.mel_filters,\n                log_mel: 'log',\n                mel_floor: 1.192092955078125e-07,\n                remove_dc_offset: true,\n\n                // Custom\n                transpose: true,\n                min_num_frames: this.min_num_frames,\n            }\n        )\n    }\n\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_features: Tensor }>} A Promise resolving to an object containing the extracted input features as a Tensor.\n     */\n    async _call(audio) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'WeSpeakerFeatureExtractor');\n\n        const features = (await this._extract_fbank_features(audio)).unsqueeze_(0);\n\n        if (this.config.fbank_centering_span === null) {\n            // center features with global average\n            const meanData = /** @type {Float32Array} */ (features.mean(1).data);\n            const featuresData = /** @type {Float32Array} */(features.data);\n            const [batch_size, num_frames, feature_size] = features.dims;\n\n            for (let i = 0; i < batch_size; ++i) {\n                const offset1 = i * num_frames * feature_size;\n                const offset2 = i * feature_size;\n                for (let j = 0; j < num_frames; ++j) {\n                    const offset3 = offset1 + j * feature_size;\n                    for (let k = 0; k < feature_size; ++k) {\n                        featuresData[offset3 + k] -= meanData[offset2 + k];\n                    }\n                }\n            }\n        }\n\n        return {\n            input_features: features\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/whisper/common_whisper.js\":\n/*!**********************************************!*\\\n  !*** ./src/models/whisper/common_whisper.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WHISPER_LANGUAGE_MAPPING: () => (/* binding */ WHISPER_LANGUAGE_MAPPING),\n/* harmony export */   WHISPER_TO_LANGUAGE_CODE_MAPPING: () => (/* binding */ WHISPER_TO_LANGUAGE_CODE_MAPPING),\n/* harmony export */   whisper_language_to_code: () => (/* binding */ whisper_language_to_code)\n/* harmony export */ });\n\n\nconst WHISPER_LANGUAGES = [\n    [\"en\", \"english\"],\n    [\"zh\", \"chinese\"],\n    [\"de\", \"german\"],\n    [\"es\", \"spanish\"],\n    [\"ru\", \"russian\"],\n    [\"ko\", \"korean\"],\n    [\"fr\", \"french\"],\n    [\"ja\", \"japanese\"],\n    [\"pt\", \"portuguese\"],\n    [\"tr\", \"turkish\"],\n    [\"pl\", \"polish\"],\n    [\"ca\", \"catalan\"],\n    [\"nl\", \"dutch\"],\n    [\"ar\", \"arabic\"],\n    [\"sv\", \"swedish\"],\n    [\"it\", \"italian\"],\n    [\"id\", \"indonesian\"],\n    [\"hi\", \"hindi\"],\n    [\"fi\", \"finnish\"],\n    [\"vi\", \"vietnamese\"],\n    [\"he\", \"hebrew\"],\n    [\"uk\", \"ukrainian\"],\n    [\"el\", \"greek\"],\n    [\"ms\", \"malay\"],\n    [\"cs\", \"czech\"],\n    [\"ro\", \"romanian\"],\n    [\"da\", \"danish\"],\n    [\"hu\", \"hungarian\"],\n    [\"ta\", \"tamil\"],\n    [\"no\", \"norwegian\"],\n    [\"th\", \"thai\"],\n    [\"ur\", \"urdu\"],\n    [\"hr\", \"croatian\"],\n    [\"bg\", \"bulgarian\"],\n    [\"lt\", \"lithuanian\"],\n    [\"la\", \"latin\"],\n    [\"mi\", \"maori\"],\n    [\"ml\", \"malayalam\"],\n    [\"cy\", \"welsh\"],\n    [\"sk\", \"slovak\"],\n    [\"te\", \"telugu\"],\n    [\"fa\", \"persian\"],\n    [\"lv\", \"latvian\"],\n    [\"bn\", \"bengali\"],\n    [\"sr\", \"serbian\"],\n    [\"az\", \"azerbaijani\"],\n    [\"sl\", \"slovenian\"],\n    [\"kn\", \"kannada\"],\n    [\"et\", \"estonian\"],\n    [\"mk\", \"macedonian\"],\n    [\"br\", \"breton\"],\n    [\"eu\", \"basque\"],\n    [\"is\", \"icelandic\"],\n    [\"hy\", \"armenian\"],\n    [\"ne\", \"nepali\"],\n    [\"mn\", \"mongolian\"],\n    [\"bs\", \"bosnian\"],\n    [\"kk\", \"kazakh\"],\n    [\"sq\", \"albanian\"],\n    [\"sw\", \"swahili\"],\n    [\"gl\", \"galician\"],\n    [\"mr\", \"marathi\"],\n    [\"pa\", \"punjabi\"],\n    [\"si\", \"sinhala\"],\n    [\"km\", \"khmer\"],\n    [\"sn\", \"shona\"],\n    [\"yo\", \"yoruba\"],\n    [\"so\", \"somali\"],\n    [\"af\", \"afrikaans\"],\n    [\"oc\", \"occitan\"],\n    [\"ka\", \"georgian\"],\n    [\"be\", \"belarusian\"],\n    [\"tg\", \"tajik\"],\n    [\"sd\", \"sindhi\"],\n    [\"gu\", \"gujarati\"],\n    [\"am\", \"amharic\"],\n    [\"yi\", \"yiddish\"],\n    [\"lo\", \"lao\"],\n    [\"uz\", \"uzbek\"],\n    [\"fo\", \"faroese\"],\n    [\"ht\", \"haitian creole\"],\n    [\"ps\", \"pashto\"],\n    [\"tk\", \"turkmen\"],\n    [\"nn\", \"nynorsk\"],\n    [\"mt\", \"maltese\"],\n    [\"sa\", \"sanskrit\"],\n    [\"lb\", \"luxembourgish\"],\n    [\"my\", \"myanmar\"],\n    [\"bo\", \"tibetan\"],\n    [\"tl\", \"tagalog\"],\n    [\"mg\", \"malagasy\"],\n    [\"as\", \"assamese\"],\n    [\"tt\", \"tatar\"],\n    [\"haw\", \"hawaiian\"],\n    [\"ln\", \"lingala\"],\n    [\"ha\", \"hausa\"],\n    [\"ba\", \"bashkir\"],\n    [\"jw\", \"javanese\"],\n    [\"su\", \"sundanese\"],\n]\n\n// @ts-ignore\nconst WHISPER_LANGUAGE_MAPPING = new Map(WHISPER_LANGUAGES);\n// @ts-ignore\nconst WHISPER_TO_LANGUAGE_CODE_MAPPING = new Map([\n    ...WHISPER_LANGUAGES.map(([k, v]) => [v, k]),\n    ...[\n        [\"burmese\", \"my\"],\n        [\"valencian\", \"ca\"],\n        [\"flemish\", \"nl\"],\n        [\"haitian\", \"ht\"],\n        [\"letzeburgesch\", \"lb\"],\n        [\"pushto\", \"ps\"],\n        [\"panjabi\", \"pa\"],\n        [\"moldavian\", \"ro\"],\n        [\"moldovan\", \"ro\"],\n        [\"sinhalese\", \"si\"],\n        [\"castilian\", \"es\"],\n    ]\n]);\n\n/**\n * @param {string} language The language name or code\n * @returns {string} The language code\n */\nfunction whisper_language_to_code(language) {\n    language = language.toLowerCase();\n\n    // Map to code from user-friendly name (e.g., \"english\" -> \"en\")\n    let language_code = WHISPER_TO_LANGUAGE_CODE_MAPPING.get(language);\n\n    if (language_code === undefined) {\n        // User provided something that is not a language name\n\n        // Perhaps the user passed the special token itself\n        const language_special_token = language.match(/^<\\|([a-z]{2})\\|>$/);\n        if (language_special_token) {\n            language = language_special_token[1];\n        }\n\n        if (WHISPER_LANGUAGE_MAPPING.has(language)) {\n            // User provided the language code directly (e.g., \"en\")\n            language_code = language;\n\n        } else {\n            // User provided something that is not a language code or name\n            const is_language_code = language.length === 2;\n            const langs = is_language_code ? WHISPER_LANGUAGE_MAPPING.keys() : WHISPER_LANGUAGE_MAPPING.values();\n\n            throw new Error(`Language \"${language}\" is not supported. Must be one of: ${JSON.stringify(Array.from(langs))}`);\n        }\n    }\n    return language_code;\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/whisper/feature_extraction_whisper.js\":\n/*!**********************************************************!*\\\n  !*** ./src/models/whisper/feature_extraction_whisper.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WhisperFeatureExtractor: () => (/* binding */ WhisperFeatureExtractor)\n/* harmony export */ });\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/audio.js */ \"./src/utils/audio.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/maths.js */ \"./src/utils/maths.js\");\n\n\n\n\n\nclass WhisperFeatureExtractor extends _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.FeatureExtractor {\n\n    constructor(config) {\n        super(config);\n\n        // Prefer given `mel_filters` from preprocessor_config.json, or calculate them if they don't exist.\n        this.config.mel_filters ??= (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.mel_filter_bank)(\n            Math.floor(1 + this.config.n_fft / 2), // num_frequency_bins\n            this.config.feature_size, // num_mel_filters\n            0.0, // min_frequency\n            8000.0, // max_frequency\n            this.config.sampling_rate, // sampling_rate\n            \"slaney\", // norm\n            \"slaney\", // mel_scale\n        );\n\n        this.window = (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.window_function)(this.config.n_fft, 'hann');\n    }\n\n    /**\n     * Computes the log-Mel spectrogram of the provided audio waveform.\n     * @param {Float32Array|Float64Array} waveform The audio waveform to process.\n     * @returns {Promise<Tensor>} An object containing the log-Mel spectrogram data as a Float32Array and its dimensions as an array of numbers.\n     */\n    async _extract_fbank_features(waveform) {\n        const features = await (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_2__.spectrogram)(\n            waveform,\n            this.window, // window\n            this.config.n_fft, // frame_length\n            this.config.hop_length, // hop_length\n            {\n                power: 2.0,\n                mel_filters: this.config.mel_filters,\n                log_mel: 'log10',\n\n                // Custom\n                max_num_frames: Math.min(\n                    Math.floor(waveform.length / this.config.hop_length),\n                    this.config.nb_max_frames, // 3000\n                )\n            }\n        )\n\n        const data = features.data;\n        const maxValue = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.max)(/** @type {Float32Array} */(data))[0];\n\n        for (let i = 0; i < data.length; ++i) {\n            data[i] = (Math.max(data[i], maxValue - 8.0) + 4.0) / 4.0;\n        }\n\n        return features;\n    }\n\n    /**\n     * Asynchronously extracts features from a given audio using the provided configuration.\n     * @param {Float32Array|Float64Array} audio The audio data as a Float32Array/Float64Array.\n     * @returns {Promise<{ input_features: Tensor }>} A Promise resolving to an object containing the extracted input features as a Tensor.\n     */\n    async _call(audio, {\n        max_length = null,\n    } = {}) {\n        (0,_base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_0__.validate_audio_inputs)(audio, 'WhisperFeatureExtractor');\n\n        let waveform;\n        const length = max_length ?? this.config.n_samples;\n        if (audio.length > length) {\n            if (audio.length > this.config.n_samples) {\n                console.warn(\n                    \"Attempting to extract features for audio longer than 30 seconds. \" +\n                    \"If using a pipeline to extract transcript from a long audio clip, \" +\n                    \"remember to specify `chunk_length_s` and/or `stride_length_s`.\"\n                );\n            }\n            waveform = audio.slice(0, length);\n        } else {\n            // pad with zeros\n            waveform = new Float32Array(length);\n            waveform.set(audio);\n        }\n\n        const features = await this._extract_fbank_features(waveform);\n\n        return {\n            input_features: features.unsqueeze_(0)\n        };\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/models/whisper/generation_whisper.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/whisper/generation_whisper.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WhisperGenerationConfig: () => (/* binding */ WhisperGenerationConfig)\n/* harmony export */ });\n/* harmony import */ var _generation_configuration_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../generation/configuration_utils.js */ \"./src/generation/configuration_utils.js\");\n\n\nclass WhisperGenerationConfig extends _generation_configuration_utils_js__WEBPACK_IMPORTED_MODULE_0__.GenerationConfig {\n\n    /**\n     * Whether to return the timestamps with the text. This enables the `WhisperTimestampsLogitsProcessor`.\n     * @type {boolean}\n     */\n    return_timestamps = null;\n\n    /**\n     * Whether to return token-level timestamps\n     * with the text. This can be used with or without the `return_timestamps` option. To get word-level\n     * timestamps, use the tokenizer to group the tokens into words.\n     * @type {boolean}\n     */\n    return_token_timestamps = null;\n\n    /**\n     * The number of audio frames available in this chunk. This is only used generating word-level timestamps.\n     * @type {number}\n     */\n    num_frames = null;\n\n    /**\n     * Alignment heads to predict word-level timestamps. This is a list of [layer, head] pairs that\n     * select the cross-attention heads that are highly correlated to word-level timing.\n     * @type {[number, number][]}\n     */\n    alignment_heads = null;\n\n    /**\n     * Task to use for generation, either \"translate\" or \"transcribe\".\n     * @type {string}\n     */\n    task = null;\n\n    /**\n     * Language token to use for generation, can be either in the form of `<|en|>`, `en` or `english`.\n     * You can find all the possible language tokens in the `model.generation_config.lang_to_id` dictionary.\n     * @type {string}\n     */\n    language = null;\n\n    /**\n     * The id of the `\"<|notimestamps|>\"` token.\n     * @type {number}\n     */\n    no_timestamps_token_id = null;\n\n    /**\n     * Rank-1 list of token IDs created by passing text to [`~WhisperProcessor.get_prompt_ids`] that is\n     * provided as a prompt to each chunk. This can be used to provide or \"prompt-engineer\" a context for\n     * transcription, e.g. custom vocabularies or proper nouns to make it more likely to predict those words\n     * correctly. It cannot be used in conjunction with `decoder_start_token_id` as it overwrites this value.\n     * @type {number[]}\n     */\n    prompt_ids = null;\n\n    /**\n     * Whether the model is multilingual or not.\n     * @type {boolean}\n     */\n    is_multilingual = null;\n\n    /**\n     * (Optional) A mapping from language tokens to their corresponding IDs.\n     * Only required if the model is multilingual.\n     * @type {Record<string, number>|null}\n     */\n    lang_to_id = null;\n\n    /**\n     * (Optional) A mapping from task tokens to their corresponding IDs.\n     * @type {Record<string, number>|null}\n     */\n    task_to_id = null;\n\n    /**\n     * Used to set the maximum value of the initial timestamp. This is used to prevent the model from\n     * predicting timestamps that are too far in the future.\n     * @type {number}\n     */\n    max_initial_timestamp_index = 1;\n}\n\n/**\n * @typedef {import('../../generation/parameters.js').GenerationFunctionParameters & {generation_config: WhisperGenerationConfig} & WhisperGenerationConfig} WhisperGenerationFunctionParameters\n */\n\n\n/***/ }),\n\n/***/ \"./src/models/whisper/processing_whisper.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/whisper/processing_whisper.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WhisperProcessor: () => (/* binding */ WhisperProcessor)\n/* harmony export */ });\n/* harmony import */ var _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../base/processing_utils.js */ \"./src/base/processing_utils.js\");\n\n\n\n\n/**\n * Represents a WhisperProcessor that extracts features from an audio input.\n */\nclass WhisperProcessor extends _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_2__.Processor {\n    static tokenizer_class = _tokenizers_js__WEBPACK_IMPORTED_MODULE_1__.AutoTokenizer\n    static feature_extractor_class = _auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_0__.AutoFeatureExtractor\n\n    /**\n     * Calls the feature_extractor function with the given audio input.\n     * @param {any} audio The audio input to extract features from.\n     * @returns {Promise<any>} A Promise that resolves with the extracted features.\n     */\n    async _call(audio) {\n        return await this.feature_extractor(audio);\n    }\n}\n\n\n\n/***/ }),\n\n/***/ \"./src/models/yolos/image_processing_yolos.js\":\n/*!****************************************************!*\\\n  !*** ./src/models/yolos/image_processing_yolos.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YolosFeatureExtractor: () => (/* binding */ YolosFeatureExtractor),\n/* harmony export */   YolosImageProcessor: () => (/* binding */ YolosImageProcessor)\n/* harmony export */ });\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n\n\nclass YolosImageProcessor extends _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.ImageProcessor {\n    /** @type {typeof post_process_object_detection} */\n    post_process_object_detection(...args) {\n        return (0,_base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_0__.post_process_object_detection)(...args);\n    }\n}\nclass YolosFeatureExtractor extends YolosImageProcessor { }\n\n\n/***/ }),\n\n/***/ \"./src/ops/registry.js\":\n/*!*****************************!*\\\n  !*** ./src/ops/registry.js ***!\n  \\*****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TensorOpRegistry: () => (/* binding */ TensorOpRegistry)\n/* harmony export */ });\n/* harmony import */ var _backends_onnx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../backends/onnx.js */ \"./src/backends/onnx.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n\n\n\n\nconst IS_WEB_ENV = _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_BROWSER_ENV || _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_WEBWORKER_ENV;\n/**\n * Asynchronously creates a wrapper function for running an ONNX inference session.\n *\n * @param {number[]} session_bytes The session data in bytes.\n * @param {import('onnxruntime-common').InferenceSession.SessionOptions} session_options The options for the ONNX session.\n * @template {string | [string] | string[]} T\n * @param {T} names The name(s) of the output tensor(s).\n * \n * @returns {Promise<function(Record<string, Tensor>): Promise<T extends string ? Tensor : T extends string[] ? { [K in keyof T]: Tensor } : never>>}\n * The wrapper function for running the ONNX inference session.\n */\nconst wrap = async (session_bytes, session_options, names) => {\n    const session = await (0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_0__.createInferenceSession)(\n        new Uint8Array(session_bytes), session_options,\n    );\n\n    /** @type {Promise<any>} */\n    let chain = Promise.resolve();\n\n    return /** @type {any} */(async (/** @type {Record<string, Tensor>} */ inputs) => {\n        const proxied = (0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_0__.isONNXProxy)();\n        const ortFeed = Object.fromEntries(Object.entries(inputs).map(([k, v]) => [k, (proxied ? v.clone() : v).ort_tensor]));\n\n        // When running in-browser via WASM, we need to chain calls to session.run to avoid \"Error: Session already started\"\n        const outputs = await (chain = IS_WEB_ENV ? chain.then(() => session.run(ortFeed)) : session.run(ortFeed));\n\n        if (Array.isArray(names)) {\n            return names.map((n) => new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(outputs[n]));\n        } else {\n            return new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(outputs[/** @type {string} */(names)]);\n        }\n    })\n}\n\n// In-memory registry of initialized ONNX operators\nclass TensorOpRegistry {\n    static session_options = {\n        // TODO: Allow for multiple execution providers\n        // executionProviders: ['webgpu'],\n    };\n\n    static get nearest_interpolate_4d() {\n        if (!this._nearest_interpolate_4d) {\n            this._nearest_interpolate_4d = wrap(\n                [8, 10, 18, 0, 58, 129, 1, 10, 41, 10, 1, 120, 10, 0, 10, 0, 10, 1, 115, 18, 1, 121, 34, 6, 82, 101, 115, 105, 122, 101, 42, 18, 10, 4, 109, 111, 100, 101, 34, 7, 110, 101, 97, 114, 101, 115, 116, 160, 1, 3, 18, 1, 114, 90, 31, 10, 1, 120, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 90, 15, 10, 1, 115, 18, 10, 10, 8, 8, 7, 18, 4, 10, 2, 8, 4, 98, 31, 10, 1, 121, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 66, 2, 16, 21],\n                this.session_options,\n                'y',\n            );\n        }\n        return this._nearest_interpolate_4d;\n    }\n    static get bilinear_interpolate_4d() {\n        if (!this._bilinear_interpolate_4d) {\n            this._bilinear_interpolate_4d = wrap(\n                [8, 9, 18, 0, 58, 128, 1, 10, 40, 10, 1, 120, 10, 0, 10, 0, 10, 1, 115, 18, 1, 121, 34, 6, 82, 101, 115, 105, 122, 101, 42, 17, 10, 4, 109, 111, 100, 101, 34, 6, 108, 105, 110, 101, 97, 114, 160, 1, 3, 18, 1, 114, 90, 31, 10, 1, 120, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 90, 15, 10, 1, 115, 18, 10, 10, 8, 8, 7, 18, 4, 10, 2, 8, 4, 98, 31, 10, 1, 121, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 66, 2, 16, 20],\n                this.session_options,\n                'y',\n            );\n        }\n        return this._bilinear_interpolate_4d;\n    }\n\n    static get bicubic_interpolate_4d() {\n        if (!this._bicubic_interpolate_4d) {\n            this._bicubic_interpolate_4d = wrap(\n                [8, 9, 18, 0, 58, 127, 10, 39, 10, 1, 120, 10, 0, 10, 0, 10, 1, 115, 18, 1, 121, 34, 6, 82, 101, 115, 105, 122, 101, 42, 16, 10, 4, 109, 111, 100, 101, 34, 5, 99, 117, 98, 105, 99, 160, 1, 3, 18, 1, 114, 90, 31, 10, 1, 120, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 90, 15, 10, 1, 115, 18, 10, 10, 8, 8, 7, 18, 4, 10, 2, 8, 4, 98, 31, 10, 1, 121, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 99, 10, 3, 18, 1, 104, 10, 3, 18, 1, 119, 66, 2, 16, 20],\n                this.session_options,\n                'y',\n            );\n        }\n        return this._bicubic_interpolate_4d;\n    }\n\n    static get matmul() {\n        if (!this._matmul) {\n            this._matmul = wrap(\n                [8, 9, 18, 0, 58, 55, 10, 17, 10, 1, 97, 10, 1, 98, 18, 1, 99, 34, 6, 77, 97, 116, 77, 117, 108, 18, 1, 114, 90, 9, 10, 1, 97, 18, 4, 10, 2, 8, 1, 90, 9, 10, 1, 98, 18, 4, 10, 2, 8, 1, 98, 9, 10, 1, 99, 18, 4, 10, 2, 8, 1, 66, 2, 16, 20],\n                this.session_options,\n                'c',\n            );\n        }\n        return this._matmul;\n    }\n\n    static get stft() {\n        if (!this._stft) {\n            this._stft = wrap(\n                [8, 7, 18, 0, 58, 148, 1, 10, 38, 10, 1, 115, 10, 1, 106, 10, 1, 119, 10, 1, 108, 18, 1, 111, 34, 4, 83, 84, 70, 84, 42, 15, 10, 8, 111, 110, 101, 115, 105, 100, 101, 100, 24, 1, 160, 1, 2, 18, 1, 115, 90, 26, 10, 1, 115, 18, 21, 10, 19, 8, 1, 18, 15, 10, 3, 18, 1, 98, 10, 3, 18, 1, 115, 10, 3, 18, 1, 99, 90, 11, 10, 1, 106, 18, 6, 10, 4, 8, 7, 18, 0, 90, 16, 10, 1, 119, 18, 11, 10, 9, 8, 1, 18, 5, 10, 3, 18, 1, 119, 90, 11, 10, 1, 108, 18, 6, 10, 4, 8, 7, 18, 0, 98, 31, 10, 1, 111, 18, 26, 10, 24, 8, 1, 18, 20, 10, 3, 18, 1, 98, 10, 3, 18, 1, 102, 10, 3, 18, 1, 100, 10, 3, 18, 1, 99, 66, 2, 16, 17],\n                this.session_options,\n                'o',\n            )\n        }\n        return this._stft;\n    }\n\n    static get rfft() {\n        if (!this._rfft) {\n            this._rfft = wrap(\n                [8, 9, 18, 0, 58, 97, 10, 33, 10, 1, 120, 10, 0, 10, 1, 97, 18, 1, 121, 34, 3, 68, 70, 84, 42, 15, 10, 8, 111, 110, 101, 115, 105, 100, 101, 100, 24, 1, 160, 1, 2, 18, 1, 100, 90, 21, 10, 1, 120, 18, 16, 10, 14, 8, 1, 18, 10, 10, 3, 18, 1, 115, 10, 3, 18, 1, 99, 90, 11, 10, 1, 97, 18, 6, 10, 4, 8, 7, 18, 0, 98, 21, 10, 1, 121, 18, 16, 10, 14, 8, 1, 18, 10, 10, 3, 18, 1, 115, 10, 3, 18, 1, 99, 66, 2, 16, 20],\n                this.session_options,\n                'y',\n            )\n        }\n        return this._rfft;\n    }\n\n    static get top_k() {\n        if (!this._top_k) {\n            this._top_k = wrap(\n                [8, 10, 18, 0, 58, 73, 10, 18, 10, 1, 120, 10, 1, 107, 18, 1, 118, 18, 1, 105, 34, 4, 84, 111, 112, 75, 18, 1, 116, 90, 9, 10, 1, 120, 18, 4, 10, 2, 8, 1, 90, 15, 10, 1, 107, 18, 10, 10, 8, 8, 7, 18, 4, 10, 2, 8, 1, 98, 9, 10, 1, 118, 18, 4, 10, 2, 8, 1, 98, 9, 10, 1, 105, 18, 4, 10, 2, 8, 7, 66, 2, 16, 21],\n                this.session_options,\n                [ /* Values */ 'v', /* Indices */ 'i']\n            )\n        }\n        return this._top_k;\n    }\n\n    static get slice() {\n        if (!this._slice) {\n            this._slice = wrap(\n                [8, 7, 18, 0, 58, 96, 10, 25, 10, 1, 120, 10, 1, 115, 10, 1, 101, 10, 1, 97, 10, 1, 116, 18, 1, 121, 34, 5, 83, 108, 105, 99, 101, 18, 1, 114, 90, 9, 10, 1, 120, 18, 4, 10, 2, 8, 1, 90, 9, 10, 1, 115, 18, 4, 10, 2, 8, 7, 90, 9, 10, 1, 101, 18, 4, 10, 2, 8, 7, 90, 9, 10, 1, 97, 18, 4, 10, 2, 8, 7, 90, 9, 10, 1, 116, 18, 4, 10, 2, 8, 7, 98, 9, 10, 1, 121, 18, 4, 10, 2, 8, 1, 66, 2, 16, 13],\n                this.session_options,\n                'y',\n            )\n        }\n        return this._slice;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/pipelines.js\":\n/*!**************************!*\\\n  !*** ./src/pipelines.js ***!\n  \\**************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioClassificationPipeline: () => (/* binding */ AudioClassificationPipeline),\n/* harmony export */   AutomaticSpeechRecognitionPipeline: () => (/* binding */ AutomaticSpeechRecognitionPipeline),\n/* harmony export */   BackgroundRemovalPipeline: () => (/* binding */ BackgroundRemovalPipeline),\n/* harmony export */   DepthEstimationPipeline: () => (/* binding */ DepthEstimationPipeline),\n/* harmony export */   DocumentQuestionAnsweringPipeline: () => (/* binding */ DocumentQuestionAnsweringPipeline),\n/* harmony export */   FeatureExtractionPipeline: () => (/* binding */ FeatureExtractionPipeline),\n/* harmony export */   FillMaskPipeline: () => (/* binding */ FillMaskPipeline),\n/* harmony export */   ImageClassificationPipeline: () => (/* binding */ ImageClassificationPipeline),\n/* harmony export */   ImageFeatureExtractionPipeline: () => (/* binding */ ImageFeatureExtractionPipeline),\n/* harmony export */   ImageSegmentationPipeline: () => (/* binding */ ImageSegmentationPipeline),\n/* harmony export */   ImageToImagePipeline: () => (/* binding */ ImageToImagePipeline),\n/* harmony export */   ImageToTextPipeline: () => (/* binding */ ImageToTextPipeline),\n/* harmony export */   ObjectDetectionPipeline: () => (/* binding */ ObjectDetectionPipeline),\n/* harmony export */   Pipeline: () => (/* binding */ Pipeline),\n/* harmony export */   QuestionAnsweringPipeline: () => (/* binding */ QuestionAnsweringPipeline),\n/* harmony export */   SummarizationPipeline: () => (/* binding */ SummarizationPipeline),\n/* harmony export */   Text2TextGenerationPipeline: () => (/* binding */ Text2TextGenerationPipeline),\n/* harmony export */   TextClassificationPipeline: () => (/* binding */ TextClassificationPipeline),\n/* harmony export */   TextGenerationPipeline: () => (/* binding */ TextGenerationPipeline),\n/* harmony export */   TextToAudioPipeline: () => (/* binding */ TextToAudioPipeline),\n/* harmony export */   TokenClassificationPipeline: () => (/* binding */ TokenClassificationPipeline),\n/* harmony export */   TranslationPipeline: () => (/* binding */ TranslationPipeline),\n/* harmony export */   ZeroShotAudioClassificationPipeline: () => (/* binding */ ZeroShotAudioClassificationPipeline),\n/* harmony export */   ZeroShotClassificationPipeline: () => (/* binding */ ZeroShotClassificationPipeline),\n/* harmony export */   ZeroShotImageClassificationPipeline: () => (/* binding */ ZeroShotImageClassificationPipeline),\n/* harmony export */   ZeroShotObjectDetectionPipeline: () => (/* binding */ ZeroShotObjectDetectionPipeline),\n/* harmony export */   pipeline: () => (/* binding */ pipeline)\n/* harmony export */ });\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _models_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models.js */ \"./src/models.js\");\n/* harmony import */ var _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models/auto/processing_auto.js */ \"./src/models/auto/processing_auto.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/audio.js */ \"./src/utils/audio.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/image.js */ \"./src/utils/image.js\");\n/**\n * @file Pipelines provide a high-level, easy to use, API for running machine learning models.\n * \n * **Example:** Instantiate pipeline using the `pipeline` function.\n * ```javascript\n * import { pipeline } from '@huggingface/transformers';\n * \n * const classifier = await pipeline('sentiment-analysis');\n * const output = await classifier('I love transformers!');\n * // [{'label': 'POSITIVE', 'score': 0.999817686}]\n * ```\n * \n * @module pipelines\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {string | RawImage | URL} ImageInput\n * @typedef {ImageInput|ImageInput[]} ImagePipelineInputs\n */\n\n/**\n * Prepare images for further tasks.\n * @param {ImagePipelineInputs} images images to prepare.\n * @returns {Promise<RawImage[]>} returns processed images.\n * @private\n */\nasync function prepareImages(images) {\n    if (!Array.isArray(images)) {\n        images = [images];\n    }\n\n    // Possibly convert any non-images to images\n    return await Promise.all(images.map(x => _utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage.read(x)));\n}\n\n/**\n * @typedef {string | URL | Float32Array | Float64Array} AudioInput\n * @typedef {AudioInput|AudioInput[]} AudioPipelineInputs\n */\n\n/**\n * Prepare audios for further tasks.\n * @param {AudioPipelineInputs} audios audios to prepare.\n * @param {number} sampling_rate sampling rate of the audios.\n * @returns {Promise<Float32Array[]>} The preprocessed audio data.\n * @private\n */\nasync function prepareAudios(audios, sampling_rate) {\n    if (!Array.isArray(audios)) {\n        audios = [audios];\n    }\n\n    return await Promise.all(audios.map(x => {\n        if (typeof x === 'string' || x instanceof URL) {\n            return (0,_utils_audio_js__WEBPACK_IMPORTED_MODULE_7__.read_audio)(x, sampling_rate);\n        } else if (x instanceof Float64Array) {\n            return new Float32Array(x);\n        }\n        return x;\n    }));\n}\n\n/**\n * @typedef {Object} BoundingBox\n * @property {number} xmin The minimum x coordinate of the bounding box.\n * @property {number} ymin The minimum y coordinate of the bounding box.\n * @property {number} xmax The maximum x coordinate of the bounding box.\n * @property {number} ymax The maximum y coordinate of the bounding box.\n */\n\n/**\n * Helper function to convert list [xmin, xmax, ymin, ymax] into object { \"xmin\": xmin, ... }\n * @param {number[]} box The bounding box as a list.\n * @param {boolean} asInteger Whether to cast to integers.\n * @returns {BoundingBox} The bounding box as an object.\n * @private\n */\nfunction get_bounding_box(box, asInteger) {\n    if (asInteger) {\n        box = box.map(x => x | 0);\n    }\n    const [xmin, ymin, xmax, ymax] = box;\n\n    return { xmin, ymin, xmax, ymax };\n}\n\n\n/**\n * @callback DisposeType Disposes the item.\n * @returns {Promise<void>} A promise that resolves when the item has been disposed.\n * \n * @typedef {Object} Disposable\n * @property {DisposeType} dispose A promise that resolves when the pipeline has been disposed.\n */\n\n/**\n * The Pipeline class is the class from which all pipelines inherit.\n * Refer to this class for methods shared across different pipelines.\n */\nclass Pipeline extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_4__.Callable {\n    /**\n     * Create a new Pipeline.\n     * @param {Object} options An object containing the following properties:\n     * @param {string} [options.task] The task of the pipeline. Useful for specifying subtasks.\n     * @param {PreTrainedModel} [options.model] The model used by the pipeline.\n     * @param {PreTrainedTokenizer} [options.tokenizer=null] The tokenizer used by the pipeline (if any).\n     * @param {Processor} [options.processor=null] The processor used by the pipeline (if any).\n     */\n    constructor({ task, model, tokenizer = null, processor = null }) {\n        super();\n        this.task = task;\n        this.model = model;\n        this.tokenizer = tokenizer;\n        this.processor = processor;\n    }\n\n    /** @type {DisposeType} */\n    async dispose() {\n        await this.model.dispose();\n    }\n}\n\n/**\n * @typedef {Object} ModelTokenizerConstructorArgs\n * @property {string} task The task of the pipeline. Useful for specifying subtasks.\n * @property {PreTrainedModel} model The model used by the pipeline.\n * @property {PreTrainedTokenizer} tokenizer The tokenizer used by the pipeline.\n * \n * @typedef {ModelTokenizerConstructorArgs} TextPipelineConstructorArgs An object used to instantiate a text-based pipeline.\n */\n\n/**\n * @typedef {Object} ModelProcessorConstructorArgs\n * @property {string} task The task of the pipeline. Useful for specifying subtasks.\n * @property {PreTrainedModel} model The model used by the pipeline.\n * @property {Processor} processor The processor used by the pipeline.\n * \n * @typedef {ModelProcessorConstructorArgs} AudioPipelineConstructorArgs An object used to instantiate an audio-based pipeline.\n * @typedef {ModelProcessorConstructorArgs} ImagePipelineConstructorArgs An object used to instantiate an image-based pipeline.\n */\n\n\n/**\n * @typedef {Object} ModelTokenizerProcessorConstructorArgs\n * @property {string} task The task of the pipeline. Useful for specifying subtasks.\n * @property {PreTrainedModel} model The model used by the pipeline.\n * @property {PreTrainedTokenizer} tokenizer The tokenizer used by the pipeline.\n * @property {Processor} processor The processor used by the pipeline.\n * \n * @typedef {ModelTokenizerProcessorConstructorArgs} TextAudioPipelineConstructorArgs An object used to instantiate a text- and audio-based pipeline.\n * @typedef {ModelTokenizerProcessorConstructorArgs} TextImagePipelineConstructorArgs An object used to instantiate a text- and image-based pipeline.\n */\n\n/**\n * @typedef {Object} TextClassificationSingle\n * @property {string} label The label predicted.\n * @property {number} score The corresponding probability.\n * @typedef {TextClassificationSingle[]} TextClassificationOutput\n * \n * @typedef {Object} TextClassificationPipelineOptions Parameters specific to text classification pipelines.\n * @property {number} [top_k=1] The number of top predictions to be returned.\n * \n * @callback TextClassificationPipelineCallback Classify the text(s) given as inputs.\n * @param {string|string[]} texts The input text(s) to be classified.\n * @param {TextClassificationPipelineOptions} [options] The options to use for text classification.\n * @returns {Promise<TextClassificationOutput|TextClassificationOutput[]>} An array or object containing the predicted labels and scores.\n * \n * @typedef {TextPipelineConstructorArgs & TextClassificationPipelineCallback & Disposable} TextClassificationPipelineType\n */\n\n/**\n * Text classification pipeline using any `ModelForSequenceClassification`.\n *\n * **Example:** Sentiment-analysis w/ `Xenova/distilbert-base-uncased-finetuned-sst-2-english`.\n * ```javascript\n * const classifier = await pipeline('sentiment-analysis', 'Xenova/distilbert-base-uncased-finetuned-sst-2-english');\n * const output = await classifier('I love transformers!');\n * // [{ label: 'POSITIVE', score: 0.999788761138916 }]\n * ```\n * \n * **Example:** Multilingual sentiment-analysis w/ `Xenova/bert-base-multilingual-uncased-sentiment` (and return top 5 classes).\n * ```javascript\n * const classifier = await pipeline('sentiment-analysis', 'Xenova/bert-base-multilingual-uncased-sentiment');\n * const output = await classifier('Le meilleur film de tous les temps.', { top_k: 5 });\n * // [\n * //   { label: '5 stars', score: 0.9610759615898132 },\n * //   { label: '4 stars', score: 0.03323351591825485 },\n * //   { label: '3 stars', score: 0.0036155181005597115 },\n * //   { label: '1 star', score: 0.0011325967498123646 },\n * //   { label: '2 stars', score: 0.0009423971059732139 }\n * // ]\n * ```\n * \n * **Example:** Toxic comment classification w/ `Xenova/toxic-bert` (and return all classes).\n * ```javascript\n * const classifier = await pipeline('text-classification', 'Xenova/toxic-bert');\n * const output = await classifier('I hate you!', { top_k: null });\n * // [\n * //   { label: 'toxic', score: 0.9593140482902527 },\n * //   { label: 'insult', score: 0.16187334060668945 },\n * //   { label: 'obscene', score: 0.03452680632472038 },\n * //   { label: 'identity_hate', score: 0.0223250575363636 },\n * //   { label: 'threat', score: 0.019197041168808937 },\n * //   { label: 'severe_toxic', score: 0.005651099607348442 }\n * // ]\n * ```\n */\nclass TextClassificationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => TextClassificationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new TextClassificationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {TextClassificationPipelineCallback} */\n    async _call(texts, {\n        top_k = 1\n    } = {}) {\n\n        // Run tokenization\n        const model_inputs = this.tokenizer(texts, {\n            padding: true,\n            truncation: true,\n        });\n\n        // Run model\n        const outputs = await this.model(model_inputs)\n\n        // TODO: Use softmax tensor function\n        const function_to_apply =\n            // @ts-expect-error TS2339\n            this.model.config.problem_type === 'multi_label_classification'\n                ? batch => batch.sigmoid()\n                : batch => new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor(\n                    'float32',\n                    (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(batch.data),\n                    batch.dims,\n                ); // single_label_classification (default)\n\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        const toReturn = [];\n        for (const batch of outputs.logits) {\n            const output = function_to_apply(batch);\n\n            const scores = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.topk)(output, top_k);\n\n            const values = scores[0].tolist();\n            const indices = scores[1].tolist();\n            const vals = indices.map((x, i) => ({\n                label: id2label ? id2label[x] : `LABEL_${x}`,\n                score: values[i],\n            }));\n            if (top_k === 1) {\n                toReturn.push(...vals);\n            } else {\n                toReturn.push(vals);\n            }\n        }\n\n        return Array.isArray(texts) || top_k === 1 ? /** @type {TextClassificationOutput} */ (toReturn) : /** @type {TextClassificationOutput[]} */ (toReturn)[0];\n    }\n}\n\n/**\n * @typedef {Object} TokenClassificationSingle\n * @property {string} word The token/word classified. This is obtained by decoding the selected tokens.\n * @property {number} score The corresponding probability for `entity`.\n * @property {string} entity The entity predicted for that token/word.\n * @property {number} index The index of the corresponding token in the sentence.\n * @property {number} [start] The index of the start of the corresponding entity in the sentence.\n * @property {number} [end] The index of the end of the corresponding entity in the sentence.\n * @typedef {TokenClassificationSingle[]} TokenClassificationOutput\n * \n * @typedef {Object} TokenClassificationPipelineOptions Parameters specific to token classification pipelines.\n * @property {string[]} [ignore_labels] A list of labels to ignore.\n * \n * @callback TokenClassificationPipelineCallback Classify each token of the text(s) given as inputs.\n * @param {string|string[]} texts One or several texts (or one list of texts) for token classification.\n * @param {TokenClassificationPipelineOptions} [options] The options to use for token classification.\n * @returns {Promise<TokenClassificationOutput|TokenClassificationOutput[]>} The result.\n * \n * @typedef {TextPipelineConstructorArgs & TokenClassificationPipelineCallback & Disposable} TokenClassificationPipelineType\n */\n\n/**\n * Named Entity Recognition pipeline using any `ModelForTokenClassification`.\n * \n * **Example:** Perform named entity recognition with `Xenova/bert-base-NER`.\n * ```javascript\n * const classifier = await pipeline('token-classification', 'Xenova/bert-base-NER');\n * const output = await classifier('My name is Sarah and I live in London');\n * // [\n * //   { entity: 'B-PER', score: 0.9980202913284302, index: 4, word: 'Sarah' },\n * //   { entity: 'B-LOC', score: 0.9994474053382874, index: 9, word: 'London' }\n * // ]\n * ```\n * \n * **Example:** Perform named entity recognition with `Xenova/bert-base-NER` (and return all labels).\n * ```javascript\n * const classifier = await pipeline('token-classification', 'Xenova/bert-base-NER');\n * const output = await classifier('Sarah lives in the United States of America', { ignore_labels: [] });\n * // [\n * //   { entity: 'B-PER', score: 0.9966587424278259, index: 1, word: 'Sarah' },\n * //   { entity: 'O', score: 0.9987385869026184, index: 2, word: 'lives' },\n * //   { entity: 'O', score: 0.9990072846412659, index: 3, word: 'in' },\n * //   { entity: 'O', score: 0.9988298416137695, index: 4, word: 'the' },\n * //   { entity: 'B-LOC', score: 0.9995510578155518, index: 5, word: 'United' },\n * //   { entity: 'I-LOC', score: 0.9990395307540894, index: 6, word: 'States' },\n * //   { entity: 'I-LOC', score: 0.9986724853515625, index: 7, word: 'of' },\n * //   { entity: 'I-LOC', score: 0.9975294470787048, index: 8, word: 'America' }\n * // ]\n * ```\n */\nclass TokenClassificationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => TokenClassificationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new TokenClassificationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {TokenClassificationPipelineCallback} */\n    async _call(texts, {\n        ignore_labels = ['O'],\n    } = {}) {\n\n        const isBatched = Array.isArray(texts);\n\n        // Run tokenization\n        const model_inputs = this.tokenizer(isBatched ? texts : [texts], {\n            padding: true,\n            truncation: true,\n        });\n\n        // Run model\n        const outputs = await this.model(model_inputs)\n\n        const logits = outputs.logits;\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        const toReturn = [];\n        for (let i = 0; i < logits.dims[0]; ++i) {\n            const ids = model_inputs.input_ids[i];\n            const batch = logits[i];\n\n            // List of tokens that aren't ignored\n            const tokens = [];\n            for (let j = 0; j < batch.dims[0]; ++j) {\n                const tokenData = batch[j];\n                const topScoreIndex = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.max)(tokenData.data)[1];\n\n                const entity = id2label ? id2label[topScoreIndex] : `LABEL_${topScoreIndex}`;\n                if (ignore_labels.includes(entity)) {\n                    // We predicted a token that should be ignored. So, we skip it.\n                    continue;\n                }\n\n                // TODO add option to keep special tokens?\n                const word = this.tokenizer.decode([ids[j].item()], { skip_special_tokens: true });\n                if (word === '') {\n                    // Was a special token. So, we skip it.\n                    continue;\n                }\n\n                const scores = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(tokenData.data);\n\n                tokens.push({\n                    entity: entity,\n                    score: scores[topScoreIndex],\n                    index: j,\n                    word: word,\n\n                    // TODO: Add support for start and end\n                    // start: null,\n                    // end: null,\n                });\n            }\n            toReturn.push(tokens);\n        }\n        return isBatched ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} QuestionAnsweringOutput\n * @property {number} score The probability associated to the answer.\n * @property {number} [start] The character start index of the answer (in the tokenized version of the input).\n * @property {number} [end] The character end index of the answer (in the tokenized version of the input).\n * @property {string} answer The answer to the question.\n * \n * @typedef {Object} QuestionAnsweringPipelineOptions Parameters specific to question answering pipelines.\n * @property {number} [top_k=1] The number of top answer predictions to be returned.\n * \n * @callback QuestionAnsweringPipelineCallback Answer the question(s) given as inputs by using the context(s).\n * @param {string|string[]} question One or several question(s) (must be used in conjunction with the `context` argument).\n * @param {string|string[]} context One or several context(s) associated with the question(s) (must be used in conjunction with the `question` argument).\n * @param {QuestionAnsweringPipelineOptions} [options] The options to use for question answering.\n * @returns {Promise<QuestionAnsweringOutput|QuestionAnsweringOutput[]>} An array or object containing the predicted answers and scores.\n * \n * @typedef {TextPipelineConstructorArgs & QuestionAnsweringPipelineCallback & Disposable} QuestionAnsweringPipelineType\n */\n\n/**\n * Question Answering pipeline using any `ModelForQuestionAnswering`.\n * \n * **Example:** Run question answering with `Xenova/distilbert-base-uncased-distilled-squad`.\n * ```javascript\n * const answerer = await pipeline('question-answering', 'Xenova/distilbert-base-uncased-distilled-squad');\n * const question = 'Who was Jim Henson?';\n * const context = 'Jim Henson was a nice puppet.';\n * const output = await answerer(question, context);\n * // {\n * //   answer: \"a nice puppet\",\n * //   score: 0.5768911502526741\n * // }\n * ```\n */\nclass QuestionAnsweringPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => QuestionAnsweringPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new QuestionAnsweringPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {QuestionAnsweringPipelineCallback} */\n    async _call(question, context, {\n        top_k = 1\n    } = {}) {\n\n        // Run tokenization\n        const inputs = this.tokenizer(question, {\n            text_pair: context,\n            padding: true,\n            truncation: true,\n        });\n\n        const { start_logits, end_logits } = await this.model(inputs);\n        const input_ids = inputs.input_ids.tolist();\n        const attention_mask = inputs.attention_mask.tolist();\n\n        // TODO: add support for `return_special_tokens_mask`\n        const special_tokens = this.tokenizer.all_special_ids;\n\n        /** @type {QuestionAnsweringOutput[]} */\n        const toReturn = [];\n        for (let j = 0; j < start_logits.dims[0]; ++j) {\n            const ids = input_ids[j];\n            const sepIndex = ids.findIndex(x =>\n                // We use == to match bigint with number\n                // @ts-ignore\n                x == this.tokenizer.sep_token_id\n            );\n\n\n            const valid_mask = attention_mask[j].map((y, ix) => (\n                y == 1\n                && (\n                    ix === 0 // is cls_token\n                    || (\n                        ix > sepIndex\n                        && special_tokens.findIndex(x => x == ids[ix]) === -1 // token is not a special token (special_tokens_mask == 0)\n                    )\n                )\n            ));\n\n            const start = start_logits[j].tolist();\n            const end = end_logits[j].tolist();\n\n            // Now, we mask out values that can't be in the answer\n            // NOTE: We keep the cls_token unmasked (some models use it to indicate unanswerable questions)\n            for (let i = 1; i < start.length; ++i) {\n                if (\n                    attention_mask[j] == 0 // is part of padding\n                    || i <= sepIndex // is before the sep_token\n                    || special_tokens.findIndex(x => x == ids[i]) !== -1 // Is a special token\n                ) {\n                    // Make sure non-context indexes in the tensor cannot contribute to the softmax\n                    start[i] = -Infinity;\n                    end[i] = -Infinity;\n                }\n            }\n\n            // Normalize logits and spans to retrieve the answer\n            const start_scores = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(start).map((x, i) => [x, i]);\n            const end_scores = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(end).map((x, i) => [x, i]);\n\n            // Mask CLS\n            start_scores[0][0] = 0;\n            end_scores[0][0] = 0;\n\n            // Generate all valid spans and select best ones\n            const options = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_5__.product)(start_scores, end_scores)\n                .filter(x => x[0][1] <= x[1][1])\n                .map(x => [x[0][1], x[1][1], x[0][0] * x[1][0]])\n                .sort((a, b) => b[2] - a[2]);\n\n            for (let k = 0; k < Math.min(options.length, top_k); ++k) {\n                const [start, end, score] = options[k];\n\n                const answer_tokens = ids.slice(start, end + 1)\n\n                const answer = this.tokenizer.decode(answer_tokens, {\n                    skip_special_tokens: true,\n                });\n\n                // TODO add start and end?\n                // NOTE: HF returns character index\n                toReturn.push({\n                    answer, score\n                });\n            }\n        }\n\n        // Mimic HF's return type based on top_k\n        return (top_k === 1) ? toReturn[0] : toReturn;\n    }\n}\n\n\n/**\n * @typedef {Object} FillMaskSingle\n * @property {string} sequence The corresponding input with the mask token prediction.\n * @property {number} score The corresponding probability.\n * @property {number} token The predicted token id (to replace the masked one).\n * @property {string} token_str The predicted token (to replace the masked one).\n * @typedef {FillMaskSingle[]} FillMaskOutput\n * \n * @typedef {Object} FillMaskPipelineOptions Parameters specific to fill mask pipelines.\n * @property {number} [top_k=5] When passed, overrides the number of predictions to return.\n * \n * @callback FillMaskPipelineCallback Fill the masked token in the text(s) given as inputs.\n * @param {string|string[]} texts One or several texts (or one list of prompts) with masked tokens.\n * @param {FillMaskPipelineOptions} [options] The options to use for masked language modelling.\n * @returns {Promise<FillMaskOutput|FillMaskOutput[]>} An array of objects containing the score, predicted token, predicted token string,\n * and the sequence with the predicted token filled in, or an array of such arrays (one for each input text).\n * If only one input text is given, the output will be an array of objects.\n * @throws {Error} When the mask token is not found in the input text.\n * \n * @typedef {TextPipelineConstructorArgs & FillMaskPipelineCallback & Disposable} FillMaskPipelineType\n */\n\n/**\n * Masked language modeling prediction pipeline using any `ModelWithLMHead`.\n * \n * **Example:** Perform masked language modelling (a.k.a. \"fill-mask\") with `Xenova/bert-base-uncased`.\n * ```javascript\n * const unmasker = await pipeline('fill-mask', 'Xenova/bert-base-cased');\n * const output = await unmasker('The goal of life is [MASK].');\n * // [\n * //   { token_str: 'survival', score: 0.06137419492006302, token: 8115, sequence: 'The goal of life is survival.' },\n * //   { token_str: 'love', score: 0.03902450203895569, token: 1567, sequence: 'The goal of life is love.' },\n * //   { token_str: 'happiness', score: 0.03253183513879776, token: 9266, sequence: 'The goal of life is happiness.' },\n * //   { token_str: 'freedom', score: 0.018736306577920914, token: 4438, sequence: 'The goal of life is freedom.' },\n * //   { token_str: 'life', score: 0.01859794743359089, token: 1297, sequence: 'The goal of life is life.' }\n * // ]\n * ```\n * \n * **Example:** Perform masked language modelling (a.k.a. \"fill-mask\") with `Xenova/bert-base-cased` (and return top result).\n * ```javascript\n * const unmasker = await pipeline('fill-mask', 'Xenova/bert-base-cased');\n * const output = await unmasker('The Milky Way is a [MASK] galaxy.', { top_k: 1 });\n * // [{ token_str: 'spiral', score: 0.6299987435340881, token: 14061, sequence: 'The Milky Way is a spiral galaxy.' }]\n * ```\n */\nclass FillMaskPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => FillMaskPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new FillMaskPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {FillMaskPipelineCallback} */\n    async _call(texts, {\n        top_k = 5\n    } = {}) {\n\n        // Run tokenization\n        const model_inputs = this.tokenizer(texts, {\n            padding: true,\n            truncation: true,\n        });\n\n        // Run model\n        const { logits } = await this.model(model_inputs)\n\n        const toReturn = [];\n\n        /** @type {bigint[][]} */\n        const input_ids = model_inputs.input_ids.tolist();\n        for (let i = 0; i < input_ids.length; ++i) {\n            const ids = input_ids[i];\n            const mask_token_index = ids.findIndex(x =>\n                // We use == to match bigint with number\n                // @ts-ignore\n                x == this.tokenizer.mask_token_id\n            );\n            if (mask_token_index === -1) {\n                throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`)\n            }\n            const itemLogits = logits[i][mask_token_index];\n\n            const scores = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.topk)(new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor(\n                'float32',\n                (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(itemLogits.data),\n                itemLogits.dims,\n            ), top_k);\n            const values = scores[0].tolist();\n            const indices = scores[1].tolist();\n\n            toReturn.push(indices.map((x, i) => {\n                const sequence = ids.slice();\n                sequence[mask_token_index] = x;\n\n                return {\n                    score: values[i],\n                    token: Number(x),\n                    token_str: this.tokenizer.decode([x]),\n                    sequence: this.tokenizer.decode(sequence, { skip_special_tokens: true }),\n                }\n            }));\n        }\n        return Array.isArray(texts) ? toReturn : toReturn[0];\n    }\n}\n\n\n/**\n * @typedef {Object} Text2TextGenerationSingle\n * @property {string} generated_text The generated text.\n * @typedef {Text2TextGenerationSingle[]} Text2TextGenerationOutput\n * \n * @callback Text2TextGenerationPipelineCallback Generate the output text(s) using text(s) given as inputs.\n * @param {string|string[]} texts Input text for the encoder.\n * @param {Partial<import('./generation/configuration_utils.js').GenerationConfig>} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<Text2TextGenerationOutput|Text2TextGenerationOutput[]>}\n * \n * @typedef {TextPipelineConstructorArgs & Text2TextGenerationPipelineCallback & Disposable} Text2TextGenerationPipelineType\n */\n\n/**\n * Text2TextGenerationPipeline class for generating text using a model that performs text-to-text generation tasks.\n * \n * **Example:** Text-to-text generation w/ `Xenova/LaMini-Flan-T5-783M`.\n * ```javascript\n * const generator = await pipeline('text2text-generation', 'Xenova/LaMini-Flan-T5-783M');\n * const output = await generator('how can I become more healthy?', {\n *   max_new_tokens: 100,\n * });\n * // [{ generated_text: \"To become more healthy, you can: 1. Eat a balanced diet with plenty of fruits, vegetables, whole grains, lean proteins, and healthy fats. 2. Stay hydrated by drinking plenty of water. 3. Get enough sleep and manage stress levels. 4. Avoid smoking and excessive alcohol consumption. 5. Regularly exercise and maintain a healthy weight. 6. Practice good hygiene and sanitation. 7. Seek medical attention if you experience any health issues.\" }]\n * ```\n */\nclass Text2TextGenerationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => Text2TextGenerationPipelineType} */ (Pipeline)) {\n    /** @type {'generated_text'} */\n    _key = 'generated_text';\n\n    /**\n     * Create a new Text2TextGenerationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {Text2TextGenerationPipelineCallback} */\n    async _call(texts, generate_kwargs = {}) {\n        if (!Array.isArray(texts)) {\n            texts = [texts];\n        }\n\n\n        // Add global prefix, if present\n        // @ts-expect-error TS2339\n        if (this.model.config.prefix) {\n            // @ts-expect-error TS2339\n            texts = texts.map(x => this.model.config.prefix + x)\n        }\n\n        // Handle task specific params:\n        // @ts-expect-error TS2339\n        const task_specific_params = this.model.config.task_specific_params\n        if (task_specific_params && task_specific_params[this.task]) {\n            // Add prefixes, if present\n            if (task_specific_params[this.task].prefix) {\n                texts = texts.map(x => task_specific_params[this.task].prefix + x)\n            }\n\n            // TODO update generation config\n        }\n\n        const tokenizer = this.tokenizer;\n        const tokenizer_options = {\n            padding: true,\n            truncation: true,\n        }\n        let inputs;\n        if (this instanceof TranslationPipeline && '_build_translation_inputs' in tokenizer) {\n            // TODO: move to Translation pipeline?\n            // Currently put here to avoid code duplication\n            // @ts-ignore\n            inputs = tokenizer._build_translation_inputs(texts, tokenizer_options, generate_kwargs);\n\n        } else {\n            inputs = tokenizer(texts, tokenizer_options);\n        }\n\n        const outputTokenIds = await this.model.generate({ ...inputs, ...generate_kwargs });\n        return tokenizer.batch_decode(/** @type {Tensor} */(outputTokenIds), {\n            skip_special_tokens: true,\n        }).map(text => ({ [this._key]: text }));\n    }\n}\n\n\n/**\n * @typedef {Object} SummarizationSingle\n * @property {string} summary_text The summary text.\n * @typedef {SummarizationSingle[]} SummarizationOutput\n * \n * @callback SummarizationPipelineCallback Summarize the text(s) given as inputs.\n * @param {string|string[]} texts One or several articles (or one list of articles) to summarize.\n * @param {import('./generation/configuration_utils.js').GenerationConfig} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<SummarizationOutput|SummarizationOutput[]>}\n * \n * @typedef {TextPipelineConstructorArgs & SummarizationPipelineCallback & Disposable} SummarizationPipelineType\n */\n\n/**\n * A pipeline for summarization tasks, inheriting from Text2TextGenerationPipeline.\n * \n * **Example:** Summarization w/ `Xenova/distilbart-cnn-6-6`.\n * ```javascript\n * const generator = await pipeline('summarization', 'Xenova/distilbart-cnn-6-6');\n * const text = 'The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building, ' +\n *   'and the tallest structure in Paris. Its base is square, measuring 125 metres (410 ft) on each side. ' +\n *   'During its construction, the Eiffel Tower surpassed the Washington Monument to become the tallest ' +\n *   'man-made structure in the world, a title it held for 41 years until the Chrysler Building in New ' +\n *   'York City was finished in 1930. It was the first structure to reach a height of 300 metres. Due to ' +\n *   'the addition of a broadcasting aerial at the top of the tower in 1957, it is now taller than the ' +\n *   'Chrysler Building by 5.2 metres (17 ft). Excluding transmitters, the Eiffel Tower is the second ' +\n *   'tallest free-standing structure in France after the Millau Viaduct.';\n * const output = await generator(text, {\n *   max_new_tokens: 100,\n * });\n * // [{ summary_text: ' The Eiffel Tower is about the same height as an 81-storey building and the tallest structure in Paris. It is the second tallest free-standing structure in France after the Millau Viaduct.' }]\n * ```\n */\nclass SummarizationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => SummarizationPipelineType} */ (/** @type {any} */ (Text2TextGenerationPipeline))) {\n    /** @type {'summary_text'} */\n    _key = 'summary_text';\n\n    /**\n     * Create a new SummarizationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n\n\n/**\n * @typedef {Object} TranslationSingle\n * @property {string} translation_text The translated text.\n * @typedef {TranslationSingle[]} TranslationOutput\n * \n * @callback TranslationPipelineCallback Translate the text(s) given as inputs.\n * @param {string|string[]} texts Texts to be translated.\n * @param {import('./generation/configuration_utils.js').GenerationConfig} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<TranslationOutput|TranslationOutput[]>}\n * \n * @typedef {TextPipelineConstructorArgs & TranslationPipelineCallback & Disposable} TranslationPipelineType\n */\n\n/**\n * Translates text from one language to another.\n * \n * **Example:** Multilingual translation w/ `Xenova/nllb-200-distilled-600M`.\n * \n * See [here](https://github.com/facebookresearch/flores/blob/main/flores200/README.md#languages-in-flores-200)\n * for the full list of languages and their corresponding codes.\n * \n * ```javascript\n * const translator = await pipeline('translation', 'Xenova/nllb-200-distilled-600M');\n * const output = await translator('जीवन एक चॉकलेट बॉक्स की तरह है।', {\n *   src_lang: 'hin_Deva', // Hindi\n *   tgt_lang: 'fra_Latn', // French\n * });\n * // [{ translation_text: 'La vie est comme une boîte à chocolat.' }]\n * ```\n * \n * **Example:** Multilingual translation w/ `Xenova/m2m100_418M`.\n * \n * See [here](https://huggingface.co/facebook/m2m100_418M#languages-covered)\n * for the full list of languages and their corresponding codes.\n * \n * ```javascript\n * const translator = await pipeline('translation', 'Xenova/m2m100_418M');\n * const output = await translator('生活就像一盒巧克力。', {\n *   src_lang: 'zh', // Chinese\n *   tgt_lang: 'en', // English\n * });\n * // [{ translation_text: 'Life is like a box of chocolate.' }]\n * ```\n * \n * **Example:** Multilingual translation w/ `Xenova/mbart-large-50-many-to-many-mmt`.\n * \n * See [here](https://huggingface.co/facebook/mbart-large-50-many-to-many-mmt#languages-covered)\n * for the full list of languages and their corresponding codes.\n * \n * ```javascript\n * const translator = await pipeline('translation', 'Xenova/mbart-large-50-many-to-many-mmt');\n * const output = await translator('संयुक्त राष्ट्र के प्रमुख का कहना है कि सीरिया में कोई सैन्य समाधान नहीं है', {\n *   src_lang: 'hi_IN', // Hindi\n *   tgt_lang: 'fr_XX', // French\n * });\n * // [{ translation_text: 'Le chef des Nations affirme qu 'il n 'y a military solution in Syria.' }]\n * ```\n */\nclass TranslationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => TranslationPipelineType} */ (/** @type {any} */ (Text2TextGenerationPipeline))) {\n    /** @type {'translation_text'} */\n    _key = 'translation_text';\n\n    /**\n     * Create a new TranslationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n\nfunction isChat(x) {\n    return Array.isArray(x) && x.every(x => 'role' in x && 'content' in x);\n}\n\n/**\n * @typedef {import('./tokenizers.js').Message[]} Chat\n * \n * @typedef {Object} TextGenerationSingle\n * @property {string|Chat} generated_text The generated text.\n * @typedef {TextGenerationSingle[]} TextGenerationOutput\n * \n * @typedef {Object} TextGenerationSpecificParams Parameters specific to text-generation pipelines.\n * @property {boolean} [add_special_tokens] Whether or not to add special tokens when tokenizing the sequences.\n * @property {boolean} [return_full_text=true] If set to `false` only added text is returned, otherwise the full text is returned.\n * @typedef {import('./generation/configuration_utils.js').GenerationConfig & TextGenerationSpecificParams} TextGenerationConfig\n * \n * @callback TextGenerationPipelineCallback Complete the prompt(s) given as inputs.\n * @param {string|string[]|Chat|Chat[]} texts One or several prompts (or one list of prompts) to complete.\n * @param {Partial<TextGenerationConfig>} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<TextGenerationOutput|TextGenerationOutput[]>} An array or object containing the generated texts.\n * \n * @typedef {TextPipelineConstructorArgs & TextGenerationPipelineCallback & Disposable} TextGenerationPipelineType\n */\n\n/**\n * Language generation pipeline using any `ModelWithLMHead` or `ModelForCausalLM`.\n * This pipeline predicts the words that will follow a specified text prompt.\n * NOTE: For the full list of generation parameters, see [`GenerationConfig`](./utils/generation#module_utils/generation.GenerationConfig).\n * \n * **Example:** Text generation with `Xenova/distilgpt2` (default settings).\n * ```javascript\n * const generator = await pipeline('text-generation', 'Xenova/distilgpt2');\n * const text = 'I enjoy walking with my cute dog,';\n * const output = await generator(text);\n * // [{ generated_text: \"I enjoy walking with my cute dog, and I love to play with the other dogs.\" }]\n * ```\n * \n * **Example:** Text generation with `Xenova/distilgpt2` (custom settings).\n * ```javascript\n * const generator = await pipeline('text-generation', 'Xenova/distilgpt2');\n * const text = 'Once upon a time, there was';\n * const output = await generator(text, {\n *   temperature: 2,\n *   max_new_tokens: 10,\n *   repetition_penalty: 1.5,\n *   no_repeat_ngram_size: 2,\n *   num_beams: 2,\n *   num_return_sequences: 2,\n * });\n * // [{\n * //   \"generated_text\": \"Once upon a time, there was an abundance of information about the history and activities that\"\n * // }, {\n * //   \"generated_text\": \"Once upon a time, there was an abundance of information about the most important and influential\"\n * // }]\n * ```\n * \n * **Example:** Run code generation with `Xenova/codegen-350M-mono`.\n * ```javascript\n * const generator = await pipeline('text-generation', 'Xenova/codegen-350M-mono');\n * const text = 'def fib(n):';\n * const output = await generator(text, {\n *   max_new_tokens: 44,\n * });\n * // [{\n * //   generated_text: 'def fib(n):\\n' +\n * //     '    if n == 0:\\n' +\n * //     '        return 0\\n' +\n * //     '    elif n == 1:\\n' +\n * //     '        return 1\\n' +\n * //     '    else:\\n' +\n * //     '        return fib(n-1) + fib(n-2)\\n'\n * // }]\n * ```\n */\nclass TextGenerationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => TextGenerationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new TextGenerationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {TextGenerationPipelineCallback} */\n    async _call(texts, generate_kwargs = {}) {\n        let isBatched = false;\n        let isChatInput = false;\n\n        // Normalize inputs\n        /** @type {string[]} */\n        let inputs;\n        if (typeof texts === 'string') {\n            inputs = texts = [texts];\n        } else if (Array.isArray(texts) && texts.every(x => typeof x === 'string')) {\n            isBatched = true;\n            inputs = /** @type {string[]} */(texts);\n        } else {\n            if (isChat(texts)) {\n                texts = [/** @type {Chat} */(texts)];\n            } else if (Array.isArray(texts) && texts.every(isChat)) {\n                isBatched = true;\n            } else {\n                throw new Error('Input must be a string, an array of strings, a Chat, or an array of Chats');\n            }\n            isChatInput = true;\n\n            // If the input is a chat, we need to apply the chat template\n            inputs = /** @type {string[]} */(/** @type {Chat[]} */ (texts).map(\n                x => this.tokenizer.apply_chat_template(x, {\n                    tokenize: false,\n                    add_generation_prompt: true,\n                })\n            ));\n        }\n\n        // By default, do not add special tokens\n        const add_special_tokens = generate_kwargs.add_special_tokens ?? false;\n\n        // By default, return full text\n        const return_full_text = isChatInput\n            ? false\n            : generate_kwargs.return_full_text ?? true;\n\n        this.tokenizer.padding_side = 'left';\n        const text_inputs = this.tokenizer(inputs, {\n            add_special_tokens,\n            padding: true,\n            truncation: true,\n        });\n\n        const outputTokenIds = /** @type {Tensor} */(await this.model.generate({\n            ...text_inputs,\n            ...generate_kwargs\n        }));\n\n        const decoded = this.tokenizer.batch_decode(outputTokenIds, {\n            skip_special_tokens: true,\n        });\n\n        let promptLengths;\n        if (!return_full_text && text_inputs.input_ids.dims.at(-1) > 0) {\n            promptLengths = this.tokenizer.batch_decode(text_inputs.input_ids, {\n                skip_special_tokens: true,\n            }).map(x => x.length);\n        }\n\n        /** @type {TextGenerationOutput[]} */\n        const toReturn = Array.from({ length: texts.length }, _ => []);\n        for (let i = 0; i < decoded.length; ++i) {\n            const textIndex = Math.floor(i / outputTokenIds.dims[0] * texts.length);\n\n            if (promptLengths) {\n                // Trim the decoded text to only include the generated part\n                decoded[i] = decoded[i].slice(promptLengths[textIndex]);\n            }\n            toReturn[textIndex].push({\n                generated_text: isChatInput\n                    ? [\n                        ...((/** @type {Chat[]} */(texts)[textIndex])),\n                        { role: 'assistant', content: decoded[i] },\n                    ]\n                    : decoded[i]\n            });\n        }\n        return (!isBatched && toReturn.length === 1) ? toReturn[0] : toReturn;\n    }\n}\n\n/**\n * @typedef {Object} ZeroShotClassificationOutput\n * @property {string} sequence The sequence for which this is the output.\n * @property {string[]} labels The labels sorted by order of likelihood.\n * @property {number[]} scores The probabilities for each of the labels.\n * \n * @typedef {Object} ZeroShotClassificationPipelineOptions Parameters specific to zero-shot classification pipelines.\n * @property {string} [hypothesis_template=\"This example is {}.\"] The template used to turn each\n * candidate label into an NLI-style hypothesis. The candidate label will replace the {} placeholder.\n * @property {boolean} [multi_label=false] Whether or not multiple candidate labels can be true.\n * If `false`, the scores are normalized such that the sum of the label likelihoods for each sequence\n * is 1. If `true`, the labels are considered independent and probabilities are normalized for each\n * candidate by doing a softmax of the entailment score vs. the contradiction score.\n * \n * @callback ZeroShotClassificationPipelineCallback Classify the sequence(s) given as inputs.\n * @param {string|string[]} texts The sequence(s) to classify, will be truncated if the model input is too large.\n * @param {string|string[]} candidate_labels The set of possible class labels to classify each sequence into.\n * Can be a single label, a string of comma-separated labels, or a list of labels.\n * @param {ZeroShotClassificationPipelineOptions} [options] The options to use for zero-shot classification.\n * @returns {Promise<ZeroShotClassificationOutput|ZeroShotClassificationOutput[]>} An array or object containing the predicted labels and scores.\n * \n * @typedef {TextPipelineConstructorArgs & ZeroShotClassificationPipelineCallback & Disposable} ZeroShotClassificationPipelineType\n */\n\n/**\n * NLI-based zero-shot classification pipeline using a `ModelForSequenceClassification`\n * trained on NLI (natural language inference) tasks. Equivalent of `text-classification`\n * pipelines, but these models don't require a hardcoded number of potential classes, they\n * can be chosen at runtime. It usually means it's slower but it is **much** more flexible.\n * \n * **Example:** Zero shot classification with `Xenova/mobilebert-uncased-mnli`.\n * ```javascript\n * const classifier = await pipeline('zero-shot-classification', 'Xenova/mobilebert-uncased-mnli');\n * const text = 'Last week I upgraded my iOS version and ever since then my phone has been overheating whenever I use your app.';\n * const labels = [ 'mobile', 'billing', 'website', 'account access' ];\n * const output = await classifier(text, labels);\n * // {\n * //   sequence: 'Last week I upgraded my iOS version and ever since then my phone has been overheating whenever I use your app.',\n * //   labels: [ 'mobile', 'website', 'billing', 'account access' ],\n * //   scores: [ 0.5562091040482018, 0.1843621307860853, 0.13942646639336376, 0.12000229877234923 ]\n * // }\n * ```\n * \n * **Example:** Zero shot classification with `Xenova/nli-deberta-v3-xsmall` (multi-label).\n * ```javascript\n * const classifier = await pipeline('zero-shot-classification', 'Xenova/nli-deberta-v3-xsmall');\n * const text = 'I have a problem with my iphone that needs to be resolved asap!';\n * const labels = [ 'urgent', 'not urgent', 'phone', 'tablet', 'computer' ];\n * const output = await classifier(text, labels, { multi_label: true });\n * // {\n * //   sequence: 'I have a problem with my iphone that needs to be resolved asap!',\n * //   labels: [ 'urgent', 'phone', 'computer', 'tablet', 'not urgent' ],\n * //   scores: [ 0.9958870956360275, 0.9923963400697035, 0.002333537946160235, 0.0015134138567598765, 0.0010699384208377163 ]\n * // }\n * ```\n */\nclass ZeroShotClassificationPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => ZeroShotClassificationPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new ZeroShotClassificationPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n\n        // Use model config to get label2id mapping\n        this.label2id = Object.fromEntries(\n            Object.entries((/** @type {any} */(this).model).config.label2id).map(\n                ([k, v]) => [k.toLowerCase(), v]\n            )\n        );\n\n        this.entailment_id = this.label2id['entailment'];\n        if (this.entailment_id === undefined) {\n            console.warn(\"Could not find 'entailment' in label2id mapping. Using 2 as entailment_id.\");\n            this.entailment_id = 2;\n        }\n\n        this.contradiction_id = this.label2id['contradiction'] ?? this.label2id['not_entailment'];\n        if (this.contradiction_id === undefined) {\n            console.warn(\"Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id.\");\n            this.contradiction_id = 0;\n        }\n    }\n\n    /** @type {ZeroShotClassificationPipelineCallback} */\n    async _call(texts, candidate_labels, {\n        hypothesis_template = \"This example is {}.\",\n        multi_label = false,\n    } = {}) {\n\n        const isBatched = Array.isArray(texts);\n        if (!isBatched) {\n            texts = [/** @type {string} */ (texts)];\n        }\n        if (!Array.isArray(candidate_labels)) {\n            candidate_labels = [candidate_labels];\n        }\n\n        // Insert labels into hypothesis template\n        const hypotheses = candidate_labels.map(\n            x => hypothesis_template.replace('{}', x)\n        );\n\n        // How to perform the softmax over the logits:\n        //  - true:  softmax over the entailment vs. contradiction dim for each label independently\n        //  - false: softmax the \"entailment\" logits over all candidate labels\n        const softmaxEach = multi_label || candidate_labels.length === 1;\n\n        /** @type {ZeroShotClassificationOutput[]} */\n        const toReturn = [];\n        for (const premise of texts) {\n            const entails_logits = [];\n\n            for (const hypothesis of hypotheses) {\n                const inputs = this.tokenizer(premise, {\n                    text_pair: hypothesis,\n                    padding: true,\n                    truncation: true,\n                })\n                const outputs = await this.model(inputs)\n\n                if (softmaxEach) {\n                    entails_logits.push([\n                        outputs.logits.data[this.contradiction_id],\n                        outputs.logits.data[this.entailment_id]\n                    ])\n                } else {\n                    entails_logits.push(outputs.logits.data[this.entailment_id])\n                }\n            }\n\n            /** @type {number[]} */\n            const scores = softmaxEach\n                ? entails_logits.map(x => (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(x)[1])\n                : (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(entails_logits);\n\n            // Sort by scores (desc) and return scores with indices\n            const scores_sorted = scores\n                .map((x, i) => [x, i])\n                .sort((a, b) => (b[0] - a[0]));\n\n            toReturn.push({\n                sequence: premise,\n                labels: scores_sorted.map(x => candidate_labels[x[1]]),\n                scores: scores_sorted.map(x => x[0]),\n            });\n        }\n        return isBatched ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} FeatureExtractionPipelineOptions Parameters specific to feature extraction pipelines.\n * @property {'none'|'mean'|'cls'} [pooling=\"none\"] The pooling method to use.\n * @property {boolean} [normalize=false] Whether or not to normalize the embeddings in the last dimension.\n * @property {boolean} [quantize=false] Whether or not to quantize the embeddings.\n * @property {'binary'|'ubinary'} [precision='binary'] The precision to use for quantization. \n * \n * @callback FeatureExtractionPipelineCallback Extract the features of the input(s).\n * @param {string|string[]} texts One or several texts (or one list of texts) to get the features of.\n * @param {FeatureExtractionPipelineOptions} [options] The options to use for feature extraction.\n * @returns {Promise<Tensor>} The features computed by the model.\n * \n * @typedef {TextPipelineConstructorArgs & FeatureExtractionPipelineCallback & Disposable} FeatureExtractionPipelineType\n */\n\n/**\n * Feature extraction pipeline using no model head. This pipeline extracts the hidden\n * states from the base transformer, which can be used as features in downstream tasks.\n * \n * **Example:** Run feature extraction with `bert-base-uncased` (without pooling/normalization).\n * ```javascript\n * const extractor = await pipeline('feature-extraction', 'Xenova/bert-base-uncased', { revision: 'default' });\n * const output = await extractor('This is a simple test.');\n * // Tensor {\n * //   type: 'float32',\n * //   data: Float32Array [0.05939924716949463, 0.021655935794115067, ...],\n * //   dims: [1, 8, 768]\n * // }\n * ```\n * \n * **Example:** Run feature extraction with `bert-base-uncased` (with pooling/normalization).\n * ```javascript\n * const extractor = await pipeline('feature-extraction', 'Xenova/bert-base-uncased', { revision: 'default' });\n * const output = await extractor('This is a simple test.', { pooling: 'mean', normalize: true });\n * // Tensor {\n * //   type: 'float32',\n * //   data: Float32Array [0.03373778983950615, -0.010106077417731285, ...],\n * //   dims: [1, 768]\n * // }\n * ```\n * \n * **Example:** Calculating embeddings with `sentence-transformers` models.\n * ```javascript\n * const extractor = await pipeline('feature-extraction', 'Xenova/all-MiniLM-L6-v2');\n * const output = await extractor('This is a simple test.', { pooling: 'mean', normalize: true });\n * // Tensor {\n * //   type: 'float32',\n * //   data: Float32Array [0.09094982594251633, -0.014774246141314507, ...],\n * //   dims: [1, 384]\n * // }\n * ```\n * **Example:** Calculating binary embeddings with `sentence-transformers` models.\n * ```javascript\n * const extractor = await pipeline('feature-extraction', 'Xenova/all-MiniLM-L6-v2');\n * const output = await extractor('This is a simple test.', { pooling: 'mean', quantize: true, precision: 'binary' });\n * // Tensor {\n * //   type: 'int8',\n * //   data: Int8Array [49, 108, 24, ...],\n * //   dims: [1, 48]\n * // }\n * ```\n */\nclass FeatureExtractionPipeline extends (/** @type {new (options: TextPipelineConstructorArgs) => FeatureExtractionPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new FeatureExtractionPipeline.\n     * @param {TextPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {FeatureExtractionPipelineCallback} */\n    async _call(texts, {\n        pooling = /** @type {'none'} */('none'),\n        normalize = false,\n        quantize = false,\n        precision = /** @type {'binary'} */('binary'),\n    } = {}) {\n\n        // Run tokenization\n        const model_inputs = this.tokenizer(texts, {\n            padding: true,\n            truncation: true,\n        });\n\n        // Run model\n        const outputs = await this.model(model_inputs)\n\n        // TODO: Provide warning to the user that they might be using model which was not exported\n        // specifically for feature extraction\n        // console.log(this.model.config)\n        // console.log(outputs)\n\n        /** @type {Tensor} */\n        let result = outputs.last_hidden_state ?? outputs.logits ?? outputs.token_embeddings;\n        if (pooling === 'none') {\n            // Skip pooling\n        } else if (pooling === 'mean') {\n            result = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.mean_pooling)(result, model_inputs.attention_mask);\n        } else if (pooling === 'cls') {\n            result = result.slice(null, 0);\n        } else {\n            throw Error(`Pooling method '${pooling}' not supported.`);\n        }\n\n        if (normalize) {\n            result = result.normalize(2, -1);\n        }\n\n        if (quantize) {\n            result = (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.quantize_embeddings)(result, precision);\n        }\n\n        return result;\n    }\n}\n\n\n/**\n * @typedef {Object} ImageFeatureExtractionPipelineOptions Parameters specific to image feature extraction pipelines.\n * @property {boolean} [pool=null] Whether or not to return the pooled output. If set to `false`, the model will return the raw hidden states.\n * \n * @callback ImageFeatureExtractionPipelineCallback Extract the features of the input(s).\n * @param {ImagePipelineInputs} images One or several images (or one list of images) to get the features of.\n * @param {ImageFeatureExtractionPipelineOptions} [options] The options to use for image feature extraction.\n * @returns {Promise<Tensor>} The image features computed by the model.\n * \n * @typedef {ImagePipelineConstructorArgs & ImageFeatureExtractionPipelineCallback & Disposable} ImageFeatureExtractionPipelineType\n */\n\n/**\n * Image feature extraction pipeline using no model head. This pipeline extracts the hidden\n * states from the base transformer, which can be used as features in downstream tasks.\n * \n * **Example:** Perform image feature extraction with `Xenova/vit-base-patch16-224-in21k`.\n * ```javascript\n * const image_feature_extractor = await pipeline('image-feature-extraction', 'Xenova/vit-base-patch16-224-in21k');\n * const url = 'https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/cats.png';\n * const features = await image_feature_extractor(url);\n * // Tensor {\n * //   dims: [ 1, 197, 768 ],\n * //   type: 'float32',\n * //   data: Float32Array(151296) [ ... ],\n * //   size: 151296\n * // }\n * ```\n * \n * **Example:** Compute image embeddings with `Xenova/clip-vit-base-patch32`.\n * ```javascript\n * const image_feature_extractor = await pipeline('image-feature-extraction', 'Xenova/clip-vit-base-patch32');\n * const url = 'https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/cats.png';\n * const features = await image_feature_extractor(url);\n * // Tensor {\n * //   dims: [ 1, 512 ],\n * //   type: 'float32',\n * //   data: Float32Array(512) [ ... ],\n * //   size: 512\n * // }\n * ```\n */\nclass ImageFeatureExtractionPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ImageFeatureExtractionPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new ImageFeatureExtractionPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ImageFeatureExtractionPipelineCallback} */\n    async _call(images, {\n        pool = null,\n    } = {}) {\n\n        const preparedImages = await prepareImages(images);\n        const { pixel_values } = await this.processor(preparedImages);\n        const outputs = await this.model({ pixel_values });\n\n        /** @type {Tensor} */\n        let result;\n        if (pool) {\n            if (!('pooler_output' in outputs)) {\n                throw Error(`No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.`);\n            }\n            result = outputs.pooler_output;\n\n        } else {\n            result = outputs.last_hidden_state ?? outputs.logits ?? outputs.image_embeds;\n        }\n        return result;\n    }\n}\n\n// TODO\n// export class SentenceSimilarityPipeline extends Pipeline {\n// }\n\n/**\n * @typedef {Object} AudioClassificationSingle\n * @property {string} label The label predicted.\n * @property {number} score The corresponding probability.\n * @typedef {AudioClassificationSingle[]} AudioClassificationOutput\n * \n * @typedef {Object} AudioClassificationPipelineOptions Parameters specific to audio classification pipelines.\n * @property {number} [top_k=5] The number of top labels that will be returned by the pipeline.\n * If the provided number is `null` or higher than the number of labels available in the model configuration,\n * it will default to the number of labels.\n * \n * @callback AudioClassificationPipelineCallback Classify the sequence(s) given as inputs.\n * @param {AudioPipelineInputs} audio The input audio file(s) to be classified. The input is either:\n * - `string` or `URL` that is the filename/URL of the audio file, the file will be read at the processor's sampling rate\n * to get the waveform using the [`AudioContext`](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext) API.\n * If `AudioContext` is not available, you should pass the raw waveform in as a Float32Array of shape `(n, )`.\n * - `Float32Array` or `Float64Array` of shape `(n, )`, representing the raw audio at the correct sampling rate (no further check will be done).\n * @param {AudioClassificationPipelineOptions} [options] The options to use for audio classification.\n * @returns {Promise<AudioClassificationOutput|AudioClassificationOutput[]>} An array or object containing the predicted labels and scores.\n * \n * @typedef {AudioPipelineConstructorArgs & AudioClassificationPipelineCallback & Disposable} AudioClassificationPipelineType\n */\n\n/**\n * Audio classification pipeline using any `AutoModelForAudioClassification`.\n * This pipeline predicts the class of a raw waveform or an audio file.\n * \n * **Example:** Perform audio classification with `Xenova/wav2vec2-large-xlsr-53-gender-recognition-librispeech`.\n * ```javascript\n * const classifier = await pipeline('audio-classification', 'Xenova/wav2vec2-large-xlsr-53-gender-recognition-librispeech');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const output = await classifier(url);\n * // [\n * //   { label: 'male', score: 0.9981542229652405 },\n * //   { label: 'female', score: 0.001845747814513743 }\n * // ]\n * ```\n * \n * **Example:** Perform audio classification with `Xenova/ast-finetuned-audioset-10-10-0.4593` and return top 4 results.\n * ```javascript\n * const classifier = await pipeline('audio-classification', 'Xenova/ast-finetuned-audioset-10-10-0.4593');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cat_meow.wav';\n * const output = await classifier(url, { top_k: 4 });\n * // [\n * //   { label: 'Meow', score: 0.5617874264717102 },\n * //   { label: 'Cat', score: 0.22365376353263855 },\n * //   { label: 'Domestic animals, pets', score: 0.1141069084405899 },\n * //   { label: 'Animal', score: 0.08985692262649536 },\n * // ]\n * ```\n */\nclass AudioClassificationPipeline extends (/** @type {new (options: AudioPipelineConstructorArgs) => AudioClassificationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new AudioClassificationPipeline.\n     * @param {AudioPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {AudioClassificationPipelineCallback} */\n    async _call(audio, {\n        top_k = 5\n    } = {}) {\n\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        const preparedAudios = await prepareAudios(audio, sampling_rate);\n\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        const toReturn = [];\n        for (const aud of preparedAudios) {\n            const inputs = await this.processor(aud);\n            const output = await this.model(inputs);\n            const logits = output.logits[0];\n\n            const scores = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.topk)(new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor(\n                'float32',\n                (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(logits.data),\n                logits.dims,\n            ), top_k);\n\n            const values = scores[0].tolist();\n            const indices = scores[1].tolist();\n\n            const vals = indices.map((x, i) => ({\n                label: /** @type {string} */ (id2label ? id2label[x] : `LABEL_${x}`),\n                score: /** @type {number} */ (values[i]),\n            }));\n\n            toReturn.push(vals);\n        };\n        return Array.isArray(audio) ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} ZeroShotAudioClassificationOutput\n * @property {string} label The label identified by the model. It is one of the suggested `candidate_label`.\n * @property {number} score The score attributed by the model for that label (between 0 and 1).\n * \n * @typedef {Object} ZeroShotAudioClassificationPipelineOptions Parameters specific to zero-shot audio classification pipelines.\n * @property {string} [hypothesis_template=\"This is a sound of {}.\"] The sentence used in conjunction with `candidate_labels`\n * to attempt the audio classification by replacing the placeholder with the candidate_labels.\n * Then likelihood is estimated by using `logits_per_audio`.\n * \n * @callback ZeroShotAudioClassificationPipelineCallback Classify the sequence(s) given as inputs.\n * @param {AudioPipelineInputs} audio The input audio file(s) to be classified. The input is either:\n * - `string` or `URL` that is the filename/URL of the audio file, the file will be read at the processor's sampling rate\n * to get the waveform using the [`AudioContext`](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext) API.\n * If `AudioContext` is not available, you should pass the raw waveform in as a Float32Array of shape `(n, )`.\n * - `Float32Array` or `Float64Array` of shape `(n, )`, representing the raw audio at the correct sampling rate (no further check will be done).\n * @param {string[]} candidate_labels The candidate labels for this audio.\n * @param {ZeroShotAudioClassificationPipelineOptions} [options] The options to use for zero-shot audio classification.\n * @returns {Promise<ZeroShotAudioClassificationOutput[]|ZeroShotAudioClassificationOutput[][]>} An array of objects containing the predicted labels and scores.\n * \n * @typedef {TextAudioPipelineConstructorArgs & ZeroShotAudioClassificationPipelineCallback & Disposable} ZeroShotAudioClassificationPipelineType\n */\n\n/**\n * Zero shot audio classification pipeline using `ClapModel`. This pipeline predicts the class of an audio when you\n * provide an audio and a set of `candidate_labels`.\n * \n * **Example**: Perform zero-shot audio classification with `Xenova/clap-htsat-unfused`.\n * ```javascript\n * const classifier = await pipeline('zero-shot-audio-classification', 'Xenova/clap-htsat-unfused');\n * const audio = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/dog_barking.wav';\n * const candidate_labels = ['dog', 'vaccum cleaner'];\n * const scores = await classifier(audio, candidate_labels);\n * // [\n * //   { score: 0.9993992447853088, label: 'dog' },\n * //   { score: 0.0006007603369653225, label: 'vaccum cleaner' }\n * // ]\n * ```\n */\nclass ZeroShotAudioClassificationPipeline extends (/** @type {new (options: TextAudioPipelineConstructorArgs) => ZeroShotAudioClassificationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new ZeroShotAudioClassificationPipeline.\n     * @param {TextAudioPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ZeroShotAudioClassificationPipelineCallback} */\n    async _call(audio, candidate_labels, {\n        hypothesis_template = \"This is a sound of {}.\"\n    } = {}) {\n\n        const single = !Array.isArray(audio);\n        if (single) {\n            audio = [/** @type {AudioInput} */ (audio)];\n        }\n\n        // Insert label into hypothesis template \n        const texts = candidate_labels.map(\n            x => hypothesis_template.replace('{}', x)\n        );\n\n        // Run tokenization\n        const text_inputs = this.tokenizer(texts, {\n            padding: true,\n            truncation: true,\n        });\n\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        const preparedAudios = await prepareAudios(audio, sampling_rate);\n\n        const toReturn = [];\n        for (const aud of preparedAudios) {\n            const audio_inputs = await this.processor(aud);\n\n            // Run model with both text and audio inputs\n            const output = await this.model({ ...text_inputs, ...audio_inputs });\n\n            // Compute softmax per audio\n            const probs = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(output.logits_per_audio.data);\n\n            toReturn.push([...probs].map((x, i) => ({\n                score: x,\n                label: candidate_labels[i]\n            })));\n        }\n        return single ? toReturn[0] : toReturn;\n    }\n}\n\n/**\n * @typedef {Object} Chunk\n * @property {[number, number]} timestamp The start and end timestamp of the chunk in seconds.\n * @property {string} text The recognized text.\n */\n\n/**\n * @typedef {Object} AutomaticSpeechRecognitionOutput\n * @property {string} text The recognized text.\n * @property {Chunk[]} [chunks] When using `return_timestamps`, the `chunks` will become a list\n * containing all the various text chunks identified by the model.\n * \n * @typedef {Object} AutomaticSpeechRecognitionSpecificParams Parameters specific to automatic-speech-recognition pipelines.\n * @property {boolean|'word'} [return_timestamps] Whether to return timestamps or not. Default is `false`.\n * @property {number} [chunk_length_s] The length of audio chunks to process in seconds. Default is 0 (no chunking).\n * @property {number} [stride_length_s] The length of overlap between consecutive audio chunks in seconds. If not provided, defaults to `chunk_length_s / 6`.\n * @property {boolean} [force_full_sequences] Whether to force outputting full sequences or not. Default is `false`.\n * @property {string} [language] The source language. Default is `null`, meaning it should be auto-detected. Use this to potentially improve performance if the source language is known.\n * @property {string} [task] The task to perform. Default is `null`, meaning it should be auto-detected.\n * @property {number} [num_frames] The number of frames in the input audio.\n * @typedef {import('./generation/configuration_utils.js').GenerationConfig & AutomaticSpeechRecognitionSpecificParams} AutomaticSpeechRecognitionConfig\n * \n * @callback AutomaticSpeechRecognitionPipelineCallback Transcribe the audio sequence(s) given as inputs to text.\n * @param {AudioPipelineInputs} audio The input audio file(s) to be transcribed. The input is either:\n * - `string` or `URL` that is the filename/URL of the audio file, the file will be read at the processor's sampling rate\n * to get the waveform using the [`AudioContext`](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext) API.\n * If `AudioContext` is not available, you should pass the raw waveform in as a Float32Array of shape `(n, )`.\n * - `Float32Array` or `Float64Array` of shape `(n, )`, representing the raw audio at the correct sampling rate (no further check will be done).\n * @param {Partial<AutomaticSpeechRecognitionConfig>} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<AutomaticSpeechRecognitionOutput|AutomaticSpeechRecognitionOutput[]>} An object containing the transcription text and optionally timestamps if `return_timestamps` is `true`.\n * \n * @typedef {TextAudioPipelineConstructorArgs & AutomaticSpeechRecognitionPipelineCallback & Disposable} AutomaticSpeechRecognitionPipelineType\n */\n\n/**\n * Pipeline that aims at extracting spoken text contained within some audio.\n *\n * **Example:** Transcribe English.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-tiny.en');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const output = await transcriber(url);\n * // { text: \" And so my fellow Americans ask not what your country can do for you, ask what you can do for your country.\" }\n * ```\n * \n * **Example:** Transcribe English w/ timestamps.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-tiny.en');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const output = await transcriber(url, { return_timestamps: true });\n * // {\n * //   text: \" And so my fellow Americans ask not what your country can do for you, ask what you can do for your country.\"\n * //   chunks: [\n * //     { timestamp: [0, 8],  text: \" And so my fellow Americans ask not what your country can do for you\" }\n * //     { timestamp: [8, 11], text: \" ask what you can do for your country.\" }\n * //   ]\n * // }\n * ```\n * \n * **Example:** Transcribe English w/ word-level timestamps.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-tiny.en');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav';\n * const output = await transcriber(url, { return_timestamps: 'word' });\n * // {\n * //   \"text\": \" And so my fellow Americans ask not what your country can do for you ask what you can do for your country.\",\n * //   \"chunks\": [\n * //     { \"text\": \" And\", \"timestamp\": [0, 0.78] },\n * //     { \"text\": \" so\", \"timestamp\": [0.78, 1.06] },\n * //     { \"text\": \" my\", \"timestamp\": [1.06, 1.46] },\n * //     ...\n * //     { \"text\": \" for\", \"timestamp\": [9.72, 9.92] },\n * //     { \"text\": \" your\", \"timestamp\": [9.92, 10.22] },\n * //     { \"text\": \" country.\", \"timestamp\": [10.22, 13.5] }\n * //   ]\n * // }\n * ```\n * \n * **Example:** Transcribe French.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-small');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/french-audio.mp3';\n * const output = await transcriber(url, { language: 'french', task: 'transcribe' });\n * // { text: \" J'adore, j'aime, je n'aime pas, je déteste.\" }\n * ```\n * \n * **Example:** Translate French to English.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-small');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/french-audio.mp3';\n * const output = await transcriber(url, { language: 'french', task: 'translate' });\n * // { text: \" I love, I like, I don't like, I hate.\" }\n * ```\n * \n * **Example:** Transcribe/translate audio longer than 30 seconds.\n * ```javascript\n * const transcriber = await pipeline('automatic-speech-recognition', 'Xenova/whisper-tiny.en');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/ted_60.wav';\n * const output = await transcriber(url, { chunk_length_s: 30, stride_length_s: 5 });\n * // { text: \" So in college, I was a government major, which means [...] So I'd start off light and I'd bump it up\" }\n * ```\n */\nclass AutomaticSpeechRecognitionPipeline extends (/** @type {new (options: TextAudioPipelineConstructorArgs) => AutomaticSpeechRecognitionPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new AutomaticSpeechRecognitionPipeline.\n     * @param {TextAudioPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {AutomaticSpeechRecognitionPipelineCallback} */\n    async _call(audio, kwargs = {}) {\n        switch (this.model.config.model_type) {\n            case 'whisper':\n            case 'lite-whisper':\n                return this._call_whisper(audio, kwargs)\n            case 'wav2vec2':\n            case 'wav2vec2-bert':\n            case 'unispeech':\n            case 'unispeech-sat':\n            case 'hubert':\n                return this._call_wav2vec2(audio, kwargs)\n            case 'moonshine':\n                return this._call_moonshine(audio, kwargs)\n            default:\n                throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)\n        }\n    }\n\n    /**\n     * @type {AutomaticSpeechRecognitionPipelineCallback}\n     * @private\n     */\n    async _call_wav2vec2(audio, kwargs) {\n        // TODO use kwargs\n\n        if (kwargs.language) {\n            console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to \"English\".');\n        }\n        if (kwargs.task) {\n            console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to \"transcribe\".');\n        }\n\n        const single = !Array.isArray(audio);\n        if (single) {\n            audio = [/** @type {AudioInput} */ (audio)];\n        }\n\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        const preparedAudios = await prepareAudios(audio, sampling_rate);\n\n        const toReturn = [];\n        for (const aud of preparedAudios) {\n            const inputs = await this.processor(aud);\n            const output = await this.model(inputs);\n            const logits = output.logits[0];\n\n            const predicted_ids = [];\n            for (const item of logits) {\n                predicted_ids.push((0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.max)(item.data)[1])\n            }\n            const predicted_sentences = this.tokenizer.decode(predicted_ids)\n            toReturn.push({ text: predicted_sentences })\n        }\n        return single ? toReturn[0] : toReturn;\n    }\n\n    /**\n     * @type {AutomaticSpeechRecognitionPipelineCallback}\n     * @private\n     */\n    async _call_whisper(audio, kwargs) {\n        const return_timestamps = kwargs.return_timestamps ?? false;\n        const chunk_length_s = kwargs.chunk_length_s ?? 0;\n        const force_full_sequences = kwargs.force_full_sequences ?? false;\n        let stride_length_s = kwargs.stride_length_s ?? null;\n\n        const generation_config = { ...kwargs }\n\n        if (return_timestamps === 'word') {\n            generation_config['return_token_timestamps'] = true;\n            generation_config['return_timestamps'] = false; // Do not predict timestamp tokens\n        }\n\n        const single = !Array.isArray(audio);\n        if (single) {\n            audio = [/** @type {AudioInput} */ (audio)];\n        }\n\n        // @ts-expect-error TS2339\n        const time_precision = this.processor.feature_extractor.config.chunk_length / this.model.config.max_source_positions;\n        const hop_length = this.processor.feature_extractor.config.hop_length;\n\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        const preparedAudios = await prepareAudios(audio, sampling_rate);\n\n        const toReturn = [];\n        for (const aud of preparedAudios) {\n            /** @type {{stride: number[], input_features: Tensor, is_last: boolean, tokens?: bigint[], token_timestamps?: number[]}[]} */\n            let chunks = [];\n            if (chunk_length_s > 0) {\n                if (stride_length_s === null) {\n                    stride_length_s = chunk_length_s / 6;\n                } else if (chunk_length_s <= stride_length_s) {\n                    throw Error(\"`chunk_length_s` must be larger than `stride_length_s`.\")\n                }\n\n                // TODO support different stride_length_s (for left and right)\n\n                const window = sampling_rate * chunk_length_s;\n                const stride = sampling_rate * stride_length_s;\n                const jump = window - 2 * stride;\n                let offset = 0;\n\n                // Create subarrays of audio with overlaps\n                while (true) {\n                    const offset_end = offset + window;\n                    const subarr = aud.subarray(offset, offset_end);\n                    const feature = await this.processor(subarr);\n\n                    const is_first = offset === 0;\n                    const is_last = offset_end >= aud.length;\n                    chunks.push({\n                        stride: [\n                            subarr.length,\n                            is_first ? 0 : stride,\n                            is_last ? 0 : stride\n                        ],\n                        input_features: feature.input_features,\n                        is_last,\n                    })\n                    if (is_last) break;\n                    offset += jump;\n                }\n\n            } else {\n                chunks = [{\n                    stride: [aud.length, 0, 0],\n                    input_features: (await this.processor(aud)).input_features,\n                    is_last: true\n                }]\n            }\n\n            // Generate for each set of input features\n            for (const chunk of chunks) {\n                generation_config.num_frames = Math.floor(chunk.stride[0] / hop_length);\n\n                // NOTE: doing sequentially for now\n                const data = await this.model.generate({\n                    inputs: chunk.input_features,\n                    ...generation_config\n                });\n\n                // TODO: Right now we only get top beam\n                if (return_timestamps === 'word') {\n                    // @ts-expect-error TS2339\n                    chunk.tokens = data.sequences.tolist()[0];\n                    // @ts-expect-error TS2339\n                    chunk.token_timestamps = data.token_timestamps.tolist()[0].map(\n                        (/** @type {number} */ x) => (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.round)(x, 2)\n                    );\n\n                } else {\n                    chunk.tokens = (/** @type {Tensor} */(data))[0].tolist();\n                }\n\n                // convert stride to seconds\n                chunk.stride = chunk.stride.map(x => x / sampling_rate);\n            }\n\n            // Merge text chunks\n            // @ts-ignore\n            const [full_text, optional] = this.tokenizer._decode_asr(chunks, {\n                time_precision, return_timestamps, force_full_sequences\n            });\n\n            toReturn.push({ text: full_text, ...optional })\n        }\n        return single ? toReturn[0] : toReturn;\n    }\n\n    /**\n     * @type {AutomaticSpeechRecognitionPipelineCallback}\n     * @private\n     */\n    async _call_moonshine(audio, kwargs) {\n        const single = !Array.isArray(audio);\n        if (single) {\n            audio = [/** @type {AudioInput} */ (audio)];\n        }\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        const preparedAudios = await prepareAudios(audio, sampling_rate);\n        const toReturn = [];\n        for (const aud of preparedAudios) {\n            const inputs = await this.processor(aud);\n\n            // According to the [paper](https://arxiv.org/pdf/2410.15608):\n            // \"We use greedy decoding, with a heuristic limit of 6 output tokens\n            // per second of audio to avoid repeated output sequences.\"\n            const max_new_tokens = Math.floor(aud.length / sampling_rate) * 6;\n            const outputs = await this.model.generate({ max_new_tokens, ...kwargs, ...inputs });\n\n            const text = this.processor.batch_decode(/** @type {Tensor} */(outputs), { skip_special_tokens: true })[0];\n            toReturn.push({ text });\n        }\n        return single ? toReturn[0] : toReturn;\n    }\n\n}\n\n/**\n * @typedef {Object} ImageToTextSingle\n * @property {string} generated_text The generated text.\n * @typedef {ImageToTextSingle[]} ImageToTextOutput\n * \n * @callback ImageToTextPipelineCallback Assign labels to the image(s) passed as inputs.\n * @param {ImagePipelineInputs} texts The images to be captioned.\n * @param {Partial<import('./generation/configuration_utils.js').GenerationConfig>} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<ImageToTextOutput|ImageToTextOutput[]>} An object (or array of objects) containing the generated text(s).\n * \n * @typedef {TextImagePipelineConstructorArgs & ImageToTextPipelineCallback & Disposable} ImageToTextPipelineType\n */\n\n/**\n * Image To Text pipeline using a `AutoModelForVision2Seq`. This pipeline predicts a caption for a given image.\n * \n * **Example:** Generate a caption for an image w/ `Xenova/vit-gpt2-image-captioning`.\n * ```javascript\n * const captioner = await pipeline('image-to-text', 'Xenova/vit-gpt2-image-captioning');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg';\n * const output = await captioner(url);\n * // [{ generated_text: 'a cat laying on a couch with another cat' }]\n * ```\n * \n * **Example:** Optical Character Recognition (OCR) w/ `Xenova/trocr-small-handwritten`.\n * ```javascript\n * const captioner = await pipeline('image-to-text', 'Xenova/trocr-small-handwritten');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/handwriting.jpg';\n * const output = await captioner(url);\n * // [{ generated_text: 'Mr. Brown commented icily.' }]\n * ```\n */\nclass ImageToTextPipeline extends (/** @type {new (options: TextImagePipelineConstructorArgs) => ImageToTextPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new ImageToTextPipeline.\n     * @param {TextImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ImageToTextPipelineCallback} */\n    async _call(images, generate_kwargs = {}) {\n\n        const isBatched = Array.isArray(images);\n        const preparedImages = await prepareImages(images);\n\n        const { pixel_values } = await this.processor(preparedImages);\n\n        const toReturn = [];\n        for (const batch of pixel_values) {\n            batch.dims = [1, ...batch.dims]\n            const output = await this.model.generate({ inputs: batch, ...generate_kwargs });\n            const decoded = this.tokenizer.batch_decode(/** @type {Tensor} */(output), {\n                skip_special_tokens: true,\n            }).map(x => ({ generated_text: x.trim() }))\n            toReturn.push(decoded);\n        }\n\n        return isBatched ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} ImageClassificationSingle\n * @property {string} label The label identified by the model.\n * @property {number} score The score attributed by the model for that label.\n * @typedef {ImageClassificationSingle[]} ImageClassificationOutput\n * \n * @typedef {Object} ImageClassificationPipelineOptions Parameters specific to image classification pipelines.\n * @property {number} [top_k=1] The number of top labels that will be returned by the pipeline. \n * \n * @callback ImageClassificationPipelineCallback Assign labels to the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The input images(s) to be classified.\n * @param {ImageClassificationPipelineOptions} [options] The options to use for image classification.\n * @returns {Promise<ImageClassificationOutput|ImageClassificationOutput[]>} An array or object containing the predicted labels and scores.\n * \n * @typedef {ImagePipelineConstructorArgs & ImageClassificationPipelineCallback & Disposable} ImageClassificationPipelineType\n */\n\n/**\n * Image classification pipeline using any `AutoModelForImageClassification`.\n * This pipeline predicts the class of an image.\n * \n * **Example:** Classify an image.\n * ```javascript\n * const classifier = await pipeline('image-classification', 'Xenova/vit-base-patch16-224');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/tiger.jpg';\n * const output = await classifier(url);\n * // [\n * //   { label: 'tiger, Panthera tigris', score: 0.632695734500885 },\n * // ]\n * ```\n * \n * **Example:** Classify an image and return top `n` classes.\n * ```javascript\n * const classifier = await pipeline('image-classification', 'Xenova/vit-base-patch16-224');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/tiger.jpg';\n * const output = await classifier(url, { top_k: 3 });\n * // [\n * //   { label: 'tiger, Panthera tigris', score: 0.632695734500885 },\n * //   { label: 'tiger cat', score: 0.3634825646877289 },\n * //   { label: 'lion, king of beasts, Panthera leo', score: 0.00045060308184474707 },\n * // ]\n * ```\n * \n * **Example:** Classify an image and return all classes.\n * ```javascript\n * const classifier = await pipeline('image-classification', 'Xenova/vit-base-patch16-224');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/tiger.jpg';\n * const output = await classifier(url, { top_k: 0 });\n * // [\n * //   { label: 'tiger, Panthera tigris', score: 0.632695734500885 },\n * //   { label: 'tiger cat', score: 0.3634825646877289 },\n * //   { label: 'lion, king of beasts, Panthera leo', score: 0.00045060308184474707 },\n * //   { label: 'jaguar, panther, Panthera onca, Felis onca', score: 0.00035465499968267977 },\n * //   ...\n * // ]\n * ```\n */\nclass ImageClassificationPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ImageClassificationPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new ImageClassificationPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ImageClassificationPipelineCallback} */\n    async _call(images, {\n        top_k = 5\n    } = {}) {\n\n        const preparedImages = await prepareImages(images);\n\n        const { pixel_values } = await this.processor(preparedImages);\n        const output = await this.model({ pixel_values });\n\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        /** @type {ImageClassificationOutput[]} */\n        const toReturn = [];\n        for (const batch of output.logits) {\n            const scores = await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.topk)(new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor(\n                'float32',\n                (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(batch.data),\n                batch.dims,\n            ), top_k);\n\n            const values = scores[0].tolist();\n            const indices = scores[1].tolist();\n\n            const vals = indices.map((x, i) => ({\n                label: /** @type {string} */ (id2label ? id2label[x] : `LABEL_${x}`),\n                score: /** @type {number} */ (values[i]),\n            }));\n            toReturn.push(vals);\n        }\n\n        return Array.isArray(images) ? toReturn : toReturn[0];\n    }\n\n}\n\n/**\n * @typedef {Object} ImageSegmentationPipelineOutput\n * @property {string|null} label The label of the segment.\n * @property {number|null} score The score of the segment.\n * @property {RawImage} mask The mask of the segment.\n * \n * @typedef {Object} ImageSegmentationPipelineOptions Parameters specific to image segmentation pipelines.\n * @property {number} [threshold=0.5] Probability threshold to filter out predicted masks.\n * @property {number} [mask_threshold=0.5] Threshold to use when turning the predicted masks into binary values.\n * @property {number} [overlap_mask_area_threshold=0.8] Mask overlap threshold to eliminate small, disconnected segments.\n * @property {null|string} [subtask=null] Segmentation task to be performed. One of [`panoptic`, `instance`, and `semantic`],\n * depending on model capabilities. If not set, the pipeline will attempt to resolve (in that order).\n * @property {number[]} [label_ids_to_fuse=null] List of label ids to fuse. If not set, do not fuse any labels.\n * @property {number[][]} [target_sizes=null] List of target sizes for the input images. If not set, use the original image sizes.\n * \n * @callback ImageSegmentationPipelineCallback Segment the input images.\n * @param {ImagePipelineInputs} images The input images.\n * @param {ImageSegmentationPipelineOptions} [options] The options to use for image segmentation.\n * @returns {Promise<ImageSegmentationPipelineOutput[]>} The annotated segments.\n * \n * @typedef {ImagePipelineConstructorArgs & ImageSegmentationPipelineCallback & Disposable} ImageSegmentationPipelineType\n */\n\n/**\n * Image segmentation pipeline using any `AutoModelForXXXSegmentation`.\n * This pipeline predicts masks of objects and their classes.\n * \n * **Example:** Perform image segmentation with `Xenova/detr-resnet-50-panoptic`.\n * ```javascript\n * const segmenter = await pipeline('image-segmentation', 'Xenova/detr-resnet-50-panoptic');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg';\n * const output = await segmenter(url);\n * // [\n * //   { label: 'remote', score: 0.9984649419784546, mask: RawImage { ... } },\n * //   { label: 'cat', score: 0.9994316101074219, mask: RawImage { ... } }\n * // ]\n * ```\n */\nclass ImageSegmentationPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ImageSegmentationPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new ImageSegmentationPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n\n        this.subtasks_mapping = {\n            // Mapping of subtasks to their corresponding post-processing function names.\n            panoptic: 'post_process_panoptic_segmentation',\n            instance: 'post_process_instance_segmentation',\n            semantic: 'post_process_semantic_segmentation'\n        }\n    }\n\n    /** @type {ImageSegmentationPipelineCallback} */\n    async _call(images, {\n        threshold = 0.5,\n        mask_threshold = 0.5,\n        overlap_mask_area_threshold = 0.8,\n        label_ids_to_fuse = null,\n        target_sizes = null,\n        subtask = null,\n    } = {}) {\n        const isBatched = Array.isArray(images);\n\n        if (isBatched && images.length !== 1) {\n            throw Error(\"Image segmentation pipeline currently only supports a batch size of 1.\");\n        }\n\n        const preparedImages = await prepareImages(images);\n        const imageSizes = preparedImages.map(x => [x.height, x.width]);\n\n        const inputs = await this.processor(preparedImages);\n\n        const { inputNames, outputNames } = this.model.sessions['model'];\n        if (!inputNames.includes('pixel_values')) {\n            if (inputNames.length !== 1) {\n                throw Error(`Expected a single input name, but got ${inputNames.length} inputs: ${inputNames}.`);\n            }\n\n            const newName = inputNames[0];\n            if (newName in inputs) {\n                throw Error(`Input name ${newName} already exists in the inputs.`);\n            }\n            // To ensure compatibility with certain background-removal models,\n            // we may need to perform a mapping of input to output names\n            inputs[newName] = inputs.pixel_values;\n        }\n\n        const output = await this.model(inputs);\n\n        let fn = null;\n        if (subtask !== null) {\n            fn = this.subtasks_mapping[subtask];\n        } else if (this.processor.image_processor) {\n            for (const [task, func] of Object.entries(this.subtasks_mapping)) {\n                if (func in this.processor.image_processor) {\n                    fn = this.processor.image_processor[func].bind(this.processor.image_processor);\n                    subtask = task;\n                    break;\n                }\n            }\n        }\n\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        /** @type {ImageSegmentationPipelineOutput[]} */\n        const annotation = [];\n        if (!subtask) {\n            // Perform standard image segmentation\n            const result = output[outputNames[0]];\n            for (let i = 0; i < imageSizes.length; ++i) {\n                const size = imageSizes[i];\n                const item = result[i];\n                if (item.data.some(x => x < 0 || x > 1)) {\n                    item.sigmoid_();\n                }\n                const mask = await _utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage.fromTensor(item.mul_(255).to('uint8')).resize(size[1], size[0]);\n                annotation.push({\n                    label: null,\n                    score: null,\n                    mask\n                });\n            }\n        } else if (subtask === 'panoptic' || subtask === 'instance') {\n            const processed = fn(\n                output,\n                threshold,\n                mask_threshold,\n                overlap_mask_area_threshold,\n                label_ids_to_fuse,\n                target_sizes ?? imageSizes, // TODO FIX?\n            )[0];\n\n            const segmentation = processed.segmentation;\n\n            for (const segment of processed.segments_info) {\n                const maskData = new Uint8ClampedArray(segmentation.data.length);\n                for (let i = 0; i < segmentation.data.length; ++i) {\n                    if (segmentation.data[i] === segment.id) {\n                        maskData[i] = 255;\n                    }\n                }\n\n                const mask = new _utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage(maskData, segmentation.dims[1], segmentation.dims[0], 1)\n\n                annotation.push({\n                    score: segment.score,\n                    label: id2label[segment.label_id],\n                    mask: mask\n                })\n            }\n\n        } else if (subtask === 'semantic') {\n            const { segmentation, labels } = fn(output, target_sizes ?? imageSizes)[0];\n\n            for (const label of labels) {\n                const maskData = new Uint8ClampedArray(segmentation.data.length);\n                for (let i = 0; i < segmentation.data.length; ++i) {\n                    if (segmentation.data[i] === label) {\n                        maskData[i] = 255;\n                    }\n                }\n\n                const mask = new _utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage(maskData, segmentation.dims[1], segmentation.dims[0], 1);\n\n                annotation.push({\n                    score: null,\n                    label: id2label[label],\n                    mask: mask\n                });\n            }\n        } else {\n            throw Error(`Subtask ${subtask} not supported.`);\n        }\n\n        return annotation;\n    }\n}\n\n\n/**\n * @typedef {Object} BackgroundRemovalPipelineOptions Parameters specific to image segmentation pipelines.\n * \n * @callback BackgroundRemovalPipelineCallback Segment the input images.\n * @param {ImagePipelineInputs} images The input images.\n * @param {BackgroundRemovalPipelineOptions} [options] The options to use for image segmentation.\n * @returns {Promise<RawImage[]>} The images with the background removed.\n * \n * @typedef {ImagePipelineConstructorArgs & BackgroundRemovalPipelineCallback & Disposable} BackgroundRemovalPipelineType\n */\n\n/**\n * Background removal pipeline using certain `AutoModelForXXXSegmentation`.\n * This pipeline removes the backgrounds of images.\n * \n * **Example:** Perform background removal with `Xenova/modnet`.\n * ```javascript\n * const segmenter = await pipeline('background-removal', 'Xenova/modnet');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/portrait-of-woman_small.jpg';\n * const output = await segmenter(url);\n * // [\n * //   RawImage { data: Uint8ClampedArray(648000) [ ... ], width: 360, height: 450, channels: 4 }\n * // ]\n * ```\n */\nclass BackgroundRemovalPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ImageSegmentationPipelineType} */ (ImageSegmentationPipeline)) {\n    /**\n     * Create a new BackgroundRemovalPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {BackgroundRemovalPipelineCallback} */\n    async _call(images, options = {}) {\n        const isBatched = Array.isArray(images);\n\n        if (isBatched && images.length !== 1) {\n            throw Error(\"Background removal pipeline currently only supports a batch size of 1.\");\n        }\n\n        const preparedImages = await prepareImages(images);\n\n        // @ts-expect-error TS2339\n        const masks = await super._call(images, options);\n        const result = preparedImages.map((img, i) => {\n            const cloned = img.clone();\n            cloned.putAlpha(masks[i].mask);\n            return cloned;\n        });\n\n        return result;\n    }\n}\n\n/**\n * @typedef {Object} ZeroShotImageClassificationOutput\n * @property {string} label The label identified by the model. It is one of the suggested `candidate_label`.\n * @property {number} score The score attributed by the model for that label (between 0 and 1).\n * \n * @typedef {Object} ZeroShotImageClassificationPipelineOptions Parameters specific to zero-shot image classification pipelines.\n * @property {string} [hypothesis_template=\"This is a photo of {}\"] The sentence used in conjunction with `candidate_labels`\n * to attempt the image classification by replacing the placeholder with the candidate_labels.\n * Then likelihood is estimated by using `logits_per_image`.\n * \n * @callback ZeroShotImageClassificationPipelineCallback Assign labels to the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The input images.\n * @param {string[]} candidate_labels The candidate labels for this image.\n * @param {ZeroShotImageClassificationPipelineOptions} [options] The options to use for zero-shot image classification.\n * @returns {Promise<ZeroShotImageClassificationOutput[]|ZeroShotImageClassificationOutput[][]>} An array of objects containing the predicted labels and scores.\n * \n * @typedef {TextImagePipelineConstructorArgs & ZeroShotImageClassificationPipelineCallback & Disposable} ZeroShotImageClassificationPipelineType\n */\n\n/**\n * Zero shot image classification pipeline. This pipeline predicts the class of\n * an image when you provide an image and a set of `candidate_labels`.\n * \n * **Example:** Zero shot image classification w/ `Xenova/clip-vit-base-patch32`.\n * ```javascript\n * const classifier = await pipeline('zero-shot-image-classification', 'Xenova/clip-vit-base-patch32');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/tiger.jpg';\n * const output = await classifier(url, ['tiger', 'horse', 'dog']);\n * // [\n * //   { score: 0.9993917942047119, label: 'tiger' },\n * //   { score: 0.0003519294841680676, label: 'horse' },\n * //   { score: 0.0002562698791734874, label: 'dog' }\n * // ]\n * ```\n */\nclass ZeroShotImageClassificationPipeline extends (/** @type {new (options: TextImagePipelineConstructorArgs) => ZeroShotImageClassificationPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new ZeroShotImageClassificationPipeline.\n     * @param {TextImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ZeroShotImageClassificationPipelineCallback} */\n    async _call(images, candidate_labels, {\n        hypothesis_template = \"This is a photo of {}\"\n    } = {}) {\n\n        const isBatched = Array.isArray(images);\n        const preparedImages = await prepareImages(images);\n\n        // Insert label into hypothesis template \n        const texts = candidate_labels.map(\n            x => hypothesis_template.replace('{}', x)\n        );\n\n        // Run tokenization\n        const text_inputs = this.tokenizer(texts, {\n            padding: this.model.config.model_type === 'siglip' ? 'max_length' : true,\n            truncation: true,\n        });\n\n        // Run processor\n        const { pixel_values } = await this.processor(preparedImages);\n\n        // Run model with both text and pixel inputs\n        const output = await this.model({ ...text_inputs, pixel_values });\n\n        const function_to_apply =\n            this.model.config.model_type === 'siglip'\n                ? batch => batch.sigmoid().data\n                : batch => (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_6__.softmax)(batch.data);\n\n        // Compare each image with each candidate label\n        const toReturn = [];\n        for (const batch of output.logits_per_image) {\n            // Compute softmax per image\n            const probs = function_to_apply(batch);\n\n            const result = [...probs].map((x, i) => ({\n                score: x,\n                label: candidate_labels[i]\n            }));\n            result.sort((a, b) => b.score - a.score); // sort by score in descending order\n            toReturn.push(result);\n        }\n\n        return isBatched ? toReturn : toReturn[0];\n    }\n}\n\n\n/**\n * @typedef {Object} ObjectDetectionPipelineSingle\n * @property {string} label The class label identified by the model.\n * @property {number} score The score attributed by the model for that label.\n * @property {BoundingBox} box The bounding box of detected object in image's original size, or as a percentage if `percentage` is set to true.\n * @typedef {ObjectDetectionPipelineSingle[]} ObjectDetectionPipelineOutput\n * \n * @typedef {Object} ObjectDetectionPipelineOptions Parameters specific to object detection pipelines.\n * @property {number} [threshold=0.9] The threshold used to filter boxes by score.\n * @property {boolean} [percentage=false] Whether to return the boxes coordinates in percentage (true) or in pixels (false).\n * \n * @callback ObjectDetectionPipelineCallback Detect objects (bounding boxes & classes) in the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The input images.\n * @param {ObjectDetectionPipelineOptions} [options] The options to use for object detection.\n * @returns {Promise<ObjectDetectionPipelineOutput|ObjectDetectionPipelineOutput[]>} A list of objects or a list of list of objects. \n * \n * @typedef {ImagePipelineConstructorArgs & ObjectDetectionPipelineCallback & Disposable} ObjectDetectionPipelineType\n */\n\n/**\n * Object detection pipeline using any `AutoModelForObjectDetection`.\n * This pipeline predicts bounding boxes of objects and their classes.\n * \n * **Example:** Run object-detection with `Xenova/detr-resnet-50`.\n * ```javascript\n * const detector = await pipeline('object-detection', 'Xenova/detr-resnet-50');\n * const img = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg';\n * const output = await detector(img, { threshold: 0.9 });\n * // [{\n * //   score: 0.9976370930671692,\n * //   label: \"remote\",\n * //   box: { xmin: 31, ymin: 68, xmax: 190, ymax: 118 }\n * // },\n * // ...\n * // {\n * //   score: 0.9984092116355896,\n * //   label: \"cat\",\n * //   box: { xmin: 331, ymin: 19, xmax: 649, ymax: 371 }\n * // }]\n * ```\n */\nclass ObjectDetectionPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ObjectDetectionPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new ObjectDetectionPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ObjectDetectionPipelineCallback} */\n    async _call(images, {\n        threshold = 0.9,\n        percentage = false,\n    } = {}) {\n\n        const isBatched = Array.isArray(images);\n\n        if (isBatched && images.length !== 1) {\n            throw Error(\"Object detection pipeline currently only supports a batch size of 1.\");\n        }\n        const preparedImages = await prepareImages(images);\n\n        const imageSizes = percentage ? null : preparedImages.map(x => [x.height, x.width]);\n\n        const { pixel_values, pixel_mask } = await this.processor(preparedImages);\n        const output = await this.model({ pixel_values, pixel_mask });\n\n        // @ts-ignore\n        const processed = this.processor.image_processor.post_process_object_detection(output, threshold, imageSizes);\n\n        // Add labels\n        // @ts-expect-error TS2339\n        const id2label = this.model.config.id2label;\n\n        // Format output\n        /** @type {ObjectDetectionPipelineOutput[]} */\n        const result = processed.map(batch => (\n            batch.boxes.map((box, i) => ({\n                score: batch.scores[i],\n                label: id2label[batch.classes[i]],\n                box: get_bounding_box(box, !percentage),\n            }))\n        ))\n\n        return isBatched ? result : result[0];\n    }\n}\n\n\n/**\n * @typedef {Object} ZeroShotObjectDetectionOutput\n * @property {string} label Text query corresponding to the found object.\n * @property {number} score Score corresponding to the object (between 0 and 1).\n * @property {BoundingBox} box Bounding box of the detected object in image's original size, or as a percentage if `percentage` is set to true.\n * \n * @typedef {Object} ZeroShotObjectDetectionPipelineOptions Parameters specific to zero-shot object detection pipelines.\n * @property {number} [threshold=0.1] The probability necessary to make a prediction.\n * @property {number} [top_k=null] The number of top predictions that will be returned by the pipeline.\n * If the provided number is `null` or higher than the number of predictions available, it will default\n * to the number of predictions.\n * @property {boolean} [percentage=false] Whether to return the boxes coordinates in percentage (true) or in pixels (false).\n * \n * @callback ZeroShotObjectDetectionPipelineCallback Detect objects (bounding boxes & classes) in the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The input images.\n * @param {string[]} candidate_labels What the model should recognize in the image.\n * @param {ZeroShotObjectDetectionPipelineOptions} [options] The options to use for zero-shot object detection.\n * @returns {Promise<ZeroShotObjectDetectionOutput[]|ZeroShotObjectDetectionOutput[][]>} An array of objects containing the predicted labels, scores, and bounding boxes.\n * \n * @typedef {TextImagePipelineConstructorArgs & ZeroShotObjectDetectionPipelineCallback & Disposable} ZeroShotObjectDetectionPipelineType\n */\n\n/**\n * Zero-shot object detection pipeline. This pipeline predicts bounding boxes of\n * objects when you provide an image and a set of `candidate_labels`.\n * \n * **Example:** Zero-shot object detection w/ `Xenova/owlvit-base-patch32`.\n * ```javascript\n * const detector = await pipeline('zero-shot-object-detection', 'Xenova/owlvit-base-patch32');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/astronaut.png';\n * const candidate_labels = ['human face', 'rocket', 'helmet', 'american flag'];\n * const output = await detector(url, candidate_labels);\n * // [\n * //   {\n * //     score: 0.24392342567443848,\n * //     label: 'human face',\n * //     box: { xmin: 180, ymin: 67, xmax: 274, ymax: 175 }\n * //   },\n * //   {\n * //     score: 0.15129457414150238,\n * //     label: 'american flag',\n * //     box: { xmin: 0, ymin: 4, xmax: 106, ymax: 513 }\n * //   },\n * //   {\n * //     score: 0.13649864494800568,\n * //     label: 'helmet',\n * //     box: { xmin: 277, ymin: 337, xmax: 511, ymax: 511 }\n * //   },\n * //   {\n * //     score: 0.10262022167444229,\n * //     label: 'rocket',\n * //     box: { xmin: 352, ymin: -1, xmax: 463, ymax: 287 }\n * //   }\n * // ]\n * ```\n * \n * **Example:** Zero-shot object detection w/ `Xenova/owlvit-base-patch32` (returning top 4 matches and setting a threshold).\n * ```javascript\n * const detector = await pipeline('zero-shot-object-detection', 'Xenova/owlvit-base-patch32');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/beach.png';\n * const candidate_labels = ['hat', 'book', 'sunglasses', 'camera'];\n * const output = await detector(url, candidate_labels, { top_k: 4, threshold: 0.05 });\n * // [\n * //   {\n * //     score: 0.1606510728597641,\n * //     label: 'sunglasses',\n * //     box: { xmin: 347, ymin: 229, xmax: 429, ymax: 264 }\n * //   },\n * //   {\n * //     score: 0.08935828506946564,\n * //     label: 'hat',\n * //     box: { xmin: 38, ymin: 174, xmax: 258, ymax: 364 }\n * //   },\n * //   {\n * //     score: 0.08530698716640472,\n * //     label: 'camera',\n * //     box: { xmin: 187, ymin: 350, xmax: 260, ymax: 411 }\n * //   },\n * //   {\n * //     score: 0.08349756896495819,\n * //     label: 'book',\n * //     box: { xmin: 261, ymin: 280, xmax: 494, ymax: 425 }\n * //   }\n * // ]\n * ```\n */\nclass ZeroShotObjectDetectionPipeline extends (/** @type {new (options: TextImagePipelineConstructorArgs) => ZeroShotObjectDetectionPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new ZeroShotObjectDetectionPipeline.\n     * @param {TextImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ZeroShotObjectDetectionPipelineCallback} */\n    async _call(images, candidate_labels, {\n        threshold = 0.1,\n        top_k = null,\n        percentage = false,\n    } = {}) {\n\n        const isBatched = Array.isArray(images);\n        const preparedImages = await prepareImages(images);\n\n        // Run tokenization\n        const text_inputs = this.tokenizer(candidate_labels, {\n            padding: true,\n            truncation: true,\n        });\n\n        // Run processor\n        const model_inputs = await this.processor(preparedImages);\n\n        // Since non-maximum suppression is performed for exporting, we need to\n        // process each image separately. For more information, see:\n        // https://github.com/huggingface/optimum/blob/e3b7efb1257c011db907ef40ab340e795cc5684c/optimum/exporters/onnx/model_configs.py#L1028-L1032\n        const toReturn = [];\n        for (let i = 0; i < preparedImages.length; ++i) {\n            const image = preparedImages[i];\n            const imageSize = percentage ? null : [[image.height, image.width]];\n            const pixel_values = model_inputs.pixel_values[i].unsqueeze_(0);\n\n            // Run model with both text and pixel inputs\n            const output = await this.model({ ...text_inputs, pixel_values });\n\n            let result;\n            if ('post_process_grounded_object_detection' in this.processor) {\n                // @ts-ignore\n                const processed = this.processor.post_process_grounded_object_detection(\n                    output,\n                    text_inputs.input_ids,\n                    {\n                        // TODO: support separate threshold values\n                        box_threshold: threshold,\n                        text_threshold: threshold,\n                        target_sizes: imageSize,\n                    },\n                )[0];\n                result = processed.boxes.map((box, i) => ({\n                    score: processed.scores[i],\n                    label: processed.labels[i],\n                    box: get_bounding_box(box, !percentage),\n                }))\n            } else {\n                // @ts-ignore\n                const processed = this.processor.image_processor.post_process_object_detection(output, threshold, imageSize, true)[0];\n                result = processed.boxes.map((box, i) => ({\n                    score: processed.scores[i],\n                    label: candidate_labels[processed.classes[i]],\n                    box: get_bounding_box(box, !percentage),\n                }))\n            }\n            result.sort((a, b) => b.score - a.score);\n\n            if (top_k !== null) {\n                result = result.slice(0, top_k);\n            }\n            toReturn.push(result)\n        }\n\n        return isBatched ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} DocumentQuestionAnsweringSingle\n * @property {string} answer The generated text.\n * @typedef {DocumentQuestionAnsweringSingle[]} DocumentQuestionAnsweringOutput\n * \n * @callback DocumentQuestionAnsweringPipelineCallback Answer the question given as input by using the document.\n * @param {ImageInput} image The image of the document to use.\n * @param {string} question A question to ask of the document.\n * @param {Partial<import('./generation/configuration_utils.js').GenerationConfig>} [options] Additional keyword arguments to pass along to the generate method of the model.\n * @returns {Promise<DocumentQuestionAnsweringOutput|DocumentQuestionAnsweringOutput[]>} An object (or array of objects) containing the answer(s).\n * \n * @typedef {TextImagePipelineConstructorArgs & DocumentQuestionAnsweringPipelineCallback & Disposable} DocumentQuestionAnsweringPipelineType\n */\n\n/**\n * Document Question Answering pipeline using any `AutoModelForDocumentQuestionAnswering`.\n * The inputs/outputs are similar to the (extractive) question answering pipeline; however,\n * the pipeline takes an image (and optional OCR'd words/boxes) as input instead of text context.\n * \n * **Example:** Answer questions about a document with `Xenova/donut-base-finetuned-docvqa`.\n * ```javascript\n * const qa_pipeline = await pipeline('document-question-answering', 'Xenova/donut-base-finetuned-docvqa');\n * const image = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/invoice.png';\n * const question = 'What is the invoice number?';\n * const output = await qa_pipeline(image, question);\n * // [{ answer: 'us-001' }]\n * ```\n */\nclass DocumentQuestionAnsweringPipeline extends (/** @type {new (options: TextImagePipelineConstructorArgs) => DocumentQuestionAnsweringPipelineType} */ (Pipeline)) {\n\n    /**\n     * Create a new DocumentQuestionAnsweringPipeline.\n     * @param {TextImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {DocumentQuestionAnsweringPipelineCallback} */\n    async _call(image, question, generate_kwargs = {}) {\n\n        // NOTE: For now, we only support a batch size of 1\n\n        // Preprocess image\n        const preparedImage = (await prepareImages(image))[0];\n        const { pixel_values } = await this.processor(preparedImage);\n\n        // Run tokenization\n        const task_prompt = `<s_docvqa><s_question>${question}</s_question><s_answer>`;\n        const decoder_input_ids = this.tokenizer(task_prompt, {\n            add_special_tokens: false,\n            padding: true,\n            truncation: true,\n        }).input_ids;\n\n        // Run model\n        const output = await this.model.generate({\n            inputs: pixel_values,\n            // @ts-expect-error TS2339\n            max_length: this.model.config.decoder.max_position_embeddings,\n            decoder_input_ids,\n            ...generate_kwargs,\n        });\n\n        // Decode output\n        const decoded = this.tokenizer.batch_decode(/** @type {Tensor} */(output))[0];\n\n        // Parse answer\n        const match = decoded.match(/<s_answer>(.*?)<\\/s_answer>/);\n        let answer = null;\n        if (match && match.length >= 2) {\n            answer = match[1].trim();\n        }\n        return [{ answer }];\n    }\n}\n\n\n/**\n * @typedef {Object} VocoderOptions\n * @property {PreTrainedModel} [vocoder] The vocoder used by the pipeline (if the model uses one). If not provided, use the default HifiGan vocoder.\n * @typedef {TextAudioPipelineConstructorArgs & VocoderOptions} TextToAudioPipelineConstructorArgs\n */\n\n/**\n * @typedef {Object} TextToAudioOutput\n * @property {Float32Array} audio The generated audio waveform.\n * @property {number} sampling_rate The sampling rate of the generated audio waveform.\n * \n * @typedef {Object} TextToAudioPipelineOptions Parameters specific to text-to-audio pipelines.\n * @property {Tensor|Float32Array|string|URL} [speaker_embeddings=null] The speaker embeddings (if the model requires it).\n * \n * @callback TextToAudioPipelineCallback Generates speech/audio from the inputs.\n * @param {string|string[]} texts The text(s) to generate.\n * @param {TextToAudioPipelineOptions} options Parameters passed to the model generation/forward method.\n * @returns {Promise<TextToAudioOutput>} An object containing the generated audio and sampling rate.\n * \n * @typedef {TextToAudioPipelineConstructorArgs & TextToAudioPipelineCallback & Disposable} TextToAudioPipelineType\n */\n\n/**\n * Text-to-audio generation pipeline using any `AutoModelForTextToWaveform` or `AutoModelForTextToSpectrogram`.\n * This pipeline generates an audio file from an input text and optional other conditional inputs.\n * \n * **Example:** Generate audio from text with `Xenova/speecht5_tts`.\n * ```javascript\n * const synthesizer = await pipeline('text-to-speech', 'Xenova/speecht5_tts', { quantized: false });\n * const speaker_embeddings = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/speaker_embeddings.bin';\n * const out = await synthesizer('Hello, my dog is cute', { speaker_embeddings });\n * // RawAudio {\n * //   audio: Float32Array(26112) [-0.00005657337896991521, 0.00020583874720614403, ...],\n * //   sampling_rate: 16000\n * // }\n * ```\n * \n * You can then save the audio to a .wav file with the `wavefile` package:\n * ```javascript\n * import wavefile from 'wavefile';\n * import fs from 'fs';\n * \n * const wav = new wavefile.WaveFile();\n * wav.fromScratch(1, out.sampling_rate, '32f', out.audio);\n * fs.writeFileSync('out.wav', wav.toBuffer());\n * ```\n * \n * **Example:** Multilingual speech generation with `Xenova/mms-tts-fra`. See [here](https://huggingface.co/models?pipeline_tag=text-to-speech&other=vits&sort=trending) for the full list of available languages (1107).\n * ```javascript\n * const synthesizer = await pipeline('text-to-speech', 'Xenova/mms-tts-fra');\n * const out = await synthesizer('Bonjour');\n * // RawAudio {\n * //   audio: Float32Array(23808) [-0.00037693005288019776, 0.0003325853613205254, ...],\n * //   sampling_rate: 16000\n * // }\n * ```\n */\nclass TextToAudioPipeline extends (/** @type {new (options: TextToAudioPipelineConstructorArgs) => TextToAudioPipelineType} */ (Pipeline)) {\n    DEFAULT_VOCODER_ID = \"Xenova/speecht5_hifigan\"\n\n    /**\n     * Create a new TextToAudioPipeline.\n     * @param {TextToAudioPipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n\n        // TODO: Find a better way for `pipeline` to set the default vocoder\n        this.vocoder = options.vocoder ?? null;\n    }\n\n\n    /** @type {TextToAudioPipelineCallback} */\n    async _call(text_inputs, {\n        speaker_embeddings = null,\n    } = {}) {\n\n        // If this.processor is not set, we are using a `AutoModelForTextToWaveform` model\n        if (this.processor) {\n            return this._call_text_to_spectrogram(text_inputs, { speaker_embeddings });\n        } else {\n            return this._call_text_to_waveform(text_inputs);\n        }\n    }\n\n    async _call_text_to_waveform(text_inputs) {\n\n        // Run tokenization\n        const inputs = this.tokenizer(text_inputs, {\n            padding: true,\n            truncation: true,\n        });\n\n        // Generate waveform\n        const { waveform } = await this.model(inputs);\n\n        // @ts-expect-error TS2339\n        const sampling_rate = this.model.config.sampling_rate;\n        return new _utils_audio_js__WEBPACK_IMPORTED_MODULE_7__.RawAudio(\n            waveform.data,\n            sampling_rate,\n        )\n    }\n\n    async _call_text_to_spectrogram(text_inputs, { speaker_embeddings }) {\n\n        // Load vocoder, if not provided\n        if (!this.vocoder) {\n            console.log('No vocoder specified, using default HifiGan vocoder.');\n            this.vocoder = await _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID, { dtype: 'fp32' });\n        }\n\n        // Load speaker embeddings as Float32Array from path/URL\n        if (typeof speaker_embeddings === 'string' || speaker_embeddings instanceof URL) {\n            // Load from URL with fetch\n            speaker_embeddings = new Float32Array(\n                await (await fetch(speaker_embeddings)).arrayBuffer()\n            );\n        }\n\n        if (speaker_embeddings instanceof Float32Array) {\n            speaker_embeddings = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor(\n                'float32',\n                speaker_embeddings,\n                [1, speaker_embeddings.length]\n            )\n        } else if (!(speaker_embeddings instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor)) {\n            throw new Error(\"Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.\")\n        }\n\n        // Run tokenization\n        const { input_ids } = this.tokenizer(text_inputs, {\n            padding: true,\n            truncation: true,\n        });\n\n        // NOTE: At this point, we are guaranteed that `speaker_embeddings` is a `Tensor`\n        // @ts-ignore\n        const { waveform } = await this.model.generate_speech(input_ids, speaker_embeddings, { vocoder: this.vocoder });\n\n        const sampling_rate = this.processor.feature_extractor.config.sampling_rate;\n        return new _utils_audio_js__WEBPACK_IMPORTED_MODULE_7__.RawAudio(\n            waveform.data,\n            sampling_rate,\n        )\n    }\n}\n\n/**\n * @callback ImageToImagePipelineCallback Transform the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The images to transform.\n * @returns {Promise<RawImage|RawImage[]>} The transformed image or list of images.\n * \n * @typedef {ImagePipelineConstructorArgs & ImageToImagePipelineCallback & Disposable} ImageToImagePipelineType\n */\n\n/**\n * Image to Image pipeline using any `AutoModelForImageToImage`. This pipeline generates an image based on a previous image input.\n * \n * **Example:** Super-resolution w/ `Xenova/swin2SR-classical-sr-x2-64`\n * ```javascript\n * const upscaler = await pipeline('image-to-image', 'Xenova/swin2SR-classical-sr-x2-64');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/butterfly.jpg';\n * const output = await upscaler(url);\n * // RawImage {\n * //   data: Uint8Array(786432) [ 41, 31, 24,  43, ... ],\n * //   width: 512,\n * //   height: 512,\n * //   channels: 3\n * // }\n * ```\n */\nclass ImageToImagePipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => ImageToImagePipelineType} */ (Pipeline)) {\n    /**\n     * Create a new ImageToImagePipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {ImageToImagePipelineCallback} */\n    async _call(images) {\n\n        const preparedImages = await prepareImages(images);\n        const inputs = await this.processor(preparedImages);\n        const outputs = await this.model(inputs);\n\n        /** @type {RawImage[]} */\n        const toReturn = [];\n        for (const batch of outputs.reconstruction) {\n            const output = batch.squeeze().clamp_(0, 1).mul_(255).round_().to('uint8');\n            toReturn.push(_utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage.fromTensor(output));\n        }\n\n        return toReturn.length > 1 ? toReturn : toReturn[0];\n    }\n}\n\n/**\n * @typedef {Object} DepthEstimationPipelineOutput\n * @property {Tensor} predicted_depth The raw depth map predicted by the model.\n * @property {RawImage} depth The processed depth map as an image (with the same size as the input image).\n * \n * @callback DepthEstimationPipelineCallback Predicts the depth for the image(s) passed as inputs.\n * @param {ImagePipelineInputs} images The images to compute depth for.\n * @returns {Promise<DepthEstimationPipelineOutput|DepthEstimationPipelineOutput[]>} An image or a list of images containing result(s).\n * \n * @typedef {ImagePipelineConstructorArgs & DepthEstimationPipelineCallback & Disposable} DepthEstimationPipelineType\n */\n\n/**\n * Depth estimation pipeline using any `AutoModelForDepthEstimation`. This pipeline predicts the depth of an image.\n * \n * **Example:** Depth estimation w/ `Xenova/dpt-hybrid-midas`\n * ```javascript\n * const depth_estimator = await pipeline('depth-estimation', 'Xenova/dpt-hybrid-midas');\n * const url = 'https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg';\n * const out = await depth_estimator(url);\n * // {\n * //   predicted_depth: Tensor {\n * //     dims: [ 384, 384 ],\n * //     type: 'float32',\n * //     data: Float32Array(147456) [ 542.859130859375, 545.2833862304688, 546.1649169921875, ... ],\n * //     size: 147456\n * //   },\n * //   depth: RawImage {\n * //     data: Uint8Array(307200) [ 86, 86, 86, ... ],\n * //     width: 640,\n * //     height: 480,\n * //     channels: 1\n * //   }\n * // }\n * ```\n */\nclass DepthEstimationPipeline extends (/** @type {new (options: ImagePipelineConstructorArgs) => DepthEstimationPipelineType} */ (Pipeline)) {\n    /**\n     * Create a new DepthEstimationPipeline.\n     * @param {ImagePipelineConstructorArgs} options An object used to instantiate the pipeline.\n     */\n    constructor(options) {\n        super(options);\n    }\n\n    /** @type {DepthEstimationPipelineCallback} */\n    async _call(images) {\n\n        const preparedImages = await prepareImages(images);\n\n        const inputs = await this.processor(preparedImages);\n        const { predicted_depth } = await this.model(inputs);\n\n        const toReturn = [];\n        for (let i = 0; i < preparedImages.length; ++i) {\n            const batch = predicted_depth[i];\n            const [height, width] = batch.dims.slice(-2);\n            const [new_width, new_height] = preparedImages[i].size;\n\n            // Interpolate to original size\n            const prediction = (await (0,_utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.interpolate_4d)(batch.view(1, 1, height, width), {\n                size: [new_height, new_width],\n                mode: 'bilinear',\n            })).view(new_height, new_width);\n\n            const minval = /** @type {number} */(prediction.min().item());\n            const maxval = /** @type {number} */(prediction.max().item());\n            const formatted = prediction.sub(minval).div_(maxval - minval).mul_(255).to('uint8').unsqueeze(0);\n            const depth = _utils_image_js__WEBPACK_IMPORTED_MODULE_9__.RawImage.fromTensor(formatted);\n            toReturn.push({\n                predicted_depth: prediction,\n                depth,\n            });\n        }\n\n        return toReturn.length > 1 ? toReturn : toReturn[0];\n    }\n}\n\nconst SUPPORTED_TASKS = Object.freeze({\n    \"text-classification\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": TextClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSequenceClassification,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"distilbert-base-uncased-finetuned-sst-2-english\",\n            \"model\": \"Xenova/distilbert-base-uncased-finetuned-sst-2-english\",\n        },\n        \"type\": \"text\",\n    },\n    \"token-classification\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": TokenClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForTokenClassification,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"Davlan/bert-base-multilingual-cased-ner-hrl\",\n            \"model\": \"Xenova/bert-base-multilingual-cased-ner-hrl\",\n        },\n        \"type\": \"text\",\n    },\n    \"question-answering\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": QuestionAnsweringPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForQuestionAnswering,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"distilbert-base-cased-distilled-squad\",\n            \"model\": \"Xenova/distilbert-base-cased-distilled-squad\",\n        },\n        \"type\": \"text\",\n    },\n\n    \"fill-mask\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": FillMaskPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForMaskedLM,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"bert-base-uncased\",\n            \"model\": \"Xenova/bert-base-uncased\",\n        },\n        \"type\": \"text\",\n    },\n    \"summarization\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": SummarizationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSeq2SeqLM,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"sshleifer/distilbart-cnn-6-6\",\n            \"model\": \"Xenova/distilbart-cnn-6-6\",\n        },\n        \"type\": \"text\",\n    },\n    \"translation\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": TranslationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSeq2SeqLM,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"t5-small\",\n            \"model\": \"Xenova/t5-small\",\n        },\n        \"type\": \"text\",\n    },\n    \"text2text-generation\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": Text2TextGenerationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSeq2SeqLM,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"google/flan-t5-small\",\n            \"model\": \"Xenova/flan-t5-small\",\n        },\n        \"type\": \"text\",\n    },\n    \"text-generation\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": TextGenerationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForCausalLM,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"gpt2\",\n            \"model\": \"Xenova/gpt2\",\n        },\n        \"type\": \"text\",\n    },\n    \"zero-shot-classification\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": ZeroShotClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSequenceClassification,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"typeform/distilbert-base-uncased-mnli\",\n            \"model\": \"Xenova/distilbert-base-uncased-mnli\",\n        },\n        \"type\": \"text\",\n    },\n    \"audio-classification\": {\n        \"pipeline\": AudioClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForAudioClassification,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"superb/wav2vec2-base-superb-ks\",\n            \"model\": \"Xenova/wav2vec2-base-superb-ks\",\n        },\n        \"type\": \"audio\",\n    },\n    \"zero-shot-audio-classification\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": ZeroShotAudioClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModel,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"laion/clap-htsat-fused\",\n            \"model\": \"Xenova/clap-htsat-unfused\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"automatic-speech-recognition\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": AutomaticSpeechRecognitionPipeline,\n        \"model\": [_models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSpeechSeq2Seq, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForCTC],\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"openai/whisper-tiny.en\",\n            \"model\": \"Xenova/whisper-tiny.en\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"text-to-audio\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": TextToAudioPipeline,\n        \"model\": [_models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForTextToWaveform, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForTextToSpectrogram],\n        \"processor\": [_models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor, /* Some don't use a processor */ null],\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"microsoft/speecht5_tts\",\n            \"model\": \"Xenova/speecht5_tts\",\n        },\n        \"type\": \"text\",\n    },\n    \"image-to-text\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": ImageToTextPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForVision2Seq,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"nlpconnect/vit-gpt2-image-captioning\",\n            \"model\": \"Xenova/vit-gpt2-image-captioning\",\n        },\n        \"type\": \"multimodal\",\n    },\n\n    \"image-classification\": {\n        // no tokenizer\n        \"pipeline\": ImageClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForImageClassification,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"google/vit-base-patch16-224\",\n            \"model\": \"Xenova/vit-base-patch16-224\",\n        },\n        \"type\": \"multimodal\",\n    },\n\n    \"image-segmentation\": {\n        // no tokenizer\n        \"pipeline\": ImageSegmentationPipeline,\n        \"model\": [_models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForImageSegmentation, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSemanticSegmentation, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForUniversalSegmentation],\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"facebook/detr-resnet-50-panoptic\",\n            \"model\": \"Xenova/detr-resnet-50-panoptic\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"background-removal\": {\n        // no tokenizer\n        \"pipeline\": BackgroundRemovalPipeline,\n        \"model\": [_models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForImageSegmentation, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForSemanticSegmentation, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForUniversalSegmentation],\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            \"model\": \"Xenova/modnet\",\n        },\n        \"type\": \"image\",\n    },\n\n    \"zero-shot-image-classification\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": ZeroShotImageClassificationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModel,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"openai/clip-vit-base-patch32\",\n            \"model\": \"Xenova/clip-vit-base-patch32\",\n        },\n        \"type\": \"multimodal\",\n    },\n\n    \"object-detection\": {\n        // no tokenizer\n        \"pipeline\": ObjectDetectionPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForObjectDetection,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"facebook/detr-resnet-50\",\n            \"model\": \"Xenova/detr-resnet-50\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"zero-shot-object-detection\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": ZeroShotObjectDetectionPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForZeroShotObjectDetection,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"google/owlvit-base-patch32\",\n            \"model\": \"Xenova/owlvit-base-patch32\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"document-question-answering\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": DocumentQuestionAnsweringPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForDocumentQuestionAnswering,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"naver-clova-ix/donut-base-finetuned-docvqa\",\n            \"model\": \"Xenova/donut-base-finetuned-docvqa\",\n        },\n        \"type\": \"multimodal\",\n    },\n    \"image-to-image\": {\n        // no tokenizer\n        \"pipeline\": ImageToImagePipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForImageToImage,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"caidas/swin2SR-classical-sr-x2-64\",\n            \"model\": \"Xenova/swin2SR-classical-sr-x2-64\",\n        },\n        \"type\": \"image\",\n    },\n    \"depth-estimation\": {\n        // no tokenizer\n        \"pipeline\": DepthEstimationPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForDepthEstimation,\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"Intel/dpt-large\",\n            \"model\": \"Xenova/dpt-large\",\n        },\n        \"type\": \"image\",\n    },\n\n    // This task serves as a useful interface for dealing with sentence-transformers (https://huggingface.co/sentence-transformers).\n    \"feature-extraction\": {\n        \"tokenizer\": _tokenizers_js__WEBPACK_IMPORTED_MODULE_0__.AutoTokenizer,\n        \"pipeline\": FeatureExtractionPipeline,\n        \"model\": _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModel,\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"sentence-transformers/all-MiniLM-L6-v2\",\n            \"model\": \"Xenova/all-MiniLM-L6-v2\",\n        },\n        \"type\": \"text\",\n    },\n    \"image-feature-extraction\": {\n        \"processor\": _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_2__.AutoProcessor,\n        \"pipeline\": ImageFeatureExtractionPipeline,\n        \"model\": [_models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModelForImageFeatureExtraction, _models_js__WEBPACK_IMPORTED_MODULE_1__.AutoModel],\n        \"default\": {\n            // TODO: replace with original\n            // \"model\": \"google/vit-base-patch16-224\",\n            \"model\": \"Xenova/vit-base-patch16-224-in21k\",\n        },\n        \"type\": \"image\",\n    },\n})\n\n\n// TODO: Add types for TASK_ALIASES\nconst TASK_ALIASES = Object.freeze({\n    \"sentiment-analysis\": \"text-classification\",\n    \"ner\": \"token-classification\",\n    // \"vqa\": \"visual-question-answering\", // TODO: Add\n    \"asr\": \"automatic-speech-recognition\",\n    \"text-to-speech\": \"text-to-audio\",\n\n    // Add for backwards compatibility\n    \"embeddings\": \"feature-extraction\",\n});\n\n/**\n * @typedef {keyof typeof SUPPORTED_TASKS} TaskType\n * @typedef {keyof typeof TASK_ALIASES} AliasType\n * @typedef {TaskType | AliasType} PipelineType All possible pipeline types.\n * @typedef {{[K in TaskType]: InstanceType<typeof SUPPORTED_TASKS[K][\"pipeline\"]>}} SupportedTasks A mapping of pipeline names to their corresponding pipeline classes.\n * @typedef {{[K in AliasType]: InstanceType<typeof SUPPORTED_TASKS[TASK_ALIASES[K]][\"pipeline\"]>}} AliasTasks A mapping from pipeline aliases to their corresponding pipeline classes.\n * @typedef {SupportedTasks & AliasTasks} AllTasks A mapping from all pipeline names and aliases to their corresponding pipeline classes.\n */\n\n/**\n * Utility factory method to build a `Pipeline` object.\n * \n * @template {PipelineType} T The type of pipeline to return.\n * @param {T} task The task defining which pipeline will be returned. Currently accepted tasks are:\n *  - `\"audio-classification\"`: will return a `AudioClassificationPipeline`.\n *  - `\"automatic-speech-recognition\"`: will return a `AutomaticSpeechRecognitionPipeline`.\n *  - `\"depth-estimation\"`: will return a `DepthEstimationPipeline`.\n *  - `\"document-question-answering\"`: will return a `DocumentQuestionAnsweringPipeline`.\n *  - `\"feature-extraction\"`: will return a `FeatureExtractionPipeline`.\n *  - `\"fill-mask\"`: will return a `FillMaskPipeline`.\n *  - `\"image-classification\"`: will return a `ImageClassificationPipeline`.\n *  - `\"image-segmentation\"`: will return a `ImageSegmentationPipeline`.\n *  - `\"image-to-text\"`: will return a `ImageToTextPipeline`.\n *  - `\"object-detection\"`: will return a `ObjectDetectionPipeline`.\n *  - `\"question-answering\"`: will return a `QuestionAnsweringPipeline`.\n *  - `\"summarization\"`: will return a `SummarizationPipeline`.\n *  - `\"text2text-generation\"`: will return a `Text2TextGenerationPipeline`.\n *  - `\"text-classification\"` (alias \"sentiment-analysis\" available): will return a `TextClassificationPipeline`.\n *  - `\"text-generation\"`: will return a `TextGenerationPipeline`.\n *  - `\"token-classification\"` (alias \"ner\" available): will return a `TokenClassificationPipeline`.\n *  - `\"translation\"`: will return a `TranslationPipeline`.\n *  - `\"translation_xx_to_yy\"`: will return a `TranslationPipeline`.\n *  - `\"zero-shot-classification\"`: will return a `ZeroShotClassificationPipeline`.\n *  - `\"zero-shot-audio-classification\"`: will return a `ZeroShotAudioClassificationPipeline`.\n *  - `\"zero-shot-image-classification\"`: will return a `ZeroShotImageClassificationPipeline`.\n *  - `\"zero-shot-object-detection\"`: will return a `ZeroShotObjectDetectionPipeline`.\n * @param {string} [model=null] The name of the pre-trained model to use. If not specified, the default model for the task will be used.\n * @param {import('./utils/hub.js').PretrainedModelOptions} [options] Optional parameters for the pipeline.\n * @returns {Promise<AllTasks[T]>} A Pipeline object for the specified task.\n * @throws {Error} If an unsupported pipeline is requested.\n */\nasync function pipeline(\n    task,\n    model = null,\n    {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n        device = null,\n        dtype = null,\n        subfolder = 'onnx',\n        use_external_data_format = null,\n        model_file_name = null,\n        session_options = {},\n    } = {}\n) {\n    // Helper method to construct pipeline\n\n    // Apply aliases\n    // @ts-ignore\n    task = TASK_ALIASES[task] ?? task;\n\n    // Get pipeline info\n    const pipelineInfo = SUPPORTED_TASKS[task.split('_', 1)[0]];\n    if (!pipelineInfo) {\n        throw Error(`Unsupported pipeline: ${task}. Must be one of [${Object.keys(SUPPORTED_TASKS)}]`)\n    }\n\n    // Use model if specified, otherwise, use default\n    if (!model) {\n        model = pipelineInfo.default.model\n        console.log(`No model specified. Using default model: \"${model}\".`);\n    }\n\n    const pretrainedOptions = {\n        progress_callback,\n        config,\n        cache_dir,\n        local_files_only,\n        revision,\n        device,\n        dtype,\n        subfolder,\n        use_external_data_format,\n        model_file_name,\n        session_options,\n    }\n\n    const classes = new Map([\n        ['tokenizer', pipelineInfo.tokenizer],\n        ['model', pipelineInfo.model],\n        ['processor', pipelineInfo.processor],\n    ]);\n\n    // Load model, tokenizer, and processor (if they exist)\n    const results = await loadItems(classes, model, pretrainedOptions);\n    results.task = task;\n\n    (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_5__.dispatchCallback)(progress_callback, {\n        'status': 'ready',\n        'task': task,\n        'model': model,\n    });\n\n    const pipelineClass = pipelineInfo.pipeline;\n    return new pipelineClass(results);\n}\n\n\n/**\n * Helper function to get applicable model, tokenizer, or processor classes for a given model.\n * @param {Map<string, any>} mapping The mapping of names to classes, arrays of classes, or null.\n * @param {string} model The name of the model to load.\n * @param {import('./utils/hub.js').PretrainedOptions} pretrainedOptions The options to pass to the `from_pretrained` method.\n * @private\n */\nasync function loadItems(mapping, model, pretrainedOptions) {\n\n    const result = Object.create(null);\n\n    /**@type {Promise[]} */\n    const promises = [];\n    for (const [name, cls] of mapping.entries()) {\n        if (!cls) continue;\n\n        /**@type {Promise} */\n        let promise;\n        if (Array.isArray(cls)) {\n            promise = new Promise(async (resolve, reject) => {\n                let e;\n                for (const c of cls) {\n                    if (c === null) {\n                        // If null, we resolve it immediately, meaning the relevant\n                        // class was not found, but it is optional.\n                        resolve(null);\n                        return;\n                    }\n                    try {\n                        resolve(await c.from_pretrained(model, pretrainedOptions));\n                        return;\n                    } catch (err) {\n                        if (err.message?.includes('Unsupported model type')) {\n                            // If the error is due to an unsupported model type, we\n                            // save the error and try the next class.\n                            e = err;\n                        } else if (err.message?.includes('Could not locate file')) {\n                            e = err;\n                        } else {\n                            reject(err);\n                            return;\n                        }\n\n                    }\n                }\n                reject(e);\n            })\n        } else {\n            promise = cls.from_pretrained(model, pretrainedOptions);\n        }\n\n        result[name] = promise;\n        promises.push(promise);\n    }\n\n    // Wait for all promises to resolve (in parallel)\n    await Promise.all(promises);\n\n    // Then assign to result\n    for (const [name, promise] of Object.entries(result)) {\n        result[name] = await promise;\n    }\n\n    return result;\n}\n\n\n/***/ }),\n\n/***/ \"./src/tokenizers.js\":\n/*!***************************!*\\\n  !*** ./src/tokenizers.js ***!\n  \\***************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlbertTokenizer: () => (/* binding */ AlbertTokenizer),\n/* harmony export */   AutoTokenizer: () => (/* binding */ AutoTokenizer),\n/* harmony export */   BartTokenizer: () => (/* binding */ BartTokenizer),\n/* harmony export */   BertTokenizer: () => (/* binding */ BertTokenizer),\n/* harmony export */   BlenderbotSmallTokenizer: () => (/* binding */ BlenderbotSmallTokenizer),\n/* harmony export */   BlenderbotTokenizer: () => (/* binding */ BlenderbotTokenizer),\n/* harmony export */   BloomTokenizer: () => (/* binding */ BloomTokenizer),\n/* harmony export */   CLIPTokenizer: () => (/* binding */ CLIPTokenizer),\n/* harmony export */   CamembertTokenizer: () => (/* binding */ CamembertTokenizer),\n/* harmony export */   CodeGenTokenizer: () => (/* binding */ CodeGenTokenizer),\n/* harmony export */   CodeLlamaTokenizer: () => (/* binding */ CodeLlamaTokenizer),\n/* harmony export */   CohereTokenizer: () => (/* binding */ CohereTokenizer),\n/* harmony export */   ConvBertTokenizer: () => (/* binding */ ConvBertTokenizer),\n/* harmony export */   DebertaTokenizer: () => (/* binding */ DebertaTokenizer),\n/* harmony export */   DebertaV2Tokenizer: () => (/* binding */ DebertaV2Tokenizer),\n/* harmony export */   DistilBertTokenizer: () => (/* binding */ DistilBertTokenizer),\n/* harmony export */   ElectraTokenizer: () => (/* binding */ ElectraTokenizer),\n/* harmony export */   EsmTokenizer: () => (/* binding */ EsmTokenizer),\n/* harmony export */   FalconTokenizer: () => (/* binding */ FalconTokenizer),\n/* harmony export */   GPT2Tokenizer: () => (/* binding */ GPT2Tokenizer),\n/* harmony export */   GPTNeoXTokenizer: () => (/* binding */ GPTNeoXTokenizer),\n/* harmony export */   GemmaTokenizer: () => (/* binding */ GemmaTokenizer),\n/* harmony export */   Grok1Tokenizer: () => (/* binding */ Grok1Tokenizer),\n/* harmony export */   HerbertTokenizer: () => (/* binding */ HerbertTokenizer),\n/* harmony export */   LlamaTokenizer: () => (/* binding */ LlamaTokenizer),\n/* harmony export */   M2M100Tokenizer: () => (/* binding */ M2M100Tokenizer),\n/* harmony export */   MBart50Tokenizer: () => (/* binding */ MBart50Tokenizer),\n/* harmony export */   MBartTokenizer: () => (/* binding */ MBartTokenizer),\n/* harmony export */   MPNetTokenizer: () => (/* binding */ MPNetTokenizer),\n/* harmony export */   MarianTokenizer: () => (/* binding */ MarianTokenizer),\n/* harmony export */   MgpstrTokenizer: () => (/* binding */ MgpstrTokenizer),\n/* harmony export */   MobileBertTokenizer: () => (/* binding */ MobileBertTokenizer),\n/* harmony export */   NllbTokenizer: () => (/* binding */ NllbTokenizer),\n/* harmony export */   NougatTokenizer: () => (/* binding */ NougatTokenizer),\n/* harmony export */   PreTrainedTokenizer: () => (/* binding */ PreTrainedTokenizer),\n/* harmony export */   Qwen2Tokenizer: () => (/* binding */ Qwen2Tokenizer),\n/* harmony export */   RoFormerTokenizer: () => (/* binding */ RoFormerTokenizer),\n/* harmony export */   RobertaTokenizer: () => (/* binding */ RobertaTokenizer),\n/* harmony export */   SiglipTokenizer: () => (/* binding */ SiglipTokenizer),\n/* harmony export */   SpeechT5Tokenizer: () => (/* binding */ SpeechT5Tokenizer),\n/* harmony export */   SqueezeBertTokenizer: () => (/* binding */ SqueezeBertTokenizer),\n/* harmony export */   T5Tokenizer: () => (/* binding */ T5Tokenizer),\n/* harmony export */   TokenizerModel: () => (/* binding */ TokenizerModel),\n/* harmony export */   VitsTokenizer: () => (/* binding */ VitsTokenizer),\n/* harmony export */   Wav2Vec2CTCTokenizer: () => (/* binding */ Wav2Vec2CTCTokenizer),\n/* harmony export */   WhisperTokenizer: () => (/* binding */ WhisperTokenizer),\n/* harmony export */   XLMRobertaTokenizer: () => (/* binding */ XLMRobertaTokenizer),\n/* harmony export */   XLMTokenizer: () => (/* binding */ XLMTokenizer),\n/* harmony export */   is_chinese_char: () => (/* binding */ is_chinese_char)\n/* harmony export */ });\n/* harmony import */ var _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/generic.js */ \"./src/utils/generic.js\");\n/* harmony import */ var _utils_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _utils_hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_data_structures_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/data-structures.js */ \"./src/utils/data-structures.js\");\n/* harmony import */ var _huggingface_jinja__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @huggingface/jinja */ \"./node_modules/@huggingface/jinja/dist/index.js\");\n/* harmony import */ var _models_whisper_common_whisper_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models/whisper/common_whisper.js */ \"./src/models/whisper/common_whisper.js\");\n\n/**\n * @file Tokenizers are used to prepare textual inputs for a model.\n * \n * **Example:** Create an `AutoTokenizer` and use it to tokenize a sentence.\n * This will automatically detect the tokenizer type based on the tokenizer class defined in `tokenizer.json`.\n * ```javascript\n * import { AutoTokenizer } from '@huggingface/transformers';\n * \n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/bert-base-uncased');\n * const { input_ids } = await tokenizer('I love transformers!');\n * // Tensor {\n * //   data: BigInt64Array(6) [101n, 1045n, 2293n, 19081n, 999n, 102n],\n * //   dims: [1, 6],\n * //   type: 'int64',\n * //   size: 6,\n * // }\n * ```\n * \n * @module tokenizers\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {Object} TokenizerProperties Additional tokenizer-specific properties.\n * @property {boolean} [legacy=false] Whether or not the `legacy` behavior of the tokenizer should be used.\n * @typedef {import('./utils/hub.js').PretrainedOptions & TokenizerProperties} PretrainedTokenizerOptions\n */\n\n/**\n * Loads a tokenizer from the specified path.\n * @param {string} pretrained_model_name_or_path The path to the tokenizer directory.\n * @param {PretrainedTokenizerOptions} options Additional options for loading the tokenizer.\n * @returns {Promise<any[]>} A promise that resolves with information about the loaded tokenizer.\n */\nasync function loadTokenizer(pretrained_model_name_or_path, options) {\n\n    const info = await Promise.all([\n        (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_2__.getModelJSON)(pretrained_model_name_or_path, 'tokenizer.json', true, options),\n        (0,_utils_hub_js__WEBPACK_IMPORTED_MODULE_2__.getModelJSON)(pretrained_model_name_or_path, 'tokenizer_config.json', true, options),\n    ])\n\n    // Override legacy option if `options.legacy` is not null\n    if (options.legacy !== null) {\n        info[1].legacy = options.legacy;\n    }\n    return info;\n}\n\n\n/**\n * Helper function to split a string on a regex, but keep the delimiters.\n * This is required, because the JavaScript `.split()` method does not keep the delimiters,\n * and wrapping in a capturing group causes issues with existing capturing groups (due to nesting).\n * @param {string} text The text to split.\n * @param {RegExp} regex The regex to split on.\n * @returns {string[]} The split string.\n */\nfunction regexSplit(text, regex) {\n    const result = [];\n    let prev = 0;\n    for (const match of text.matchAll(regex)) {\n        const fullMatch = match[0];\n        if (prev < match.index) {\n            result.push(text.slice(prev, match.index));\n        }\n        if (fullMatch.length > 0) {\n            result.push(fullMatch);\n        }\n        prev = match.index + fullMatch.length;\n    }\n    if (prev < text.length) {\n        result.push(text.slice(prev));\n    }\n    return result;\n}\n\n\n/**\n * Helper method to construct a pattern from a config object.\n * @param {Object} pattern The pattern object.\n * @param {boolean} invert Whether to invert the pattern.\n * @returns {RegExp|null} The compiled pattern.\n */\nfunction createPattern(pattern, invert = true) {\n\n    if (pattern.Regex !== undefined) {\n        // In certain cases, the pattern may contain unnecessary escape sequences (e.g., \\# or \\& or \\~).\n        // i.e., valid in Python (where the patterns are exported from) but invalid in JavaScript (where the patterns are parsed).\n        // This isn't an issue when creating the regex w/o the 'u' flag, but it is when the 'u' flag is used.\n        // For this reason, it is necessary to remove these backslashes before creating the regex.\n        // See https://stackoverflow.com/a/63007777/13989043 for more information\n        let regex = pattern.Regex.replace(/\\\\([#&~])/g, '$1'); // TODO: add more characters to this list if necessary\n\n        // We also handle special cases where the regex contains invalid (non-JS compatible) syntax.\n        for (const [key, value] of PROBLEMATIC_REGEX_MAP) {\n            regex = regex.replaceAll(key, value);\n        }\n\n        return new RegExp(regex, 'gu');\n\n    } else if (pattern.String !== undefined) {\n        const escaped = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.escapeRegExp)(pattern.String);\n        // NOTE: if invert is true, we wrap the pattern in a group so that it is kept when performing .split()\n        return new RegExp(invert ? escaped : `(${escaped})`, 'gu');\n\n    } else {\n        console.warn('Unknown pattern type:', pattern)\n        return null;\n    }\n}\n\n/**\n * Helper function to convert an Object to a Map\n * @param {Object} obj The object to convert.\n * @returns {Map<string, any>} The map.\n */\nfunction objectToMap(obj) {\n    return new Map(Object.entries(obj));\n}\n\n/**\n * Helper function to convert a tensor to a list before decoding.\n * @param {Tensor} tensor The tensor to convert.\n * @returns {number[]} The tensor as a list.\n */\nfunction prepareTensorForDecode(tensor) {\n    const dims = tensor.dims;\n    switch (dims.length) {\n        case 1:\n            return tensor.tolist();\n        case 2:\n            if (dims[0] !== 1) {\n                throw new Error('Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.');\n            }\n            return tensor.tolist()[0];\n        default:\n            throw new Error(`Expected tensor to have 1-2 dimensions, got ${dims.length}.`)\n    }\n}\n\n/**\n * Clean up a list of simple English tokenization artifacts like spaces before punctuations and abbreviated forms\n * @param {string} text The text to clean up.\n * @returns {string} The cleaned up text.\n */\nfunction clean_up_tokenization(text) {\n    // Clean up a list of simple English tokenization artifacts\n    // like spaces before punctuations and abbreviated forms\n    return text.replace(/ \\./g, '.')\n        .replace(/ \\?/g, '?')\n        .replace(/ \\!/g, '!')\n        .replace(/ ,/g, ',')\n        .replace(/ \\' /g, \"'\")\n        .replace(/ n\\'t/g, \"n't\")\n        .replace(/ \\'m/g, \"'m\")\n        .replace(/ \\'s/g, \"'s\")\n        .replace(/ \\'ve/g, \"'ve\")\n        .replace(/ \\'re/g, \"'re\");\n}\n\n/**\n * Helper function to remove accents from a string.\n * @param {string} text The text to remove accents from.\n * @returns {string} The text with accents removed.\n */\nfunction remove_accents(text) {\n    return text.replace(/\\p{M}/gu, '');\n}\n\n/**\n * Helper function to lowercase a string and remove accents.\n * @param {string} text The text to lowercase and remove accents from.\n * @returns {string} The lowercased text with accents removed.\n */\nfunction lowercase_and_remove_accent(text) {\n    return remove_accents(text.toLowerCase());\n}\n\n\n/**\n * Checks whether the given Unicode codepoint represents a CJK (Chinese, Japanese, or Korean) character.\n *\n * A \"chinese character\" is defined as anything in the CJK Unicode block:\n * https://en.wikipedia.org/wiki/CJK_Unified_Ideographs_(Unicode_block)\n *\n * Note that the CJK Unicode block is NOT all Japanese and Korean characters, despite its name.\n * The modern Korean Hangul alphabet is a different block, as is Japanese Hiragana and Katakana.\n * Those alphabets are used to write space-separated words, so they are not treated specially\n * and are handled like all other languages.\n *\n * @param {number|bigint} cp The Unicode codepoint to check.\n * @returns {boolean} True if the codepoint represents a CJK character, false otherwise.\n */\nfunction is_chinese_char(cp) {\n    return (\n        (cp >= 0x4E00 && cp <= 0x9FFF)\n        || (cp >= 0x3400 && cp <= 0x4DBF)\n        || (cp >= 0x20000 && cp <= 0x2A6DF)\n        || (cp >= 0x2A700 && cp <= 0x2B73F)\n        || (cp >= 0x2B740 && cp <= 0x2B81F)\n        || (cp >= 0x2B820 && cp <= 0x2CEAF)\n        || (cp >= 0xF900 && cp <= 0xFAFF)\n        || (cp >= 0x2F800 && cp <= 0x2FA1F)\n    )\n}\n\n/**\n * Helper function to fuse consecutive unknown tokens.\n * @param {string[]} arr The list of input tokens\n * @param {Map<string, any>} tokens_to_ids The mapping from tokens to token ids.\n * @param {number} unk_token_id The value to fuse on.\n * @private\n */\nfunction fuse_unk(arr, tokens_to_ids, unk_token_id) {\n    const fused = [];\n    let i = 0;\n    while (i < arr.length) {\n        fused.push(arr[i])\n        if ((tokens_to_ids.get(arr[i]) ?? unk_token_id) !== unk_token_id) {\n            ++i;\n            continue;\n        }\n\n        while (++i < arr.length && (tokens_to_ids.get(arr[i]) ?? unk_token_id) === unk_token_id) {\n            if (tokens_to_ids.get(fused.at(-1)) !== unk_token_id) {\n                fused[fused.length - 1] += arr[i];\n            }\n        }\n    }\n\n    return fused;\n}\n\n/**\n * Split a string on whitespace.\n * @param {string} text The text to split.\n * @returns {string[]} The split string.\n */\nfunction whitespace_split(text) {\n    return text.match(/\\S+/g) || [];\n}\n\nconst PUNCTUATION_REGEX = '\\\\p{P}\\\\u0021-\\\\u002F\\\\u003A-\\\\u0040\\\\u005B-\\\\u0060\\\\u007B-\\\\u007E';\nconst PUNCTUATION_ONLY_REGEX = new RegExp(`^[${PUNCTUATION_REGEX}]+$`, 'gu');\nconst BLOOM_SPLIT_CHARS = '.,!?\\u2026\\u3002\\uff0c\\u3001\\u0964\\u06d4\\u060c';\n\n// A mapping of regex patterns to their equivalent (but possibly longer) JS-compatible versions.\nconst PROBLEMATIC_REGEX_MAP = new Map([\n    // This uses the case insensitive group modifier, which is not supported in JavaScript.\n    // When parsing the regex, an \"Invalid group\" error is thrown.\n    [\"(?i:'s|'t|'re|'ve|'m|'ll|'d)\", \"(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))\"],\n\n    // Used to override the default (invalid) regex of the bloom pretokenizer.\n    // For more information, see https://github.com/huggingface/transformers.js/issues/94\n    [` ?[^(\\\\s|[${BLOOM_SPLIT_CHARS}])]+`, ` ?[^\\\\s${BLOOM_SPLIT_CHARS}]+`],\n])\n\n\n/**\n * Represent a token added by the user on top of the existing Model vocabulary.\n * AddedToken can be configured to specify the behavior they should have in various situations like:\n *   - Whether they should only match single words\n *   - Whether to include any whitespace on its left or right\n */\nclass AddedToken {\n    /**\n     * Creates a new instance of AddedToken.\n     * @param {Object} config Added token configuration object.\n     * @param {string} config.content The content of the added token.\n     * @param {number} config.id The id of the added token.\n     * @param {boolean} [config.single_word=false] Whether this token must be a single word or can break words.\n     * @param {boolean} [config.lstrip=false] Whether this token should strip whitespaces on its left.\n     * @param {boolean} [config.rstrip=false] Whether this token should strip whitespaces on its right.\n     * @param {boolean} [config.normalized=false] Whether this token should be normalized.\n     * @param {boolean} [config.special=false] Whether this token is special.\n     */\n    constructor(config) {\n        this.content = config.content;\n        this.id = config.id;\n        this.single_word = config.single_word ?? false;\n        this.lstrip = config.lstrip ?? false;\n        this.rstrip = config.rstrip ?? false;\n        this.special = config.special ?? false;\n        this.normalized = config.normalized ?? null;\n    }\n}\n\n/**\n * Abstract base class for tokenizer models.\n *\n * @extends Callable\n */\nclass TokenizerModel extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * Creates a new instance of TokenizerModel.\n     * @param {Object} config The configuration object for the TokenizerModel.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n\n        /** @type {string[]} */\n        this.vocab = [];\n\n        /**\n         * A mapping of tokens to ids.\n         * @type {Map<string, number>}\n         */\n        this.tokens_to_ids = new Map();\n\n        this.unk_token_id = undefined;\n        this.unk_token = undefined;\n        this.end_of_word_suffix = undefined;\n\n        /** @type {boolean} Whether to fuse unknown tokens when encoding. Defaults to false. */\n        this.fuse_unk = this.config.fuse_unk ?? false;\n    }\n\n    /**\n     * Instantiates a new TokenizerModel instance based on the configuration object provided.\n     * @param {Object} config The configuration object for the TokenizerModel.\n     * @param {...*} args Optional arguments to pass to the specific TokenizerModel constructor.\n     * @returns {TokenizerModel} A new instance of a TokenizerModel.\n     * @throws Will throw an error if the TokenizerModel type in the config is not recognized.\n     */\n    static fromConfig(config, ...args) {\n        switch (config.type) {\n            case 'WordPiece':\n                return new WordPieceTokenizer(config);\n            case 'Unigram':\n                // @ts-ignore\n                return new Unigram(config, ...args);\n            case 'BPE':\n                return new BPE(config);\n\n            default:\n                // Some older tokenizers, like `google-t5/t5-small` and `distilbert/distilbert-base-uncased`, do not have a `type` field.\n                // In this case, we can infer the tokenizer type based on the structure of the `vocab` field and other properties.\n                if (config.vocab) {\n                    if (Array.isArray(config.vocab)) {\n                        // config.vocab is of type `[string, number][]`\n                        // @ts-ignore\n                        return new Unigram(config, ...args);\n                    } else if (typeof config.vocab === 'object' && config.continuing_subword_prefix && config.unk_token) {\n                        return new WordPieceTokenizer(config);\n                    } else {\n                        // @ts-ignore\n                        return new LegacyTokenizerModel(config, ...args);\n                    }\n                }\n                throw new Error(`Unknown TokenizerModel type: ${config.type}`);\n        }\n    }\n\n    /**\n     * Internal function to call the TokenizerModel instance.\n     * @param {string[]} tokens The tokens to encode.\n     * @returns {string[]} The encoded tokens.\n     */\n    _call(tokens) {\n        tokens = this.encode(tokens);\n        if (this.fuse_unk) {\n            // Fuse unknown tokens\n            tokens = fuse_unk(tokens, this.tokens_to_ids, this.unk_token_id);\n        }\n        return tokens;\n    }\n\n    /**\n     * Encodes a list of tokens into a list of token IDs.\n     * @param {string[]} tokens The tokens to encode.\n     * @returns {string[]} The encoded tokens.\n     * @throws Will throw an error if not implemented in a subclass.\n     */\n    encode(tokens) {\n        throw Error(\"encode should be implemented in subclass.\")\n    }\n\n    /**\n     * Converts a list of tokens into a list of token IDs.\n     * @param {string[]} tokens The tokens to convert.\n     * @returns {number[]} The converted token IDs.\n     */\n    convert_tokens_to_ids(tokens) {\n        return tokens.map(t => this.tokens_to_ids.get(t) ?? this.unk_token_id);\n    }\n\n    /**\n     * Converts a list of token IDs into a list of tokens.\n     * @param {number[]|bigint[]} ids The token IDs to convert.\n     * @returns {string[]} The converted tokens.\n     */\n    convert_ids_to_tokens(ids) {\n        return ids.map(i => this.vocab[i] ?? this.unk_token);\n    }\n}\n\n/**\n * A subclass of TokenizerModel that uses WordPiece encoding to encode tokens.\n * @extends TokenizerModel\n */\nclass WordPieceTokenizer extends TokenizerModel {\n    /**\n     * @param {Object} config The configuration object.\n     * @param {Object} config.vocab A mapping of tokens to ids.\n     * @param {string} config.unk_token The unknown token string.\n     * @param {string} config.continuing_subword_prefix The prefix to use for continuing subwords.\n     * @param {number} [config.max_input_chars_per_word=100] The maximum number of characters per word.\n     */\n    constructor(config) {\n        super(config);\n        /**\n         * A mapping of tokens to ids.\n         * @type {Map<string, number>}\n         */\n        this.tokens_to_ids = objectToMap(config.vocab);\n\n        /**\n         * The id of the unknown token.\n         * @type {number}\n         */\n        this.unk_token_id = this.tokens_to_ids.get(config.unk_token);\n\n        /**\n         * The unknown token string.\n         * @type {string}\n         */\n        this.unk_token = config.unk_token;\n\n        /**\n         * The maximum number of characters allowed per word.\n         * @type {number}\n         */\n        this.max_input_chars_per_word = config.max_input_chars_per_word ?? 100;\n\n        /**\n         * An array of tokens.\n         * @type {string[]}\n         */\n        this.vocab = new Array(this.tokens_to_ids.size);\n        for (const [key, value] of this.tokens_to_ids) {\n            this.vocab[value] = key;\n        }\n    }\n\n    /**\n     * Encodes an array of tokens using WordPiece encoding.\n     * @param {string[]} tokens The tokens to encode.\n     * @returns {string[]} An array of encoded tokens.\n     */\n    encode(tokens) {\n        const outputTokens = [];\n        for (const token of tokens) {\n            const chars = [...token];\n            if (chars.length > this.max_input_chars_per_word) {\n                outputTokens.push(this.unk_token);\n                continue;\n            }\n\n            let isUnknown = false;\n            let start = 0;\n            const subTokens = [];\n\n            while (start < chars.length) {\n                let end = chars.length;\n                let currentSubstring = null;\n                while (start < end) {\n                    let substr = chars.slice(start, end).join('');\n\n                    if (start > 0) {\n                        substr = this.config.continuing_subword_prefix + substr;\n                    }\n                    if (this.tokens_to_ids.has(substr)) {\n                        currentSubstring = substr;\n                        break;\n                    }\n\n                    --end;\n                }\n                if (currentSubstring === null) {\n                    isUnknown = true;\n                    break;\n                }\n                subTokens.push(currentSubstring);\n                start = end;\n            }\n            if (isUnknown) {\n                outputTokens.push(this.unk_token);\n            } else {\n                outputTokens.push(...subTokens);\n            }\n        }\n\n        return outputTokens;\n    }\n\n}\n\n/**\n * Class representing a Unigram tokenizer model.\n * @extends TokenizerModel\n */\nclass Unigram extends TokenizerModel {\n    /**\n     * Create a new Unigram tokenizer model.\n     * @param {Object} config The configuration object for the Unigram model.\n     * @param {number} config.unk_id The ID of the unknown token\n     * @param {[string, number][]} config.vocab A 2D array representing a mapping of tokens to scores.\n     * @param {Object} moreConfig Additional configuration object for the Unigram model.\n     */\n    constructor(config, moreConfig) {\n        super(config);\n\n        const vocabSize = config.vocab.length;\n        this.vocab = new Array(vocabSize);\n        /** @type {number[]} */\n        this.scores = new Array(vocabSize);\n        for (let i = 0; i < vocabSize; ++i) {\n            [this.vocab[i], this.scores[i]] = config.vocab[i];\n        }\n\n        this.unk_token_id = config.unk_id;\n        this.unk_token = this.vocab[config.unk_id];\n\n        this.tokens_to_ids = new Map(this.vocab.map((x, i) => [x, i]));\n        this.bos_token = ' '; // beginning of a sentence token\n\n        this.bos_token_id = this.tokens_to_ids.get(this.bos_token); // NOTE: may be undefined\n        this.eos_token = moreConfig.eos_token;\n\n        this.eos_token_id = this.tokens_to_ids.get(this.eos_token);\n        this.unk_token = this.vocab[this.unk_token_id];\n\n        this.minScore = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.min)(this.scores)[0];\n\n        this.unk_score = this.minScore - 10.0;\n        this.scores[this.unk_token_id] = this.unk_score;\n\n        this.trie = new _utils_data_structures_js__WEBPACK_IMPORTED_MODULE_5__.CharTrie();\n        this.trie.extend(this.vocab);\n\n        // NOTE: `fuse_unk` is hardcoded to true for Unigram models\n        // See: https://github.com/huggingface/tokenizers/blob/b58227c7f1ccf8b73ee2268354336da56d91e492/tokenizers/src/models/unigram/model.rs#L119\n        this.fuse_unk = true;\n    }\n\n    /**\n     * Populates lattice nodes.\n     * @param {TokenLattice} lattice The token lattice to populate with nodes.\n     */\n    populateNodes(lattice) {\n        const chars = lattice.chars;\n        const mblen = 1;\n        let beginPos = 0;\n        while (beginPos < chars.length) {\n            let hasSingleNode = false;\n\n            const tokens = [];\n            const sliced = chars.slice(beginPos).join('');\n            const prefixedTokens = this.trie.commonPrefixSearch(sliced);\n            for (const token of prefixedTokens) {\n                tokens.push(token);\n                const tokenId = this.tokens_to_ids.get(token);\n                const tokenScore = this.scores[tokenId];\n                const n = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.len)(token);\n                lattice.insert(beginPos, n, tokenScore, tokenId);\n                if (!hasSingleNode && n === mblen) {\n                    hasSingleNode = true;\n                }\n            }\n            if (!hasSingleNode) {\n                lattice.insert(beginPos, mblen, this.unk_score, this.unk_token_id);\n            }\n            beginPos += mblen;\n        }\n    }\n\n    /**\n     * Encodes an array of tokens into an array of subtokens using the unigram model.\n     *\n     * @param {string} normalized The normalized string.\n     * @returns {string[]} An array of subtokens obtained by encoding the input tokens using the unigram model.\n     */\n    tokenize(normalized) {\n        const lattice = new _utils_data_structures_js__WEBPACK_IMPORTED_MODULE_5__.TokenLattice(normalized, this.bos_token_id, this.eos_token_id);\n        this.populateNodes(lattice);\n        return lattice.tokens();\n    }\n\n    /**\n     * Encodes an array of tokens using Unigram encoding.\n     * @param {string[]} tokens The tokens to encode.\n     * @returns {string[]} An array of encoded tokens.\n     */\n    encode(tokens) {\n        const toReturn = [];\n        for (const token of tokens) {\n            const tokenized = this.tokenize(token);\n            toReturn.push(...tokenized);\n        }\n        return toReturn;\n    }\n\n}\n\n/**\n * Returns list of utf-8 byte and a mapping to unicode strings.\n * Specifically avoids mapping to whitespace/control characters the BPE code barfs on.\n * @returns {Object} Object with utf-8 byte keys and unicode string values.\n */\nconst BYTES_TO_UNICODE = (() => {\n    // Returns list of utf-8 byte and a mapping to unicode strings.\n    // We specifically avoids mapping to whitespace/control characters\n    // the bpe code barfs on.\n\n    const bs = [\n        ...Array.from({ length: \"~\".charCodeAt(0) - \"!\".charCodeAt(0) + 1 }, (_, i) => i + \"!\".charCodeAt(0)),\n        ...Array.from({ length: \"¬\".charCodeAt(0) - \"¡\".charCodeAt(0) + 1 }, (_, i) => i + \"¡\".charCodeAt(0)),\n        ...Array.from({ length: \"ÿ\".charCodeAt(0) - \"®\".charCodeAt(0) + 1 }, (_, i) => i + \"®\".charCodeAt(0)),\n    ];\n    const cs = bs.slice();\n    let n = 0;\n    for (let b = 0; b < 256; ++b) {\n        if (!bs.includes(b)) {\n            bs.push(b);\n            cs.push(256 + n);\n            n += 1;\n        }\n    }\n    const ccs = cs.map(n => String.fromCharCode(n));\n    return Object.fromEntries(bs.map((b, i) => [b, ccs[i]]));\n})();\n\nconst UNICODE_TO_BYTES = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.reverseDictionary)(BYTES_TO_UNICODE);\n\n\n/**\n * @typedef {Object} BPENode\n * @property {string} token The token associated with the node\n * @property {number} bias A positional bias for the node.\n * @property {number} [score] The score of the node.\n * @property {BPENode} [prev] The previous node in the linked list.\n * @property {BPENode} [next] The next node in the linked list.\n */\n\n/**\n * BPE class for encoding text into Byte-Pair-Encoding (BPE) tokens.\n * @extends TokenizerModel\n */\nclass BPE extends TokenizerModel {\n    /**\n     * Create a BPE instance.\n     * @param {Object} config The configuration object for BPE.\n     * @param {Object} config.vocab A mapping of tokens to ids.\n     * @param {string[]|[string, string][]} config.merges An array of BPE merges as strings.\n     * @param {string} config.unk_token The unknown token used for out of vocabulary words.\n     * @param {string} config.end_of_word_suffix The suffix to place at the end of each word.\n     * @param {string} [config.continuing_subword_suffix] The suffix to insert between words.\n     * @param {boolean} [config.byte_fallback=false] Whether to use spm byte-fallback trick (defaults to False)\n     * @param {boolean} [config.ignore_merges=false] Whether or not to match tokens with the vocab before using merges.\n     */\n    constructor(config) {\n        super(config);\n\n        /** @type {Map<string, number>} */\n        this.tokens_to_ids = objectToMap(config.vocab);\n\n        this.unk_token_id = this.tokens_to_ids.get(config.unk_token);\n        this.unk_token = config.unk_token;\n\n        this.vocab = new Array(this.tokens_to_ids.size);\n        for (const [key, value] of this.tokens_to_ids) {\n            this.vocab[value] = key;\n        }\n\n        // Tokenizers >= 0.20.0 serializes BPE merges as a [string, string][] instead of a string[],\n        // which resolves the ambiguity for merges containing spaces.\n        const use_new_merge_format = Array.isArray(config.merges[0]);\n\n        /** @type {[string, string][]} */\n        this.merges = use_new_merge_format\n            ? /** @type {[string, string][]} */(config.merges)\n            : (/** @type {string[]} */(config.merges)).map(x => /** @type {[string, string]} */(x.split(' ', 2)));\n        this.bpe_ranks = new Map(this.merges.map((x, i) => [JSON.stringify(x), i]));\n\n        this.end_of_word_suffix = config.end_of_word_suffix;\n\n        // NOTE: `continuing_subword_suffix` is custom (to support `BlenderbotSmallTokenizer`)\n        this.continuing_subword_suffix = config.continuing_subword_suffix ?? null;\n\n        this.byte_fallback = this.config.byte_fallback ?? false;\n\n        if (this.byte_fallback) {\n            this.text_encoder = new TextEncoder();\n        }\n\n        this.ignore_merges = this.config.ignore_merges ?? false;\n\n        /** @type {Map<string, string[]>} */\n        this.cache = new Map();\n    }\n\n    /**\n     * Apply Byte-Pair-Encoding (BPE) to a given token. Efficient heap-based priority\n     * queue implementation adapted from https://github.com/belladoreai/llama-tokenizer-js.\n     * @param {string} token The token to encode.\n     * @returns {string[]} The BPE encoded tokens.\n     */\n    bpe(token) {\n        if (token.length === 0) {\n            return [];\n        }\n\n        const cached = this.cache.get(token);\n        if (cached !== undefined) {\n            return cached;\n        }\n\n        const word = Array.from(token);\n        if (this.end_of_word_suffix) {\n            word[word.length - 1] += this.end_of_word_suffix;\n        }\n\n        let result = [];\n        if (word.length > 1) {\n            // Create a priority queue to store the nodes that will be merged.\n            // The comparator function compares the scores of the nodes.\n            const queue = new _utils_data_structures_js__WEBPACK_IMPORTED_MODULE_5__.PriorityQueue((a, b) => a.score < b.score);\n\n            // Construct a doubly-linked list of nodes that will be inserted into the priority queue,\n            // starting with the individual characters. We also populate each node with a positional\n            // bias to break ties in the priority queue.\n            let startingNode = {\n                token: word[0],\n                bias: 0,\n                prev: null,\n                next: null,\n            }\n\n            let previousNode = startingNode\n            for (let i = 1; i < word.length; ++i) {\n                const currentNode = {\n                    bias: i / word.length, // Add fractional component to break ties\n                    token: word[i],\n                    prev: previousNode,\n                    next: null,\n                }\n                previousNode.next = currentNode\n                this._add_node(queue, previousNode)\n                previousNode = currentNode\n            }\n\n            while (!queue.isEmpty()) {\n                // Get the next node with the highest priority\n                const node = queue.pop();\n\n                // Check that this merge is still possible\n                if (node.deleted || !node.next || node.next.deleted) continue;\n\n                // Here, we mark the current node (left side of the merge) and the next node (right side of the merge) as deleted.\n                // This is because they will both be replaced by a new node representing the merge result.\n                node.deleted = true;\n                node.next.deleted = true;\n\n                // Next, we fix the node that comes before the current node (i.e., left side of the merge).\n                if (node.prev) {\n\n                    // Make a shallow copy of the previous node\n                    const newPreviousNode = { ...node.prev };\n\n                    // Mark the old previous node as deleted. This avoids erroneous merges later,\n                    // because there may still be references to this node in the priority queue.\n                    node.prev.deleted = true;\n                    node.prev = newPreviousNode;\n\n                    // Update the reference of the previous node, by pointing its previous node to this new previous node.\n                    if (newPreviousNode.prev) {\n                        newPreviousNode.prev.next = newPreviousNode;\n                    } else {\n                        // If the previous of the previous node does not exist, it means that\n                        // `newPreviousNode` must be the new `startingNode`.\n                        startingNode = newPreviousNode;\n                    }\n                }\n\n                // Create a new node which represents the result of the merge.\n                const merged = {\n                    token: node.token + node.next.token,\n                    bias: node.bias,\n                    prev: node.prev,\n                    next: node.next.next,\n                }\n\n                // We now consider where we can add the new merged node to the priority queue:\n                // 1. prev <-> merged\n                if (merged.prev) {\n                    merged.prev.next = merged;\n                    this._add_node(queue, merged.prev);\n                } else {\n                    // If `merged.prev` does not exist, then `merged` must be the new `startingNode`.\n                    startingNode = merged;\n                }\n\n                // 2. merged <-> next\n                if (merged.next) {\n                    merged.next.prev = merged;\n                    this._add_node(queue, merged);\n                }\n            }\n\n            // Traverse the linked list, starting from the `startingNode`, and collect the tokens.\n            for (let currentNode = startingNode; currentNode !== null; currentNode = currentNode.next) {\n                result.push(currentNode.token);\n            }\n        } else {\n            result = word;\n        }\n\n        // Possibly append suffix\n        if (this.continuing_subword_suffix) {\n            // Do not append suffix to the last token\n            for (let i = 0; i < result.length - 1; ++i) {\n                result[i] += this.continuing_subword_suffix;\n            }\n        }\n\n        // Save the result to the cache\n        this.cache.set(token, result);\n\n        return result;\n    }\n\n\n    /**\n     * Helper function to add a node to the priority queue.\n     * @param {PriorityQueue} queue \n     * @param {BPENode} node\n     * @private\n     */\n    _add_node(queue, node) {\n        // `score` is a measure of the merge priority: lower means higher priority\n        // We use the BPE rank as a measure of priority (i.e., the local of the merge in the merges list)\n        // We also add a fractional component to the score to break ties (with the earlier character having higher priority)\n        const rank = this.bpe_ranks.get(JSON.stringify([node.token, node.next.token]));\n        if (rank !== undefined) {\n            node.score = rank + node.bias;\n            queue.push(node);\n        }\n    }\n\n    /**\n     * Encodes the input sequence of tokens using the BPE algorithm and returns the resulting subword tokens.\n     * @param {string[]} tokens The input sequence of tokens to encode.\n     * @returns {string[]} The resulting subword tokens after applying the BPE algorithm to the input sequence of tokens.\n     */\n    encode(tokens) {\n        const outputTokens = [];\n\n        for (const token of tokens) {\n            if (this.ignore_merges && this.tokens_to_ids.has(token)) {\n                outputTokens.push(token);\n                continue;\n            }\n            const bpe_token_list = this.bpe(token);\n\n            for (const t of bpe_token_list) {\n                if (this.tokens_to_ids.has(t)) {\n                    outputTokens.push(t);\n                } else if (this.byte_fallback) {\n                    const byteTokens = Array.from(this.text_encoder.encode(t))\n                        .map(x => `<0x${x.toString(16).toUpperCase().padStart(2, '0')}>`);\n                    if (byteTokens.every(x => this.tokens_to_ids.has(x))) {\n                        // Ensure the byte tokens are actually in the vocabulary, otherwise\n                        // we fall back to the unknown token. For more information, see\n                        // https://github.com/huggingface/transformers/issues/28096.\n                        outputTokens.push(...byteTokens);\n                    } else {\n                        outputTokens.push(this.unk_token);\n                    }\n                } else {\n                    outputTokens.push(this.unk_token);\n                }\n            }\n        }\n\n        return outputTokens;\n    }\n\n}\n\n/**\n * Legacy tokenizer class for tokenizers with only a vocabulary.\n */\nclass LegacyTokenizerModel extends TokenizerModel {\n    /**\n     * Create a LegacyTokenizerModel instance.\n     * @param {Object} config The configuration object for LegacyTokenizerModel.\n     * @param {Object} config.vocab A (possibly nested) mapping of tokens to ids.\n     * @param {Object} moreConfig Additional configuration object for the LegacyTokenizerModel model.\n     */\n    constructor(config, moreConfig) {\n        super(config);\n\n        /**@type {Map<string, number>} */\n        this.tokens_to_ids = objectToMap(\n            moreConfig.target_lang\n                ? config.vocab[moreConfig.target_lang]\n                : config.vocab\n        );\n\n        this.bos_token = moreConfig.bos_token;\n        this.bos_token_id = this.tokens_to_ids.get(this.bos_token);\n\n        this.eos_token = moreConfig.eos_token;\n        this.eos_token_id = this.tokens_to_ids.get(this.eos_token);\n\n        this.pad_token = moreConfig.pad_token;\n        this.pad_token_id = this.tokens_to_ids.get(this.pad_token);\n\n        this.unk_token = moreConfig.unk_token;\n        this.unk_token_id = this.tokens_to_ids.get(this.unk_token);\n\n        this.vocab = new Array(this.tokens_to_ids.size);\n        for (const [key, value] of this.tokens_to_ids) {\n            this.vocab[value] = key;\n        }\n    }\n\n    encode(tokens) {\n        return tokens;\n    }\n}\n\n\n/**\n * A base class for text normalization.\n * @abstract\n */\nclass Normalizer extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n     * @param {Object} config The configuration object for the normalizer.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n    }\n\n    /**\n     * Factory method for creating normalizers from config objects.\n     * @static\n     * @param {Object} config The configuration object for the normalizer.\n     * @returns {Normalizer} A Normalizer object.\n     * @throws {Error} If an unknown Normalizer type is specified in the config.\n     */\n    static fromConfig(config) {\n        if (config === null) return null;\n        switch (config.type) {\n            case 'BertNormalizer':\n                return new BertNormalizer(config);\n            case 'Precompiled':\n                return new Precompiled(config);\n            case 'Sequence':\n                return new NormalizerSequence(config);\n            case 'Replace':\n                return new Replace(config);\n            case 'NFC':\n                return new NFC(config);\n            case 'NFD':\n                return new NFD(config);\n            case 'NFKC':\n                return new NFKC(config);\n            case 'NFKD':\n                return new NFKD(config);\n            case 'Strip':\n                return new StripNormalizer(config);\n            case 'StripAccents':\n                return new StripAccents(config);\n            case 'Lowercase':\n                return new Lowercase(config);\n            case 'Prepend':\n                return new Prepend(config);\n            default:\n                throw new Error(`Unknown Normalizer type: ${config.type}`);\n        }\n    }\n\n    /**\n     * Normalize the input text.\n     * @abstract\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     * @throws {Error} If this method is not implemented in a subclass.\n     */\n    normalize(text) {\n        throw Error(\"normalize should be implemented in subclass.\")\n    }\n\n    /**\n     * Alias for {@link Normalizer#normalize}.\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     */\n    _call(text) {\n        return this.normalize(text);\n    }\n\n}\n\n/**\n * Replace normalizer that replaces occurrences of a pattern with a given string or regular expression.\n * @extends Normalizer\n */\nclass Replace extends Normalizer {\n    /**\n     * Normalize the input text by replacing the pattern with the content.\n     * @param {string} text The input text to be normalized.\n     * @returns {string} The normalized text after replacing the pattern with the content.\n     */\n    normalize(text) {\n        const pattern = createPattern(this.config.pattern);\n        return pattern === null\n            ? text\n            : text.replaceAll(pattern, this.config.content);\n    }\n}\n\n/**\n * A normalizer that applies Unicode normalization to the input text.\n * @extends Normalizer\n * @abstract\n */\nclass UnicodeNormalizer extends Normalizer {\n    /**\n     * @type {string} The Unicode normalization form to apply.\n     * Should be one of: 'NFC', 'NFD', 'NFKC', or 'NFKD'.\n     */\n    form = undefined;\n\n    /**\n     * Normalize the input text by applying Unicode normalization.\n     * @param {string} text The input text to be normalized.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        text = text.normalize(this.form)\n        return text;\n    }\n}\n\n/**\n * A normalizer that applies Unicode normalization form C (NFC) to the input text.\n * Canonical Decomposition, followed by Canonical Composition.\n * @extends UnicodeNormalizer\n */\nclass NFC extends UnicodeNormalizer {\n    form = 'NFC';\n}\n\n/**\n * A normalizer that applies Unicode normalization form D (NFD) to the input text.\n * Canonical Decomposition.\n * @extends UnicodeNormalizer\n */\nclass NFD extends UnicodeNormalizer {\n    form = 'NFD';\n}\n\n/**\n * A normalizer that applies Unicode normalization form KC (NFKC) to the input text.\n * Compatibility Decomposition, followed by Canonical Composition.\n * @extends UnicodeNormalizer\n */\nclass NFKC extends UnicodeNormalizer {\n    form = 'NFKC';\n}\n\n/**\n * A normalizer that applies Unicode normalization form KD (NFKD) to the input text.\n * Compatibility Decomposition.\n * @extends UnicodeNormalizer\n */\nclass NFKD extends UnicodeNormalizer {\n    form = 'NFKD';\n}\n\n/**\n * A normalizer that strips leading and/or trailing whitespace from the input text.\n */\nclass StripNormalizer extends Normalizer {\n    /**\n     * Strip leading and/or trailing whitespace from the input text.\n     * @param {string} text The input text.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        if (this.config.strip_left && this.config.strip_right) {\n            // Fast path to avoid an extra trim call\n            text = text.trim();\n        } else {\n            if (this.config.strip_left) {\n                text = text.trimStart();\n            }\n            if (this.config.strip_right) {\n                text = text.trimEnd();\n            }\n        }\n        return text;\n    }\n}\n\n/**\n * StripAccents normalizer removes all accents from the text.\n * @extends Normalizer\n */\nclass StripAccents extends Normalizer {\n    /**\n     * Remove all accents from the text.\n     * @param {string} text The input text.\n     * @returns {string} The normalized text without accents.\n     */\n    normalize(text) {\n        text = remove_accents(text);\n        return text;\n    }\n}\n\n/**\n * A Normalizer that lowercases the input string.\n * @extends Normalizer\n */\nclass Lowercase extends Normalizer {\n    /**\n     * Lowercases the input string.\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        text = text.toLowerCase();\n        return text;\n    }\n}\n\n/**\n * A Normalizer that prepends a string to the input string.\n * @extends Normalizer\n */\nclass Prepend extends Normalizer {\n    /**\n     * Prepends the input string.\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        text = this.config.prepend + text;\n        return text;\n    }\n}\n\n/**\n * A Normalizer that applies a sequence of Normalizers.\n * @extends Normalizer\n */\nclass NormalizerSequence extends Normalizer {\n    /**\n   * Create a new instance of NormalizerSequence.\n   * @param {Object} config The configuration object.\n   * @param {Object[]} config.normalizers An array of Normalizer configuration objects.\n   */\n    constructor(config) {\n        super(config);\n        this.normalizers = config.normalizers.map(x => Normalizer.fromConfig(x));\n    }\n    /**\n    * Apply a sequence of Normalizers to the input text.\n    * @param {string} text The text to normalize.\n    * @returns {string} The normalized text.\n    */\n    normalize(text) {\n        return this.normalizers.reduce((t, normalizer) => {\n            return normalizer.normalize(t);\n        }, text);\n    }\n}\n\n/**\n * A class representing a normalizer used in BERT tokenization.\n * @extends Normalizer\n */\nclass BertNormalizer extends Normalizer {\n    /**\n     * Adds whitespace around any CJK (Chinese, Japanese, or Korean) character in the input text.\n     *\n     * @param {string} text The input text to tokenize.\n     * @returns {string} The tokenized text with whitespace added around CJK characters.\n     */\n    _tokenize_chinese_chars(text) {\n        /* Adds whitespace around any CJK character. */\n        const output = [];\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            const cp = char.charCodeAt(0);\n            if (is_chinese_char(cp)) {\n                output.push(\" \");\n                output.push(char);\n                output.push(\" \");\n            } else {\n                output.push(char);\n            }\n        }\n        return output.join(\"\");\n    }\n\n    /**\n     * Strips accents from the given text.\n     * @param {string} text The text to strip accents from.\n     * @returns {string} The text with accents removed.\n     */\n    stripAccents(text) {\n        // \"Mark, Nonspacing\" (Mn)\n        return text.normalize('NFD').replace(/\\p{Mn}/gu, '');\n    }\n\n\n    /**\n     * Checks whether `char` is a control character.\n     * @param {string} char The character to check.\n     * @returns {boolean} Whether `char` is a control character.\n     * @private\n     */\n    _is_control(char) {\n        switch (char) {\n            case '\\t':\n            case '\\n':\n            case '\\r':\n                // These are technically control characters but we count them as whitespace characters.\n                return false;\n\n            default:\n                // Check if unicode category starts with C:\n                // Cc - Control\n                // Cf - Format\n                // Co - Private Use\n                // Cs - Surrogate\n                return /^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$/u.test(char);\n        }\n    }\n\n    /**\n     * Performs invalid character removal and whitespace cleanup on text.\n     * @param {string} text The text to clean.\n     * @returns {string} The cleaned text.\n     * @private\n     */\n    _clean_text(text) {\n        const output = [];\n        for (const char of text) {\n            const cp = char.charCodeAt(0);\n            if (cp === 0 || cp === 0xFFFD || this._is_control(char)) {\n                continue;\n            }\n            if (/^\\s$/.test(char)) { // is whitespace\n                output.push(\" \");\n            } else {\n                output.push(char);\n            }\n        }\n        return output.join(\"\");\n    }\n    /**\n     * Normalizes the given text based on the configuration.\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        if (this.config.clean_text) {\n            text = this._clean_text(text);\n        }\n\n        if (this.config.handle_chinese_chars) {\n            text = this._tokenize_chinese_chars(text);\n        }\n\n        if (this.config.lowercase) {\n            text = text.toLowerCase();\n\n            if (this.config.strip_accents !== false) {\n                text = this.stripAccents(text);\n            }\n        } else if (this.config.strip_accents) {\n            text = this.stripAccents(text);\n        }\n\n        return text;\n    }\n}\n\n/**\n * A callable class representing a pre-tokenizer used in tokenization. Subclasses\n * should implement the `pre_tokenize_text` method to define the specific pre-tokenization logic.\n * @extends Callable\n */\nclass PreTokenizer extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    /**\n   * Factory method that returns an instance of a subclass of `PreTokenizer` based on the provided configuration.\n   *\n   * @static\n   * @param {Object} config A configuration object for the pre-tokenizer.\n   * @returns {PreTokenizer} An instance of a subclass of `PreTokenizer`.\n   * @throws {Error} If the provided configuration object does not correspond to any known pre-tokenizer.\n   */\n    static fromConfig(config) {\n        if (config === null) return null;\n\n        switch (config.type) {\n            case 'BertPreTokenizer':\n                return new BertPreTokenizer(config);\n            case 'Sequence':\n                return new PreTokenizerSequence(config);\n            case 'Whitespace':\n                return new WhitespacePreTokenizer(config);\n            case 'WhitespaceSplit':\n                return new WhitespaceSplit(config);\n            case 'Metaspace':\n                return new MetaspacePreTokenizer(config);\n\n            case 'ByteLevel':\n                return new ByteLevelPreTokenizer(config);\n            case 'Split':\n                return new SplitPreTokenizer(config);\n            case 'Punctuation':\n                return new PunctuationPreTokenizer(config);\n            case 'Digits':\n                return new DigitsPreTokenizer(config);\n            case 'Replace':\n                return new ReplacePreTokenizer(config);\n            default:\n                throw new Error(`Unknown PreTokenizer type: ${config.type}`);\n        }\n    }\n\n    /**\n     * Method that should be implemented by subclasses to define the specific pre-tokenization logic.\n     *\n     * @abstract\n     * @param {string} text The text to pre-tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} The pre-tokenized text.\n     * @throws {Error} If the method is not implemented in the subclass.\n     */\n    pre_tokenize_text(text, options) {\n        throw Error(\"pre_tokenize_text should be implemented in subclass.\")\n    }\n\n    /**\n     * Tokenizes the given text into pre-tokens.\n     * @param {string|string[]} text The text or array of texts to pre-tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of pre-tokens.\n     */\n    pre_tokenize(text, options) {\n        return (Array.isArray(text)\n            ? text.map(x => this.pre_tokenize_text(x, options))\n            : this.pre_tokenize_text(text, options)\n        ).flat();\n    }\n\n    /**\n     * Alias for {@link PreTokenizer#pre_tokenize}.\n     * @param {string|string[]} text The text or array of texts to pre-tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of pre-tokens.\n     */\n    _call(text, options) {\n        return this.pre_tokenize(text, options);\n    }\n}\n\n/**\n * @extends PreTokenizer\n */\nclass BertPreTokenizer extends PreTokenizer {\n    /**\n     * A PreTokenizer that splits text into wordpieces using a basic tokenization scheme\n     * similar to that used in the original implementation of BERT.\n     * \n     * @param {Object} config The configuration object.\n     */\n    constructor(config) {\n        super();\n        // Construct a pattern which matches the rust implementation:\n        // https://github.com/huggingface/tokenizers/blob/b4fcc9ce6e4ad5806e82826f816acfdfdc4fcc67/tokenizers/src/pre_tokenizers/bert.rs#L11\n        // Equivalent to removing whitespace and splitting on punctuation (both \\p{P} and other ascii characters)\n        this.pattern = new RegExp(`[^\\\\s${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]`, 'gu');\n    }\n    /**\n     * Tokenizes a single text using the BERT pre-tokenization scheme.\n     * \n     * @param {string} text The text to tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens.\n     */\n    pre_tokenize_text(text, options) {\n        return text.trim().match(this.pattern) || [];\n    }\n}\n\n/**\n * A pre-tokenizer that splits text into Byte-Pair-Encoding (BPE) subwords.\n * @extends PreTokenizer\n */\nclass ByteLevelPreTokenizer extends PreTokenizer {\n    /**\n     * Creates a new instance of the `ByteLevelPreTokenizer` class.\n     * @param {Object} config The configuration object.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n\n        /**\n         * @type {boolean} Whether to add a leading space to the first word.\n         * This allows to treat the leading word just as any other word.\n         */\n        this.add_prefix_space = this.config.add_prefix_space;\n\n        /**\n         * @type {boolean} Whether the post processing step should trim offsets\n         * to avoid including whitespaces.\n         * @todo Use this in the pretokenization step.\n         */\n        this.trim_offsets = this.config.trim_offsets;\n\n        /**\n         * @type {boolean} Whether to use the standard GPT2 regex for whitespace splitting.\n         * Set it to False if you want to use your own splitting. Defaults to true.\n         */\n        this.use_regex = this.config.use_regex ?? true;\n        this.pattern = /'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+/gu;\n\n        this.byte_encoder = BYTES_TO_UNICODE;\n        this.text_encoder = new TextEncoder();\n    }\n\n    /**\n     * Tokenizes a single piece of text using byte-level tokenization.\n     * @param {string} text The text to tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens.\n     */\n    pre_tokenize_text(text, options) {\n        // Add a leading space if the option is enabled\n        if (this.add_prefix_space && !text.startsWith(' ')) {\n            text = ' ' + text;\n        }\n\n        // Split on whitespace and punctuation\n        const tokens = this.use_regex ? (text.match(this.pattern) || []) : [text];\n\n        // Maps all our bytes to unicode strings, avoiding control tokens of the BPE (spaces in our case)\n        return tokens.map(\n            token => Array.from(this.text_encoder.encode(token), byte => this.byte_encoder[byte]).join('')\n        );\n    }\n}\n\n/**\n * @typedef {'removed'|'isolated'|'mergedWithPrevious'|'mergedWithNext'|'contiguous'} SplitDelimiterBehavior\n */\n\n/**\n * Splits text using a given pattern.\n * @extends PreTokenizer\n */\nclass SplitPreTokenizer extends PreTokenizer {\n    /**\n     * @param {Object} config The configuration options for the pre-tokenizer.\n     * @param {Object} config.pattern The pattern used to split the text. Can be a string or a regex object.\n     * @param {string|undefined} config.pattern.String The string to use for splitting. Only defined if the pattern is a string.\n     * @param {string|undefined} config.pattern.Regex The regex to use for splitting. Only defined if the pattern is a regex.\n     * @param {SplitDelimiterBehavior} config.behavior The behavior to use when splitting.\n     * @param {boolean} config.invert Whether to split (invert=false) or match (invert=true) the pattern.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n        // TODO support all behaviours (config.behavior)\n\n        this.pattern = createPattern(this.config.pattern, this.config.invert);\n    }\n\n    /**\n     * Tokenizes text by splitting it using the given pattern.\n     * @param {string} text The text to tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens.\n     */\n    pre_tokenize_text(text, options) {\n        if (this.pattern === null) {\n            return [];\n        }\n\n        if (this.config.invert) {\n            return text.match(this.pattern) || [];\n        } else if (this.config.behavior?.toLowerCase() === 'removed') {\n            return text.split(this.pattern).filter(x => x);\n        } else {\n            return regexSplit(text, this.pattern);\n        }\n    }\n}\n\n/**\n * Splits text based on punctuation.\n * @extends PreTokenizer\n */\nclass PunctuationPreTokenizer extends PreTokenizer {\n    /**\n     * @param {Object} config The configuration options for the pre-tokenizer.\n     * @param {SplitDelimiterBehavior} config.behavior The behavior to use when splitting.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n        this.pattern = new RegExp(`[^${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]+`, 'gu');\n    }\n\n    /**\n     * Tokenizes text by splitting it using the given pattern.\n     * @param {string} text The text to tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens.\n     */\n    pre_tokenize_text(text, options) {\n        return text.match(this.pattern) || [];\n    }\n}\n\n\n/**\n * Splits text based on digits.\n * @extends PreTokenizer\n */\nclass DigitsPreTokenizer extends PreTokenizer {\n    /**\n     * @param {Object} config The configuration options for the pre-tokenizer.\n     * @param {boolean} config.individual_digits Whether to split on individual digits.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n\n        // Construct a pattern which matches the rust implementation:\n        const digit_pattern = `[^\\\\d]+|\\\\d${this.config.individual_digits ? '' : '+'}`;\n        this.pattern = new RegExp(digit_pattern, 'gu');\n    }\n\n    /**\n     * Tokenizes text by splitting it using the given pattern.\n     * @param {string} text The text to tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens.\n     */\n    pre_tokenize_text(text, options) {\n        return text.match(this.pattern) || [];\n    }\n}\n\n/**\n * @typedef {Object} PostProcessedOutput\n * @property {string[]} tokens List of token produced by the post-processor.\n * @property {number[]} [token_type_ids] List of token type ids produced by the post-processor.\n */\n\n\n/**\n * @typedef {Object} EncodingSingle\n * @property {number[]} input_ids List of token ids to be fed to a model.\n * @property {number[]} attention_mask List of token type ids to be fed to a model\n * @property {number[]} [token_type_ids] List of indices specifying which tokens should be attended to by the model\n */\n\n\n/**\n * @extends Callable\n */\nclass PostProcessor extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n\n    /**\n     * @param {Object} config The configuration for the post-processor.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n    }\n\n    /**\n     * Factory method to create a PostProcessor object from a configuration object.\n     *\n     * @param {Object} config Configuration object representing a PostProcessor.\n     * @returns {PostProcessor} A PostProcessor object created from the given configuration.\n     * @throws {Error} If an unknown PostProcessor type is encountered.\n     */\n    static fromConfig(config) {\n        if (config === null) return null;\n        switch (config.type) {\n            case 'TemplateProcessing':\n                return new TemplateProcessing(config);\n\n            case 'ByteLevel':\n                return new ByteLevelPostProcessor(config);\n\n            case 'RobertaProcessing':\n                return new RobertaProcessing(config);\n            case 'BertProcessing':\n                return new BertProcessing(config);\n\n            case 'Sequence':\n                return new PostProcessorSequence(config);\n            default:\n                throw new Error(`Unknown PostProcessor type: ${config.type}`);\n        }\n    }\n\n    /**\n     * Method to be implemented in subclass to apply post-processing on the given tokens.\n     *\n     * @param {Array} tokens The input tokens to be post-processed.\n     * @param {...*} args Additional arguments required by the post-processing logic.\n     * @returns {PostProcessedOutput} The post-processed tokens.\n     * @throws {Error} If the method is not implemented in subclass.\n     */\n    post_process(tokens, ...args) {\n        throw Error(\"post_process should be implemented in subclass.\")\n    }\n\n    /**\n     * Alias for {@link PostProcessor#post_process}.\n     * @param {Array} tokens The text or array of texts to post-process.\n     * @param {...*} args Additional arguments required by the post-processing logic.\n     * @returns {PostProcessedOutput} The post-processed tokens.\n     */\n    _call(tokens, ...args) {\n        return this.post_process(tokens, ...args);\n    }\n}\n\n/**\n * A post-processor that adds special tokens to the beginning and end of the input.\n */\nclass BertProcessing extends PostProcessor {\n    /**\n     * @param {Object} config The configuration for the post-processor.\n     * @param {string[]} config.cls The special tokens to add to the beginning of the input.\n     * @param {string[]} config.sep The special tokens to add to the end of the input.\n     */\n    constructor(config) {\n        super(config);\n        // TODO use all of config: add_prefix_space, trim_offsets\n\n        this.cls = config.cls[0];\n        this.sep = config.sep[0];\n    }\n\n    /**\n     * Adds the special tokens to the beginning and end of the input.\n     * @param {string[]} tokens The input tokens.\n     * @param {string[]} [tokens_pair=null] An optional second set of input tokens.\n     * @returns {PostProcessedOutput} The post-processed tokens with the special tokens added to the beginning and end.\n     */\n    post_process(tokens, tokens_pair = null, {\n        add_special_tokens = true,\n    } = {}) {\n        if (add_special_tokens) {\n            tokens = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)([this.cls], tokens, [this.sep]);\n        }\n\n        let token_type_ids = new Array(tokens.length).fill(0);\n        if (tokens_pair !== null) {\n            // NOTE: It is intended to add 2 EOS tokens after the first set of tokens\n            // https://github.com/huggingface/tokenizers/issues/983\n            const middle = (add_special_tokens && this instanceof RobertaProcessing)\n                ? [this.sep]\n                : [];\n            const after = add_special_tokens ? [this.sep] : [];\n\n            tokens = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(tokens, middle, tokens_pair, after);\n            token_type_ids = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(token_type_ids, new Array(tokens_pair.length + middle.length + after.length).fill(1));\n        }\n        return { tokens, token_type_ids };\n    }\n}\nclass RobertaProcessing extends BertProcessing { } // NOTE: extends BertProcessing\n\n/**\n * Post processor that replaces special tokens in a template with actual tokens.\n * @extends PostProcessor\n */\nclass TemplateProcessing extends PostProcessor {\n    /**\n     * Creates a new instance of `TemplateProcessing`.\n     * @param {Object} config The configuration options for the post processor.\n     * @param {Array} config.single The template for a single sequence of tokens.\n     * @param {Array} config.pair The template for a pair of sequences of tokens.\n     */\n    constructor(config) {\n        super(config);\n\n        this.single = config.single;\n        this.pair = config.pair;\n    }\n\n    /**\n     * Replaces special tokens in the template with actual tokens.\n     * @param {string[]} tokens The list of tokens for the first sequence.\n     * @param {string[]} [tokens_pair=null] The list of tokens for the second sequence (optional).\n     * @returns {PostProcessedOutput} An object containing the list of tokens with the special tokens replaced with actual tokens.\n     */\n    post_process(tokens, tokens_pair = null, {\n        add_special_tokens = true,\n    } = {}) {\n        const type = tokens_pair === null ? this.single : this.pair\n\n        let processedTokens = [];\n        let types = [];\n        for (const item of type) {\n            if ('SpecialToken' in item) {\n                if (add_special_tokens) {\n                    processedTokens.push(item.SpecialToken.id);\n                    types.push(item.SpecialToken.type_id);\n                }\n            } else if ('Sequence' in item) {\n                if (item.Sequence.id === 'A') {\n                    processedTokens = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(processedTokens, tokens);\n                    types = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(types, new Array(tokens.length).fill(item.Sequence.type_id));\n\n                } else if (item.Sequence.id === 'B') {\n                    processedTokens = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(processedTokens, tokens_pair);\n                    types = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(types, new Array(tokens_pair.length).fill(item.Sequence.type_id));\n                }\n            }\n        }\n        return { tokens: processedTokens, token_type_ids: types };\n    }\n}\n\n/**\n * A PostProcessor that returns the given tokens as is.\n * @extends PostProcessor\n */\nclass ByteLevelPostProcessor extends PostProcessor {\n    /**\n     * Post process the given tokens.\n     * @param {string[]} tokens The list of tokens for the first sequence.\n     * @param {string[]} [tokens_pair=null] The list of tokens for the second sequence (optional).\n     * @returns {PostProcessedOutput} An object containing the post-processed tokens.\n     */\n    post_process(tokens, tokens_pair = null) {\n        if (tokens_pair) {\n            tokens = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(tokens, tokens_pair);\n        }\n        return { tokens };\n    }\n}\n\n\n/**\n * A post-processor that applies multiple post-processors in sequence.\n */\nclass PostProcessorSequence extends PostProcessor {\n\n    /**\n     * Creates a new instance of PostProcessorSequence.\n     * @param {Object} config The configuration object.\n     * @param {Object[]} config.processors The list of post-processors to apply.\n     */\n    constructor(config) {\n        super(config);\n\n        this.processors = config.processors.map(x => PostProcessor.fromConfig(x));\n    }\n\n    /**\n     * Post process the given tokens.\n     * @param {string[]} tokens The list of tokens for the first sequence.\n     * @param {string[]} [tokens_pair=null] The list of tokens for the second sequence (optional).\n     * @returns {PostProcessedOutput} An object containing the post-processed tokens.\n     */\n    post_process(tokens, tokens_pair = null, options = {}) {\n        let token_type_ids;\n        for (const processor of this.processors) {\n            if (processor instanceof ByteLevelPostProcessor) {\n                // Special case where we need to pass the tokens_pair to the post-processor\n                const output = processor.post_process(tokens);\n                tokens = output.tokens;\n                if (tokens_pair) {\n                    const pair_output = processor.post_process(tokens_pair);\n                    tokens_pair = pair_output.tokens;\n                }\n            } else {\n                const output = processor.post_process(tokens, tokens_pair, options);\n                tokens = output.tokens;\n                token_type_ids = output.token_type_ids;\n            }\n        }\n        return { tokens, token_type_ids };\n    }\n}\n\n/**\n * The base class for token decoders.\n * @extends Callable\n */\nclass Decoder extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n\n    /**\n    * Creates an instance of `Decoder`.\n    *\n    * @param {Object} config The configuration object.\n    */\n    constructor(config) {\n        super();\n        this.config = config;\n\n        /** @type {AddedToken[]} */\n        this.added_tokens = [];\n        this.end_of_word_suffix = null;\n        this.trim_offsets = config.trim_offsets;\n    }\n\n    /**\n   * Creates a decoder instance based on the provided configuration.\n   *\n   * @param {Object} config The configuration object.\n   * @returns {Decoder} A decoder instance.\n   * @throws {Error} If an unknown decoder type is provided.\n   */\n    static fromConfig(config) {\n        if (config === null) return null;\n        switch (config.type) {\n            case 'WordPiece':\n                return new WordPieceDecoder(config);\n            case 'Metaspace':\n                return new MetaspaceDecoder(config);\n            case 'ByteLevel':\n                return new ByteLevelDecoder(config);\n\n            case 'Replace':\n                return new ReplaceDecoder(config);\n            case 'ByteFallback':\n                return new ByteFallback(config);\n            case 'Fuse':\n                return new FuseDecoder(config);\n            case 'Strip':\n                return new StripDecoder(config);\n\n            case 'Sequence':\n                return new DecoderSequence(config);\n\n            case 'CTC':\n                return new CTCDecoder(config);\n            case 'BPEDecoder':\n                return new BPEDecoder(config);\n            default:\n                throw new Error(`Unknown Decoder type: ${config.type}`);\n        }\n    }\n\n    /**\n    * Calls the `decode` method.\n    *\n    * @param {string[]} tokens The list of tokens.\n    * @returns {string} The decoded string.\n    */\n    _call(tokens) {\n        return this.decode(tokens);\n    }\n\n    /**\n    * Decodes a list of tokens.\n    * @param {string[]} tokens The list of tokens.\n    * @returns {string} The decoded string.\n    */\n    decode(tokens) {\n        return this.decode_chain(tokens).join('');\n    }\n\n    /**\n     * Apply the decoder to a list of tokens.\n     * \n     * @param {string[]} tokens The list of tokens.\n     * @returns {string[]} The decoded list of tokens.\n     * @throws {Error} If the `decode_chain` method is not implemented in the subclass.\n     */\n    decode_chain(tokens) {\n        throw Error(\"`decode_chain` should be implemented in subclass.\")\n    }\n\n}\n\nclass ReplaceDecoder extends Decoder {\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        const pattern = createPattern(this.config.pattern);\n        return pattern === null\n            ? tokens\n            : tokens.map(token => token.replaceAll(pattern, this.config.content))\n    }\n}\n\n\nclass ByteFallback extends Decoder {\n    constructor(config) {\n        super(config);\n\n        this.text_decoder = new TextDecoder();\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n\n        const new_tokens = [];\n        let previous_byte_tokens = [];\n\n        for (const token of tokens) {\n            let bytes = null;\n            if (token.length === 6 && token.startsWith('<0x') && token.endsWith('>')) {\n                const byte = parseInt(token.slice(3, 5), 16);\n                if (!isNaN(byte)) {\n                    bytes = byte;\n                }\n            }\n            if (bytes !== null) {\n                previous_byte_tokens.push(bytes);\n            } else {\n                if (previous_byte_tokens.length > 0) {\n                    const string = this.text_decoder.decode(Uint8Array.from(previous_byte_tokens));\n                    new_tokens.push(string);\n                    previous_byte_tokens = [];\n                }\n                new_tokens.push(token);\n            }\n        }\n        if (previous_byte_tokens.length > 0) {\n            const string = this.text_decoder.decode(Uint8Array.from(previous_byte_tokens));\n            new_tokens.push(string);\n            previous_byte_tokens = [];\n        }\n\n        return new_tokens;\n    }\n}\n\n/**\n * Fuse simply fuses all tokens into one big string.\n * It's usually the last decoding step anyway, but this decoder\n * exists incase some decoders need to happen after that step\n */\nclass FuseDecoder extends Decoder {\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        return [tokens.join('')];\n    }\n}\n\n\nclass StripDecoder extends Decoder {\n    constructor(config) {\n        super(config);\n\n        this.content = this.config.content;\n        this.start = this.config.start;\n        this.stop = this.config.stop;\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        return tokens.map(token => {\n            let start_cut = 0;\n            for (let i = 0; i < this.start; ++i) {\n                if (token[i] === this.content) {\n                    start_cut = i + 1;\n                    continue;\n                } else {\n                    break;\n                }\n            }\n\n            let stop_cut = token.length;\n            for (let i = 0; i < this.stop; ++i) {\n                const index = token.length - i - 1;\n                if (token[index] === this.content) {\n                    stop_cut = index;\n                    continue;\n                } else {\n                    break;\n                }\n            }\n\n            return token.slice(start_cut, stop_cut)\n        });\n    }\n}\n\n/**\n * A decoder that decodes a list of WordPiece tokens into a single string.\n * @extends Decoder\n */\nclass WordPieceDecoder extends Decoder {\n\n    /**\n     * Creates a new instance of WordPieceDecoder.\n     * @param {Object} config The configuration object.\n     * @param {string} config.prefix The prefix used for WordPiece encoding.\n     * @param {boolean} config.cleanup Whether to cleanup the decoded string.\n     */\n    constructor(config) {\n        super(config);\n        this.cleanup = config.cleanup;\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        return tokens.map((token, i) => {\n            if (i !== 0) {\n                if (token.startsWith(this.config.prefix)) {\n                    // NOTE: .replace() is intended; only replace first occurrence\n                    token = token.replace(this.config.prefix, '');\n                } else {\n                    token = ' ' + token;\n                }\n            }\n            if (this.cleanup) {\n                token = clean_up_tokenization(token)\n            }\n\n            return token;\n        });\n    }\n}\n\n/**\n * Byte-level decoder for tokenization output. Inherits from the `Decoder` class.\n * @extends Decoder\n */\nclass ByteLevelDecoder extends Decoder {\n\n    /**\n     * Create a `ByteLevelDecoder` object.\n     * @param {Object} config Configuration object.\n     */\n    constructor(config) {\n        super(config);\n\n        this.byte_decoder = UNICODE_TO_BYTES;\n        this.text_decoder = new TextDecoder(\"utf-8\", {\n            fatal: false,\n            ignoreBOM: true,\n        });\n\n        this.end_of_word_suffix = null;\n    }\n\n    /**\n     * Convert an array of tokens to string by decoding each byte.\n     * @param {string[]} tokens Array of tokens to be decoded.\n     * @returns {string} The decoded string.\n     */\n    convert_tokens_to_string(tokens) {\n        const text = tokens.join('');\n        const byteArray = new Uint8Array([...text].map(c => this.byte_decoder[c]));\n        const decoded_text = this.text_decoder.decode(byteArray);\n        return decoded_text;\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        // TODO move to base class (like HF)\n        // tokens === filtered_tokens\n\n        // To avoid mixing byte-level and unicode for byte-level BPT\n        // we need to build string separately for added tokens and byte-level tokens\n        // cf. https://github.com/huggingface/transformers/issues/1133\n        const sub_texts = [];\n        let current_sub_text = [];\n        for (const token of tokens) {\n            // tokens sent here are already filtered, so we don't need to do this\n            // if (skip_special_tokens && this.all_special_ids.includes(token)) {\n            //     continue;\n            // }\n\n            if (this.added_tokens.find(x => x.content === token) !== undefined) {\n                if (current_sub_text.length > 0) {\n                    sub_texts.push(this.convert_tokens_to_string(current_sub_text));\n                    current_sub_text = [];\n                }\n                sub_texts.push(token);\n            } else {\n                current_sub_text.push(token);\n            }\n        }\n        if (current_sub_text.length > 0) {\n            sub_texts.push(this.convert_tokens_to_string(current_sub_text));\n        }\n\n        // TODO add spaces_between_special_tokens and clean_up_tokenization_spaces options\n\n        return sub_texts;\n    }\n}\n\n/**\n * The CTC (Connectionist Temporal Classification) decoder.\n * See https://github.com/huggingface/tokenizers/blob/bb38f390a61883fc2f29d659af696f428d1cda6b/tokenizers/src/decoders/ctc.rs\n */\nclass CTCDecoder extends Decoder {\n\n    constructor(config) {\n        super(config);\n\n        this.pad_token = this.config.pad_token;\n        this.word_delimiter_token = this.config.word_delimiter_token;\n        this.cleanup = this.config.cleanup;\n    }\n    /**\n     * Converts a connectionist-temporal-classification (CTC) output tokens into a single string.\n     * @param {string[]} tokens Array of tokens to be decoded.\n     * @returns {string} The decoded string.\n     */\n    convert_tokens_to_string(tokens) {\n        if (tokens.length === 0) return '';\n\n        // group same tokens into non-repeating tokens in CTC style decoding\n        const grouped_tokens = [tokens[0]];\n        for (let i = 1; i < tokens.length; ++i) {\n            if (tokens[i] !== grouped_tokens.at(-1)) {\n                grouped_tokens.push(tokens[i]);\n            }\n        }\n\n        // filter self.pad_token which is used as CTC-blank token\n        const filtered_tokens = grouped_tokens.filter(token => token !== this.pad_token);\n\n        let text = filtered_tokens.join('');\n        if (this.cleanup) {\n            // cleanup and replace delimiter token\n            text = clean_up_tokenization(text)\n                .replaceAll(this.word_delimiter_token, ' ')\n                .trim();\n        }\n        return text;\n    }\n\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        return [this.convert_tokens_to_string(tokens)];\n    }\n}\n\n/**\n * Apply a sequence of decoders.\n * @extends Decoder\n */\nclass DecoderSequence extends Decoder {\n\n    /**\n     * Creates a new instance of DecoderSequence.\n     * @param {Object} config The configuration object.\n     * @param {Object[]} config.decoders The list of decoders to apply.\n     */\n    constructor(config) {\n        super(config);\n        this.decoders = config.decoders.map(x => Decoder.fromConfig(x));\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        // Use reduce to apply each decoder to the tokens\n        return this.decoders.reduce((toks, decoder) => {\n            return decoder.decode_chain(toks);\n        }, tokens);\n    }\n\n}\n\nclass BPEDecoder extends Decoder {\n    constructor(config) {\n        super(config);\n\n        this.suffix = this.config.suffix;\n    }\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        return tokens.map((token, i) => {\n            return token.replaceAll(this.suffix, (i === tokens.length - 1) ? '' : ' ')\n        });\n    }\n}\n\n// Custom decoder for VITS\nclass VitsDecoder extends Decoder {\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        let decoded = '';\n        for (let i = 1; i < tokens.length; i += 2) {\n            decoded += tokens[i];\n        }\n        return [decoded];\n    }\n}\n\n\n/**\n * This PreTokenizer replaces spaces with the given replacement character, adds a prefix space if requested,\n * and returns a list of tokens.\n * @extends PreTokenizer\n */\nclass MetaspacePreTokenizer extends PreTokenizer {\n    /**\n     * @param {Object} config The configuration object for the MetaspacePreTokenizer.\n     * @param {boolean} config.add_prefix_space Whether to add a prefix space to the first token.\n     * @param {string} config.replacement The character to replace spaces with.\n     * @param {string} [config.str_rep=config.replacement] An optional string representation of the replacement character.\n     * @param {'first'|'never'|'always'} [config.prepend_scheme='always'] The metaspace prepending scheme.\n     */\n    constructor(config) {\n        super();\n\n        this.addPrefixSpace = config.add_prefix_space;\n        this.replacement = config.replacement;\n        this.strRep = config.str_rep || this.replacement;\n        this.prepend_scheme = config.prepend_scheme ?? 'always';\n    }\n\n    /**\n     * This method takes a string, replaces spaces with the replacement character,\n     * adds a prefix space if requested, and returns a new list of tokens.\n     * @param {string} text The text to pre-tokenize.\n     * @param {Object} [options] The options for the pre-tokenization.\n     * @param {number} [options.section_index] The index of the section to pre-tokenize.\n     * @returns {string[]} A new list of pre-tokenized tokens.\n     */\n    pre_tokenize_text(text, {\n        section_index = undefined,\n    } = {}) {\n\n        let normalized = text.replaceAll(' ', this.strRep);\n\n        if (\n            // We add a prefix space if:\n            //  (1) The addPrefixSpace option is enabled and the normalized\n            //      token does not already start with the replacement character.\n            (this.addPrefixSpace && !normalized.startsWith(this.replacement))\n\n            // and (2) either:\n            //  (a) prepend_scheme is 'always'\n            //  (b) prepend_scheme is 'first' and this is the first section\n            && (\n                this.prepend_scheme === 'always' ||\n                (this.prepend_scheme === 'first' && section_index === 0)\n            )\n        ) {\n            normalized = this.strRep + normalized;\n        }\n        return [normalized];\n    }\n}\n\n/**\n * MetaspaceDecoder class extends the Decoder class and decodes Metaspace tokenization.\n * @extends Decoder\n */\nclass MetaspaceDecoder extends Decoder {\n    /**\n     * Constructs a new MetaspaceDecoder object.\n     * @param {Object} config The configuration object for the MetaspaceDecoder.\n     * @param {boolean} config.add_prefix_space Whether to add a prefix space to the decoded string.\n     * @param {string} config.replacement The string to replace spaces with.\n     */\n    constructor(config) {\n        super(config);\n\n        this.addPrefixSpace = config.add_prefix_space;\n        this.replacement = config.replacement;\n    }\n\n    /** @type {Decoder['decode_chain']} */\n    decode_chain(tokens) {\n        const result = [];\n        for (let i = 0; i < tokens.length; ++i) {\n            let normalized = tokens[i].replaceAll(this.replacement, ' ');\n            if (this.addPrefixSpace && i == 0 && normalized.startsWith(' ')) {\n                normalized = normalized.substring(1);\n            }\n            result.push(normalized);\n        }\n        return result;\n    }\n}\n\n/**\n * A normalizer that applies a precompiled charsmap.\n * This is useful for applying complex normalizations in C++ and exposing them to JavaScript.\n * @extends Normalizer\n * @param {Object} config The configuration object for the Precompiled normalizer.\n * @param {Object} config.precompiled_charsmap The precompiled charsmap object.\n */\nclass Precompiled extends Normalizer {\n    /**\n     * Create a new instance of Precompiled normalizer.\n     * @param {Object} config The configuration object.\n     * @param {any} config.precompiled_charsmap Precompiled chars mapping.\n     */\n    constructor(config) {\n        super(config);\n        this.charsmap = config.precompiled_charsmap;\n    }\n\n    /**\n     * Normalizes the given text by applying the precompiled charsmap.\n     * @param {string} text The text to normalize.\n     * @returns {string} The normalized text.\n     */\n    normalize(text) {\n        // As stated in the sentencepiece normalization docs (https://github.com/google/sentencepiece/blob/master/doc/normalization.md#use-pre-defined-normalization-rule),\n        // there are 5 pre-defined normalization rules:\n        //  1. nmt_nfkc: NFKC normalization with some additional normalization around spaces. (default)\n        //  2. nfkc: original NFKC normalization.\n        //  3. nmt_nfkc_cf: nmt_nfkc + Unicode case folding (mostly lower casing)\n        //  4. nfkc_cf: nfkc + Unicode case folding.\n        //  5. identity: no normalization\n        // \n        // For now, we only implement the default (nmt_nfkc).\n        // See https://raw.githubusercontent.com/google/sentencepiece/master/data/nmt_nfkc.tsv for the full list of rules.\n        // TODO: detect when a different `this.charsmap` is used.\n\n        text = text.replace(/[\\u0001-\\u0008\\u000B\\u000E-\\u001F\\u007F\\u008F\\u009F]/gm, ''); // Remove control characters\n        text = text.replace(/[\\u0009\\u000A\\u000C\\u000D\\u00A0\\u1680\\u2000-\\u200F\\u2028\\u2029\\u202F\\u205F\\u2581\\u3000\\uFEFF\\uFFFD]/gm, '\\u0020'); // Replace certain characters with a space\n\n        if (text.includes('\\uFF5E')) {\n            // To match the sentencepiece implementation 100%, we must handle a very strange edge-case.\n            // For some reason, the \"Fullwidth Tilde\" character (\\uFF5E) should not be converted to the standard Tilde character (\\u007E).\n            // However, NFKC normalization does do this conversion. As a result, we split the string on the Fullwidth Tilde character,\n            // perform NFKC normalization on each substring, and then join them back together with the Fullwidth Tilde character.\n            const parts = text.split('\\uFF5E');\n            text = parts.map(part => part.normalize('NFKC')).join('\\uFF5E');\n        } else {\n            text = text.normalize('NFKC');\n        }\n\n        return text;\n    }\n}\n\n/**\n * A pre-tokenizer that applies a sequence of pre-tokenizers to the input text.\n * @extends PreTokenizer\n */\nclass PreTokenizerSequence extends PreTokenizer {\n    /**\n     * Creates an instance of PreTokenizerSequence.\n     * @param {Object} config The configuration object for the pre-tokenizer sequence.\n     * @param {Object[]} config.pretokenizers An array of pre-tokenizer configurations.\n     */\n    constructor(config) {\n        super();\n        this.tokenizers = config.pretokenizers.map(x => PreTokenizer.fromConfig(x));\n    }\n\n    /**\n     * Applies each pre-tokenizer in the sequence to the input text in turn.\n     * @param {string} text The text to pre-tokenize.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} The pre-tokenized text.\n     */\n    pre_tokenize_text(text, options) {\n        // Use reduce to apply each tokenizer to the text\n        return this.tokenizers.reduce((preTokenizedText, tokenizer) => {\n            return tokenizer.pre_tokenize(preTokenizedText, options);\n        }, [text]);\n    }\n}\n\n/**\n * Splits on word boundaries (using the following regular expression: `\\w+|[^\\w\\s]+`).\n */\nclass WhitespacePreTokenizer extends PreTokenizer {\n    /**\n     * Creates an instance of WhitespacePreTokenizer.\n     * @param {Object} config The configuration object for the pre-tokenizer.\n     */\n    constructor(config) {\n        super();\n    }\n    /**\n     * Pre-tokenizes the input text by splitting it on word boundaries.\n     * @param {string} text The text to be pre-tokenized.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens produced by splitting the input text on whitespace.\n     */\n    pre_tokenize_text(text, options) {\n        return text.match(/\\w+|[^\\w\\s]+/g) || [];\n    }\n}\n\n/**\n * Splits a string of text by whitespace characters into individual tokens.\n * @extends PreTokenizer\n */\nclass WhitespaceSplit extends PreTokenizer {\n    /**\n     * Creates an instance of WhitespaceSplit.\n     * @param {Object} config The configuration object for the pre-tokenizer.\n     */\n    constructor(config) {\n        super();\n    }\n    /**\n     * Pre-tokenizes the input text by splitting it on whitespace characters.\n     * @param {string} text The text to be pre-tokenized.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens produced by splitting the input text on whitespace.\n     */\n    pre_tokenize_text(text, options) {\n        return whitespace_split(text);\n    }\n}\n\n// NOTE: `ReplacePreTokenizer` is custom (to support `BlenderbotSmallTokenizer`)\nclass ReplacePreTokenizer extends PreTokenizer {\n    /**\n     * @param {Object} config The configuration options for the pre-tokenizer.\n     * @param {Object} config.pattern The pattern used to split the text. Can be a string or a regex object.\n     * @param {string} config.content What to replace the pattern with.\n     */\n    constructor(config) {\n        super();\n        this.config = config;\n        this.pattern = createPattern(this.config.pattern);\n        this.content = this.config.content;\n    }\n\n    /**\n     * Pre-tokenizes the input text by replacing certain characters.\n     * @param {string} text The text to be pre-tokenized.\n     * @param {Object} [options] Additional options for the pre-tokenization logic.\n     * @returns {string[]} An array of tokens produced by replacing certain characters.\n     */\n    pre_tokenize_text(text, options) {\n        if (this.pattern === null) {\n            return [text];\n        }\n        return [text.replaceAll(this.pattern, this.config.content)];\n    }\n}\n\nconst SPECIAL_TOKEN_ATTRIBUTES = [\n    'bos_token',\n    'eos_token',\n    'unk_token',\n    'sep_token',\n    'pad_token',\n    'cls_token',\n    'mask_token',\n    // additional_special_tokens (TODO)\n]\n\n/**\n * \n * Helper function for padding values of an object, which are each arrays.\n * NOTE: No additional checks are made here for validity of arguments.\n * @param {Record<string, any[]>} item The input object.\n * @param {number} length The length to pad to.\n * @param {(key: string) => any} value_fn Determine the value to fill the array, based on its key.\n * @param {string} side Which side to pad the array.\n * @private\n */\nfunction padHelper(item, length, value_fn, side) {\n    for (const key of Object.keys(item)) {\n        const diff = length - item[key].length;\n        const value = value_fn(key);\n\n        const padData = new Array(diff).fill(value);\n        item[key] = side === 'right'\n            ? (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(item[key], padData)\n            : (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(padData, item[key]);\n    }\n}\n\n/**\n * Helper function for truncating values of an object, which are each arrays.\n * NOTE: No additional checks are made here for validity of arguments.\n * @param {Record<string, any[]>} item The input object.\n * @param {number} length The length to truncate to.\n * @private\n */\nfunction truncateHelper(item, length) {\n    // Setting .length to a lower value truncates the array in-place:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length\n    for (const key of Object.keys(item)) {\n        item[key].length = length;\n    }\n}\n\n\n/**\n * @typedef {Object} Message\n * @property {string} role The role of the message (e.g., \"user\" or \"assistant\" or \"system\").\n * @property {string} content The content of the message.\n */\n\nclass PreTrainedTokenizer extends _utils_generic_js__WEBPACK_IMPORTED_MODULE_0__.Callable {\n    return_token_type_ids = false;\n\n    padding_side = 'right';\n    /**\n     * Create a new PreTrainedTokenizer instance.\n     * @param {Object} tokenizerJSON The JSON of the tokenizer.\n     * @param {Object} tokenizerConfig The config of the tokenizer.\n     */\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super();\n\n        this._tokenizer_config = tokenizerConfig;\n\n        // Construct parts of the tokenizer from the JSON\n        this.normalizer = Normalizer.fromConfig(tokenizerJSON.normalizer);\n        this.pre_tokenizer = PreTokenizer.fromConfig(tokenizerJSON.pre_tokenizer);\n        this.model = TokenizerModel.fromConfig(tokenizerJSON.model, tokenizerConfig);\n        this.post_processor = PostProcessor.fromConfig(tokenizerJSON.post_processor);\n        this.decoder = Decoder.fromConfig(tokenizerJSON.decoder);\n\n        // Add added_tokens to model\n        this.special_tokens = [];\n        this.all_special_ids = [];\n\n        /** @type {AddedToken[]} */\n        this.added_tokens = [];\n        for (const addedToken of tokenizerJSON.added_tokens) {\n            const token = new AddedToken(addedToken);\n            this.added_tokens.push(token);\n\n            this.model.tokens_to_ids.set(token.content, token.id);\n            this.model.vocab[token.id] = token.content;\n\n            if (token.special) {\n                this.special_tokens.push(token.content);\n                this.all_special_ids.push(token.id);\n            }\n        }\n\n        // Update additional_special_tokens\n        this.additional_special_tokens = tokenizerConfig.additional_special_tokens ?? [];\n        this.special_tokens.push(...this.additional_special_tokens);\n        this.special_tokens = [...new Set(this.special_tokens)]; // Remove duplicates\n\n        if (this.decoder) {\n            // Slight hack, but it prevents code duplication:\n            this.decoder.added_tokens = this.added_tokens;\n\n            // Another slight hack to add `end_of_word_suffix` (if present) to the decoder\n            // This is needed for cases where BPE model and ByteLevel decoder are used\n            // For more information, see https://github.com/huggingface/transformers.js/issues/74\n            // TODO: save this to the decoder when exporting?\n            this.decoder.end_of_word_suffix = this.model.end_of_word_suffix;\n        }\n\n        this.added_tokens_regex = this.added_tokens.length > 0 ? new RegExp(\n            this.added_tokens.slice()\n                // Sort by length (desc) to avoid early partial matches\n                .sort((a, b) => b.content.length - a.content.length)\n                .map(x => `${x.lstrip ? '\\\\s*' : ''}(${(0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.escapeRegExp)(x.content)})${x.rstrip ? '\\\\s*' : ''}`)\n                .join('|')\n        ) : null;\n\n        // Set mask token if present (otherwise will be undefined, which is fine)\n        this.mask_token = this.getToken('mask_token');\n        this.mask_token_id = this.model.tokens_to_ids.get(this.mask_token);\n\n        this.pad_token = this.getToken('pad_token', 'eos_token');\n        this.pad_token_id = this.model.tokens_to_ids.get(this.pad_token);\n\n        this.sep_token = this.getToken('sep_token');\n        this.sep_token_id = this.model.tokens_to_ids.get(this.sep_token);\n\n        this.unk_token = this.getToken('unk_token');\n        this.unk_token_id = this.model.tokens_to_ids.get(this.unk_token);\n\n        this.bos_token = this.getToken('bos_token');\n        this.bos_token_id = this.model.tokens_to_ids.get(this.bos_token);\n\n        this.eos_token = this.getToken('eos_token');\n        this.eos_token_id = this.model.tokens_to_ids.get(this.eos_token);\n\n        this.model_max_length = tokenizerConfig.model_max_length;\n\n        /** @type {boolean} Whether or not to strip the text when tokenizing (removing excess spaces before and after the string). */\n        this.remove_space = tokenizerConfig.remove_space;\n\n        this.clean_up_tokenization_spaces = tokenizerConfig.clean_up_tokenization_spaces ?? true;\n        this.do_lowercase_and_remove_accent = tokenizerConfig.do_lowercase_and_remove_accent ?? false;\n\n        if (tokenizerConfig.padding_side) {\n            this.padding_side = tokenizerConfig.padding_side;\n        }\n\n        this.legacy = false;\n\n        this.chat_template = tokenizerConfig.chat_template ?? null;\n        if (Array.isArray(this.chat_template)) {\n            // Chat templates are stored as lists of dicts with fixed key names,\n            // we reconstruct that into a single dict while loading them.\n            const chat_template = Object.create(null);\n            for (const { name, template } of this.chat_template) {\n                if (typeof name !== 'string' || typeof template !== 'string') {\n                    throw new Error('Chat template must be a list of objects with \"name\" and \"template\" properties');\n                }\n                chat_template[name] = template;\n            }\n            this.chat_template = chat_template;\n        }\n        this._compiled_template_cache = new Map();\n    }\n\n    /**\n     * Returns the value of the first matching key in the tokenizer config object.\n     * @param {...string} keys One or more keys to search for in the tokenizer config object.\n     * @returns {string|null} The value associated with the first matching key, or null if no match is found.\n     * @throws {Error} If an object is found for a matching key and its __type property is not \"AddedToken\".\n     * @private\n     */\n    getToken(...keys) {\n        for (const key of keys) {\n            const item = this._tokenizer_config[key];\n\n            if (!item) continue;\n\n            if (typeof item === 'object') {\n                if (item.__type === 'AddedToken') {\n                    return item.content;\n                } else {\n                    throw Error(`Unknown token: ${item}`);\n                }\n            } else {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Loads a pre-trained tokenizer from the given `pretrained_model_name_or_path`. \n     * \n     * @param {string} pretrained_model_name_or_path The path to the pre-trained tokenizer.\n     * @param {PretrainedTokenizerOptions} options Additional options for loading the tokenizer.\n     * \n     * @throws {Error} Throws an error if the tokenizer.json or tokenizer_config.json files are not found in the `pretrained_model_name_or_path`.\n     * @returns {Promise<PreTrainedTokenizer>} A new instance of the `PreTrainedTokenizer` class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n        legacy = null,\n    } = {}) {\n\n        const info = await loadTokenizer(pretrained_model_name_or_path, {\n            progress_callback,\n            config,\n            cache_dir,\n            local_files_only,\n            revision,\n            legacy,\n        })\n\n        // @ts-ignore\n        return new this(...info);\n    }\n\n    /**\n     * @typedef {number[]|number[][]|Tensor} BatchEncodingItem\n     * \n     * @typedef {Object} BatchEncoding Holds the output of the tokenizer's call function.\n     * @property {BatchEncodingItem} input_ids List of token ids to be fed to a model.\n     * @property {BatchEncodingItem} attention_mask List of indices specifying which tokens should be attended to by the model.\n     * @property {BatchEncodingItem} [token_type_ids] List of token type ids to be fed to a model.\n     */\n\n    /**\n     * Encode/tokenize the given text(s).\n     * @param {string|string[]} text The text to tokenize.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string|string[]} [options.text_pair=null] Optional second sequence to be encoded. If set, must be the same type as text.\n     * @param {boolean|'max_length'} [options.padding=false] Whether to pad the input sequences.\n     * @param {boolean} [options.add_special_tokens=true] Whether or not to add the special tokens associated with the corresponding model.\n     * @param {boolean} [options.truncation=null] Whether to truncate the input sequences.\n     * @param {number} [options.max_length=null] Maximum length of the returned list and optionally padding length.\n     * @param {boolean} [options.return_tensor=true] Whether to return the results as Tensors or arrays.\n     * @param {boolean} [options.return_token_type_ids=null] Whether to return the token type ids.\n     * @returns {BatchEncoding} Object to be passed to the model.\n     */\n    _call(\n        // Required positional arguments\n        text,\n\n        // Optional keyword arguments\n        {\n            text_pair = null,\n            add_special_tokens = true,\n            padding = false,\n            truncation = null,\n            max_length = null,\n            return_tensor = true, // Different to HF\n            return_token_type_ids = null,\n        } = {},\n    ) {\n\n        const isBatched = Array.isArray(text);\n\n        /** @type {EncodingSingle[]} */\n        let encodedTokens;\n\n        if (isBatched) {\n            if (text.length === 0) {\n                throw Error('text array must be non-empty')\n            }\n\n            if (text_pair !== null) {\n                if (!Array.isArray(text_pair)) {\n                    throw Error('text_pair must also be an array')\n\n                } else if (text.length !== text_pair.length) {\n                    throw Error('text and text_pair must have the same length')\n                }\n\n                encodedTokens = text.map(\n                    (t, i) => this._encode_plus(t, { text_pair: text_pair[i], add_special_tokens, return_token_type_ids })\n                )\n\n            } else {\n                encodedTokens = text.map(x => this._encode_plus(x, { add_special_tokens, return_token_type_ids }));\n            }\n\n        } else {\n            if (text === null || text === undefined) {\n                throw Error('text may not be null or undefined')\n            }\n\n            if (Array.isArray(text_pair)) {\n                throw Error('When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).')\n            }\n\n            // For single input, we just wrap in an array, and then unwrap later.\n            encodedTokens = [this._encode_plus(text, { text_pair, add_special_tokens, return_token_type_ids })];\n        }\n        // At this point, tokens is batched: [batch_size, tokens]\n        // However, array may be jagged. So, we pad to max_length\n\n        if (max_length === null) {\n            if (padding === 'max_length') {\n                max_length = this.model_max_length;\n            } else {\n                // Calculate max length from sequences\n                max_length = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.max)(encodedTokens.map(x => x.input_ids.length))[0];\n            }\n        } else {\n            if (!truncation) {\n                console.warn(`Truncation was not explicitly activated but \\`max_length\\` is provided a specific value, please use \\`truncation=true\\` to explicitly truncate examples to max length.`)\n            }\n        }\n\n        // Ensure it is less than model max length\n        max_length = Math.min(max_length, this.model_max_length ?? Infinity);\n\n        if (padding || truncation) {\n\n            // Perform padding and/or truncation\n            for (let i = 0; i < encodedTokens.length; ++i) {\n                if (encodedTokens[i].input_ids.length === max_length) {\n                    continue;\n\n                } else if (encodedTokens[i].input_ids.length > max_length) {\n                    // possibly truncate\n                    if (truncation) {\n                        truncateHelper(encodedTokens[i], max_length);\n                    }\n\n                } else { // t.length < max_length\n                    // possibly pad\n                    if (padding) {\n                        padHelper(\n                            encodedTokens[i],\n                            max_length,\n                            key => key === 'input_ids' ? this.pad_token_id : 0,\n                            this.padding_side\n                        );\n                    }\n                }\n            }\n        }\n\n        const result = {};\n\n        if (return_tensor) {\n            if (!(padding && truncation)) {\n                // Not, guaranteed that all items have same length, so\n                // we perform additional check\n\n                if (\n                    encodedTokens.some(x => {\n                        for (const key of Object.keys(x)) {\n                            if (x[key].length !== encodedTokens[0][key]?.length) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    })\n                ) {\n                    throw Error(\n                        \"Unable to create tensor, you should probably activate truncation and/or padding \" +\n                        \"with 'padding=true' and 'truncation=true' to have batched tensors with the same length.\"\n                    )\n                }\n            }\n\n            // Now we actually convert to tensor\n            // NOTE: In the same way as the python library, we return a batched tensor, regardless of\n            // whether we have a single input or multiple inputs.\n            const dims = [encodedTokens.length, encodedTokens[0].input_ids.length];\n\n            for (const key of Object.keys(encodedTokens[0])) {\n                result[key] = new _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor('int64',\n                    BigInt64Array.from(encodedTokens.flatMap(x => x[key]).map(BigInt)),\n                    dims\n                );\n            }\n\n        } else {\n            for (const key of Object.keys(encodedTokens[0])) {\n                result[key] = encodedTokens.map(x => x[key]);\n            }\n\n            // If not returning a tensor, we match the input type\n            if (!isBatched) {\n                // Input was not batched, so we unwrap\n                for (const key of Object.keys(result)) {\n                    result[key] = result[key][0];\n                }\n            }\n        }\n\n        return /** @type {BatchEncoding} */(result);\n    }\n\n    /**\n     * Encodes a single text using the preprocessor pipeline of the tokenizer.\n     *\n     * @param {string|null} text The text to encode.\n     * @returns {string[]|null} The encoded tokens.\n     */\n    _encode_text(text) {\n        if (text === null) return null;\n\n        // Actual function which does encoding, for a single text\n        // First, we take care of special tokens. Needed to avoid issues arising from\n        // normalization and/or pretokenization (which may not preserve special tokens)\n        const sections = this.added_tokens_regex ? text.split(this.added_tokens_regex).filter(x => x) : [text];\n\n        const tokens = sections.map((x, section_index) => {\n            const addedToken = this.added_tokens.find(t => t.content === x);\n            if (addedToken !== undefined) {\n                // Ignore added tokens\n                return x\n            } else {\n                if (this.remove_space === true) {\n                    x = x.trim().split(/\\s+/).join(' ');\n                }\n                if (this.do_lowercase_and_remove_accent) {\n                    x = lowercase_and_remove_accent(x);\n                }\n\n                if (this.normalizer !== null) {\n                    x = this.normalizer(x);\n                }\n\n                // If, after normalization, this section is empty (e.g., trimming whitespace),\n                // we return an empty array\n                if (x.length === 0) {\n                    return [];\n                }\n\n                const sectionTokens = (this.pre_tokenizer !== null) ? this.pre_tokenizer(x, {\n                    section_index,\n                }) : [x];\n\n                const tokens = this.model(sectionTokens);\n\n                return tokens;\n            }\n        }).flat();\n\n        return tokens;\n    }\n\n    /**\n     * Encodes a single text or a pair of texts using the model's tokenizer.\n     *\n     * @param {string} text The text to encode.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.text_pair=null] The optional second text to encode.\n     * @param {boolean} [options.add_special_tokens=true] Whether or not to add the special tokens associated with the corresponding model.\n     * @param {boolean} [options.return_token_type_ids=null] Whether to return token_type_ids.\n     * @returns {EncodingSingle} An object containing the encoded text.\n     * @private\n     */\n    _encode_plus(text, {\n        text_pair = null,\n        add_special_tokens = true,\n        return_token_type_ids = null,\n    } = {}) {\n\n        const { tokens, token_type_ids } = this._tokenize_helper(text, { pair: text_pair, add_special_tokens });\n\n        const input_ids = this.model.convert_tokens_to_ids(tokens);\n\n        const result = {\n            input_ids,\n            attention_mask: new Array(input_ids.length).fill(1),\n        }\n        if ((return_token_type_ids ?? this.return_token_type_ids) && token_type_ids) {\n            result.token_type_ids = token_type_ids;\n        }\n        return result;\n    }\n\n    /**\n     * Internal helper function to tokenize a text, and optionally a pair of texts.\n     * @param {string} text The text to tokenize.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.pair=null] The optional second text to tokenize.\n     * @param {boolean} [options.add_special_tokens=false] Whether or not to add the special tokens associated with the corresponding model.\n     * @returns {{tokens: string[], token_type_ids?: number[]}} An object containing the tokens and optionally the token type IDs.\n     */\n    _tokenize_helper(text, {\n        pair = null,\n        add_special_tokens = false,\n    } = {}) {\n        const tokens = this._encode_text(text);\n        const tokens2 = this._encode_text(pair);\n\n        return this.post_processor\n            ? this.post_processor(tokens, tokens2, { add_special_tokens })\n            : { tokens: (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(tokens ?? [], tokens2 ?? []) };\n    }\n\n    /**\n     * Converts a string into a sequence of tokens.\n     * @param {string} text The sequence to be encoded.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.pair] A second sequence to be encoded with the first.\n     * @param {boolean} [options.add_special_tokens=false] Whether or not to add the special tokens associated with the corresponding model.\n     * @returns {string[]} The list of tokens.\n     */\n    tokenize(text, {\n        pair = null,\n        add_special_tokens = false,\n    } = {}) {\n        return this._tokenize_helper(text, { pair, add_special_tokens }).tokens;\n    }\n\n    /**\n     * Encodes a single text or a pair of texts using the model's tokenizer.\n     *\n     * @param {string} text The text to encode.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.text_pair=null] The optional second text to encode.\n     * @param {boolean} [options.add_special_tokens=true] Whether or not to add the special tokens associated with the corresponding model.\n     * @param {boolean} [options.return_token_type_ids=null] Whether to return token_type_ids.\n     * @returns {number[]} An array of token IDs representing the encoded text(s).\n     */\n    encode(text, {\n        text_pair = null,\n        add_special_tokens = true,\n        return_token_type_ids = null,\n    } = {}) {\n        return this._encode_plus(text, {\n            text_pair,\n            add_special_tokens,\n            return_token_type_ids,\n        }).input_ids;\n    }\n\n    /**\n     * Decode a batch of tokenized sequences.\n     * @param {number[][]|Tensor} batch List/Tensor of tokenized input sequences.\n     * @param {Object} decode_args (Optional) Object with decoding arguments.\n     * @returns {string[]} List of decoded sequences.\n     */\n    batch_decode(batch, decode_args = {}) {\n        if (batch instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor) {\n            batch = batch.tolist();\n        }\n        return batch.map(x => this.decode(x, decode_args));\n    }\n\n    /**\n     * Decodes a sequence of token IDs back to a string.\n     *\n     * @param {number[]|bigint[]|Tensor} token_ids List/Tensor of token IDs to decode.\n     * @param {Object} [decode_args={}]\n     * @param {boolean} [decode_args.skip_special_tokens=false] If true, special tokens are removed from the output string.\n     * @param {boolean} [decode_args.clean_up_tokenization_spaces=true] If true, spaces before punctuations and abbreviated forms are removed.\n     *\n     * @returns {string} The decoded string.\n     * @throws {Error} If `token_ids` is not a non-empty array of integers.\n     */\n    decode(\n        token_ids,\n        decode_args = {},\n    ) {\n        if (token_ids instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor) {\n            token_ids = prepareTensorForDecode(token_ids);\n        }\n\n        if (!Array.isArray(token_ids) || token_ids.length === 0 || !(0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.isIntegralNumber)(token_ids[0])) {\n            throw Error(\"token_ids must be a non-empty array of integers.\");\n        }\n\n        return this.decode_single(token_ids, decode_args)\n    }\n\n    /**\n     * Decode a single list of token ids to a string.\n     * @param {number[]|bigint[]} token_ids List of token ids to decode\n     * @param {Object} decode_args Optional arguments for decoding\n     * @param {boolean} [decode_args.skip_special_tokens=false] Whether to skip special tokens during decoding\n     * @param {boolean} [decode_args.clean_up_tokenization_spaces=null] Whether to clean up tokenization spaces during decoding.\n     * If null, the value is set to `this.decoder.cleanup` if it exists, falling back to `this.clean_up_tokenization_spaces` if it exists, falling back to `true`.\n     * @returns {string} The decoded string\n     */\n    decode_single(\n        token_ids,\n        {\n            skip_special_tokens = false,\n            clean_up_tokenization_spaces = null,\n        }\n    ) {\n        let tokens = this.model.convert_ids_to_tokens(token_ids);\n        if (skip_special_tokens) {\n            tokens = tokens.filter(x => !this.special_tokens.includes(x));\n        }\n\n        // If `this.decoder` is null, we just join tokens with a space:\n        // https://github.com/huggingface/tokenizers/blob/8edec536a737cb04494b454805be16c020abb14f/tokenizers/src/tokenizer/mod.rs#L835\n        /** @type {string} */\n        let decoded = this.decoder ? this.decoder(tokens) : tokens.join(' ');\n\n        // Slight hack, but prevents having to pass `skip_special_tokens` to\n        // each call to `decode`, which would lead to code duplication.\n        if (this.decoder && this.decoder.end_of_word_suffix) {\n            decoded = decoded.replaceAll(this.decoder.end_of_word_suffix, ' ');\n            if (skip_special_tokens) {\n                decoded = decoded.trim();\n            }\n        }\n\n        if (clean_up_tokenization_spaces ?? this.clean_up_tokenization_spaces) {\n            decoded = clean_up_tokenization(decoded);\n        }\n\n        return decoded;\n    }\n\n    /**\n     * Retrieve the chat template string used for tokenizing chat messages. This template is used\n     * internally by the `apply_chat_template` method and can also be used externally to retrieve the model's chat\n     * template for better generation tracking.\n     * \n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.chat_template=null]\n     * A Jinja template or the name of a template to use for this conversion.\n     * It is usually not necessary to pass anything to this argument,\n     * as the model's template will be used by default.\n     * @param {Object[]} [options.tools=null]\n     * A list of tools (callable functions) that will be accessible to the model. If the template does not\n     * support function calling, this argument will have no effect. Each tool should be passed as a JSON Schema,\n     * giving the name, description and argument types for the tool. See our\n     * [chat templating guide](https://huggingface.co/docs/transformers/main/en/chat_templating#automated-function-conversion-for-tool-use)\n     * for more information.\n     * @returns {string} The chat template string.\n     */\n    get_chat_template({\n        chat_template = null,\n        tools = null,\n    } = {}) {\n\n        // First, handle the cases when the model has a dict of multiple templates\n        if (this.chat_template && typeof this.chat_template === 'object') {\n            const template_dict = this.chat_template;\n\n            if (chat_template !== null && Object.hasOwn(template_dict, chat_template)) {\n                // The user can pass the name of a template to the chat template argument instead of an entire template\n                chat_template = template_dict[chat_template];\n            } else if (chat_template === null) {\n                if (tools !== null && 'tool_use' in template_dict) {\n                    chat_template = template_dict['tool_use'];\n                } else if ('default' in template_dict) {\n                    chat_template = template_dict['default'];\n                } else {\n                    throw Error(\n                        `This model has multiple chat templates with no default specified! Please either pass a chat ` +\n                        `template or the name of the template you wish to use to the 'chat_template' argument. Available ` +\n                        `template names are ${Object.keys(template_dict).sort()}.`\n                    )\n                }\n            }\n        } else if (chat_template === null) {\n            // These are the cases when the model has a single template\n            // priority: `chat_template` argument > `tokenizer.chat_template`\n            if (this.chat_template) {\n                chat_template = this.chat_template;\n            } else {\n                throw Error(\n                    \"Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template \" +\n                    \"argument was passed! For information about writing templates and setting the \" +\n                    \"tokenizer.chat_template attribute, please see the documentation at \" +\n                    \"https://huggingface.co/docs/transformers/main/en/chat_templating\"\n                )\n            }\n        }\n        return chat_template;\n    }\n\n    /**\n     * Converts a list of message objects with `\"role\"` and `\"content\"` keys to a list of token\n     * ids. This method is intended for use with chat models, and will read the tokenizer's chat_template attribute to\n     * determine the format and control tokens to use when converting.\n     * \n     * See [here](https://huggingface.co/docs/transformers/chat_templating) for more information.\n     * \n     * **Example:** Applying a chat template to a conversation.\n     * \n     * ```javascript\n     * import { AutoTokenizer } from \"@huggingface/transformers\";\n     * \n     * const tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/mistral-tokenizer-v1\");\n     * \n     * const chat = [\n     *   { \"role\": \"user\", \"content\": \"Hello, how are you?\" },\n     *   { \"role\": \"assistant\", \"content\": \"I'm doing great. How can I help you today?\" },\n     *   { \"role\": \"user\", \"content\": \"I'd like to show off how chat templating works!\" },\n     * ]\n     * \n     * const text = tokenizer.apply_chat_template(chat, { tokenize: false });\n     * // \"<s>[INST] Hello, how are you? [/INST]I'm doing great. How can I help you today?</s> [INST] I'd like to show off how chat templating works! [/INST]\"\n     * \n     * const input_ids = tokenizer.apply_chat_template(chat, { tokenize: true, return_tensor: false });\n     * // [1, 733, 16289, 28793, 22557, 28725, 910, 460, 368, 28804, 733, 28748, 16289, 28793, 28737, 28742, 28719, 2548, 1598, 28723, 1602, 541, 315, 1316, 368, 3154, 28804, 2, 28705, 733, 16289, 28793, 315, 28742, 28715, 737, 298, 1347, 805, 910, 10706, 5752, 1077, 3791, 28808, 733, 28748, 16289, 28793]\n     * ```\n     * \n     * @param {Message[]} conversation A list of message objects with `\"role\"` and `\"content\"` keys,\n     * representing the chat history so far.\n     * @param {Object} options An optional object containing the following properties:\n     * @param {string} [options.chat_template=null] A Jinja template to use for this conversion. If\n     * this is not passed, the model's chat template will be used instead.\n     * @param {Object[]} [options.tools=null]\n     * A list of tools (callable functions) that will be accessible to the model. If the template does not\n     * support function calling, this argument will have no effect. Each tool should be passed as a JSON Schema,\n     * giving the name, description and argument types for the tool. See our\n     * [chat templating guide](https://huggingface.co/docs/transformers/main/en/chat_templating#automated-function-conversion-for-tool-use)\n     * for more information.\n     * @param {Record<string, string>[]} [options.documents=null]\n     * A list of dicts representing documents that will be accessible to the model if it is performing RAG\n     * (retrieval-augmented generation). If the template does not support RAG, this argument will have no\n     * effect. We recommend that each document should be a dict containing \"title\" and \"text\" keys. Please\n     * see the RAG section of the [chat templating guide](https://huggingface.co/docs/transformers/main/en/chat_templating#arguments-for-RAG)\n     * for examples of passing documents with chat templates.\n     * @param {boolean} [options.add_generation_prompt=false] Whether to end the prompt with the token(s) that indicate\n     * the start of an assistant message. This is useful when you want to generate a response from the model.\n     * Note that this argument will be passed to the chat template, and so it must be supported in the\n     * template for this argument to have any effect.\n     * @param {boolean} [options.tokenize=true] Whether to tokenize the output. If false, the output will be a string.\n     * @param {boolean} [options.padding=false] Whether to pad sequences to the maximum length. Has no effect if tokenize is false.\n     * @param {boolean} [options.truncation=false] Whether to truncate sequences to the maximum length. Has no effect if tokenize is false.\n     * @param {number} [options.max_length=null] Maximum length (in tokens) to use for padding or truncation. Has no effect if tokenize is false.\n     * If not specified, the tokenizer's `max_length` attribute will be used as a default.\n     * @param {boolean} [options.return_tensor=true] Whether to return the output as a Tensor or an Array. Has no effect if tokenize is false.\n     * @param {boolean} [options.return_dict=true] Whether to return a dictionary with named outputs. Has no effect if tokenize is false.\n     * @param {Object} [options.tokenizer_kwargs={}] Additional options to pass to the tokenizer.\n     * @returns {string | Tensor | number[]| number[][]|BatchEncoding} The tokenized output.\n     */\n    apply_chat_template(conversation, {\n        tools = null,\n        documents = null,\n        chat_template = null,\n        add_generation_prompt = false,\n        tokenize = true,\n        padding = false,\n        truncation = false,\n        max_length = null,\n        return_tensor = true,\n        return_dict = false,\n        tokenizer_kwargs = {},\n        ...kwargs\n    } = {}) {\n\n        chat_template = this.get_chat_template({ chat_template, tools });\n\n        if (typeof chat_template !== 'string') {\n            throw Error(`chat_template must be a string, but got ${typeof chat_template}`);\n        }\n\n        // Compilation function uses a cache to avoid recompiling the same template\n        let compiledTemplate = this._compiled_template_cache.get(chat_template);\n        if (compiledTemplate === undefined) {\n            compiledTemplate = new _huggingface_jinja__WEBPACK_IMPORTED_MODULE_6__.Template(chat_template);\n            this._compiled_template_cache.set(chat_template, compiledTemplate);\n        }\n\n        const special_tokens_map = Object.create(null);\n        for (const key of SPECIAL_TOKEN_ATTRIBUTES) {\n            const value = this.getToken(key);\n            if (value) {\n                special_tokens_map[key] = value;\n            }\n        }\n\n        const rendered = compiledTemplate.render({\n            messages: conversation,\n            add_generation_prompt,\n            tools,\n            documents,\n            ...special_tokens_map,\n            ...kwargs,\n        });\n\n        if (tokenize) {\n            const out = this._call(rendered, {\n                add_special_tokens: false,\n                padding,\n                truncation,\n                max_length,\n                return_tensor,\n                ...tokenizer_kwargs,\n            });\n            return return_dict ? out : out.input_ids;\n        }\n\n        return rendered;\n    }\n}\n\n/**\n * BertTokenizer is a class used to tokenize text for BERT models.\n * @extends PreTrainedTokenizer\n */\nclass BertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\n/**\n * Albert tokenizer\n * @extends PreTrainedTokenizer\n */\nclass AlbertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass MobileBertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass SqueezeBertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass DebertaTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass DebertaV2Tokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass HerbertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass ConvBertTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass RoFormerTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\nclass DistilBertTokenizer extends PreTrainedTokenizer { }\nclass CamembertTokenizer extends PreTrainedTokenizer { }\nclass XLMTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n        console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\\'s \"fast\" tokenizers library. Therefore, you may experience slightly inaccurate results.')\n    }\n}\nclass ElectraTokenizer extends PreTrainedTokenizer {\n    return_token_type_ids = true;\n}\n\nclass T5Tokenizer extends PreTrainedTokenizer { }\nclass GPT2Tokenizer extends PreTrainedTokenizer { }\nclass BartTokenizer extends PreTrainedTokenizer { }\nclass MBartTokenizer extends PreTrainedTokenizer {\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        this.languageRegex = /^[a-z]{2}_[A-Z]{2}$/;\n        this.language_codes = this.special_tokens.filter(x => this.languageRegex.test(x));\n        this.lang_to_token = x => x; // Identity function\n    }\n\n    /**\n     * Helper function to build translation inputs for an `MBartTokenizer`.\n     * @param {string|string[]} raw_inputs The text to tokenize.\n     * @param {Object} tokenizer_options Options to be sent to the tokenizer\n     * @param {Object} generate_kwargs Generation options.\n     * @returns {Object} Object to be passed to the model.\n     */\n    _build_translation_inputs(raw_inputs, tokenizer_options, generate_kwargs) {\n        return _build_translation_inputs(this, raw_inputs, tokenizer_options, generate_kwargs);\n    }\n}\nclass MBart50Tokenizer extends MBartTokenizer { } // NOTE: extends MBartTokenizer\n\nclass RobertaTokenizer extends PreTrainedTokenizer { }\n\nclass BloomTokenizer extends PreTrainedTokenizer { }\n\nconst SPIECE_UNDERLINE = \"▁\";\n\nclass LlamaTokenizer extends PreTrainedTokenizer {\n\n    padding_side = 'left';\n\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        this.legacy = tokenizerConfig.legacy ?? true;\n        if (!this.legacy) {\n            // See https://github.com/huggingface/transformers/pull/24565 for more information\n            this.normalizer = null;\n            this.pre_tokenizer = new MetaspacePreTokenizer({\n                replacement: SPIECE_UNDERLINE,\n                add_prefix_space: true,\n                prepend_scheme: \"first\",\n            });\n        }\n    }\n\n    /**\n     * Helper function to handle legacy encoding of SPM tokenizers.\n     * Adapted from https://github.com/huggingface/transformers/blob/e6dcf8abd6f65bb4b6dfc1831b20d9ba49ce00e2/src/transformers/models/t5/tokenization_t5.py#L374-L387\n     * @param {string} text The text to encode.\n     * @returns {string[]} The encoded tokens.\n     */\n    _encode_text(text) {\n        if (text === null) return null;\n\n        if (this.legacy || text.length === 0) {\n            return super._encode_text(text);\n        }\n\n        let tokens = super._encode_text(SPIECE_UNDERLINE + text.replaceAll(SPIECE_UNDERLINE, \" \"));\n        if (tokens.length > 1 && tokens[0] === SPIECE_UNDERLINE && this.special_tokens.includes(tokens[1])) {\n            tokens = tokens.slice(1);\n        }\n        return tokens;\n    }\n}\nclass CodeLlamaTokenizer extends PreTrainedTokenizer { }\n\nclass XLMRobertaTokenizer extends PreTrainedTokenizer { }\nclass MPNetTokenizer extends PreTrainedTokenizer { }\n\nclass FalconTokenizer extends PreTrainedTokenizer { }\n\nclass GPTNeoXTokenizer extends PreTrainedTokenizer { }\n\nclass EsmTokenizer extends PreTrainedTokenizer { }\n\nclass Qwen2Tokenizer extends PreTrainedTokenizer { }\n\nclass GemmaTokenizer extends PreTrainedTokenizer { }\n\nclass Grok1Tokenizer extends PreTrainedTokenizer { }\n\n/**\n * Helper function to build translation inputs for an `NllbTokenizer` or `M2M100Tokenizer`.\n * @param {PreTrainedTokenizer} self The tokenizer instance.\n * @param {string|string[]} raw_inputs The text to tokenize.\n * @param {Object} tokenizer_options Options to be sent to the tokenizer\n * @param {Object} generate_kwargs Generation options.\n * @returns {Object} Object to be passed to the model.\n * @private\n */\nfunction _build_translation_inputs(self, raw_inputs, tokenizer_options, generate_kwargs) {\n    if (!('language_codes' in self) || !Array.isArray(self.language_codes)) {\n        throw new Error('Tokenizer must have `language_codes` attribute set and it should be an array of language ids.')\n    }\n    if (!('languageRegex' in self) || !(self.languageRegex instanceof RegExp)) {\n        throw new Error('Tokenizer must have `languageRegex` attribute set and it should be a regular expression.')\n    }\n    if (!('lang_to_token' in self) || typeof self.lang_to_token !== 'function') {\n        throw new Error('Tokenizer must have `lang_to_token` attribute set and it should be a function.')\n    }\n    const src_lang_token = generate_kwargs.src_lang;\n    const tgt_lang_token = generate_kwargs.tgt_lang;\n\n    // Check that the target language is valid:\n    if (!self.language_codes.includes(tgt_lang_token)) {\n        throw new Error(`Target language code \"${tgt_lang_token}\" is not valid. Must be one of: {${self.language_codes.join(', ')}}`);\n    }\n\n    // Allow `src_lang` to be optional. If not set, we'll use the tokenizer's default.\n    if (src_lang_token !== undefined) {\n        // Check that the source language is valid:\n        if (!self.language_codes.includes(src_lang_token)) {\n            throw new Error(`Source language code \"${src_lang_token}\" is not valid. Must be one of: {${self.language_codes.join(', ')}}`);\n        }\n\n        // In the same way as the Python library, we override the post-processor\n        // to force the source language to be first:\n        for (const item of self.post_processor.config.single) {\n            if ('SpecialToken' in item && self.languageRegex.test(item.SpecialToken.id)) {\n                item.SpecialToken.id = self.lang_to_token(src_lang_token);\n                break;\n            }\n        }\n        // TODO: Do the same for pair?\n    }\n\n    // Override the `forced_bos_token_id` to force the correct language\n    generate_kwargs.forced_bos_token_id = self.model.convert_tokens_to_ids([self.lang_to_token(tgt_lang_token)])[0];\n\n    return self._call(raw_inputs, tokenizer_options);\n}\n\n/**\n * The NllbTokenizer class is used to tokenize text for NLLB (\"No Language Left Behind\") models.\n * \n * No Language Left Behind (NLLB) is a first-of-its-kind, AI breakthrough project\n * that open-sources models capable of delivering high-quality translations directly\n * between any pair of 200+ languages — including low-resource languages like Asturian,\n * Luganda, Urdu and more. It aims to help people communicate with anyone, anywhere,\n * regardless of their language preferences. For more information, check out their\n * [paper](https://arxiv.org/abs/2207.04672).\n * \n * For a list of supported languages (along with their language codes),\n * @see {@link https://github.com/facebookresearch/flores/blob/main/flores200/README.md#languages-in-flores-200}\n */\nclass NllbTokenizer extends PreTrainedTokenizer {\n\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        this.languageRegex = /^[a-z]{3}_[A-Z][a-z]{3}$/;\n        this.language_codes = this.special_tokens.filter(x => this.languageRegex.test(x));\n        this.lang_to_token = x => x; // Identity function\n    }\n\n    /**\n     * Helper function to build translation inputs for an `NllbTokenizer`.\n     * @param {string|string[]} raw_inputs The text to tokenize.\n     * @param {Object} tokenizer_options Options to be sent to the tokenizer\n     * @param {Object} generate_kwargs Generation options.\n     * @returns {Object} Object to be passed to the model.\n     */\n    _build_translation_inputs(raw_inputs, tokenizer_options, generate_kwargs) {\n        return _build_translation_inputs(this, raw_inputs, tokenizer_options, generate_kwargs);\n    }\n}\n\n/**\n * The M2M100Tokenizer class is used to tokenize text for M2M100 (\"Many-to-Many\") models.\n * \n * M2M100 is a multilingual encoder-decoder (seq-to-seq) model trained for Many-to-Many\n * multilingual translation. It was introduced in this [paper](https://arxiv.org/abs/2010.11125)\n * and first released in [this](https://github.com/pytorch/fairseq/tree/master/examples/m2m_100) repository.\n * \n * For a list of supported languages (along with their language codes),\n * @see {@link https://huggingface.co/facebook/m2m100_418M#languages-covered}\n */\nclass M2M100Tokenizer extends PreTrainedTokenizer {\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        this.languageRegex = /^__[a-z]{2,3}__$/;\n        this.language_codes = this.special_tokens\n            .filter(x => this.languageRegex.test(x))\n            .map(x => x.slice(2, -2));\n        this.lang_to_token = x => `__${x}__`;\n    }\n\n    /**\n     * Helper function to build translation inputs for an `M2M100Tokenizer`.\n     * @param {string|string[]} raw_inputs The text to tokenize.\n     * @param {Object} tokenizer_options Options to be sent to the tokenizer\n     * @param {Object} generate_kwargs Generation options.\n     * @returns {Object} Object to be passed to the model.\n     */\n    _build_translation_inputs(raw_inputs, tokenizer_options, generate_kwargs) {\n        return _build_translation_inputs(this, raw_inputs, tokenizer_options, generate_kwargs);\n    }\n}\n\n/**\n * WhisperTokenizer tokenizer\n * @extends PreTrainedTokenizer\n */\nclass WhisperTokenizer extends PreTrainedTokenizer {\n\n    get timestamp_begin() {\n        return this.model.convert_tokens_to_ids([\"<|notimestamps|>\"])[0] + 1;\n    }\n\n    /**\n     * Decodes automatic speech recognition (ASR) sequences.\n     * @param {Array<{tokens: bigint[], token_timestamps?: number[], stride: number[]}>} sequences The sequences to decode.\n     * @param {Object} options The options to use for decoding.\n     * @returns {Array<string|{chunks?: undefined|Array<{language: string|null, timestamp: Array<number|null>, text: string}>}>} The decoded sequences.\n     */\n    _decode_asr(sequences, {\n        return_timestamps = false,\n        return_language = false,\n        time_precision = null,\n        force_full_sequences = true\n    } = {}) {\n        // Set force_full_sequences=false if you want streaming\n        // TODO add support for `return_language`\n\n        // Internal method meant to only be used by asr pipeline.\n        // Handles all the little quirks specific to whisper to handle\n        // the various options not allowed in other seq2seq models\n\n        // =========== Overview ============\n        // - iterate over all outputs\n        // - all tokens within output\n        // - Each token can be\n        //   - language token\n        //   - special token\n        //   - timestamp token\n        //   - text token\n        // - We accumulate the text tokens.\n        // - We split on end timestamps\n        // - Lots of complexity comes from stride and timestamps\n\n        if (time_precision === null) {\n            throw Error(\"Must specify time_precision\")\n        }\n        let last_language = null;\n\n        const returnWordTimestamps = return_timestamps === \"word\";\n\n        function new_chunk() {\n            return { \"language\": last_language, \"timestamp\": [null, null], \"text\": \"\" };\n        }\n\n        // Welcome to the state machine!\n        const chunks = [];\n        let chunk = new_chunk();\n        let time_offset = 0.0;\n        const timestamp_begin = this.timestamp_begin;\n        // Whisper timestamp tokens start from 0.00 and go to timestamp 30.00 in 0.02 increments. \n        // We can calculate the last time stamp token as timestamp_begin plus the number of tokens \n        // tokens from 0.00 to 30.00 which is 1500. \n        const total_timestamp_tokens = 1500; // (30.00 - 0.00) / 0.02\n        const timestamp_end = timestamp_begin + total_timestamp_tokens;\n\n        let previous_tokens = [];\n        let previous_token_timestamps = [];\n\n        let skip = false;\n        let right_stride_start = null;\n\n\n        const all_special_ids = new Set(this.all_special_ids);\n\n        for (const output of sequences) {\n            // NOTE: python version has batches, so it uses [0]\n            const token_ids = output.tokens;\n            const token_timestamps = returnWordTimestamps ? output.token_timestamps : null;\n\n            // These keep track of timestamps within strides, which need\n            // to be skipped and resolve all tokens in a single chunk.\n            let last_timestamp = null;\n            let first_timestamp = timestamp_begin;\n\n            if (\"stride\" in output) {\n                const [chunk_len, stride_left, stride_right] = output.stride;\n\n                // Offset the timings to account for the other `model_outputs`.\n                time_offset -= stride_left;\n                right_stride_start = chunk_len - stride_right;\n\n                // Keeping track of timestamps within strides\n                // We're going to NOT split on those, and delay until we're\n                // out of BOTH stride. Otherwise lots of issues occur and\n                // corner cases\n                if (stride_left) {\n                    first_timestamp = stride_left / time_precision + timestamp_begin;\n                }\n\n                if (stride_right) {\n                    for (let i = token_ids.length - 1; i >= 0; --i) {\n                        const token = Number(token_ids[i]);\n                        if (token >= timestamp_begin) {\n                            // There can be several token in the right stride\n                            // But the last one is ALWAYS going to be skipped\n                            if (last_timestamp !== null && (token - timestamp_begin) * time_precision < right_stride_start) {\n                                break;\n                            }\n                            last_timestamp = token;\n                        }\n                    }\n                }\n            }\n\n            let current_tokens = [];\n            let current_token_timestamps = [];\n\n            // - all tokens within output\n            for (let i = 0; i < token_ids.length; ++i) {\n                const token = Number(token_ids[i]);\n                // 4 possible states for each token\n                // - 1/ Language code\n                // - 2/ all other special tokens (which we ignore)\n                // - 3/ Timestamp\n                // - 4/ Regular text\n\n                if (all_special_ids.has(token)) {\n                    const text = this.decode([token]);\n                    const language = _models_whisper_common_whisper_js__WEBPACK_IMPORTED_MODULE_7__.WHISPER_LANGUAGE_MAPPING.get(text.slice(2, -2));\n\n                    if (language !== undefined) {\n                        // 1/ Indeed some language\n                        // TODO Handle when language is different from the previous\n                        // one, and we cannot use timestamped tokens to create chunks\n                        if (last_language !== null && language !== last_language && !return_timestamps) {\n                            previous_tokens.push(current_tokens);\n                            const resolved_tokens = this.findLongestCommonSequence(previous_tokens)[0];\n                            const resolved_text = this.decode(resolved_tokens);\n                            chunk.text = resolved_text;\n                            chunks.push(chunk);\n\n                            // Flush all our temporary context\n                            previous_tokens = [];\n                            current_tokens = [];\n                            chunk = new_chunk();\n                        }\n\n                        last_language = chunk.language = language;\n                    } else {\n                        // 2/ This is a regular special token, ignoring it\n                    }\n                } else if (token >= timestamp_begin && token <= timestamp_end) {\n                    // 3/ Timestamp token\n                    const time = (token - timestamp_begin) * time_precision + time_offset;\n                    const rounded_time = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.round)(time, 2);\n\n                    if (last_timestamp !== null && token >= last_timestamp) {\n                        // Whisper outputted a timestamp token, but it falls within\n                        // our stride, so we're going to skip it for the time being\n                        // and resolve this later\n                        // Skip is necessary because timestamp tokens always come\n                        // by pair, so we need to skip the next one too (which would mark the start of another chunk).\n                        skip = true;\n                    } else if (skip || (previous_tokens.length > 0 && token < first_timestamp)) {\n                        skip = false;\n                    } else if (chunk.timestamp[0] === null) {\n                        chunk.timestamp[0] = rounded_time;\n                    } else {\n                        // This is the end of the timestamp chunk\n                        if (rounded_time === chunk.timestamp[0]) {\n                            // This is a bug in timestamp token output\n                            // where we're taking the duplicate token\n                            // as a stop where it should be a start.\n                            // This is an issue in the underlying model output\n                            // Let's just skip it so it becomes de-factor a start agin\n                        } else {\n                            chunk.timestamp[1] = rounded_time;\n\n                            // Handling merges\n                            previous_tokens.push(current_tokens)\n\n                            if (returnWordTimestamps) {\n                                previous_token_timestamps.push(current_token_timestamps);\n                            }\n                            const [resolved_tokens, resolved_token_timestamps] = this.findLongestCommonSequence(\n                                previous_tokens, previous_token_timestamps\n                            )\n\n                            const resolved_text = this.decode(resolved_tokens)\n                            chunk.text = resolved_text\n\n                            if (returnWordTimestamps) {\n                                chunk.words = this.collateWordTimestamps(\n                                    resolved_tokens, resolved_token_timestamps, last_language,\n                                )\n                            }\n\n                            chunks.push(chunk)\n\n                            // Flush all our temporary context\n                            previous_tokens = []\n                            current_tokens = []\n                            previous_token_timestamps = []\n                            current_token_timestamps = []\n                            chunk = new_chunk()\n                        }\n                    }\n\n                } else {\n                    // 4/ Regular token\n                    // We just append to the list of all tokens so we can handle\n                    // merges later and decode into text.\n                    current_tokens.push(token)\n\n                    if (returnWordTimestamps) {\n                        let start_time = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.round)(token_timestamps[i] + time_offset, 2);\n\n                        let end_time;\n                        if (i + 1 < token_timestamps.length) {\n                            end_time = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.round)(token_timestamps[i + 1] + time_offset, 2);\n\n                            // Do not allow punctuation-only tokens to have a duration.\n                            // This prevents long pauses from messing up the timestamps.\n                            const decoded_text = this.decode([token]);\n                            if (PUNCTUATION_ONLY_REGEX.test(decoded_text)) {\n                                // Add `time_precision` to avoid overlapping timestamps\n                                end_time = (0,_utils_maths_js__WEBPACK_IMPORTED_MODULE_3__.round)(Math.min(start_time + time_precision, end_time), 2);\n                            }\n                        } else {\n                            // should never happen\n                            end_time = null;\n                        }\n                        current_token_timestamps.push([start_time, end_time]);\n                    }\n\n                }\n            }\n\n            if ('stride' in output) {\n                const [chunk_len, stride_left, stride_right] = output.stride;\n                time_offset += chunk_len - stride_right\n            }\n\n            // Leftover tokens\n            if (current_tokens.length > 0) {\n                previous_tokens.push(current_tokens)\n                if (returnWordTimestamps) {\n                    previous_token_timestamps.push(current_token_timestamps);\n                }\n            } else if (previous_tokens.every(p => p.length === 0)) {\n                // Flushing previous tokens (END)\"\n                chunk = new_chunk()\n                previous_tokens = []\n                current_tokens = []\n                previous_token_timestamps = [];\n                current_token_timestamps = [];\n            }\n\n        }\n\n        if (previous_tokens.length > 0) {\n            if (force_full_sequences && return_timestamps) {\n                // Last token should always be timestamps, so there shouldn't be\n                // leftover\n                throw new Error(\n                    \"Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. \" +\n                    \"Also make sure WhisperTimeStampLogitsProcessor was used during generation.\"\n                );\n            }\n\n            // Happens when we don't use timestamps\n            const [resolved_tokens, resolved_token_timestamps] = this.findLongestCommonSequence(previous_tokens, previous_token_timestamps);\n\n            // Flushing previous tokens (FINAL)\n            const resolved_text = this.decode(resolved_tokens);\n            chunk.text = resolved_text;\n            if (returnWordTimestamps) {\n                chunk.words = this.collateWordTimestamps(\n                    resolved_tokens, resolved_token_timestamps, last_language,\n                )\n            }\n            chunks.push(chunk);\n        }\n\n        let optional = Object.create(null);\n\n        // Preparing and cleaning up the pipeline output\n        const full_text = chunks.map(chunk => chunk.text).join('');\n        if (return_timestamps || return_language) {\n            for (let i = 0; i < chunks.length; ++i) {\n                const chunk = chunks[i];\n                if (!return_timestamps) {\n                    delete chunk[\"timestamp\"];\n                }\n\n                if (!return_language) {\n                    delete chunk[\"language\"];\n                }\n            }\n            if (returnWordTimestamps) {\n                const new_chunks = [];\n                for (const chunk of chunks) {\n                    for (const word of chunk.words) {\n                        new_chunks.push(word);\n                    }\n                }\n                optional = { \"chunks\": new_chunks };\n            } else {\n                optional = { \"chunks\": chunks };\n            }\n        }\n        return [full_text, optional];\n\n    }\n\n    /**\n     * Finds the longest common sequence among the provided sequences.\n     * @param {number[][]} sequences An array of sequences of token ids to compare.\n     * @returns {number[][]} The longest common sequence found.\n     * @throws {Error} If there is a bug within the function.\n     * @private\n     */\n    findLongestCommonSequence(sequences, token_timestamp_sequences = null) {\n        // It would be much harder to do O(n) because of fault tolerance.\n        // We actually have a really good property which is that the total sequence\n        // MUST be those subsequences in order.\n        // If token_timestamp_sequences is provided, will split those sequences in\n        // exactly the same way.\n        let leftSequence = sequences[0];\n        let leftLength = leftSequence.length;\n        let totalSequence = [];\n\n        const use_token_timestamp_sequences = Array.isArray(token_timestamp_sequences) && token_timestamp_sequences.length > 0;\n        let total_token_timestamp_sequence = use_token_timestamp_sequences ? [] : null;\n        let left_token_timestamp_sequence = use_token_timestamp_sequences ? token_timestamp_sequences[0] : null;\n        for (let i = 1; i < sequences.length; ++i) {\n            const rightSequence = sequences[i];\n            let max = 0.0;\n            let maxIndices = [leftLength, leftLength, 0, 0];\n            // Here we're sliding matches\n            // [a, b, c, d]\n            //          [c, d, f]\n            // =        [c] == [d]\n\n            // [a, b, c, d]\n            //       [c, d, f]\n            // =     [c, d] == [c, d]\n\n\n            // [a, b, c, d]\n            //    [c, d, f]\n\n            // =  [b, c, d] == [c, d, f]\n\n            // [a, b, c, d]\n            // [c, d, f]\n\n            // [a, b, c] == [c, d, f]\n\n            // [a, b, c, d]\n            // [d, f]\n\n            // [a, b] == [d, f]\n\n            // [a, b, c, d]\n            // [f]\n\n            // [a] == [f]\n\n            const rightLength = rightSequence.length;\n            for (let j = 1; j < leftLength + rightLength; ++j) {\n                // Slightly convoluted because we don't want out of bound indices\n                // This will be necessary for a small conflict resolution optimization\n                // later\n                const leftStart = Math.max(0, leftLength - j);\n                const leftStop = Math.min(leftLength, leftLength + rightLength - j);\n                const left = leftSequence.slice(leftStart, leftStop);\n                const rightStart = Math.max(0, j - leftLength);\n                const rightStop = Math.min(rightLength, j);\n                const right = rightSequence.slice(rightStart, rightStop);\n                if (left.length !== right.length) {\n                    throw new Error(\"There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.\");\n                }\n\n                let matches;\n                if (use_token_timestamp_sequences) {\n                    // Get length of longest subsequence of tokens that match\n                    // and have timestamps that are in order\n                    matches = left.filter((elem, idx) => (\n                        elem === right[idx]\n                        && left_token_timestamp_sequence[leftStart + idx] <= token_timestamp_sequences[i][rightStart + idx]\n                    )).length;\n                } else {\n                    matches = left.filter((elem, idx) => elem === right[idx]).length;\n                }\n\n                // epsilon to favor long perfect matches\n                const eps = j / 10000.0;\n                const matching = matches / j + eps;\n                if (matches > 1 && matching > max) {\n                    max = matching;\n                    maxIndices = [leftStart, leftStop, rightStart, rightStop];\n                }\n            }\n            const [leftStart, leftStop, rightStart, rightStop] = maxIndices;\n            const leftMid = Math.floor((leftStop + leftStart) / 2);\n            const rightMid = Math.floor((rightStop + rightStart) / 2);\n            totalSequence.push(...leftSequence.slice(0, leftMid));\n            leftSequence = rightSequence.slice(rightMid);\n            leftLength = leftSequence.length;\n\n            if (use_token_timestamp_sequences) {\n                total_token_timestamp_sequence.push(...left_token_timestamp_sequence.slice(0, leftMid));\n                left_token_timestamp_sequence = token_timestamp_sequences[i].slice(rightMid);\n            }\n        }\n        totalSequence.push(...leftSequence);\n\n        if (use_token_timestamp_sequences) {\n            total_token_timestamp_sequence.push(...left_token_timestamp_sequence);\n            return [totalSequence, total_token_timestamp_sequence];\n        } else {\n            return [totalSequence, []];\n        }\n    }\n\n    /** @private */\n    collateWordTimestamps(tokens, token_timestamps, language) {\n\n        const [words, _, token_indices] = this.combineTokensIntoWords(tokens, language);\n\n        const timings = [];\n        for (let i = 0; i < words.length; ++i) {\n            const indices = token_indices[i];\n            timings.push({\n                text: words[i],\n                timestamp: [\n                    token_timestamps[indices.at(0)][0],\n                    token_timestamps[indices.at(-1)][1],\n                ],\n            });\n        }\n        return timings;\n    }\n\n    /**\n     * Groups tokens by word. Returns a tuple containing a list of strings with the words,\n     * and a list of `token_id` sequences with the tokens making up each word.\n     * @param {number[]} tokens \n     * @param {string} [language] \n     * @param {string} prepend_punctionations \n     * @param {string} append_punctuations \n     * \n     * @private\n     */\n    combineTokensIntoWords(tokens, language, prepend_punctionations = \"\\\"'“¡¿([{-\", append_punctuations = \"\\\"'.。,，!！?？:：”)]}、\") {\n        language = language ?? 'english';\n\n        let words, word_tokens, token_indices;\n\n        if ([\"chinese\", \"japanese\", \"thai\", \"lao\", \"myanmar\"].includes(language)) {\n            // These languages don't typically use spaces.\n            [words, word_tokens, token_indices] = this.splitTokensOnUnicode(tokens)\n        } else {\n            [words, word_tokens, token_indices] = this.splitTokensOnSpaces(tokens)\n        }\n\n        return this.mergePunctuations(words, word_tokens, token_indices, prepend_punctionations, append_punctuations);\n    }\n\n    /** @type {PreTrainedTokenizer['decode']} */\n    decode(\n        token_ids,\n        decode_args,\n    ) {\n        let text;\n        // @ts-ignore\n        if (decode_args?.decode_with_timestamps) {\n            if (token_ids instanceof _utils_tensor_js__WEBPACK_IMPORTED_MODULE_4__.Tensor) {\n                token_ids = prepareTensorForDecode(token_ids);\n            }\n            text = this.decodeWithTimestamps(token_ids, decode_args);\n        } else {\n            text = super.decode(token_ids, decode_args);\n        }\n        // TODO: implement offsets\n        // if (decode_args.output_offsets) {\n        //     let offsets = this.computeOffsets\n        // }\n        return text;\n    }\n\n    /**\n     * @param {number[]|bigint[]} token_ids List of token IDs to decode.\n     * @param {Object} decode_args Optional arguments for decoding\n     * @private\n     */\n    decodeWithTimestamps(token_ids, decode_args) {\n        const time_precision = decode_args?.time_precision ?? 0.02;\n\n        const timestamp_begin = Array.from(this.all_special_ids).at(-1) + 1;\n        /**@type {Array} */\n        let outputs = [[]];\n        for (let token of token_ids) {\n            token = Number(token);\n            if (token >= timestamp_begin) {\n                const timestamp = ((token - timestamp_begin) * time_precision).toFixed(2);\n                outputs.push(`<|${timestamp}|>`);\n                outputs.push([]);\n            } else {\n                outputs[outputs.length - 1].push(token);\n            }\n        }\n        outputs = outputs.map(\n            s => typeof s === 'string' ? s : super.decode(s, decode_args)\n        )\n\n        return outputs.join('');\n    }\n\n    /**\n     * Combine tokens into words by splitting at any position where the tokens are decoded as valid unicode points.\n     * @param {number[]} tokens \n     * @returns {*}\n     * @private\n     */\n    splitTokensOnUnicode(tokens) {\n        const decoded_full = this.decode(tokens, {\n            // @ts-ignore\n            decode_with_timestamps: true,\n        });\n        const replacement_char = '\\uFFFD';\n\n        const words = []\n        const word_tokens = []\n        const token_indices = []\n        let current_tokens = []\n        let current_indices = []\n        let unicode_offset = 0\n\n        for (let token_idx = 0; token_idx < tokens.length; ++token_idx) {\n            const token = tokens[token_idx];\n\n            current_tokens.push(token);\n            current_indices.push(token_idx);\n\n            const decoded = this.decode(current_tokens, {\n                // @ts-ignore\n                decode_with_timestamps: true,\n            });\n\n            if (!decoded.includes(replacement_char) || decoded_full[unicode_offset + decoded.indexOf(replacement_char)] === replacement_char) {\n                words.push(decoded)\n                word_tokens.push(current_tokens)\n                token_indices.push(current_indices)\n                current_tokens = []\n                current_indices = []\n                unicode_offset += decoded.length;\n            }\n\n        }\n\n        return [words, word_tokens, token_indices]\n    }\n\n    /**\n     * Combine tokens into words by splitting at whitespace and punctuation tokens.\n     * @param {number[]} tokens \n     * @private\n     */\n    splitTokensOnSpaces(tokens) {\n\n        const [subwords, subword_tokens_list, subword_indices_list] = this.splitTokensOnUnicode(tokens);\n\n        const words = []\n        const word_tokens = []\n        const token_indices = []\n\n        const punctuationRegex = new RegExp(`^[${PUNCTUATION_REGEX}]$`, 'gu');\n\n        for (let i = 0; i < subwords.length; ++i) {\n\n            const subword = subwords[i];\n            const subword_tokens = subword_tokens_list[i];\n            const subword_indices = subword_indices_list[i];\n\n            // @ts-ignore\n            const special = subword_tokens[0] >= this.model.tokens_to_ids.get('<|endoftext|>');\n            const with_space = subword.startsWith(' ');\n            const trimmed = subword.trim();\n            const punctuation = punctuationRegex.test(trimmed);\n\n            if (special || with_space || punctuation || words.length === 0) {\n                words.push(subword);\n                word_tokens.push(subword_tokens);\n                token_indices.push(subword_indices);\n            } else {\n                const ix = words.length - 1;\n                words[ix] += subword;\n                word_tokens[ix].push(...subword_tokens);\n                token_indices[ix].push(...subword_indices);\n            }\n        }\n\n        return [words, word_tokens, token_indices];\n\n    }\n\n    /**\n     * Merges punctuation tokens with neighboring words.\n     * @param {string[]} words \n     * @param {number[][]} tokens \n     * @param {number[][]} indices \n     * @param {string} prepended \n     * @param {string} appended \n     * @private\n     */\n    mergePunctuations(words, tokens, indices, prepended, appended) {\n\n        const newWords = structuredClone(words);\n        const newTokens = structuredClone(tokens);\n        const newIndices = structuredClone(indices);\n\n\n        // prepend punctuations\n        let i = newWords.length - 2;\n        let j = newWords.length - 1;\n\n        while (i >= 0) {\n            if (newWords[i].startsWith(' ') && prepended.includes(newWords[i].trim())) {\n                newWords[j] = newWords[i] + newWords[j];\n                newTokens[j] = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(newTokens[i], newTokens[j]);\n                newIndices[j] = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(newIndices[i], newIndices[j]);\n                newWords[i] = '';\n                newTokens[i] = [];\n                newIndices[i] = [];\n            } else {\n                j = i;\n            }\n            --i;\n        }\n\n        // append punctuations\n        i = 0;\n        j = 1;\n        while (j < newWords.length) {\n            if (!newWords[i].endsWith(' ') && appended.includes(newWords[j])) {\n                newWords[i] += newWords[j];\n                newTokens[i] = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(newTokens[i], newTokens[j]);\n                newIndices[i] = (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)(newIndices[i], newIndices[j]);\n                newWords[j] = '';\n                newTokens[j] = [];\n                newIndices[j] = [];\n            } else {\n                i = j;\n            }\n            ++j;\n        }\n\n        return [\n            newWords.filter(x => x),\n            newTokens.filter(x => x.length > 0),\n            newIndices.filter(x => x.length > 0),\n        ]\n    }\n}\nclass CodeGenTokenizer extends PreTrainedTokenizer { }\nclass CLIPTokenizer extends PreTrainedTokenizer { }\nclass SiglipTokenizer extends PreTrainedTokenizer { }\n\n/**\n * @todo This model is not yet supported by Hugging Face's \"fast\" tokenizers library (https://github.com/huggingface/tokenizers).\n * Therefore, this implementation (which is based on fast tokenizers) may produce slightly inaccurate results.\n */\nclass MarianTokenizer extends PreTrainedTokenizer {\n    /**\n     * Create a new MarianTokenizer instance.\n     * @param {Object} tokenizerJSON The JSON of the tokenizer.\n     * @param {Object} tokenizerConfig The config of the tokenizer.\n     */\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        this.languageRegex = /^(>>\\w+<<)\\s*/g;\n\n        this.supported_language_codes = this.model.vocab.filter(\n            x => this.languageRegex.test(x)\n        );\n\n        console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\\'s \"fast\" tokenizers library. Therefore, you may experience slightly inaccurate results.')\n    }\n\n    /**\n     * Encodes a single text. Overriding this method is necessary since the language codes\n     * must be removed before encoding with sentencepiece model.\n     * @see https://github.com/huggingface/transformers/blob/12d51db243a00726a548a43cc333390ebae731e3/src/transformers/models/marian/tokenization_marian.py#L204-L213\n     *\n     * @param {string|null} text The text to encode.\n     * @returns {Array} The encoded tokens.\n     */\n    _encode_text(text) {\n        if (text === null) return null;\n\n        // Check if text starts with language code:\n        const [matchInfo, ...remainder] = text.trim().split(this.languageRegex);\n\n        if (remainder.length === 0) {\n            // No language code, encode normally\n            return super._encode_text(matchInfo);\n\n        } else if (remainder.length === 2) {\n            // Text starts with language code, so we do not encode it with sentencepiece.\n            const [language, text] = remainder;\n\n            if (!this.supported_language_codes.includes(language)) {\n                console.warn(`Unsupported language code \"${language}\" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`)\n            }\n            return (0,_utils_core_js__WEBPACK_IMPORTED_MODULE_1__.mergeArrays)([language], super._encode_text(text));\n        }\n    }\n\n}\n\nclass Wav2Vec2CTCTokenizer extends PreTrainedTokenizer { }\n\nclass BlenderbotTokenizer extends PreTrainedTokenizer { }\nclass BlenderbotSmallTokenizer extends PreTrainedTokenizer { }\n\nclass SpeechT5Tokenizer extends PreTrainedTokenizer { }\n\nclass NougatTokenizer extends PreTrainedTokenizer { }\n\nclass VitsTokenizer extends PreTrainedTokenizer {\n\n    constructor(tokenizerJSON, tokenizerConfig) {\n        super(tokenizerJSON, tokenizerConfig);\n\n        // Custom decoder function\n        this.decoder = new VitsDecoder({});\n    }\n}\n\nclass CohereTokenizer extends PreTrainedTokenizer { }\n\nclass MgpstrTokenizer extends PreTrainedTokenizer { }\n\n/**\n * Helper class which is used to instantiate pretrained tokenizers with the `from_pretrained` function.\n * The chosen tokenizer class is determined by the type specified in the tokenizer config.\n * \n * @example\n * const tokenizer = await AutoTokenizer.from_pretrained('Xenova/bert-base-uncased');\n */\nclass AutoTokenizer {\n    static TOKENIZER_CLASS_MAPPING = {\n        T5Tokenizer,\n        DistilBertTokenizer,\n        CamembertTokenizer,\n        DebertaTokenizer,\n        DebertaV2Tokenizer,\n        BertTokenizer,\n        HerbertTokenizer,\n        ConvBertTokenizer,\n        RoFormerTokenizer,\n        XLMTokenizer,\n        ElectraTokenizer,\n        MobileBertTokenizer,\n        SqueezeBertTokenizer,\n        AlbertTokenizer,\n        GPT2Tokenizer,\n        BartTokenizer,\n        MBartTokenizer,\n        MBart50Tokenizer,\n        RobertaTokenizer,\n        WhisperTokenizer,\n        CodeGenTokenizer,\n        CLIPTokenizer,\n        SiglipTokenizer,\n        MarianTokenizer,\n        BloomTokenizer,\n        NllbTokenizer,\n        M2M100Tokenizer,\n        LlamaTokenizer,\n        CodeLlamaTokenizer,\n        XLMRobertaTokenizer,\n        MPNetTokenizer,\n        FalconTokenizer,\n        GPTNeoXTokenizer,\n        EsmTokenizer,\n        Wav2Vec2CTCTokenizer,\n        BlenderbotTokenizer,\n        BlenderbotSmallTokenizer,\n        SpeechT5Tokenizer,\n        NougatTokenizer,\n        VitsTokenizer,\n        Qwen2Tokenizer,\n        GemmaTokenizer,\n        Grok1Tokenizer,\n        CohereTokenizer,\n        MgpstrTokenizer,\n\n        // Base case:\n        PreTrainedTokenizer,\n    }\n\n\n    /**\n     * Instantiate one of the tokenizer classes of the library from a pretrained model.\n     * \n     * The tokenizer class to instantiate is selected based on the `tokenizer_class` property of the config object\n     * (either passed as an argument or loaded from `pretrained_model_name_or_path` if possible)\n     * \n     * @param {string} pretrained_model_name_or_path The name or path of the pretrained model. Can be either:\n     * - A string, the *model id* of a pretrained tokenizer hosted inside a model repo on huggingface.co.\n     *   Valid model ids can be located at the root-level, like `bert-base-uncased`, or namespaced under a\n     *   user or organization name, like `dbmdz/bert-base-german-cased`.\n     * - A path to a *directory* containing tokenizer files, e.g., `./my_model_directory/`.\n     * @param {PretrainedTokenizerOptions} options Additional options for loading the tokenizer.\n     * \n     * @returns {Promise<PreTrainedTokenizer>} A new instance of the PreTrainedTokenizer class.\n     */\n    static async from_pretrained(pretrained_model_name_or_path, {\n        progress_callback = null,\n        config = null,\n        cache_dir = null,\n        local_files_only = false,\n        revision = 'main',\n        legacy = null,\n    } = {}) {\n\n        const [tokenizerJSON, tokenizerConfig] = await loadTokenizer(pretrained_model_name_or_path, {\n            progress_callback,\n            config,\n            cache_dir,\n            local_files_only,\n            revision,\n            legacy,\n        })\n\n        // Some tokenizers are saved with the \"Fast\" suffix, so we remove that if present.\n        const tokenizerName = tokenizerConfig.tokenizer_class?.replace(/Fast$/, '') ?? 'PreTrainedTokenizer';\n\n        let cls = this.TOKENIZER_CLASS_MAPPING[tokenizerName];\n        if (!cls) {\n            console.warn(`Unknown tokenizer class \"${tokenizerName}\", attempting to construct from base class.`);\n            cls = PreTrainedTokenizer;\n        }\n        return new cls(tokenizerJSON, tokenizerConfig);\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/audio.js\":\n/*!****************************!*\\\n  !*** ./src/utils/audio.js ***!\n  \\****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RawAudio: () => (/* binding */ RawAudio),\n/* harmony export */   hamming: () => (/* binding */ hamming),\n/* harmony export */   hanning: () => (/* binding */ hanning),\n/* harmony export */   mel_filter_bank: () => (/* binding */ mel_filter_bank),\n/* harmony export */   read_audio: () => (/* binding */ read_audio),\n/* harmony export */   spectrogram: () => (/* binding */ spectrogram),\n/* harmony export */   window_function: () => (/* binding */ window_function)\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _maths_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"?7a2c\");\n/* harmony import */ var _tensor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tensor.js */ \"./src/utils/tensor.js\");\n/**\n * @file Helper module for audio processing. \n * \n * These functions and classes are only used internally, \n * meaning an end-user shouldn't need to access anything here.\n * \n * @module utils/audio\n */\n\n\n\n\n\n\n\n\n\n/**\n * Helper function to read audio from a path/URL.\n * @param {string|URL} url The path/URL to load the audio from.\n * @param {number} sampling_rate The sampling rate to use when decoding the audio.\n * @returns {Promise<Float32Array>} The decoded audio as a `Float32Array`.\n */\nasync function read_audio(url, sampling_rate) {\n    if (typeof AudioContext === 'undefined') {\n        // Running in node or an environment without AudioContext\n        throw Error(\n            \"Unable to load audio from path/URL since `AudioContext` is not available in your environment. \" +\n            \"Instead, audio data should be passed directly to the pipeline/processor. \" +\n            \"For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.\"\n        )\n    }\n\n    const response = await (await (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getFile)(url)).arrayBuffer();\n    const audioCTX = new AudioContext({ sampleRate: sampling_rate });\n    if (typeof sampling_rate === 'undefined') {\n        console.warn(`No sampling rate provided, using default of ${audioCTX.sampleRate}Hz.`)\n    }\n    const decoded = await audioCTX.decodeAudioData(response);\n\n    /** @type {Float32Array} */\n    let audio;\n\n    // We now replicate HuggingFace's `ffmpeg_read` method:\n    if (decoded.numberOfChannels === 2) {\n        // When downmixing a stereo audio file to mono using the -ac 1 option in FFmpeg,\n        // the audio signal is summed across both channels to create a single mono channel.\n        // However, if the audio is at full scale (i.e. the highest possible volume level),\n        // the summing of the two channels can cause the audio signal to clip or distort.\n\n        // To prevent this clipping, FFmpeg applies a scaling factor of 1/sqrt(2) (~ 0.707)\n        // to the audio signal before summing the two channels. This scaling factor ensures\n        // that the combined audio signal will not exceed the maximum possible level, even\n        // if both channels are at full scale.\n\n        // After applying this scaling factor, the audio signal from both channels is summed\n        // to create a single mono channel. It's worth noting that this scaling factor is\n        // only applied when downmixing stereo audio to mono using the -ac 1 option in FFmpeg.\n        // If you're using a different downmixing method, or if you're not downmixing the\n        // audio at all, this scaling factor may not be needed.\n        const SCALING_FACTOR = Math.sqrt(2);\n\n        const left = decoded.getChannelData(0);\n        const right = decoded.getChannelData(1);\n\n        audio = new Float32Array(left.length);\n        for (let i = 0; i < decoded.length; ++i) {\n            audio[i] = SCALING_FACTOR * (left[i] + right[i]) / 2;\n        }\n\n    } else {\n        // If the audio is not stereo, we can just use the first channel:\n        audio = decoded.getChannelData(0);\n    }\n\n    return audio;\n}\n\n/**\n * Helper function to generate windows that are special cases of the generalized cosine window.\n * See https://www.mathworks.com/help/signal/ug/generalized-cosine-windows.html for more information.\n * @param {number} M Number of points in the output window. If zero or less, an empty array is returned.\n * @param {number} a_0 Offset for the generalized cosine window.\n * @returns {Float64Array} The generated window.\n */\nfunction generalized_cosine_window(M, a_0) {\n    if (M < 1) {\n        return new Float64Array();\n    }\n    if (M === 1) {\n        return new Float64Array([1]);\n    }\n\n    const a_1 = 1 - a_0;\n    const factor = 2 * Math.PI / (M - 1);\n\n    const cos_vals = new Float64Array(M);\n    for (let i = 0; i < M; ++i) {\n        cos_vals[i] = a_0 - a_1 * Math.cos(i * factor);\n    }\n    return cos_vals;\n}\n\n/**\n * Generates a Hanning window of length M.\n * See https://numpy.org/doc/stable/reference/generated/numpy.hanning.html for more information.\n *\n * @param {number} M The length of the Hanning window to generate.\n * @returns {Float64Array} The generated Hanning window.\n */\nfunction hanning(M) {\n    return generalized_cosine_window(M, 0.5);\n}\n\n\n/**\n * Generates a Hamming window of length M.\n * See https://numpy.org/doc/stable/reference/generated/numpy.hamming.html for more information.\n *\n * @param {number} M The length of the Hamming window to generate.\n * @returns {Float64Array} The generated Hamming window.\n */\nfunction hamming(M) {\n    return generalized_cosine_window(M, 0.54);\n}\n\n\nconst HERTZ_TO_MEL_MAPPING = {\n    \"htk\": (/** @type {number} */ freq) => 2595.0 * Math.log10(1.0 + (freq / 700.0)),\n    \"kaldi\": (/** @type {number} */ freq) => 1127.0 * Math.log(1.0 + (freq / 700.0)),\n    \"slaney\": (/** @type {number} */ freq, min_log_hertz = 1000.0, min_log_mel = 15.0, logstep = 27.0 / Math.log(6.4)) =>\n        freq >= min_log_hertz\n            ? min_log_mel + Math.log(freq / min_log_hertz) * logstep\n            : 3.0 * freq / 200.0,\n}\n\n/**\n * @template {Float32Array|Float64Array|number} T \n * @param {T} freq \n * @param {string} [mel_scale]\n * @returns {T}\n */\nfunction hertz_to_mel(freq, mel_scale = \"htk\") {\n    const fn = HERTZ_TO_MEL_MAPPING[mel_scale];\n    if (!fn) {\n        throw new Error('mel_scale should be one of \"htk\", \"slaney\" or \"kaldi\".');\n    }\n\n    // @ts-expect-error ts(2322)\n    return typeof freq === 'number' ? fn(freq) : freq.map(x => fn(x));\n}\n\nconst MEL_TO_HERTZ_MAPPING = {\n    \"htk\": (/** @type {number} */ mels) => 700.0 * (10.0 ** (mels / 2595.0) - 1.0),\n    \"kaldi\": (/** @type {number} */ mels) => 700.0 * (Math.exp(mels / 1127.0) - 1.0),\n    \"slaney\": (/** @type {number} */ mels, min_log_hertz = 1000.0, min_log_mel = 15.0, logstep = Math.log(6.4) / 27.0) => mels >= min_log_mel\n        ? min_log_hertz * Math.exp(logstep * (mels - min_log_mel))\n        : 200.0 * mels / 3.0,\n}\n\n/**\n * @template {Float32Array|Float64Array|number} T \n * @param {T} mels \n * @param {string} [mel_scale]\n * @returns {T}\n */\nfunction mel_to_hertz(mels, mel_scale = \"htk\") {\n    const fn = MEL_TO_HERTZ_MAPPING[mel_scale];\n    if (!fn) {\n        throw new Error('mel_scale should be one of \"htk\", \"slaney\" or \"kaldi\".');\n    }\n\n    // @ts-expect-error ts(2322)\n    return typeof mels === 'number' ? fn(mels) : mels.map(x => fn(x));\n}\n\n/**\n* Creates a triangular filter bank.\n*\n* Adapted from torchaudio and librosa.\n*\n* @param {Float64Array} fft_freqs Discrete frequencies of the FFT bins in Hz, of shape `(num_frequency_bins,)`.\n* @param {Float64Array} filter_freqs Center frequencies of the triangular filters to create, in Hz, of shape `(num_mel_filters,)`.\n* @returns {number[][]} of shape `(num_frequency_bins, num_mel_filters)`.\n*/\nfunction _create_triangular_filter_bank(fft_freqs, filter_freqs) {\n    const filter_diff = Float64Array.from(\n        { length: filter_freqs.length - 1 },\n        (_, i) => filter_freqs[i + 1] - filter_freqs[i]\n    );\n\n    const slopes = Array.from({\n        length: fft_freqs.length\n    }, () => new Array(filter_freqs.length));\n\n    for (let j = 0; j < fft_freqs.length; ++j) {\n        const slope = slopes[j];\n        for (let i = 0; i < filter_freqs.length; ++i) {\n            slope[i] = filter_freqs[i] - fft_freqs[j];\n        }\n    }\n\n    const numFreqs = filter_freqs.length - 2;\n    const ret = Array.from({ length: numFreqs }, () => new Array(fft_freqs.length));\n\n    for (let j = 0; j < fft_freqs.length; ++j) { // 201\n        const slope = slopes[j];\n        for (let i = 0; i < numFreqs; ++i) { // 80\n            const down = -slope[i] / filter_diff[i];\n            const up = slope[i + 2] / filter_diff[i + 1];\n            ret[i][j] = Math.max(0, Math.min(down, up));\n        }\n    }\n    return ret;\n}\n\n/**\n * Return evenly spaced numbers over a specified interval.\n * @param {number} start The starting value of the sequence.\n * @param {number} end The end value of the sequence.\n * @param {number} num Number of samples to generate.\n * @returns `num` evenly spaced samples, calculated over the interval `[start, stop]`.\n */\nfunction linspace(start, end, num) {\n    const step = (end - start) / (num - 1);\n    return Float64Array.from({ length: num }, (_, i) => start + step * i);\n}\n\n/**\n * Creates a frequency bin conversion matrix used to obtain a mel spectrogram. This is called a *mel filter bank*, and\n * various implementation exist, which differ in the number of filters, the shape of the filters, the way the filters\n * are spaced, the bandwidth of the filters, and the manner in which the spectrum is warped. The goal of these\n * features is to approximate the non-linear human perception of the variation in pitch with respect to the frequency.\n * @param {number} num_frequency_bins Number of frequencies used to compute the spectrogram (should be the same as in `stft`).\n * @param {number} num_mel_filters Number of mel filters to generate.\n * @param {number} min_frequency Lowest frequency of interest in Hz.\n * @param {number} max_frequency Highest frequency of interest in Hz. This should not exceed `sampling_rate / 2`.\n * @param {number} sampling_rate Sample rate of the audio waveform.\n * @param {string} [norm] If `\"slaney\"`, divide the triangular mel weights by the width of the mel band (area normalization).\n * @param {string} [mel_scale] The mel frequency scale to use, `\"htk\"` or `\"slaney\"`.\n * @param {boolean} [triangularize_in_mel_space] If this option is enabled, the triangular filter is applied in mel space rather than frequency space.\n * This should be set to `true` in order to get the same results as `torchaudio` when computing mel filters.\n * @returns {number[][]} Triangular filter bank matrix, which is a 2D array of shape (`num_frequency_bins`, `num_mel_filters`).\n * This is a projection matrix to go from a spectrogram to a mel spectrogram.\n */\nfunction mel_filter_bank(\n    num_frequency_bins,\n    num_mel_filters,\n    min_frequency,\n    max_frequency,\n    sampling_rate,\n    norm = null,\n    mel_scale = \"htk\",\n    triangularize_in_mel_space = false,\n) {\n    if (norm !== null && norm !== \"slaney\") {\n        throw new Error('norm must be one of null or \"slaney\"');\n    }\n\n    const mel_min = hertz_to_mel(min_frequency, mel_scale);\n    const mel_max = hertz_to_mel(max_frequency, mel_scale);\n    const mel_freqs = linspace(mel_min, mel_max, num_mel_filters + 2);\n\n    let filter_freqs = mel_to_hertz(mel_freqs, mel_scale);\n    let fft_freqs; // frequencies of FFT bins in Hz\n\n    if (triangularize_in_mel_space) {\n        const fft_bin_width = sampling_rate / (num_frequency_bins * 2);\n        fft_freqs = hertz_to_mel(Float64Array.from({ length: num_frequency_bins }, (_, i) => i * fft_bin_width), mel_scale);\n        filter_freqs = mel_freqs;\n    } else {\n        fft_freqs = linspace(0, Math.floor(sampling_rate / 2), num_frequency_bins);\n    }\n\n    const mel_filters = _create_triangular_filter_bank(fft_freqs, filter_freqs);\n\n    if (norm !== null && norm === \"slaney\") {\n        // Slaney-style mel is scaled to be approx constant energy per channel\n        for (let i = 0; i < num_mel_filters; ++i) {\n            const filter = mel_filters[i];\n            const enorm = 2.0 / (filter_freqs[i + 2] - filter_freqs[i]);\n            for (let j = 0; j < num_frequency_bins; ++j) {\n                // Apply this enorm to all frequency bins\n                filter[j] *= enorm;\n            }\n        }\n    }\n\n    // TODO warn if there is a zero row\n\n    return mel_filters;\n\n}\n\n/**\n * @template {Float32Array|Float64Array} T\n * Pads an array with a reflected version of itself on both ends.\n * @param {T} array The array to pad.\n * @param {number} left The amount of padding to add to the left.\n * @param {number} right The amount of padding to add to the right.\n * @returns {T} The padded array.\n */\nfunction padReflect(array, left, right) {\n    // @ts-ignore\n    const padded = new array.constructor(array.length + left + right);\n    const w = array.length - 1;\n\n    for (let i = 0; i < array.length; ++i) {\n        padded[left + i] = array[i];\n    }\n\n    for (let i = 1; i <= left; ++i) {\n        padded[left - i] = array[(0,_core_js__WEBPACK_IMPORTED_MODULE_2__.calculateReflectOffset)(i, w)];\n    }\n\n    for (let i = 1; i <= right; ++i) {\n        padded[w + left + i] = array[(0,_core_js__WEBPACK_IMPORTED_MODULE_2__.calculateReflectOffset)(w - i, w)];\n    }\n\n    return padded;\n}\n\n/**\n * Helper function to compute `amplitude_to_db` and `power_to_db`.\n * @template {Float32Array|Float64Array} T\n * @param {T} spectrogram \n * @param {number} factor \n * @param {number} reference \n * @param {number} min_value \n * @param {number} db_range \n * @returns {T}\n */\nfunction _db_conversion_helper(spectrogram, factor, reference, min_value, db_range) {\n    if (reference <= 0) {\n        throw new Error('reference must be greater than zero');\n    }\n\n    if (min_value <= 0) {\n        throw new Error('min_value must be greater than zero');\n    }\n\n    reference = Math.max(min_value, reference);\n\n    const logReference = Math.log10(reference);\n    for (let i = 0; i < spectrogram.length; ++i) {\n        spectrogram[i] = factor * Math.log10(Math.max(min_value, spectrogram[i]) - logReference)\n    }\n\n    if (db_range !== null) {\n        if (db_range <= 0) {\n            throw new Error('db_range must be greater than zero');\n        }\n        const maxValue = (0,_maths_js__WEBPACK_IMPORTED_MODULE_1__.max)(spectrogram)[0] - db_range;\n        for (let i = 0; i < spectrogram.length; ++i) {\n            spectrogram[i] = Math.max(spectrogram[i], maxValue);\n        }\n    }\n\n    return spectrogram;\n}\n\n/**\n * Converts an amplitude spectrogram to the decibel scale. This computes `20 * log10(spectrogram / reference)`,\n * using basic logarithm properties for numerical stability. NOTE: Operates in-place.\n * \n * The motivation behind applying the log function on the (mel) spectrogram is that humans do not hear loudness on a\n * linear scale. Generally to double the perceived volume of a sound we need to put 8 times as much energy into it.\n * This means that large variations in energy may not sound all that different if the sound is loud to begin with.\n * This compression operation makes the (mel) spectrogram features match more closely what humans actually hear.\n * \n * @template {Float32Array|Float64Array} T\n * @param {T} spectrogram The input amplitude (mel) spectrogram.\n * @param {number} [reference=1.0] Sets the input spectrogram value that corresponds to 0 dB.\n * For example, use `np.max(spectrogram)` to set the loudest part to 0 dB. Must be greater than zero.\n * @param {number} [min_value=1e-5] The spectrogram will be clipped to this minimum value before conversion to decibels,\n * to avoid taking `log(0)`. The default of `1e-5` corresponds to a minimum of -100 dB. Must be greater than zero.\n * @param {number} [db_range=null] Sets the maximum dynamic range in decibels. For example, if `db_range = 80`, the\n * difference between the peak value and the smallest value will never be more than 80 dB. Must be greater than zero.\n * @returns {T} The modified spectrogram in decibels.\n */\nfunction amplitude_to_db(spectrogram, reference = 1.0, min_value = 1e-5, db_range = null) {\n    return _db_conversion_helper(spectrogram, 20.0, reference, min_value, db_range);\n}\n\n/**\n * Converts a power spectrogram to the decibel scale. This computes `10 * log10(spectrogram / reference)`,\n * using basic logarithm properties for numerical stability. NOTE: Operates in-place.\n * \n * The motivation behind applying the log function on the (mel) spectrogram is that humans do not hear loudness on a\n * linear scale. Generally to double the perceived volume of a sound we need to put 8 times as much energy into it.\n * This means that large variations in energy may not sound all that different if the sound is loud to begin with.\n * This compression operation makes the (mel) spectrogram features match more closely what humans actually hear.\n * \n * Based on the implementation of `librosa.power_to_db`.\n * \n * @template {Float32Array|Float64Array} T\n * @param {T} spectrogram The input power (mel) spectrogram. Note that a power spectrogram has the amplitudes squared!\n * @param {number} [reference=1.0] Sets the input spectrogram value that corresponds to 0 dB.\n * For example, use `np.max(spectrogram)` to set the loudest part to 0 dB. Must be greater than zero.\n * @param {number} [min_value=1e-10] The spectrogram will be clipped to this minimum value before conversion to decibels,\n * to avoid taking `log(0)`. The default of `1e-10` corresponds to a minimum of -100 dB. Must be greater than zero.\n * @param {number} [db_range=null] Sets the maximum dynamic range in decibels. For example, if `db_range = 80`, the\n * difference between the peak value and the smallest value will never be more than 80 dB. Must be greater than zero.\n * @returns {T} The modified spectrogram in decibels.\n */\nfunction power_to_db(spectrogram, reference = 1.0, min_value = 1e-10, db_range = null) {\n    return _db_conversion_helper(spectrogram, 10.0, reference, min_value, db_range);\n}\n\n/**\n * Calculates a spectrogram over one waveform using the Short-Time Fourier Transform.\n * \n * This function can create the following kinds of spectrograms:\n *   - amplitude spectrogram (`power = 1.0`)\n *   - power spectrogram (`power = 2.0`)\n *   - complex-valued spectrogram (`power = None`)\n *   - log spectrogram (use `log_mel` argument)\n *   - mel spectrogram (provide `mel_filters`)\n *   - log-mel spectrogram (provide `mel_filters` and `log_mel`)\n *\n * In this implementation, the window is assumed to be zero-padded to have the same size as the analysis frame.\n * A padded window can be obtained from `window_function()`. The FFT input buffer may be larger than the analysis frame, \n * typically the next power of two.\n * \n * @param {Float32Array|Float64Array} waveform The input waveform of shape `(length,)`. This must be a single real-valued, mono waveform.\n * @param {Float32Array|Float64Array} window The windowing function to apply of shape `(frame_length,)`, including zero-padding if necessary. The actual window length may be\n * shorter than `frame_length`, but we're assuming the array has already been zero-padded.\n * @param {number} frame_length The length of the analysis frames in samples (a.k.a., `fft_length`).\n * @param {number} hop_length The stride between successive analysis frames in samples.\n * @param {Object} options\n * @param {number} [options.fft_length=null] The size of the FFT buffer in samples. This determines how many frequency bins the spectrogram will have.\n * For optimal speed, this should be a power of two. If `null`, uses `frame_length`.\n * @param {number} [options.power=1.0] If 1.0, returns the amplitude spectrogram. If 2.0, returns the power spectrogram. If `null`, returns complex numbers.\n * @param {boolean} [options.center=true] Whether to pad the waveform so that frame `t` is centered around time `t * hop_length`. If `false`, frame\n * `t` will start at time `t * hop_length`.\n * @param {string} [options.pad_mode=\"reflect\"] Padding mode used when `center` is `true`. Possible values are: `\"constant\"` (pad with zeros),\n * `\"edge\"` (pad with edge values), `\"reflect\"` (pads with mirrored values).\n * @param {boolean} [options.onesided=true] If `true`, only computes the positive frequencies and returns a spectrogram containing `fft_length // 2 + 1`\n * frequency bins. If `false`, also computes the negative frequencies and returns `fft_length` frequency bins.\n * @param {number} [options.preemphasis=null] Coefficient for a low-pass filter that applies pre-emphasis before the DFT.\n * @param {number[][]} [options.mel_filters=null] The mel filter bank of shape `(num_freq_bins, num_mel_filters)`.\n * If supplied, applies this filter bank to create a mel spectrogram.\n * @param {number} [options.mel_floor=1e-10] Minimum value of mel frequency banks.\n * @param {string} [options.log_mel=null] How to convert the spectrogram to log scale. Possible options are:\n * `null` (don't convert), `\"log\"` (take the natural logarithm) `\"log10\"` (take the base-10 logarithm), `\"dB\"` (convert to decibels).\n * Can only be used when `power` is not `null`.\n * @param {number} [options.reference=1.0] Sets the input spectrogram value that corresponds to 0 dB. For example, use `max(spectrogram)[0]` to set\n * the loudest part to 0 dB. Must be greater than zero.\n * @param {number} [options.min_value=1e-10] The spectrogram will be clipped to this minimum value before conversion to decibels, to avoid taking `log(0)`.\n * For a power spectrogram, the default of `1e-10` corresponds to a minimum of -100 dB. For an amplitude spectrogram, the value `1e-5` corresponds to -100 dB.\n * Must be greater than zero.\n * @param {number} [options.db_range=null] Sets the maximum dynamic range in decibels. For example, if `db_range = 80`, the difference between the\n * peak value and the smallest value will never be more than 80 dB. Must be greater than zero.\n * @param {boolean} [options.remove_dc_offset=null] Subtract mean from waveform on each frame, applied before pre-emphasis. This should be set to `true` in\n * order to get the same results as `torchaudio.compliance.kaldi.fbank` when computing mel filters.\n * @param {number} [options.max_num_frames=null] If provided, limits the number of frames to compute to this value.\n * @param {number} [options.min_num_frames=null] If provided, ensures the number of frames to compute is at least this value.\n * @param {boolean} [options.do_pad=true] If `true`, pads the output spectrogram to have `max_num_frames` frames.\n * @param {boolean} [options.transpose=false] If `true`, the returned spectrogram will have shape `(num_frames, num_frequency_bins/num_mel_filters)`. If `false`, the returned spectrogram will have shape `(num_frequency_bins/num_mel_filters, num_frames)`.\n * @returns {Promise<Tensor>} Spectrogram of shape `(num_frequency_bins, length)` (regular spectrogram) or shape `(num_mel_filters, length)` (mel spectrogram).\n */\nasync function spectrogram(\n    waveform,\n    window,\n    frame_length,\n    hop_length,\n    {\n        fft_length = null,\n        power = 1.0,\n        center = true,\n        pad_mode = \"reflect\",\n        onesided = true,\n        preemphasis = null,\n        mel_filters = null,\n        mel_floor = 1e-10,\n        log_mel = null,\n        reference = 1.0,\n        min_value = 1e-10,\n        db_range = null,\n        remove_dc_offset = null,\n\n        // Custom parameters for efficiency reasons\n        min_num_frames = null,\n        max_num_frames = null,\n        do_pad = true,\n        transpose = false,\n    } = {}\n) {\n    const window_length = window.length;\n    if (fft_length === null) {\n        fft_length = frame_length;\n    }\n    if (frame_length > fft_length) {\n        throw Error(`frame_length (${frame_length}) may not be larger than fft_length (${fft_length})`)\n    }\n\n    if (window_length !== frame_length) {\n        throw new Error(`Length of the window (${window_length}) must equal frame_length (${frame_length})`);\n    }\n\n    if (hop_length <= 0) {\n        throw new Error(\"hop_length must be greater than zero\");\n    }\n\n    if (power === null && mel_filters !== null) {\n        throw new Error(\n            \"You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. \" +\n            \"Specify `power` to fix this issue.\"\n        );\n    }\n\n    if (center) {\n        if (pad_mode !== 'reflect') {\n            throw new Error(`pad_mode=\"${pad_mode}\" not implemented yet.`)\n        }\n        const half_window = Math.floor((fft_length - 1) / 2) + 1;\n        waveform = padReflect(waveform, half_window, half_window);\n    }\n\n    // split waveform into frames of frame_length size\n    let num_frames = Math.floor(1 + Math.floor((waveform.length - frame_length) / hop_length))\n    if (min_num_frames !== null && num_frames < min_num_frames) {\n        num_frames = min_num_frames\n    }\n    const num_frequency_bins = onesided ? Math.floor(fft_length / 2) + 1 : fft_length\n\n    let d1 = num_frames;\n    let d1Max = num_frames;\n\n    // If maximum number of frames is provided, we must either pad or truncate\n    if (max_num_frames !== null) {\n        if (max_num_frames > num_frames) { // input is too short, so we pad\n            if (do_pad) {\n                d1Max = max_num_frames;\n            }\n        } else { // input is too long, so we truncate\n            d1Max = d1 = max_num_frames;\n        }\n    }\n\n    // Preallocate arrays to store output.\n    const fft = new _maths_js__WEBPACK_IMPORTED_MODULE_1__.FFT(fft_length);\n    const inputBuffer = new Float64Array(fft_length);\n    const outputBuffer = new Float64Array(fft.outputBufferSize);\n    const transposedMagnitudeData = new Float32Array(num_frequency_bins * d1Max);\n\n    for (let i = 0; i < d1; ++i) {\n        // Populate buffer with waveform data\n        const offset = i * hop_length;\n        const buffer_size = Math.min(waveform.length - offset, frame_length);\n        if (buffer_size !== frame_length) {\n            // The full buffer is not needed, so we need to reset it (avoid overflow from previous iterations)\n            // NOTE: We don't need to reset the buffer if it's full since we overwrite the first\n            // `frame_length` values and the rest (`fft_length - frame_length`) remains zero.\n            inputBuffer.fill(0, 0, frame_length);\n        }\n\n        for (let j = 0; j < buffer_size; ++j) {\n            inputBuffer[j] = waveform[offset + j];\n        }\n\n        if (remove_dc_offset) {\n            let sum = 0;\n            for (let j = 0; j < buffer_size; ++j) {\n                sum += inputBuffer[j];\n            }\n            const mean = sum / buffer_size;\n            for (let j = 0; j < buffer_size; ++j) {\n                inputBuffer[j] -= mean;\n            }\n        }\n\n        if (preemphasis !== null) {\n            // Done in reverse to avoid copies and distructive modification\n            for (let j = buffer_size - 1; j >= 1; --j) {\n                inputBuffer[j] -= preemphasis * inputBuffer[j - 1];\n            }\n            inputBuffer[0] *= 1 - preemphasis;\n        }\n\n        // Apply window function\n        for (let j = 0; j < window.length; ++j) {\n            inputBuffer[j] *= window[j];\n        }\n\n        fft.realTransform(outputBuffer, inputBuffer);\n\n        // compute magnitudes\n        for (let j = 0; j < num_frequency_bins; ++j) {\n            const j2 = j << 1;\n\n            // NOTE: We transpose the data here to avoid doing it later\n            transposedMagnitudeData[j * d1Max + i] = outputBuffer[j2] ** 2 + outputBuffer[j2 + 1] ** 2;\n        }\n    }\n\n    if (power !== null && power !== 2) {\n        // slight optimization to not sqrt\n        const pow = 2 / power; // we use 2 since we already squared\n        for (let i = 0; i < transposedMagnitudeData.length; ++i) {\n            transposedMagnitudeData[i] **= pow;\n        }\n    }\n\n    // TODO: What if `mel_filters` is null?\n    const num_mel_filters = mel_filters.length;\n\n    // Perform matrix muliplication:\n    // mel_spec = mel_filters @ magnitudes.T\n    //  - mel_filters.shape=(80, 201)\n    //  - magnitudes.shape=(3000, 201) => magnitudes.T.shape=(201, 3000)\n    //  - mel_spec.shape=(80, 3000)\n    let mel_spec = await (0,_tensor_js__WEBPACK_IMPORTED_MODULE_5__.matmul)(\n        // TODO: Make `mel_filters` a Tensor during initialization\n        new _tensor_js__WEBPACK_IMPORTED_MODULE_5__.Tensor('float32', mel_filters.flat(), [num_mel_filters, num_frequency_bins]),\n        new _tensor_js__WEBPACK_IMPORTED_MODULE_5__.Tensor('float32', transposedMagnitudeData, [num_frequency_bins, d1Max]),\n    );\n    if (transpose) {\n        mel_spec = mel_spec.transpose(1, 0);\n    }\n\n    const mel_spec_data = /** @type {Float32Array} */(mel_spec.data);\n    for (let i = 0; i < mel_spec_data.length; ++i) {\n        mel_spec_data[i] = Math.max(mel_floor, mel_spec_data[i]);\n    }\n\n    if (power !== null && log_mel !== null) {\n        const o = Math.min(mel_spec_data.length, d1 * num_mel_filters);\n        // NOTE: operates in-place\n        switch (log_mel) {\n            case 'log':\n                for (let i = 0; i < o; ++i) {\n                    mel_spec_data[i] = Math.log(mel_spec_data[i]);\n                }\n                break;\n            case 'log10':\n                for (let i = 0; i < o; ++i) {\n                    mel_spec_data[i] = Math.log10(mel_spec_data[i]);\n                }\n                break;\n            case 'dB':\n                if (power === 1.0) {\n                    amplitude_to_db(mel_spec_data, reference, min_value, db_range);\n                } else if (power === 2.0) {\n                    power_to_db(mel_spec_data, reference, min_value, db_range);\n                } else {\n                    throw new Error(`Cannot use log_mel option '${log_mel}' with power ${power}`)\n                }\n                break;\n            default:\n                throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${log_mel}'`);\n        }\n    }\n\n    return mel_spec;\n}\n\n/**\n * Returns an array containing the specified window.\n * @param {number} window_length The length of the window in samples.\n * @param {string} name The name of the window function.\n * @param {Object} options Additional options.\n * @param {boolean} [options.periodic=true] Whether the window is periodic or symmetric.\n * @param {number} [options.frame_length=null] The length of the analysis frames in samples.\n * Provide a value for `frame_length` if the window is smaller than the frame length, so that it will be zero-padded.\n * @param {boolean} [options.center=true] Whether to center the window inside the FFT buffer. Only used when `frame_length` is provided.\n * @returns {Float64Array} The window of shape `(window_length,)` or `(frame_length,)`.\n */\nfunction window_function(window_length, name, {\n    periodic = true,\n    frame_length = null,\n    center = true,\n} = {}) {\n    const length = periodic ? window_length + 1 : window_length;\n    let window;\n    switch (name) {\n        case 'boxcar':\n            window = new Float64Array(length).fill(1.0);\n            break;\n        case 'hann':\n        case 'hann_window':\n            window = hanning(length);\n            break;\n        case 'hamming':\n            window = hamming(length);\n            break;\n        case 'povey':\n            window = hanning(length).map(x => Math.pow(x, 0.85));\n            break;\n        default:\n            throw new Error(`Unknown window type ${name}.`);\n    }\n    if (periodic) {\n        window = window.subarray(0, window_length);\n    }\n    if (frame_length === null) {\n        return window;\n    }\n    if (window_length > frame_length) {\n        throw new Error(`Length of the window (${window_length}) may not be larger than frame_length (${frame_length})`);\n    }\n\n    return window;\n}\n\n/**\n * Encode audio data to a WAV file.\n * WAV file specs : https://en.wikipedia.org/wiki/WAV#WAV_File_header\n * \n * Adapted from https://www.npmjs.com/package/audiobuffer-to-wav\n * @param {Float32Array} samples The audio samples.\n * @param {number} rate The sample rate.\n * @returns {ArrayBuffer} The WAV audio buffer.\n */\nfunction encodeWAV(samples, rate) {\n    let offset = 44;\n    const buffer = new ArrayBuffer(offset + samples.length * 4);\n    const view = new DataView(buffer);\n\n    /* RIFF identifier */\n    writeString(view, 0, \"RIFF\");\n    /* RIFF chunk length */\n    view.setUint32(4, 36 + samples.length * 4, true);\n    /* RIFF type */\n    writeString(view, 8, \"WAVE\");\n    /* format chunk identifier */\n    writeString(view, 12, \"fmt \");\n    /* format chunk length */\n    view.setUint32(16, 16, true);\n    /* sample format (raw) */\n    view.setUint16(20, 3, true);\n    /* channel count */\n    view.setUint16(22, 1, true);\n    /* sample rate */\n    view.setUint32(24, rate, true);\n    /* byte rate (sample rate * block align) */\n    view.setUint32(28, rate * 4, true);\n    /* block align (channel count * bytes per sample) */\n    view.setUint16(32, 4, true);\n    /* bits per sample */\n    view.setUint16(34, 32, true);\n    /* data chunk identifier */\n    writeString(view, 36, \"data\");\n    /* data chunk length */\n    view.setUint32(40, samples.length * 4, true);\n\n    for (let i = 0; i < samples.length; ++i, offset += 4) {\n        view.setFloat32(offset, samples[i], true);\n    }\n\n    return buffer;\n}\n\nfunction writeString(view, offset, string) {\n    for (let i = 0; i < string.length; ++i) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n    }\n}\n\n\nclass RawAudio {\n\n    /**\n     * Create a new `RawAudio` object.\n     * @param {Float32Array} audio Audio data\n     * @param {number} sampling_rate Sampling rate of the audio data\n     */\n    constructor(audio, sampling_rate) {\n        this.audio = audio\n        this.sampling_rate = sampling_rate\n    }\n\n    /**\n     * Convert the audio to a wav file buffer.\n     * @returns {ArrayBuffer} The WAV file.\n     */\n    toWav() {\n        return encodeWAV(this.audio, this.sampling_rate)\n    }\n\n    /**\n     * Convert the audio to a blob.\n     * @returns {Blob}\n     */\n    toBlob() {\n        const wav = this.toWav();\n        const blob = new Blob([wav], { type: 'audio/wav' });\n        return blob;\n    }\n\n    /**\n     * Save the audio to a wav file.\n     * @param {string} path\n     */\n    async save(path) {\n        let fn;\n\n        if (_env_js__WEBPACK_IMPORTED_MODULE_3__.apis.IS_BROWSER_ENV) {\n            if (_env_js__WEBPACK_IMPORTED_MODULE_3__.apis.IS_WEBWORKER_ENV) {\n                throw new Error('Unable to save a file from a Web Worker.')\n            }\n            fn = _core_js__WEBPACK_IMPORTED_MODULE_2__.saveBlob;\n        } else if (_env_js__WEBPACK_IMPORTED_MODULE_3__.apis.IS_FS_AVAILABLE) {\n            fn = async (/** @type {string} */ path, /** @type {Blob} */ blob) => {\n                let buffer = await blob.arrayBuffer();\n                fs__WEBPACK_IMPORTED_MODULE_4__.writeFileSync(path, Buffer.from(buffer));\n            }\n        } else {\n            throw new Error('Unable to save because filesystem is disabled in this environment.')\n        }\n\n        await fn(path, this.toBlob())\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/constants.js\":\n/*!********************************!*\\\n  !*** ./src/utils/constants.js ***!\n  \\********************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_TEMPLATE_NAME: () => (/* binding */ CHAT_TEMPLATE_NAME),\n/* harmony export */   CONFIG_NAME: () => (/* binding */ CONFIG_NAME),\n/* harmony export */   FEATURE_EXTRACTOR_NAME: () => (/* binding */ FEATURE_EXTRACTOR_NAME),\n/* harmony export */   GENERATION_CONFIG_NAME: () => (/* binding */ GENERATION_CONFIG_NAME),\n/* harmony export */   GITHUB_ISSUE_URL: () => (/* binding */ GITHUB_ISSUE_URL),\n/* harmony export */   IMAGE_PROCESSOR_NAME: () => (/* binding */ IMAGE_PROCESSOR_NAME),\n/* harmony export */   PROCESSOR_NAME: () => (/* binding */ PROCESSOR_NAME)\n/* harmony export */ });\n\nconst GITHUB_ISSUE_URL = 'https://github.com/huggingface/transformers.js/issues/new/choose';\n\nconst CONFIG_NAME = \"config.json\"\nconst FEATURE_EXTRACTOR_NAME = \"preprocessor_config.json\"\nconst IMAGE_PROCESSOR_NAME = FEATURE_EXTRACTOR_NAME\nconst PROCESSOR_NAME = \"processor_config.json\"\nconst CHAT_TEMPLATE_NAME = \"chat_template.json\"\nconst GENERATION_CONFIG_NAME = \"generation_config.json\"\n\n\n/***/ }),\n\n/***/ \"./src/utils/core.js\":\n/*!***************************!*\\\n  !*** ./src/utils/core.js ***!\n  \\***************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDimensions: () => (/* binding */ calculateDimensions),\n/* harmony export */   calculateReflectOffset: () => (/* binding */ calculateReflectOffset),\n/* harmony export */   count: () => (/* binding */ count),\n/* harmony export */   dispatchCallback: () => (/* binding */ dispatchCallback),\n/* harmony export */   escapeRegExp: () => (/* binding */ escapeRegExp),\n/* harmony export */   isIntegralNumber: () => (/* binding */ isIntegralNumber),\n/* harmony export */   isNullishDimension: () => (/* binding */ isNullishDimension),\n/* harmony export */   isTypedArray: () => (/* binding */ isTypedArray),\n/* harmony export */   len: () => (/* binding */ len),\n/* harmony export */   mergeArrays: () => (/* binding */ mergeArrays),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   pop: () => (/* binding */ pop),\n/* harmony export */   product: () => (/* binding */ product),\n/* harmony export */   reverseDictionary: () => (/* binding */ reverseDictionary),\n/* harmony export */   saveBlob: () => (/* binding */ saveBlob)\n/* harmony export */ });\n\n/**\n * @file Core utility functions/classes for Transformers.js.\n *\n * These are only used internally, meaning an end-user shouldn't\n * need to access anything here.\n *\n * @module utils/core\n */\n\n/**\n * @typedef {Object} InitiateProgressInfo\n * @property {'initiate'} status\n * @property {string} name The model id or directory path.\n * @property {string} file The name of the file.\n */\n\n/**\n * @typedef {Object} DownloadProgressInfo\n * @property {'download'} status\n * @property {string} name The model id or directory path.\n * @property {string} file The name of the file.\n */\n\n/**\n * @typedef {Object} ProgressStatusInfo\n * @property {'progress'} status\n * @property {string} name The model id or directory path.\n * @property {string} file The name of the file.\n * @property {number} progress A number between 0 and 100.\n * @property {number} loaded The number of bytes loaded.\n * @property {number} total The total number of bytes to be loaded.\n */\n\n/**\n * @typedef {Object} DoneProgressInfo\n * @property {'done'} status\n * @property {string} name The model id or directory path.\n * @property {string} file The name of the file.\n */\n\n/**\n * @typedef {Object} ReadyProgressInfo\n * @property {'ready'} status\n * @property {string} task The loaded task.\n * @property {string} model The loaded model.\n */\n\n/**\n * @typedef {InitiateProgressInfo | DownloadProgressInfo | ProgressStatusInfo | DoneProgressInfo | ReadyProgressInfo} ProgressInfo\n */\n\n/**\n * A callback function that is called with progress information.\n * @callback ProgressCallback\n * @param {ProgressInfo} progressInfo\n * @returns {void}\n */\n\n/**\n * Helper function to dispatch progress callbacks.\n *\n * @param {ProgressCallback | null | undefined} progress_callback The progress callback function to dispatch.\n * @param {ProgressInfo} data The data to pass to the progress callback function.\n * @returns {void}\n * @private\n */\nfunction dispatchCallback(progress_callback, data) {\n    if (progress_callback) progress_callback(data);\n}\n\n/**\n * Reverses the keys and values of an object.\n *\n * @param {Object} data The object to reverse.\n * @returns {Object} The reversed object.\n * @see https://ultimatecourses.com/blog/reverse-object-keys-and-values-in-javascript\n */\nfunction reverseDictionary(data) {\n    // https://ultimatecourses.com/blog/reverse-object-keys-and-values-in-javascript\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => [value, key]));\n}\n\n/**\n * Escapes regular expression special characters from a string by replacing them with their escaped counterparts.\n *\n * @param {string} string The string to escape.\n * @returns {string} The escaped string.\n */\nfunction escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\n/**\n * Check if a value is a typed array.\n * @param {*} val The value to check.\n * @returns {boolean} True if the value is a `TypedArray`, false otherwise.\n *\n * Adapted from https://stackoverflow.com/a/71091338/13989043\n */\nfunction isTypedArray(val) {\n    return val?.prototype?.__proto__?.constructor?.name === 'TypedArray';\n}\n\n\n/**\n * Check if a value is an integer.\n * @param {*} x The value to check.\n * @returns {boolean} True if the value is a string, false otherwise.\n */\nfunction isIntegralNumber(x) {\n    return Number.isInteger(x) || typeof x === 'bigint'\n}\n\n/**\n * Determine if a provided width or height is nullish.\n * @param {*} x The value to check.\n * @returns {boolean} True if the value is `null`, `undefined` or `-1`, false otherwise.\n */\nfunction isNullishDimension(x) {\n    return x === null || x === undefined || x === -1;\n}\n\n/**\n * Calculates the dimensions of a nested array.\n *\n * @param {any[]} arr The nested array to calculate dimensions for.\n * @returns {number[]} An array containing the dimensions of the input array.\n */\nfunction calculateDimensions(arr) {\n    const dimensions = [];\n    let current = arr;\n    while (Array.isArray(current)) {\n        dimensions.push(current.length);\n        current = current[0];\n    }\n    return dimensions;\n}\n\n/**\n * Replicate python's .pop() method for objects.\n * @param {Object} obj The object to pop from.\n * @param {string} key The key to pop.\n * @param {*} defaultValue The default value to return if the key does not exist.\n * @returns {*} The value of the popped key.\n * @throws {Error} If the key does not exist and no default value is provided.\n */\nfunction pop(obj, key, defaultValue = undefined) {\n    const value = obj[key];\n    if (value !== undefined) {\n        delete obj[key];\n        return value;\n    }\n    if (defaultValue === undefined) {\n        throw Error(`Key ${key} does not exist in object.`)\n    }\n    return defaultValue;\n}\n\n/**\n * Efficiently merge arrays, creating a new copy.\n * Adapted from https://stackoverflow.com/a/6768642/13989043\n * @param  {Array[]} arrs Arrays to merge.\n * @returns {Array} The merged array.\n */\nfunction mergeArrays(...arrs) {\n    return Array.prototype.concat.apply([], arrs);\n}\n\n/**\n * Compute the Cartesian product of given arrays\n * @param {...Array} a Arrays to compute the product\n * @returns {Array} Returns the computed Cartesian product as an array\n * @private\n */\nfunction product(...a) {\n    // Cartesian product of items\n    // Adapted from https://stackoverflow.com/a/43053803\n    return a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e])));\n}\n\n/**\n * Calculates the index offset for a given index and window size.\n * @param {number} i The index.\n * @param {number} w The window size.\n * @returns {number} The index offset.\n */\nfunction calculateReflectOffset(i, w) {\n    return Math.abs((i + w) % (2 * w) - w);\n}\n\n/**\n * Save blob file on the web.\n * @param {string} path The path to save the blob to\n * @param {Blob} blob The blob to save\n */\nfunction saveBlob(path, blob){\n    // Convert the canvas content to a data URL\n    const dataURL = URL.createObjectURL(blob);\n\n    // Create an anchor element with the data URL as the href attribute\n    const downloadLink = document.createElement('a');\n    downloadLink.href = dataURL;\n\n    // Set the download attribute to specify the desired filename for the downloaded image\n    downloadLink.download = path;\n\n    // Trigger the download\n    downloadLink.click();\n\n    // Clean up: remove the anchor element from the DOM\n    downloadLink.remove();\n\n    // Revoke the Object URL to free up memory\n    URL.revokeObjectURL(dataURL);\n}\n\n/**\n *\n * @param {Object} o\n * @param {string[]} props\n * @returns {Object}\n */\nfunction pick(o, props) {\n    return Object.assign(\n        {},\n        ...props.map((prop) => {\n            if (o[prop] !== undefined) {\n                return { [prop]: o[prop] };\n            }\n        })\n    );\n}\n\n/**\n * Calculate the length of a string, taking multi-byte characters into account.\n * This mimics the behavior of Python's `len` function.\n * @param {string} s The string to calculate the length of.\n * @returns {number} The length of the string.\n */\nfunction len(s) {\n    let length = 0;\n    for (const c of s) ++length;\n    return length;\n}\n\n/**\n * Count the occurrences of a value in an array or string.\n * This mimics the behavior of Python's `count` method.\n * @param {any[]|string} arr The array or string to search.\n * @param {any} value The value to count.\n */\nfunction count(arr, value) {\n    let count = 0;\n    for (const v of arr) {\n        if (v === value) ++count;\n    }\n    return count;\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/data-structures.js\":\n/*!**************************************!*\\\n  !*** ./src/utils/data-structures.js ***!\n  \\**************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CharTrie: () => (/* binding */ CharTrie),\n/* harmony export */   PriorityQueue: () => (/* binding */ PriorityQueue),\n/* harmony export */   TokenLattice: () => (/* binding */ TokenLattice)\n/* harmony export */ });\n\n/**\n * @file Custom data structures.\n * \n * These are only used internally, meaning an end-user shouldn't\n * need to access anything here.\n * \n * @module utils/data-structures\n */\n\n\n/**\n * Efficient Heap-based Implementation of a Priority Queue.\n * It uses an array-based binary heap, where the root is at index `0`, and the\n * children of node `i` are located at indices `2i + 1` and `2i + 2`, respectively.\n * \n * Adapted from the following sources:\n * - https://stackoverflow.com/a/42919752/13989043 (original)\n * - https://github.com/belladoreai/llama-tokenizer-js (minor improvements)\n */\nclass PriorityQueue {\n\n    /**\n     * Create a new PriorityQueue.\n     * @param {function(any, any): boolean} comparator Comparator function to determine priority. Defaults to a MaxHeap.\n     */\n    constructor(comparator = (a, b) => a > b, maxSize = Infinity) {\n        this._heap = [];\n        this._comparator = comparator;\n        this._maxSize = maxSize;\n    }\n\n    /**\n     * The size of the queue\n     */\n    get size() {\n        return this._heap.length;\n    }\n\n    /**\n     * Check if the queue is empty.\n     * @returns {boolean} `true` if the queue is empty, `false` otherwise.\n     */\n    isEmpty() {\n        return this.size === 0;\n    }\n\n    /**\n     * Return the element with the highest priority in the queue.\n     * @returns {any} The highest priority element in the queue.\n     */\n    peek() {\n        return this._heap[0];\n    }\n\n    /**\n     * Add one or more elements to the queue.\n     * @param  {...any} values The values to push into the queue.\n     * @returns {number} The new size of the queue.\n     */\n    push(...values) {\n        return this.extend(values);\n    }\n\n    /**\n     * Add multiple elements to the queue.\n     * @param {any[]} values The values to push into the queue.\n     * @returns {number} The new size of the queue.\n     */\n    extend(values) {\n        for (const value of values) {\n            if (this.size < this._maxSize) {\n                this._heap.push(value);\n                this._siftUp();\n            } else {\n                // Get index of value with the lowest priority\n                const smallest = this._smallest();\n\n                // If the new value has higher priority than the smallest value in the heap\n                // then replace the smallest value with the new value and update the heap\n                if (this._comparator(value, this._heap[smallest])) {\n                    this._heap[smallest] = value;\n                    this._siftUpFrom(smallest);\n                }\n            }\n        }\n        return this.size;\n    }\n\n    /**\n     * Remove and return the element with the highest priority in the queue.\n     * @returns {any} The element with the highest priority in the queue.\n     */\n    pop() {\n        const poppedValue = this.peek();\n        const bottom = this.size - 1;\n        if (bottom > 0) {\n            this._swap(0, bottom);\n        }\n        this._heap.pop();\n        this._siftDown();\n        return poppedValue;\n    }\n\n    /**\n     * Replace the element with the highest priority in the queue with a new value.\n     * @param {*} value The new value.\n     * @returns {*} The replaced value.\n     */\n    replace(value) {\n        const replacedValue = this.peek();\n        this._heap[0] = value;\n        this._siftDown();\n        return replacedValue;\n    }\n\n    /**\n     * Compute the index for the parent of the node at index `i`.\n     * @param {number} i The index of the node to get the parent of.\n     * @returns {number} The index of the parent node.\n     * @private\n     */\n    _parent(i) {\n        return ((i + 1) >>> 1) - 1;\n    }\n\n    /**\n     * Compute the index for the left child of the node at index `i`.\n     * @param {number} i The index of the node to get the left child of.\n     * @returns {number} The index of the left child.\n     * @private\n     */\n    _left(i) {\n        return (i << 1) + 1;\n    }\n\n    /**\n     * Compute the index for the right child of the node at index `i`.\n     * @param {number} i The index of the node to get the right child of.\n     * @returns {number} The index of the right child.\n     * @private\n     */\n    _right(i) {\n        return (i + 1) << 1;\n    }\n\n    /**\n     * Check if the element at index `i` is greater than the element at index `j`.\n     * @param {number} i The index of the first element to compare.\n     * @param {number} j The index of the second element to compare.\n     * @returns {boolean} `true` if the element at index `i` is greater than the element at index `j`, `false` otherwise.\n     * @private\n     */\n    _greater(i, j) {\n        return this._comparator(this._heap[i], this._heap[j]);\n    }\n\n    /**\n     * Swap the elements at indices `i` and `j`.\n     * @param {number} i The index of the first element to swap.\n     * @param {number} j The index of the second element to swap.\n     * @private\n     */\n    _swap(i, j) {\n        const temp = this._heap[i];\n        this._heap[i] = this._heap[j];\n        this._heap[j] = temp;\n    }\n\n    /**\n     * Maintain the heap property by updating positions in the heap,\n     * starting at the last element and moving up the heap.\n     * @private\n     */\n    _siftUp() {\n        this._siftUpFrom(this.size - 1);\n    }\n\n    /**\n     * Helper function to sift up from a given node.\n     * @param {number} node The index of the node to start sifting up from.\n     */\n    _siftUpFrom(node) {\n        while (node > 0 && this._greater(node, this._parent(node))) {\n            this._swap(node, this._parent(node));\n            node = this._parent(node);\n        }\n    }\n\n    /**\n     * Maintain the heap property by updating positions in the heap,\n     * starting at the first element and moving down the heap.\n     * @private\n     */\n    _siftDown() {\n        let node = 0;\n        while (\n            (this._left(node) < this.size && this._greater(this._left(node), node)) ||\n            (this._right(node) < this.size && this._greater(this._right(node), node))\n        ) {\n            const maxChild = (this._right(node) < this.size && this._greater(this._right(node), this._left(node)))\n                ? this._right(node)\n                : this._left(node);\n            this._swap(node, maxChild);\n            node = maxChild;\n        }\n    }\n\n    /**\n     * Get the index of the smallest element in the heap. Since we use an array-based heap,\n     * the index can be computed without needing to traverse the heap.\n     * @private\n     */\n    _smallest() {\n        return (2 ** (Math.floor(Math.log2(this.size))) - 1);\n    }\n}\n\n/**\n * A trie structure to efficiently store and search for strings.\n */\nclass CharTrie {\n    constructor() {\n        this.root = CharTrieNode.default();\n    }\n\n    /**\n     * Adds one or more `texts` to the trie.\n     * @param {string[]} texts The strings to add to the trie.\n     */\n    extend(texts) {\n        for (const text of texts) {\n            this.push(text);\n        }\n    }\n\n    /**\n     * Adds text to the trie.\n     * @param {string} text The string to add to the trie.\n     */\n    push(text) {\n        let node = this.root;\n        for (const ch of text) {\n            let child = node.children.get(ch);\n            if (child === undefined) {\n                child = CharTrieNode.default();\n                node.children.set(ch, child);\n            }\n            node = child;\n        }\n        node.isLeaf = true;\n    }\n\n    /**\n     * Searches the trie for all strings with a common prefix of `text`.\n     * @param {string} text The common prefix to search for.\n     * @yields {string} Each string in the trie that has `text` as a prefix.\n     */\n    *commonPrefixSearch(text) {\n        let node = this.root;\n        if (node === undefined) return;\n\n        let prefix = \"\";\n        for (const ch of text) {\n            prefix += ch;\n            node = node.children.get(ch);\n            if (node === undefined) return;\n            if (node.isLeaf) {\n                yield prefix;\n            }\n        }\n    }\n}\n\n/**\n * Represents a node in a character trie.\n */\nclass CharTrieNode {\n    /**\n     * Create a new CharTrieNode.\n     * @param {boolean} isLeaf Whether the node is a leaf node or not.\n     * @param {Map<string, CharTrieNode>} children A map containing the node's children, where the key is a character and the value is a `CharTrieNode`.\n     */\n    constructor(isLeaf, children) {\n        this.isLeaf = isLeaf;\n        this.children = children;\n    }\n\n    /**\n     * Returns a new `CharTrieNode` instance with default values.\n     * @returns {CharTrieNode} A new `CharTrieNode` instance with `isLeaf` set to `false` and an empty `children` map.\n     */\n    static default() {\n        return new CharTrieNode(false, new Map());\n    }\n}\n\n/**\n * A lattice data structure to be used for tokenization.\n */\nclass TokenLattice {\n    /**\n     * Creates a new TokenLattice instance.\n     *\n     * @param {string} sentence The input sentence to be tokenized.\n     * @param {number} bosTokenId The beginning-of-sequence token ID.\n     * @param {number} eosTokenId The end-of-sequence token ID.\n     */\n    constructor(sentence, bosTokenId, eosTokenId) {\n        this.chars = Array.from(sentence);\n        this.len = this.chars.length;\n        this.bosTokenId = bosTokenId;\n        this.eosTokenId = eosTokenId;\n        this.nodes = [];\n        this.beginNodes = Array.from({ length: this.len + 1 }, () => []);\n        this.endNodes = Array.from({ length: this.len + 1 }, () => []);\n\n        const bos = new TokenLatticeNode(this.bosTokenId, 0, 0, 0, 0.0);\n        const eos = new TokenLatticeNode(this.eosTokenId, 1, this.len, 0, 0.0);\n        this.nodes.push(bos.clone());\n        this.nodes.push(eos.clone());\n        this.beginNodes[this.len].push(eos);\n        this.endNodes[0].push(bos);\n    }\n\n    /**\n     * Inserts a new token node into the token lattice.\n     *\n     * @param {number} pos The starting position of the token.\n     * @param {number} length The length of the token.\n     * @param {number} score The score of the token.\n     * @param {number} tokenId The token ID of the token.\n     */\n    insert(pos, length, score, tokenId) {\n        const nodeId = this.nodes.length;\n        const node = new TokenLatticeNode(tokenId, nodeId, pos, length, score);\n        this.beginNodes[pos].push(node);\n        this.endNodes[pos + length].push(node);\n        this.nodes.push(node);\n    }\n\n    /**\n     * Implements the Viterbi algorithm to compute the most likely sequence of tokens.\n     *\n     * @returns {TokenLatticeNode[]} The most likely sequence of tokens.\n     */\n    viterbi() {\n        const len = this.len;\n        let pos = 0;\n        while (pos <= len) {\n            if (this.beginNodes[pos].length == 0) {\n                return [];\n            }\n            for (let rnode of this.beginNodes[pos]) {\n                rnode.prev = null;\n                let bestScore = 0.0;\n                let bestNode = null;\n                for (let lnode of this.endNodes[pos]) {\n                    const score = lnode.backtraceScore + rnode.score;\n                    if (bestNode === null || score > bestScore) {\n                        bestNode = lnode.clone();\n                        bestScore = score;\n                    }\n                }\n\n                if (bestNode !== null) {\n                    rnode.prev = bestNode;\n                    rnode.backtraceScore = bestScore;\n                } else {\n                    return [];\n                }\n            }\n            ++pos;\n        }\n\n        const results = [];\n        const root = this.beginNodes[len][0];\n        const prev = root.prev;\n        if (prev === null) {\n            return [];\n        }\n\n        let node = prev.clone();\n        while (node.prev !== null) {\n            results.push(node.clone());\n            const n = node.clone();\n            node = n.prev.clone();\n        }\n\n        results.reverse();\n        return results;\n    }\n\n    /**\n     * @param {TokenLatticeNode} node\n     * @returns {string} The array of nodes representing the most likely sequence of tokens.\n     */\n    piece(node) {\n        return this.chars.slice(node.pos, node.pos + node.length).join('');\n    }\n\n    /**\n     * @returns {string[]} The most likely sequence of tokens.\n     */\n    tokens() {\n        const nodes = this.viterbi();\n        return nodes.map(x => this.piece(x));\n    }\n\n    /**\n     * @returns {number[]} The most likely sequence of token ids.\n     */\n    tokenIds() {\n        const nodes = this.viterbi();\n        return nodes.map(x => x.tokenId);\n    }\n}\nclass TokenLatticeNode {\n    /**\n     * Represents a node in a token lattice for a given sentence.\n     * @param {number} tokenId The ID of the token associated with this node.\n     * @param {number} nodeId The ID of this node.\n     * @param {number} pos The starting position of the token in the sentence.\n     * @param {number} length The length of the token.\n     * @param {number} score The score associated with the token.\n     */\n    constructor(tokenId, nodeId, pos, length, score) {\n        this.tokenId = tokenId;\n        this.nodeId = nodeId;\n        this.pos = pos;\n        this.length = length;\n        this.score = score;\n        this.prev = null;\n        this.backtraceScore = 0.0;\n    }\n\n    /**\n     * Returns a clone of this node.\n     * @returns {TokenLatticeNode} A clone of this node.\n     */\n    clone() {\n        const n = new TokenLatticeNode(this.tokenId, this.nodeId, this.pos, this.length, this.score);\n        n.prev = this.prev;\n        n.backtraceScore = this.backtraceScore;\n        return n;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/devices.js\":\n/*!******************************!*\\\n  !*** ./src/utils/devices.js ***!\n  \\******************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEVICE_TYPES: () => (/* binding */ DEVICE_TYPES)\n/* harmony export */ });\n\n/**\n * The list of devices supported by Transformers.js\n */\nconst DEVICE_TYPES = Object.freeze({\n    auto: 'auto', // Auto-detect based on device and environment\n    gpu: 'gpu', // Auto-detect GPU\n    cpu: 'cpu', // CPU\n    wasm: 'wasm', // WebAssembly\n    webgpu: 'webgpu', // WebGPU\n    cuda: 'cuda', // CUDA\n    dml: 'dml', // DirectML\n\n    webnn: 'webnn', // WebNN (default)\n    'webnn-npu': 'webnn-npu', // WebNN NPU\n    'webnn-gpu': 'webnn-gpu', // WebNN GPU\n    'webnn-cpu': 'webnn-cpu', // WebNN CPU\n});\n\n/**\n * @typedef {keyof typeof DEVICE_TYPES} DeviceType\n */\n\n\n/***/ }),\n\n/***/ \"./src/utils/dtypes.js\":\n/*!*****************************!*\\\n  !*** ./src/utils/dtypes.js ***!\n  \\*****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_TYPES: () => (/* binding */ DATA_TYPES),\n/* harmony export */   DEFAULT_DEVICE_DTYPE_MAPPING: () => (/* binding */ DEFAULT_DEVICE_DTYPE_MAPPING),\n/* harmony export */   DEFAULT_DTYPE_SUFFIX_MAPPING: () => (/* binding */ DEFAULT_DTYPE_SUFFIX_MAPPING),\n/* harmony export */   isWebGpuFp16Supported: () => (/* binding */ isWebGpuFp16Supported)\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n/* harmony import */ var _devices_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./devices.js */ \"./src/utils/devices.js\");\n/// <reference types=\"@webgpu/types\" />\n\n\n\n\n\n// TODO: Use the adapter from `env.backends.onnx.webgpu.adapter` to check for `shader-f16` support,\n// when available in https://github.com/microsoft/onnxruntime/pull/19940.\n// For more information, see https://github.com/microsoft/onnxruntime/pull/19857#issuecomment-1999984753\n\n/**\n * Checks if WebGPU fp16 support is available in the current environment.\n */\nconst isWebGpuFp16Supported = (function () {\n    /** @type {boolean} */\n    let cachedResult;\n\n    return async function () {\n        if (cachedResult === undefined) {\n            if (!_env_js__WEBPACK_IMPORTED_MODULE_0__.apis.IS_WEBGPU_AVAILABLE) {\n                cachedResult = false;\n            } else {\n                try {\n                    const adapter = await navigator.gpu.requestAdapter();\n                    cachedResult = adapter.features.has('shader-f16');\n                } catch (e) {\n                    cachedResult = false;\n                }\n            }\n        }\n        return cachedResult;\n    };\n})();\n\nconst DATA_TYPES = Object.freeze({\n    auto: 'auto', // Auto-detect based on environment\n    fp32: 'fp32',\n    fp16: 'fp16',\n    q8: 'q8',\n    int8: 'int8',\n    uint8: 'uint8',\n    q4: 'q4',\n    bnb4: 'bnb4',\n    q4f16: 'q4f16', // fp16 model with int4 block weight quantization\n});\n/** @typedef {keyof typeof DATA_TYPES} DataType */\n\nconst DEFAULT_DEVICE_DTYPE_MAPPING = Object.freeze({\n    // NOTE: If not specified, will default to fp32\n    [_devices_js__WEBPACK_IMPORTED_MODULE_1__.DEVICE_TYPES.wasm]: DATA_TYPES.q8,\n});\n\n/** @type {Record<Exclude<DataType, \"auto\">, string>} */\nconst DEFAULT_DTYPE_SUFFIX_MAPPING = Object.freeze({\n    [DATA_TYPES.fp32]: '',\n    [DATA_TYPES.fp16]: '_fp16',\n    [DATA_TYPES.int8]: '_int8',\n    [DATA_TYPES.uint8]: '_uint8',\n    [DATA_TYPES.q8]: '_quantized',\n    [DATA_TYPES.q4]: '_q4',\n    [DATA_TYPES.q4f16]: '_q4f16',\n    [DATA_TYPES.bnb4]: '_bnb4',\n});\n\n\n/***/ }),\n\n/***/ \"./src/utils/generic.js\":\n/*!******************************!*\\\n  !*** ./src/utils/generic.js ***!\n  \\******************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Callable: () => (/* binding */ Callable)\n/* harmony export */ });\n\n/**\n * A base class for creating callable objects.\n * See [here](https://stackoverflow.com/q/76073890) for more information.\n * \n * @type {new () => {(...args: any[]): any, _call(...args: any[]): any}}\n */\nconst Callable = /** @type {any} */ (class {\n    /**\n    * Creates a new instance of the Callable class.\n    */\n    constructor() {\n        /**\n         * Creates a closure that delegates to a private method '_call' with the given arguments.\n         * @type {any}\n         * @param {...any} args Zero or more arguments to pass to the '_call' method.\n         * @returns {*} The result of calling the '_call' method.\n         */\n        let closure = function (...args) {\n            return closure._call(...args)\n        }\n        return Object.setPrototypeOf(closure, new.target.prototype)\n    }\n\n    /**\n     * This method should be implemented in subclasses to provide the\n     * functionality of the callable object.\n     *\n     * @param {any[]} args\n     * @throws {Error} If the subclass does not implement the `_call` method.\n     */\n    _call(...args) {\n        throw Error('Must implement _call method in subclass')\n    }\n});\n\n\n/***/ }),\n\n/***/ \"./src/utils/hub.js\":\n/*!**************************!*\\\n  !*** ./src/utils/hub.js ***!\n  \\**************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_EXTERNAL_DATA_CHUNKS: () => (/* binding */ MAX_EXTERNAL_DATA_CHUNKS),\n/* harmony export */   getFile: () => (/* binding */ getFile),\n/* harmony export */   getModelFile: () => (/* binding */ getModelFile),\n/* harmony export */   getModelJSON: () => (/* binding */ getModelJSON)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"?7a2c\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"?a42a\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core.js */ \"./src/utils/core.js\");\n\n/**\n * @file Utility functions to interact with the Hugging Face Hub (https://huggingface.co/models)\n * \n * @module utils/hub\n */\n\n\n\n\n\n\n\n/**\n * @typedef {boolean|number} ExternalData Whether to load the model using the external data format (used for models >= 2GB in size).\n * If `true`, the model will be loaded using the external data format.\n * If a number, this many chunks will be loaded using the external data format (of the form: \"model.onnx_data[_{chunk_number}]\").\n */\nconst MAX_EXTERNAL_DATA_CHUNKS = 100;\n\n/**\n * @typedef {Object} PretrainedOptions Options for loading a pretrained model.     \n * @property {import('./core.js').ProgressCallback} [progress_callback=null] If specified, this function will be called during model construction, to provide the user with progress updates.\n * @property {import('../configs.js').PretrainedConfig} [config=null] Configuration for the model to use instead of an automatically loaded configuration. Configuration can be automatically loaded when:\n * - The model is a model provided by the library (loaded with the *model id* string of a pretrained model).\n * - The model is loaded by supplying a local directory as `pretrained_model_name_or_path` and a configuration JSON file named *config.json* is found in the directory.\n * @property {string} [cache_dir=null] Path to a directory in which a downloaded pretrained model configuration should be cached if the standard cache should not be used.\n * @property {boolean} [local_files_only=false] Whether or not to only look at local files (e.g., not try downloading the model).\n * @property {string} [revision='main'] The specific model version to use. It can be a branch name, a tag name, or a commit id,\n * since we use a git-based system for storing models and other artifacts on huggingface.co, so `revision` can be any identifier allowed by git.\n * NOTE: This setting is ignored for local requests.\n */\n\n/**\n * @typedef {Object} ModelSpecificPretrainedOptions Options for loading a pretrained model.\n * @property {string} [subfolder='onnx'] In case the relevant files are located inside a subfolder of the model repo on huggingface.co,\n * you can specify the folder name here.\n * @property {string} [model_file_name=null] If specified, load the model with this name (excluding the .onnx suffix). Currently only valid for encoder- or decoder-only models.\n * @property {import(\"./devices.js\").DeviceType|Record<string, import(\"./devices.js\").DeviceType>} [device=null] The device to run the model on. If not specified, the device will be chosen from the environment settings.\n * @property {import(\"./dtypes.js\").DataType|Record<string, import(\"./dtypes.js\").DataType>} [dtype=null] The data type to use for the model. If not specified, the data type will be chosen from the environment settings.\n * @property {ExternalData|Record<string, ExternalData>} [use_external_data_format=false] Whether to load the model using the external data format (used for models >= 2GB in size).\n * @property {import('onnxruntime-common').InferenceSession.SessionOptions} [session_options] (Optional) User-specified session options passed to the runtime. If not provided, suitable defaults will be chosen.\n */\n\n/**\n * @typedef {PretrainedOptions & ModelSpecificPretrainedOptions} PretrainedModelOptions Options for loading a pretrained model.\n */\n\n/**\n * Mapping from file extensions to MIME types.\n */\nconst CONTENT_TYPE_MAP = {\n    'txt': 'text/plain',\n    'html': 'text/html',\n    'css': 'text/css',\n    'js': 'text/javascript',\n    'json': 'application/json',\n    'png': 'image/png',\n    'jpg': 'image/jpeg',\n    'jpeg': 'image/jpeg',\n    'gif': 'image/gif',\n}\nclass FileResponse {\n\n    /**\n     * Creates a new `FileResponse` object.\n     * @param {string} filePath\n     */\n    constructor(filePath) {\n        this.filePath = filePath;\n        this.headers = new Headers();\n\n        this.exists = fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(filePath);\n        if (this.exists) {\n            this.status = 200;\n            this.statusText = 'OK';\n\n            let stats = fs__WEBPACK_IMPORTED_MODULE_0__.statSync(filePath);\n            this.headers.set('content-length', stats.size.toString());\n\n            this.updateContentType();\n\n            const stream = fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream(filePath);\n            this.body = new ReadableStream({\n                start(controller) {\n                    stream.on('data', (chunk) => controller.enqueue(chunk));\n                    stream.on('end', () => controller.close());\n                    stream.on('error', (err) => controller.error(err));\n                },\n                cancel() {\n                    stream.destroy();\n                }\n            });\n        } else {\n            this.status = 404;\n            this.statusText = 'Not Found';\n            this.body = null;\n        }\n    }\n\n    /**\n     * Updates the 'content-type' header property of the response based on the extension of\n     * the file specified by the filePath property of the current object.\n     * @returns {void}\n     */\n    updateContentType() {\n        // Set content-type header based on file extension\n        const extension = this.filePath.toString().split('.').pop().toLowerCase();\n        this.headers.set('content-type', CONTENT_TYPE_MAP[extension] ?? 'application/octet-stream');\n    }\n\n    /**\n     * Clone the current FileResponse object.\n     * @returns {FileResponse} A new FileResponse object with the same properties as the current object.\n     */\n    clone() {\n        let response = new FileResponse(this.filePath);\n        response.exists = this.exists;\n        response.status = this.status;\n        response.statusText = this.statusText;\n        response.headers = new Headers(this.headers);\n        return response;\n    }\n\n    /**\n     * Reads the contents of the file specified by the filePath property and returns a Promise that\n     * resolves with an ArrayBuffer containing the file's contents.\n     * @returns {Promise<ArrayBuffer>} A Promise that resolves with an ArrayBuffer containing the file's contents.\n     * @throws {Error} If the file cannot be read.\n     */\n    async arrayBuffer() {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(this.filePath);\n        return /** @type {ArrayBuffer} */ (data.buffer);\n    }\n\n    /**\n     * Reads the contents of the file specified by the filePath property and returns a Promise that\n     * resolves with a Blob containing the file's contents.\n     * @returns {Promise<Blob>} A Promise that resolves with a Blob containing the file's contents.\n     * @throws {Error} If the file cannot be read.\n     */\n    async blob() {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(this.filePath);\n        return new Blob([data], { type: this.headers.get('content-type') });\n    }\n\n    /**\n     * Reads the contents of the file specified by the filePath property and returns a Promise that\n     * resolves with a string containing the file's contents.\n     * @returns {Promise<string>} A Promise that resolves with a string containing the file's contents.\n     * @throws {Error} If the file cannot be read.\n     */\n    async text() {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(this.filePath, 'utf8');\n        return data;\n    }\n\n    /**\n     * Reads the contents of the file specified by the filePath property and returns a Promise that\n     * resolves with a parsed JavaScript object containing the file's contents.\n     * \n     * @returns {Promise<Object>} A Promise that resolves with a parsed JavaScript object containing the file's contents.\n     * @throws {Error} If the file cannot be read.\n     */\n    async json() {\n        return JSON.parse(await this.text());\n    }\n}\n\n/**\n * Determines whether the given string is a valid URL.\n * @param {string|URL} string The string to test for validity as an URL.\n * @param {string[]} [protocols=null] A list of valid protocols. If specified, the protocol must be in this list.\n * @param {string[]} [validHosts=null] A list of valid hostnames. If specified, the URL's hostname must be in this list.\n * @returns {boolean} True if the string is a valid URL, false otherwise.\n */\nfunction isValidUrl(string, protocols = null, validHosts = null) {\n    let url;\n    try {\n        url = new URL(string);\n    } catch (_) {\n        return false;\n    }\n    if (protocols && !protocols.includes(url.protocol)) {\n        return false;\n    }\n    if (validHosts && !validHosts.includes(url.hostname)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Helper function to get a file, using either the Fetch API or FileSystem API.\n *\n * @param {URL|string} urlOrPath The URL/path of the file to get.\n * @returns {Promise<FileResponse|Response>} A promise that resolves to a FileResponse object (if the file is retrieved using the FileSystem API), or a Response object (if the file is retrieved using the Fetch API).\n */\nasync function getFile(urlOrPath) {\n\n    if (_env_js__WEBPACK_IMPORTED_MODULE_2__.env.useFS && !isValidUrl(urlOrPath, ['http:', 'https:', 'blob:'])) {\n        return new FileResponse(urlOrPath.toString());\n\n    } else if (typeof process !== 'undefined' && process?.release?.name === 'node') {\n        const IS_CI = !!process.env?.TESTING_REMOTELY;\n        const version = _env_js__WEBPACK_IMPORTED_MODULE_2__.env.version;\n\n        const headers = new Headers();\n        headers.set('User-Agent', `transformers.js/${version}; is_ci/${IS_CI};`);\n\n        // Check whether we are making a request to the Hugging Face Hub.\n        const isHFURL = isValidUrl(urlOrPath, ['http:', 'https:'], ['huggingface.co', 'hf.co']);\n        if (isHFURL) {\n            // If an access token is present in the environment variables,\n            // we add it to the request headers.\n            // NOTE: We keep `HF_ACCESS_TOKEN` for backwards compatibility (as a fallback).\n            const token = process.env?.HF_TOKEN ?? process.env?.HF_ACCESS_TOKEN;\n            if (token) {\n                headers.set('Authorization', `Bearer ${token}`);\n            }\n        }\n        return fetch(urlOrPath, { headers });\n    } else {\n        // Running in a browser-environment, so we use default headers\n        // NOTE: We do not allow passing authorization headers in the browser,\n        // since this would require exposing the token to the client.\n        return fetch(urlOrPath);\n    }\n}\n\nconst ERROR_MAPPING = {\n    // 4xx errors (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses)\n    400: 'Bad request error occurred while trying to load file',\n    401: 'Unauthorized access to file',\n    403: 'Forbidden access to file',\n    404: 'Could not locate file',\n    408: 'Request timeout error occurred while trying to load file',\n\n    // 5xx errors (https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#server_error_responses)\n    500: 'Internal server error error occurred while trying to load file',\n    502: 'Bad gateway error occurred while trying to load file',\n    503: 'Service unavailable error occurred while trying to load file',\n    504: 'Gateway timeout error occurred while trying to load file',\n}\n/**\n * Helper method to handle fatal errors that occur while trying to load a file from the Hugging Face Hub.\n * @param {number} status The HTTP status code of the error.\n * @param {string} remoteURL The URL of the file that could not be loaded.\n * @param {boolean} fatal Whether to raise an error if the file could not be loaded.\n * @returns {null} Returns `null` if `fatal = true`.\n * @throws {Error} If `fatal = false`.\n */\nfunction handleError(status, remoteURL, fatal) {\n    if (!fatal) {\n        // File was not loaded correctly, but it is optional.\n        // TODO in future, cache the response?\n        return null;\n    }\n\n    const message = ERROR_MAPPING[status] ?? `Error (${status}) occurred while trying to load file`;\n    throw Error(`${message}: \"${remoteURL}\".`);\n}\n\nclass FileCache {\n    /**\n     * Instantiate a `FileCache` object.\n     * @param {string} path \n     */\n    constructor(path) {\n        this.path = path;\n    }\n\n    /**\n     * Checks whether the given request is in the cache.\n     * @param {string} request \n     * @returns {Promise<FileResponse | undefined>}\n     */\n    async match(request) {\n\n        let filePath = path__WEBPACK_IMPORTED_MODULE_1__.join(this.path, request);\n        let file = new FileResponse(filePath);\n\n        if (file.exists) {\n            return file;\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Adds the given response to the cache.\n     * @param {string} request \n     * @param {Response} response \n     * @param {(data: {progress: number, loaded: number, total: number}) => void} [progress_callback] Optional.\n     * The function to call with progress updates\n     * @returns {Promise<void>}\n     */\n    async put(request, response, progress_callback = undefined) {\n        let filePath = path__WEBPACK_IMPORTED_MODULE_1__.join(this.path, request);\n\n        try {\n            const contentLength = response.headers.get('Content-Length');\n            const total = parseInt(contentLength ?? '0');\n            let loaded = 0;\n\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(path__WEBPACK_IMPORTED_MODULE_1__.dirname(filePath), { recursive: true });\n            const fileStream = fs__WEBPACK_IMPORTED_MODULE_0__.createWriteStream(filePath);\n            const reader = response.body.getReader();\n\n            while (true) {\n                const { done, value } = await reader.read();\n                if (done) {\n                    break;\n                }\n\n                await new Promise((resolve, reject) => {\n                    fileStream.write(value, (err) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        resolve();\n                    });\n                });\n\n                loaded += value.length;\n                const progress = total ? (loaded / total) * 100 : 0;\n\n                progress_callback?.({ progress, loaded, total });\n            }\n\n            fileStream.close();\n        } catch (error) {\n            // Clean up the file if an error occurred during download\n            try {\n                await fs__WEBPACK_IMPORTED_MODULE_0__.promises.unlink(filePath);\n            } catch { }\n            throw error;\n        }\n    }\n\n    // TODO add the rest?\n    // addAll(requests: RequestInfo[]): Promise<void>;\n    // delete(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<boolean>;\n    // keys(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Request>>;\n    // match(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<Response | undefined>;\n    // matchAll(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Response>>;\n}\n\n/**\n * \n * @param {FileCache|Cache} cache The cache to search\n * @param {string[]} names The names of the item to search for\n * @returns {Promise<FileResponse|Response|undefined>} The item from the cache, or undefined if not found.\n */\nasync function tryCache(cache, ...names) {\n    for (let name of names) {\n        try {\n            let result = await cache.match(name);\n            if (result) return result;\n        } catch (e) {\n            continue;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Retrieves a file from either a remote URL using the Fetch API or from the local file system using the FileSystem API.\n * If the filesystem is available and `env.useCache = true`, the file will be downloaded and cached.\n *\n * @param {string} path_or_repo_id This can be either:\n * - a string, the *model id* of a model repo on huggingface.co.\n * - a path to a *directory* potentially containing the file.\n * @param {string} filename The name of the file to locate in `path_or_repo`.\n * @param {boolean} [fatal=true] Whether to throw an error if the file is not found.\n * @param {PretrainedOptions} [options] An object containing optional parameters.\n * @param {boolean} [return_path=false] Whether to return the path of the file instead of the file content.\n *\n * @throws Will throw an error if the file is not found and `fatal` is true.\n * @returns {Promise<string|Uint8Array>} A Promise that resolves with the file content as a Uint8Array if `return_path` is false, or the file path as a string if `return_path` is true.\n */\nasync function getModelFile(path_or_repo_id, filename, fatal = true, options = {}, return_path = false) {\n\n    if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.env.allowLocalModels) {\n        // User has disabled local models, so we just make sure other settings are correct.\n\n        if (options.local_files_only) {\n            throw Error(\"Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).\")\n        } else if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.env.allowRemoteModels) {\n            throw Error(\"Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.\")\n        }\n    }\n\n    // Initiate file retrieval\n    (0,_core_js__WEBPACK_IMPORTED_MODULE_3__.dispatchCallback)(options.progress_callback, {\n        status: 'initiate',\n        name: path_or_repo_id,\n        file: filename\n    })\n\n    // First, check if the a caching backend is available\n    // If no caching mechanism available, will download the file every time\n    let cache;\n    if (!cache && _env_js__WEBPACK_IMPORTED_MODULE_2__.env.useBrowserCache) {\n        if (typeof caches === 'undefined') {\n            throw Error('Browser cache is not available in this environment.')\n        }\n        try {\n            // In some cases, the browser cache may be visible, but not accessible due to security restrictions.\n            // For example, when running an application in an iframe, if a user attempts to load the page in\n            // incognito mode, the following error is thrown: `DOMException: Failed to execute 'open' on 'CacheStorage':\n            // An attempt was made to break through the security policy of the user agent.`\n            // So, instead of crashing, we just ignore the error and continue without using the cache.\n            cache = await caches.open('transformers-cache');\n        } catch (e) {\n            console.warn('An error occurred while opening the browser cache:', e);\n        }\n    }\n\n    if (!cache && _env_js__WEBPACK_IMPORTED_MODULE_2__.env.useFSCache) {\n        // TODO throw error if not available\n\n        // If `cache_dir` is not specified, use the default cache directory\n        cache = new FileCache(options.cache_dir ?? _env_js__WEBPACK_IMPORTED_MODULE_2__.env.cacheDir);\n    }\n\n    if (!cache && _env_js__WEBPACK_IMPORTED_MODULE_2__.env.useCustomCache) {\n        // Allow the user to specify a custom cache system.\n        if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.env.customCache) {\n            throw Error('`env.useCustomCache=true`, but `env.customCache` is not defined.')\n        }\n\n        // Check that the required methods are defined:\n        if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.env.customCache.match || !_env_js__WEBPACK_IMPORTED_MODULE_2__.env.customCache.put) {\n            throw new Error(\n                \"`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. \" +\n                \"For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache\"\n            )\n        }\n        cache = _env_js__WEBPACK_IMPORTED_MODULE_2__.env.customCache;\n    }\n\n    const revision = options.revision ?? 'main';\n\n    let requestURL = pathJoin(path_or_repo_id, filename);\n    let cachePath = pathJoin(_env_js__WEBPACK_IMPORTED_MODULE_2__.env.localModelPath, requestURL);\n\n    let localPath = requestURL;\n    let remoteURL = pathJoin(\n        _env_js__WEBPACK_IMPORTED_MODULE_2__.env.remoteHost,\n        _env_js__WEBPACK_IMPORTED_MODULE_2__.env.remotePathTemplate\n            .replaceAll('{model}', path_or_repo_id)\n            .replaceAll('{revision}', encodeURIComponent(revision)),\n        filename\n    );\n\n    // Choose cache key for filesystem cache\n    // When using the main revision (default), we use the request URL as the cache key.\n    // If a specific revision is requested, we account for this in the cache key.\n    let fsCacheKey = revision === 'main' ? requestURL : pathJoin(path_or_repo_id, revision, filename);\n\n    /** @type {string} */\n    let cacheKey;\n    let proposedCacheKey = cache instanceof FileCache ? fsCacheKey : remoteURL;\n\n    // Whether to cache the final response in the end.\n    let toCacheResponse = false;\n\n    /** @type {Response|FileResponse|undefined} */\n    let response;\n\n    if (cache) {\n        // A caching system is available, so we try to get the file from it.\n        //  1. We first try to get from cache using the local path. In some environments (like deno),\n        //     non-URL cache keys are not allowed. In these cases, `response` will be undefined.\n        //  2. If no response is found, we try to get from cache using the remote URL or file system cache.\n        response = await tryCache(cache, cachePath, proposedCacheKey);\n    }\n\n    const cacheHit = response !== undefined;\n\n    if (response === undefined) {\n        // Caching not available, or file is not cached, so we perform the request\n\n        if (_env_js__WEBPACK_IMPORTED_MODULE_2__.env.allowLocalModels) {\n            // Accessing local models is enabled, so we try to get the file locally.\n            // If request is a valid HTTP URL, we skip the local file check. Otherwise, we try to get the file locally.\n            const isURL = isValidUrl(requestURL, ['http:', 'https:']);\n            if (!isURL) {\n                try {\n                    response = await getFile(localPath);\n                    cacheKey = localPath; // Update the cache key to be the local path\n                } catch (e) {\n                    // Something went wrong while trying to get the file locally.\n                    // NOTE: error handling is done in the next step (since `response` will be undefined)\n                    console.warn(`Unable to load from local path \"${localPath}\": \"${e}\"`);\n                }\n            } else if (options.local_files_only) {\n                throw new Error(`\\`local_files_only=true\\`, but attempted to load a remote file from: ${localPath}.`);\n            } else if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.env.allowRemoteModels) {\n                throw new Error(`\\`env.allowRemoteModels=false\\`, but attempted to load a remote file from: ${localPath}.`);\n            }\n        }\n\n        if (response === undefined || response.status === 404) {\n            // File not found locally. This means either:\n            // - The user has disabled local file access (`env.allowLocalModels=false`)\n            // - the path is a valid HTTP url (`response === undefined`)\n            // - the path is not a valid HTTP url and the file is not present on the file system or local server (`response.status === 404`)\n\n            if (options.local_files_only || !_env_js__WEBPACK_IMPORTED_MODULE_2__.env.allowRemoteModels) {\n                // User requested local files only, but the file is not found locally.\n                if (fatal) {\n                    throw Error(`\\`local_files_only=true\\` or \\`env.allowRemoteModels=false\\` and file was not found locally at \"${localPath}\".`);\n                } else {\n                    // File not found, but this file is optional.\n                    // TODO in future, cache the response?\n                    return null;\n                }\n            }\n\n            // File not found locally, so we try to download it from the remote server\n            response = await getFile(remoteURL);\n\n            if (response.status !== 200) {\n                return handleError(response.status, remoteURL, fatal);\n            }\n\n            // Success! We use the proposed cache key from earlier\n            cacheKey = proposedCacheKey;\n        }\n\n        // Only cache the response if:\n        toCacheResponse =\n            cache                              // 1. A caching system is available\n            && typeof Response !== 'undefined' // 2. `Response` is defined (i.e., we are in a browser-like environment)\n            && response instanceof Response    // 3. result is a `Response` object (i.e., not a `FileResponse`)\n            && response.status === 200         // 4. request was successful (status code 200)\n    }\n\n    // Start downloading\n    (0,_core_js__WEBPACK_IMPORTED_MODULE_3__.dispatchCallback)(options.progress_callback, {\n        status: 'download',\n        name: path_or_repo_id,\n        file: filename\n    })\n\n    let result;\n    if (!(_env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_NODE_ENV && return_path)) {\n        /** @type {Uint8Array} */\n        let buffer;\n\n        if (!options.progress_callback) {\n            // If no progress callback is specified, we can use the `.arrayBuffer()`\n            // method to read the response.\n            buffer = new Uint8Array(await response.arrayBuffer());\n\n        } else if (\n            cacheHit // The item is being read from the cache\n            &&\n            typeof navigator !== 'undefined' && /firefox/i.test(navigator.userAgent) // We are in Firefox\n        ) {\n            // Due to bug in Firefox, we cannot display progress when loading from cache.\n            // Fortunately, since this should be instantaneous, this should not impact users too much.\n            buffer = new Uint8Array(await response.arrayBuffer());\n\n            // For completeness, we still fire the final progress callback\n            (0,_core_js__WEBPACK_IMPORTED_MODULE_3__.dispatchCallback)(options.progress_callback, {\n                status: 'progress',\n                name: path_or_repo_id,\n                file: filename,\n                progress: 100,\n                loaded: buffer.length,\n                total: buffer.length,\n            })\n        } else {\n            buffer = await readResponse(response, data => {\n                (0,_core_js__WEBPACK_IMPORTED_MODULE_3__.dispatchCallback)(options.progress_callback, {\n                    status: 'progress',\n                    name: path_or_repo_id,\n                    file: filename,\n                    ...data,\n                })\n            })\n        }\n        result = buffer;\n    }\n\n    if (\n        // Only cache web responses\n        // i.e., do not cache FileResponses (prevents duplication)\n        toCacheResponse && cacheKey\n        &&\n        // Check again whether request is in cache. If not, we add the response to the cache\n        (await cache.match(cacheKey) === undefined)\n    ) {\n        if (!result) {\n            // We haven't yet read the response body, so we need to do so now.\n            await cache.put(cacheKey, /** @type {Response} */(response), options.progress_callback);\n        } else {\n            // NOTE: We use `new Response(buffer, ...)` instead of `response.clone()` to handle LFS files\n            await cache.put(cacheKey, new Response(result, {\n                headers: response.headers\n            }))\n                .catch(err => {\n                    // Do not crash if unable to add to cache (e.g., QuotaExceededError).\n                    // Rather, log a warning and proceed with execution.\n                    console.warn(`Unable to add response to browser cache: ${err}.`);\n                });\n        }\n    }\n    (0,_core_js__WEBPACK_IMPORTED_MODULE_3__.dispatchCallback)(options.progress_callback, {\n        status: 'done',\n        name: path_or_repo_id,\n        file: filename\n    });\n\n    if (result) {\n        if (return_path) {\n            throw new Error(\"Cannot return path in a browser environment.\")\n        }\n        return result;\n    }\n    if (response instanceof FileResponse) {\n        return response.filePath;\n    }\n\n    const path = await cache.match(cacheKey);\n    if (path instanceof FileResponse) {\n        return path.filePath;\n    }\n    throw new Error(\"Unable to return path for response.\");\n\n}\n\n/**\n * Fetches a JSON file from a given path and file name.\n *\n * @param {string} modelPath The path to the directory containing the file.\n * @param {string} fileName The name of the file to fetch.\n * @param {boolean} [fatal=true] Whether to throw an error if the file is not found.\n * @param {PretrainedOptions} [options] An object containing optional parameters.\n * @returns {Promise<Object>} The JSON data parsed into a JavaScript object.\n * @throws Will throw an error if the file is not found and `fatal` is true.\n */\nasync function getModelJSON(modelPath, fileName, fatal = true, options = {}) {\n    const buffer = await getModelFile(modelPath, fileName, fatal, options, false);\n    if (buffer === null) {\n        // Return empty object\n        return {}\n    }\n\n    const decoder = new TextDecoder('utf-8');\n    const jsonData = decoder.decode(/** @type {Uint8Array} */(buffer));\n\n    return JSON.parse(jsonData);\n}\n/**\n * Read and track progress when reading a Response object\n *\n * @param {Response|FileResponse} response The Response object to read\n * @param {(data: {progress: number, loaded: number, total: number}) => void} progress_callback The function to call with progress updates\n * @returns {Promise<Uint8Array>} A Promise that resolves with the Uint8Array buffer\n */\nasync function readResponse(response, progress_callback) {\n\n    const contentLength = response.headers.get('Content-Length');\n    if (contentLength === null) {\n        console.warn('Unable to determine content-length from response headers. Will expand buffer when needed.')\n    }\n    let total = parseInt(contentLength ?? '0');\n    let buffer = new Uint8Array(total);\n    let loaded = 0;\n\n    const reader = response.body.getReader();\n    async function read() {\n        const { done, value } = await reader.read();\n        if (done) return;\n\n        const newLoaded = loaded + value.length;\n        if (newLoaded > total) {\n            total = newLoaded;\n\n            // Adding the new data will overflow buffer.\n            // In this case, we extend the buffer\n            const newBuffer = new Uint8Array(total);\n\n            // copy contents\n            newBuffer.set(buffer);\n\n            buffer = newBuffer;\n        }\n        buffer.set(value, loaded);\n        loaded = newLoaded;\n\n        const progress = (loaded / total) * 100;\n\n        // Call your function here\n        progress_callback({ progress, loaded, total });\n\n        return read();\n    }\n\n    // Actually read\n    await read();\n\n    return buffer;\n}\n\n/**\n * Joins multiple parts of a path into a single path, while handling leading and trailing slashes.\n *\n * @param {...string} parts Multiple parts of a path.\n * @returns {string} A string representing the joined path.\n */\nfunction pathJoin(...parts) {\n    // https://stackoverflow.com/a/55142565\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp('^/'), '');\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp('/$'), '');\n        }\n        return part;\n    })\n    return parts.join('/');\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/image.js\":\n/*!****************************!*\\\n  !*** ./src/utils/image.js ***!\n  \\****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RawImage: () => (/* binding */ RawImage),\n/* harmony export */   load_image: () => (/* binding */ load_image)\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./src/utils/core.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ \"./src/utils/hub.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n/* harmony import */ var _tensor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sharp */ \"?2b25\");\n\n/**\n * @file Helper module for image processing.\n *\n * These functions and classes are only used internally,\n * meaning an end-user shouldn't need to access anything here.\n *\n * @module utils/image\n */\n\n\n\n\n\n\n// Will be empty (or not used) if running in browser or web-worker\n\n\nlet createCanvasFunction;\nlet ImageDataClass;\nlet loadImageFunction;\nconst IS_BROWSER_OR_WEBWORKER = _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_BROWSER_ENV || _env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_WEBWORKER_ENV;\nif (IS_BROWSER_OR_WEBWORKER) {\n    // Running in browser or web-worker\n    createCanvasFunction = (/** @type {number} */ width, /** @type {number} */ height) => {\n        if (!self.OffscreenCanvas) {\n            throw new Error('OffscreenCanvas not supported by this browser.');\n        }\n        return new self.OffscreenCanvas(width, height)\n    };\n    loadImageFunction = self.createImageBitmap;\n    ImageDataClass = self.ImageData;\n\n} else if (sharp__WEBPACK_IMPORTED_MODULE_4__) {\n    // Running in Node.js, electron, or other non-browser environment\n\n    loadImageFunction = async (/**@type {sharp.Sharp}*/img) => {\n        const metadata = await img.metadata();\n        const rawChannels = metadata.channels;\n\n        const { data, info } = await img.rotate().raw().toBuffer({ resolveWithObject: true });\n\n        const newImage = new RawImage(new Uint8ClampedArray(data), info.width, info.height, info.channels);\n        if (rawChannels !== undefined && rawChannels !== info.channels) {\n            // Make sure the new image has the same number of channels as the input image.\n            // This is necessary for grayscale images.\n            newImage.convert(rawChannels);\n        }\n        return newImage;\n    }\n\n} else {\n    throw new Error('Unable to load image processing library.');\n}\n\n\n// Defined here: https://github.com/python-pillow/Pillow/blob/a405e8406b83f8bfb8916e93971edc7407b8b1ff/src/libImaging/Imaging.h#L262-L268\nconst RESAMPLING_MAPPING = {\n    0: 'nearest',\n    1: 'lanczos',\n    2: 'bilinear',\n    3: 'bicubic',\n    4: 'box',\n    5: 'hamming',\n}\n\n/**\n * Mapping from file extensions to MIME types.\n */\nconst CONTENT_TYPE_MAP = new Map([\n    ['png', 'image/png'],\n    ['jpg', 'image/jpeg'],\n    ['jpeg', 'image/jpeg'],\n    ['gif', 'image/gif'],\n]);\n\nclass RawImage {\n\n    /**\n     * Create a new `RawImage` object.\n     * @param {Uint8ClampedArray|Uint8Array} data The pixel data.\n     * @param {number} width The width of the image.\n     * @param {number} height The height of the image.\n     * @param {1|2|3|4} channels The number of channels.\n     */\n    constructor(data, width, height, channels) {\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        this.channels = channels;\n    }\n\n    /**\n     * Returns the size of the image (width, height).\n     * @returns {[number, number]} The size of the image (width, height).\n     */\n    get size() {\n        return [this.width, this.height];\n    }\n\n    /**\n     * Helper method for reading an image from a variety of input types.\n     * @param {RawImage|string|URL} input\n     * @returns The image object.\n     *\n     * **Example:** Read image from a URL.\n     * ```javascript\n     * let image = await RawImage.read('https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/football-match.jpg');\n     * // RawImage {\n     * //   \"data\": Uint8ClampedArray [ 25, 25, 25, 19, 19, 19, ... ],\n     * //   \"width\": 800,\n     * //   \"height\": 533,\n     * //   \"channels\": 3\n     * // }\n     * ```\n     */\n    static async read(input) {\n        if (input instanceof RawImage) {\n            return input;\n        } else if (typeof input === 'string' || input instanceof URL) {\n            return await this.fromURL(input);\n        } else {\n            throw new Error(`Unsupported input type: ${typeof input}`);\n        }\n    }\n\n    /**\n     * Read an image from a canvas.\n     * @param {HTMLCanvasElement|OffscreenCanvas} canvas The canvas to read the image from.\n     * @returns {RawImage} The image object.\n     */\n    static fromCanvas(canvas) {\n        if (!IS_BROWSER_OR_WEBWORKER) {\n            throw new Error('fromCanvas() is only supported in browser environments.')\n        }\n\n        const ctx = canvas.getContext('2d');\n        const data = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n        return new RawImage(data, canvas.width, canvas.height, 4);\n    }\n\n    /**\n     * Read an image from a URL or file path.\n     * @param {string|URL} url The URL or file path to read the image from.\n     * @returns {Promise<RawImage>} The image object.\n     */\n    static async fromURL(url) {\n        const response = await (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getFile)(url);\n        if (response.status !== 200) {\n            throw new Error(`Unable to read image from \"${url}\" (${response.status} ${response.statusText})`);\n        }\n        const blob = await response.blob();\n        return this.fromBlob(blob);\n    }\n\n    /**\n     * Helper method to create a new Image from a blob.\n     * @param {Blob} blob The blob to read the image from.\n     * @returns {Promise<RawImage>} The image object.\n     */\n    static async fromBlob(blob) {\n        if (IS_BROWSER_OR_WEBWORKER) {\n            // Running in environment with canvas\n            const img = await loadImageFunction(blob);\n\n            const ctx = createCanvasFunction(img.width, img.height).getContext('2d');\n\n            // Draw image to context\n            ctx.drawImage(img, 0, 0);\n\n            return new this(ctx.getImageData(0, 0, img.width, img.height).data, img.width, img.height, 4);\n\n        } else {\n            // Use sharp.js to read (and possible resize) the image.\n            const img = sharp__WEBPACK_IMPORTED_MODULE_4__(await blob.arrayBuffer());\n\n            return await loadImageFunction(img);\n        }\n    }\n\n    /**\n     * Helper method to create a new Image from a tensor\n     * @param {Tensor} tensor\n     */\n    static fromTensor(tensor, channel_format = 'CHW') {\n        if (tensor.dims.length !== 3) {\n            throw new Error(`Tensor should have 3 dimensions, but has ${tensor.dims.length} dimensions.`);\n        }\n\n        if (channel_format === 'CHW') {\n            tensor = tensor.transpose(1, 2, 0);\n        } else if (channel_format === 'HWC') {\n            // Do nothing\n        } else {\n            throw new Error(`Unsupported channel format: ${channel_format}`);\n        }\n        if (!(tensor.data instanceof Uint8ClampedArray || tensor.data instanceof Uint8Array)) {\n            throw new Error(`Unsupported tensor type: ${tensor.type}`);\n        }\n        switch (tensor.dims[2]) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n                return new RawImage(tensor.data, tensor.dims[1], tensor.dims[0], tensor.dims[2]);\n            default:\n                throw new Error(`Unsupported number of channels: ${tensor.dims[2]}`);\n        }\n    }\n\n    /**\n     * Convert the image to grayscale format.\n     * @returns {RawImage} `this` to support chaining.\n     */\n    grayscale() {\n        if (this.channels === 1) {\n            return this;\n        }\n\n        const newData = new Uint8ClampedArray(this.width * this.height * 1);\n        switch (this.channels) {\n            case 3: // rgb to grayscale\n            case 4: // rgba to grayscale\n                for (let i = 0, offset = 0; i < this.data.length; i += this.channels) {\n                    const red = this.data[i];\n                    const green = this.data[i + 1];\n                    const blue = this.data[i + 2];\n\n                    newData[offset++] = Math.round(0.2989 * red + 0.5870 * green + 0.1140 * blue);\n                }\n                break;\n            default:\n                throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`);\n        }\n        return this._update(newData, this.width, this.height, 1);\n    }\n\n    /**\n     * Convert the image to RGB format.\n     * @returns {RawImage} `this` to support chaining.\n     */\n    rgb() {\n        if (this.channels === 3) {\n            return this;\n        }\n\n        const newData = new Uint8ClampedArray(this.width * this.height * 3);\n\n        switch (this.channels) {\n            case 1: // grayscale to rgb\n                for (let i = 0, offset = 0; i < this.data.length; ++i) {\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i];\n                }\n                break;\n            case 4: // rgba to rgb\n                for (let i = 0, offset = 0; i < this.data.length; i += 4) {\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i + 1];\n                    newData[offset++] = this.data[i + 2];\n                }\n                break;\n            default:\n                throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`);\n        }\n        return this._update(newData, this.width, this.height, 3);\n\n    }\n\n    /**\n     * Convert the image to RGBA format.\n     * @returns {RawImage} `this` to support chaining.\n     */\n    rgba() {\n        if (this.channels === 4) {\n            return this;\n        }\n\n        const newData = new Uint8ClampedArray(this.width * this.height * 4);\n\n        switch (this.channels) {\n            case 1: // grayscale to rgba\n                for (let i = 0, offset = 0; i < this.data.length; ++i) {\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = 255;\n                }\n                break;\n            case 3: // rgb to rgba\n                for (let i = 0, offset = 0; i < this.data.length; i += 3) {\n                    newData[offset++] = this.data[i];\n                    newData[offset++] = this.data[i + 1];\n                    newData[offset++] = this.data[i + 2];\n                    newData[offset++] = 255;\n                }\n                break;\n            default:\n                throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`);\n        }\n\n        return this._update(newData, this.width, this.height, 4);\n    }\n\n    /**\n     * Apply an alpha mask to the image. Operates in place.\n     * @param {RawImage} mask The mask to apply. It should have a single channel.\n     * @returns {RawImage} The masked image.\n     * @throws {Error} If the mask is not the same size as the image.\n     * @throws {Error} If the image does not have 4 channels.\n     * @throws {Error} If the mask is not a single channel.\n     */\n    putAlpha(mask) {\n        if (mask.width !== this.width || mask.height !== this.height) {\n            throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${mask.width}x${mask.height}`);\n        }\n        if (mask.channels !== 1) {\n            throw new Error(`Expected mask to have 1 channel, but got ${mask.channels}`);\n        }\n\n        const this_data = this.data;\n        const mask_data = mask.data;\n        const num_pixels = this.width * this.height;\n        if (this.channels === 3) {\n            // Convert to RGBA and simultaneously apply mask to alpha channel\n            const newData = new Uint8ClampedArray(num_pixels * 4);\n            for (let i = 0, in_offset = 0, out_offset = 0; i < num_pixels; ++i) {\n                newData[out_offset++] = this_data[in_offset++];\n                newData[out_offset++] = this_data[in_offset++];\n                newData[out_offset++] = this_data[in_offset++];\n                newData[out_offset++] = mask_data[i];\n            }\n            return this._update(newData, this.width, this.height, 4);\n\n        } else if (this.channels === 4) {\n            // Apply mask to alpha channel in place\n            for (let i = 0; i < num_pixels; ++i) {\n                this_data[4 * i + 3] = mask_data[i];\n            }\n            return this;\n        }\n        throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`);\n    }\n\n    /**\n     * Resize the image to the given dimensions. This method uses the canvas API to perform the resizing.\n     * @param {number} width The width of the new image. `null` or `-1` will preserve the aspect ratio.\n     * @param {number} height The height of the new image. `null` or `-1` will preserve the aspect ratio.\n     * @param {Object} options Additional options for resizing.\n     * @param {0|1|2|3|4|5|string} [options.resample] The resampling method to use.\n     * @returns {Promise<RawImage>} `this` to support chaining.\n     */\n    async resize(width, height, {\n        resample = 2,\n    } = {}) {\n\n        // Do nothing if the image already has the desired size\n        if (this.width === width && this.height === height) {\n            return this;\n        }\n\n        // Ensure resample method is a string\n        let resampleMethod = RESAMPLING_MAPPING[resample] ?? resample;\n\n        // Calculate width / height to maintain aspect ratio, in the event that\n        // the user passed a null value in.\n        // This allows users to pass in something like `resize(320, null)` to\n        // resize to 320 width, but maintain aspect ratio.\n        const nullish_width = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.isNullishDimension)(width);\n        const nullish_height = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.isNullishDimension)(height);\n        if (nullish_width && nullish_height) {\n            return this;\n        } else if (nullish_width) {\n            width = (height / this.height) * this.width;\n        } else if (nullish_height) {\n            height = (width / this.width) * this.height;\n        }\n\n        if (IS_BROWSER_OR_WEBWORKER) {\n            // TODO use `resample` in browser environment\n\n            // Store number of channels before resizing\n            const numChannels = this.channels;\n\n            // Create canvas object for this image\n            const canvas = this.toCanvas();\n\n            // Actually perform resizing using the canvas API\n            const ctx = createCanvasFunction(width, height).getContext('2d');\n\n            // Draw image to context, resizing in the process\n            ctx.drawImage(canvas, 0, 0, width, height);\n\n            // Create image from the resized data\n            const resizedImage = new RawImage(ctx.getImageData(0, 0, width, height).data, width, height, 4);\n\n            // Convert back so that image has the same number of channels as before\n            return resizedImage.convert(numChannels);\n\n        } else {\n            // Create sharp image from raw data, and resize\n            let img = this.toSharp();\n\n            switch (resampleMethod) {\n                case 'box':\n                case 'hamming':\n                    if (resampleMethod === 'box' || resampleMethod === 'hamming') {\n                        console.warn(`Resampling method ${resampleMethod} is not yet supported. Using bilinear instead.`);\n                        resampleMethod = 'bilinear';\n                    }\n\n                case 'nearest':\n                case 'bilinear':\n                case 'bicubic':\n                    // Perform resizing using affine transform.\n                    // This matches how the python Pillow library does it.\n                    img = img.affine([width / this.width, 0, 0, height / this.height], {\n                        interpolator: resampleMethod\n                    });\n                    break;\n\n                case 'lanczos':\n                    // https://github.com/python-pillow/Pillow/discussions/5519\n                    // https://github.com/lovell/sharp/blob/main/docs/api-resize.md\n                    img = img.resize({\n                        width, height,\n                        fit: 'fill',\n                        kernel: 'lanczos3', // PIL Lanczos uses a kernel size of 3\n                    });\n                    break;\n\n                default:\n                    throw new Error(`Resampling method ${resampleMethod} is not supported.`);\n            }\n\n            return await loadImageFunction(img);\n        }\n\n    }\n\n    async pad([left, right, top, bottom]) {\n        left = Math.max(left, 0);\n        right = Math.max(right, 0);\n        top = Math.max(top, 0);\n        bottom = Math.max(bottom, 0);\n\n        if (left === 0 && right === 0 && top === 0 && bottom === 0) {\n            // No padding needed\n            return this;\n        }\n\n        if (IS_BROWSER_OR_WEBWORKER) {\n            // Store number of channels before padding\n            const numChannels = this.channels;\n\n            // Create canvas object for this image\n            const canvas = this.toCanvas();\n\n            const newWidth = this.width + left + right;\n            const newHeight = this.height + top + bottom;\n\n            // Create a new canvas of the desired size.\n            const ctx = createCanvasFunction(newWidth, newHeight).getContext('2d');\n\n            // Draw image to context, padding in the process\n            ctx.drawImage(canvas,\n                0, 0, this.width, this.height,\n                left, top, this.width, this.height\n            );\n\n            // Create image from the padded data\n            const paddedImage = new RawImage(\n                ctx.getImageData(0, 0, newWidth, newHeight).data,\n                newWidth, newHeight, 4\n            );\n\n            // Convert back so that image has the same number of channels as before\n            return paddedImage.convert(numChannels);\n\n        } else {\n            const img = this.toSharp().extend({ left, right, top, bottom });\n            return await loadImageFunction(img);\n        }\n    }\n\n    async crop([x_min, y_min, x_max, y_max]) {\n        // Ensure crop bounds are within the image\n        x_min = Math.max(x_min, 0);\n        y_min = Math.max(y_min, 0);\n        x_max = Math.min(x_max, this.width - 1);\n        y_max = Math.min(y_max, this.height - 1);\n\n        // Do nothing if the crop is the entire image\n        if (x_min === 0 && y_min === 0 && x_max === this.width - 1 && y_max === this.height - 1) {\n            return this;\n        }\n\n        const crop_width = x_max - x_min + 1;\n        const crop_height = y_max - y_min + 1;\n\n        if (IS_BROWSER_OR_WEBWORKER) {\n            // Store number of channels before resizing\n            const numChannels = this.channels;\n\n            // Create canvas object for this image\n            const canvas = this.toCanvas();\n\n            // Create a new canvas of the desired size. This is needed since if the\n            // image is too small, we need to pad it with black pixels.\n            const ctx = createCanvasFunction(crop_width, crop_height).getContext('2d');\n\n            // Draw image to context, cropping in the process\n            ctx.drawImage(canvas,\n                x_min, y_min, crop_width, crop_height,\n                0, 0, crop_width, crop_height\n            );\n\n            // Create image from the resized data\n            const resizedImage = new RawImage(ctx.getImageData(0, 0, crop_width, crop_height).data, crop_width, crop_height, 4);\n\n            // Convert back so that image has the same number of channels as before\n            return resizedImage.convert(numChannels);\n\n        } else {\n            // Create sharp image from raw data\n            const img = this.toSharp().extract({\n                left: x_min,\n                top: y_min,\n                width: crop_width,\n                height: crop_height,\n            });\n\n            return await loadImageFunction(img);\n        }\n\n    }\n\n    async center_crop(crop_width, crop_height) {\n        // If the image is already the desired size, return it\n        if (this.width === crop_width && this.height === crop_height) {\n            return this;\n        }\n\n        // Determine bounds of the image in the new canvas\n        const width_offset = (this.width - crop_width) / 2;\n        const height_offset = (this.height - crop_height) / 2;\n\n\n        if (IS_BROWSER_OR_WEBWORKER) {\n            // Store number of channels before resizing\n            const numChannels = this.channels;\n\n            // Create canvas object for this image\n            const canvas = this.toCanvas();\n\n            // Create a new canvas of the desired size. This is needed since if the\n            // image is too small, we need to pad it with black pixels.\n            const ctx = createCanvasFunction(crop_width, crop_height).getContext('2d');\n\n            let sourceX = 0;\n            let sourceY = 0;\n            let destX = 0;\n            let destY = 0;\n\n            if (width_offset >= 0) {\n                sourceX = width_offset;\n            } else {\n                destX = -width_offset;\n            }\n\n            if (height_offset >= 0) {\n                sourceY = height_offset;\n            } else {\n                destY = -height_offset;\n            }\n\n            // Draw image to context, cropping in the process\n            ctx.drawImage(canvas,\n                sourceX, sourceY, crop_width, crop_height,\n                destX, destY, crop_width, crop_height\n            );\n\n            // Create image from the resized data\n            const resizedImage = new RawImage(ctx.getImageData(0, 0, crop_width, crop_height).data, crop_width, crop_height, 4);\n\n            // Convert back so that image has the same number of channels as before\n            return resizedImage.convert(numChannels);\n\n        } else {\n            // Create sharp image from raw data\n            let img = this.toSharp();\n\n            if (width_offset >= 0 && height_offset >= 0) {\n                // Cropped image lies entirely within the original image\n                img = img.extract({\n                    left: Math.floor(width_offset),\n                    top: Math.floor(height_offset),\n                    width: crop_width,\n                    height: crop_height,\n                })\n            } else if (width_offset <= 0 && height_offset <= 0) {\n                // Cropped image lies entirely outside the original image,\n                // so we add padding\n                const top = Math.floor(-height_offset);\n                const left = Math.floor(-width_offset);\n                img = img.extend({\n                    top: top,\n                    left: left,\n\n                    // Ensures the resulting image has the desired dimensions\n                    right: crop_width - this.width - left,\n                    bottom: crop_height - this.height - top,\n                });\n            } else {\n                // Cropped image lies partially outside the original image.\n                // We first pad, then crop.\n\n                let y_padding = [0, 0];\n                let y_extract = 0;\n                if (height_offset < 0) {\n                    y_padding[0] = Math.floor(-height_offset);\n                    y_padding[1] = crop_height - this.height - y_padding[0];\n                } else {\n                    y_extract = Math.floor(height_offset);\n                }\n\n                let x_padding = [0, 0];\n                let x_extract = 0;\n                if (width_offset < 0) {\n                    x_padding[0] = Math.floor(-width_offset);\n                    x_padding[1] = crop_width - this.width - x_padding[0];\n                } else {\n                    x_extract = Math.floor(width_offset);\n                }\n\n                img = img.extend({\n                    top: y_padding[0],\n                    bottom: y_padding[1],\n                    left: x_padding[0],\n                    right: x_padding[1],\n                }).extract({\n                    left: x_extract,\n                    top: y_extract,\n                    width: crop_width,\n                    height: crop_height,\n                })\n            }\n\n            return await loadImageFunction(img);\n        }\n    }\n\n    async toBlob(type = 'image/png', quality = 1) {\n        if (!IS_BROWSER_OR_WEBWORKER) {\n            throw new Error('toBlob() is only supported in browser environments.')\n        }\n\n        const canvas = this.toCanvas();\n        return await canvas.convertToBlob({ type, quality });\n    }\n\n    toTensor(channel_format = 'CHW') {\n        let tensor = new _tensor_js__WEBPACK_IMPORTED_MODULE_3__.Tensor(\n            'uint8',\n            new Uint8Array(this.data),\n            [this.height, this.width, this.channels]\n        );\n\n        if (channel_format === 'HWC') {\n            // Do nothing\n        } else if (channel_format === 'CHW') { // hwc -> chw\n            tensor = tensor.permute(2, 0, 1);\n        } else {\n            throw new Error(`Unsupported channel format: ${channel_format}`);\n        }\n        return tensor;\n    }\n\n    toCanvas() {\n        if (!IS_BROWSER_OR_WEBWORKER) {\n            throw new Error('toCanvas() is only supported in browser environments.')\n        }\n\n        // Clone, and convert data to RGBA before drawing to canvas.\n        // This is because the canvas API only supports RGBA\n        const cloned = this.clone().rgba();\n\n        // Create canvas object for the cloned image\n        const clonedCanvas = createCanvasFunction(cloned.width, cloned.height);\n\n        // Draw image to context\n        const data = new ImageDataClass(cloned.data, cloned.width, cloned.height);\n        clonedCanvas.getContext('2d').putImageData(data, 0, 0);\n\n        return clonedCanvas;\n    }\n\n    /**\n     * Split this image into individual bands. This method returns an array of individual image bands from an image.\n     * For example, splitting an \"RGB\" image creates three new images each containing a copy of one of the original bands (red, green, blue).\n     * \n     * Inspired by PIL's `Image.split()` [function](https://pillow.readthedocs.io/en/latest/reference/Image.html#PIL.Image.Image.split).\n     * @returns {RawImage[]} An array containing bands.\n     */\n    split() {\n        const { data, width, height, channels } = this;\n\n        /** @type {typeof Uint8Array | typeof Uint8ClampedArray} */\n        const data_type = /** @type {any} */(data.constructor);\n        const per_channel_length = data.length / channels;\n\n        // Pre-allocate buffers for each channel\n        const split_data = Array.from(\n            { length: channels },\n            () => new data_type(per_channel_length),\n        );\n\n        // Write pixel data\n        for (let i = 0; i < per_channel_length; ++i) {\n            const data_offset = channels * i;\n            for (let j = 0; j < channels; ++j) {\n                split_data[j][i] = data[data_offset + j];\n            }\n        }\n        return split_data.map((data) => new RawImage(data, width, height, 1));\n    }\n\n    /**\n     * Helper method to update the image data.\n     * @param {Uint8ClampedArray} data The new image data.\n     * @param {number} width The new width of the image.\n     * @param {number} height The new height of the image.\n     * @param {1|2|3|4|null} [channels] The new number of channels of the image.\n     * @private\n     */\n    _update(data, width, height, channels = null) {\n        this.data = data;\n        this.width = width;\n        this.height = height;\n        if (channels !== null) {\n            this.channels = channels;\n        }\n        return this;\n    }\n\n    /**\n     * Clone the image\n     * @returns {RawImage} The cloned image\n     */\n    clone() {\n        return new RawImage(this.data.slice(), this.width, this.height, this.channels);\n    }\n\n    /**\n     * Helper method for converting image to have a certain number of channels\n     * @param {number} numChannels The number of channels. Must be 1, 3, or 4.\n     * @returns {RawImage} `this` to support chaining.\n     */\n    convert(numChannels) {\n        if (this.channels === numChannels) return this; // Already correct number of channels\n\n        switch (numChannels) {\n            case 1:\n                this.grayscale();\n                break;\n            case 3:\n                this.rgb();\n                break;\n            case 4:\n                this.rgba();\n                break;\n            default:\n                throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`);\n        }\n        return this;\n    }\n\n    /**\n     * Save the image to the given path.\n     * @param {string} path The path to save the image to.\n     */\n    async save(path) {\n\n        if (IS_BROWSER_OR_WEBWORKER) {\n            if (_env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_WEBWORKER_ENV) {\n                throw new Error('Unable to save an image from a Web Worker.')\n            }\n\n            const extension = path.split('.').pop().toLowerCase();\n            const mime = CONTENT_TYPE_MAP.get(extension) ?? 'image/png';\n\n            // Convert image to Blob\n            const blob = await this.toBlob(mime);\n\n            (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.saveBlob)(path, blob)\n\n        } else if (!_env_js__WEBPACK_IMPORTED_MODULE_2__.apis.IS_FS_AVAILABLE) {\n            throw new Error('Unable to save the image because filesystem is disabled in this environment.')\n\n        } else {\n            const img = this.toSharp();\n            return await img.toFile(path);\n        }\n    }\n\n    toSharp() {\n        if (IS_BROWSER_OR_WEBWORKER) {\n            throw new Error('toSharp() is only supported in server-side environments.')\n        }\n\n        return sharp__WEBPACK_IMPORTED_MODULE_4__(this.data, {\n            raw: {\n                width: this.width,\n                height: this.height,\n                channels: this.channels\n            }\n        });\n    }\n}\n\n/**\n * Helper function to load an image from a URL, path, etc.\n */\nconst load_image = RawImage.read.bind(RawImage);\n\n\n\n/***/ }),\n\n/***/ \"./src/utils/maths.js\":\n/*!****************************!*\\\n  !*** ./src/utils/maths.js ***!\n  \\****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FFT: () => (/* binding */ FFT),\n/* harmony export */   bankers_round: () => (/* binding */ bankers_round),\n/* harmony export */   cos_sim: () => (/* binding */ cos_sim),\n/* harmony export */   dot: () => (/* binding */ dot),\n/* harmony export */   dynamic_time_warping: () => (/* binding */ dynamic_time_warping),\n/* harmony export */   interpolate_data: () => (/* binding */ interpolate_data),\n/* harmony export */   log_softmax: () => (/* binding */ log_softmax),\n/* harmony export */   magnitude: () => (/* binding */ magnitude),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   medianFilter: () => (/* binding */ medianFilter),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   permute_data: () => (/* binding */ permute_data),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   softmax: () => (/* binding */ softmax)\n/* harmony export */ });\n\n/**\n * @file Helper module for mathematical processing. \n * \n * These functions and classes are only used internally, \n * meaning an end-user shouldn't need to access anything here.\n * \n * @module utils/maths\n */\n\n/**\n * @typedef {Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float16Array | Float32Array | Float64Array} TypedArray\n * @typedef {BigInt64Array | BigUint64Array} BigTypedArray\n * @typedef {TypedArray | BigTypedArray} AnyTypedArray\n */\n\n/**\n * @param {TypedArray} input\n */\nfunction interpolate_data(input, [in_channels, in_height, in_width], [out_height, out_width], mode = 'bilinear', align_corners = false) {\n    // TODO use mode and align_corners\n\n    // Output image dimensions\n    const x_scale = out_width / in_width;\n    const y_scale = out_height / in_height;\n\n    // Output image\n    // @ts-ignore\n    const out_img = new input.constructor(out_height * out_width * in_channels);\n\n    // Pre-calculate strides\n    const inStride = in_height * in_width;\n    const outStride = out_height * out_width;\n\n    for (let i = 0; i < out_height; ++i) {\n        for (let j = 0; j < out_width; ++j) {\n            // Calculate output offset\n            const outOffset = i * out_width + j;\n\n            // Calculate input pixel coordinates\n            const x = (j + 0.5) / x_scale - 0.5;\n            const y = (i + 0.5) / y_scale - 0.5;\n\n            // Calculate the four nearest input pixels\n            // We also check if the input pixel coordinates are within the image bounds\n            let x1 = Math.floor(x);\n            let y1 = Math.floor(y);\n            const x2 = Math.min(x1 + 1, in_width - 1);\n            const y2 = Math.min(y1 + 1, in_height - 1);\n\n            x1 = Math.max(x1, 0);\n            y1 = Math.max(y1, 0);\n\n\n            // Calculate the fractional distances between the input pixel and the four nearest pixels\n            const s = x - x1;\n            const t = y - y1;\n\n            // Perform bilinear interpolation\n            const w1 = (1 - s) * (1 - t);\n            const w2 = s * (1 - t);\n            const w3 = (1 - s) * t;\n            const w4 = s * t;\n\n            // Calculate the four nearest input pixel indices\n            const yStride = y1 * in_width;\n            const xStride = y2 * in_width;\n            const idx1 = yStride + x1;\n            const idx2 = yStride + x2;\n            const idx3 = xStride + x1;\n            const idx4 = xStride + x2;\n\n            for (let k = 0; k < in_channels; ++k) {\n                // Calculate channel offset\n                const cOffset = k * inStride;\n\n                out_img[k * outStride + outOffset] =\n                    w1 * input[cOffset + idx1] +\n                    w2 * input[cOffset + idx2] +\n                    w3 * input[cOffset + idx3] +\n                    w4 * input[cOffset + idx4];\n            }\n        }\n    }\n\n    return out_img;\n}\n\n\n/**\n * Helper method to permute a `AnyTypedArray` directly\n * @template {AnyTypedArray} T \n * @param {T} array \n * @param {number[]} dims \n * @param {number[]} axes \n * @returns {[T, number[]]} The permuted array and the new shape.\n */\nfunction permute_data(array, dims, axes) {\n    // Calculate the new shape of the permuted array\n    // and the stride of the original array\n    const shape = new Array(axes.length);\n    const stride = new Array(axes.length);\n\n    for (let i = axes.length - 1, s = 1; i >= 0; --i) {\n        stride[i] = s;\n        shape[i] = dims[axes[i]];\n        s *= shape[i];\n    }\n\n    // Precompute inverse mapping of stride\n    const invStride = axes.map((_, i) => stride[axes.indexOf(i)]);\n\n    // Create the permuted array with the new shape\n    // @ts-ignore\n    const permutedData = new array.constructor(array.length);\n\n    // Permute the original array to the new array\n    for (let i = 0; i < array.length; ++i) {\n        let newIndex = 0;\n        for (let j = dims.length - 1, k = i; j >= 0; --j) {\n            newIndex += (k % dims[j]) * invStride[j];\n            k = Math.floor(k / dims[j]);\n        }\n        permutedData[newIndex] = array[i];\n    }\n\n    return [permutedData, shape];\n}\n\n\n/**\n * Compute the softmax of an array of numbers.\n * @template {TypedArray|number[]} T\n * @param {T} arr The array of numbers to compute the softmax of.\n * @returns {T} The softmax array.\n */\nfunction softmax(arr) {\n    // Compute the maximum value in the array\n    const maxVal = max(arr)[0];\n\n    // Compute the exponentials of the array values\n    const exps = arr.map(x => Math.exp(x - maxVal));\n\n    // Compute the sum of the exponentials\n    // @ts-ignore\n    const sumExps = exps.reduce((acc, val) => acc + val, 0);\n\n    // Compute the softmax values\n    const softmaxArr = exps.map(x => x / sumExps);\n\n    return /** @type {T} */(softmaxArr);\n}\n\n/**\n * Calculates the logarithm of the softmax function for the input array.\n * @template {TypedArray|number[]} T\n * @param {T} arr The input array to calculate the log_softmax function for.\n * @returns {T} The resulting log_softmax array.\n */\nfunction log_softmax(arr) {\n    // Compute the maximum value in the array\n    const maxVal = max(arr)[0];\n\n    // Compute the sum of the exponentials\n    let sumExps = 0;\n    for(let i = 0; i < arr.length; ++i) {\n        sumExps += Math.exp(arr[i] - maxVal);\n    }\n\n    // Compute the log of the sum\n    const logSum = Math.log(sumExps);\n\n    // Compute the softmax values\n    const logSoftmaxArr = arr.map(x => x - maxVal - logSum);\n\n    return /** @type {T} */(logSoftmaxArr);\n}\n\n/**\n * Calculates the dot product of two arrays.\n * @param {number[]} arr1 The first array.\n * @param {number[]} arr2 The second array.\n * @returns {number} The dot product of arr1 and arr2.\n */\nfunction dot(arr1, arr2) {\n    let result = 0;\n    for (let i = 0; i < arr1.length; ++i) {\n        result += arr1[i] * arr2[i];\n    }\n    return result;\n}\n\n/**\n * Computes the cosine similarity between two arrays.\n *\n * @param {number[]} arr1 The first array.\n * @param {number[]} arr2 The second array.\n * @returns {number} The cosine similarity between the two arrays.\n */\nfunction cos_sim(arr1, arr2) {\n    // Calculate dot product of the two arrays\n    const dotProduct = dot(arr1, arr2);\n\n    // Calculate the magnitude of the first array\n    const magnitudeA = magnitude(arr1);\n\n    // Calculate the magnitude of the second array\n    const magnitudeB = magnitude(arr2);\n\n    // Calculate the cosine similarity\n    const cosineSimilarity = dotProduct / (magnitudeA * magnitudeB);\n\n    return cosineSimilarity;\n}\n\n/**\n * Calculates the magnitude of a given array.\n * @param {number[]} arr The array to calculate the magnitude of.\n * @returns {number} The magnitude of the array.\n */\nfunction magnitude(arr) {\n    return Math.sqrt(arr.reduce((acc, val) => acc + val * val, 0));\n}\n\n\n/**\n * Returns the value and index of the minimum element in an array.\n * @template {number[]|bigint[]|AnyTypedArray} T\n * @param {T} arr array of numbers.\n * @returns {T extends bigint[]|BigTypedArray ? [bigint, number] : [number, number]} the value and index of the minimum element, of the form: [valueOfMin, indexOfMin]\n * @throws {Error} If array is empty.\n */\nfunction min(arr) {\n    if (arr.length === 0) throw Error('Array must not be empty');\n    let min = arr[0];\n    let indexOfMin = 0;\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < min) {\n            min = arr[i];\n            indexOfMin = i;\n        }\n    }\n    return /** @type {T extends bigint[]|BigTypedArray ? [bigint, number] : [number, number]} */([min, indexOfMin]);\n}\n\n\n/**\n * Returns the value and index of the maximum element in an array.\n * @template {number[]|bigint[]|AnyTypedArray} T\n * @param {T} arr array of numbers.\n * @returns {T extends bigint[]|BigTypedArray ? [bigint, number] : [number, number]} the value and index of the maximum element, of the form: [valueOfMax, indexOfMax]\n * @throws {Error} If array is empty.\n */\nfunction max(arr) {\n    if (arr.length === 0) throw Error('Array must not be empty');\n    let max = arr[0];\n    let indexOfMax = 0;\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] > max) {\n            max = arr[i];\n            indexOfMax = i;\n        }\n    }\n    return /** @type {T extends bigint[]|BigTypedArray ? [bigint, number] : [number, number]} */([max, indexOfMax]);\n}\n\nfunction isPowerOfTwo(number) {\n    // Check if the number is greater than 0 and has only one bit set to 1\n    return (number > 0) && ((number & (number - 1)) === 0);\n}\n\n/**\n * Implementation of Radix-4 FFT.\n * \n * P2FFT class provides functionality for performing Fast Fourier Transform on arrays\n * which are a power of two in length.\n * Code adapted from https://www.npmjs.com/package/fft.js\n */\nclass P2FFT {\n    /**\n     * @param {number} size The size of the input array. Must be a power of two larger than 1.\n     * @throws {Error} FFT size must be a power of two larger than 1.\n     */\n    constructor(size) {\n        this.size = size | 0; // convert to a 32-bit signed integer\n        if (this.size <= 1 || !isPowerOfTwo(this.size))\n            throw new Error('FFT size must be a power of two larger than 1');\n\n        this._csize = size << 1;\n\n        this.table = new Float64Array(this.size * 2);\n        for (let i = 0; i < this.table.length; i += 2) {\n            const angle = Math.PI * i / this.size;\n            this.table[i] = Math.cos(angle);\n            this.table[i + 1] = -Math.sin(angle);\n        }\n\n        // Find size's power of two\n        let power = 0;\n        for (let t = 1; this.size > t; t <<= 1)\n            ++power;\n\n        // Calculate initial step's width:\n        //   * If we are full radix-4, it is 2x smaller to give inital len=8\n        //   * Otherwise it is the same as `power` to give len=4\n        this._width = power % 2 === 0 ? power - 1 : power;\n\n        // Pre-compute bit-reversal patterns\n        this._bitrev = new Int32Array(1 << this._width);\n        for (let j = 0; j < this._bitrev.length; ++j) {\n            this._bitrev[j] = 0;\n            for (let shift = 0; shift < this._width; shift += 2) {\n                const revShift = this._width - shift - 2;\n                this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n            }\n        }\n    }\n\n    /**\n     * Create a complex number array with size `2 * size`\n     *\n     * @returns {Float64Array} A complex number array with size `2 * size`\n     */\n    createComplexArray() {\n        return new Float64Array(this._csize);\n    }\n\n    /**\n     * Converts a complex number representation stored in a Float64Array to an array of real numbers.\n     * \n     * @param {Float64Array} complex The complex number representation to be converted.\n     * @param {number[]} [storage] An optional array to store the result in.\n     * @returns {number[]} An array of real numbers representing the input complex number representation.\n     */\n    fromComplexArray(complex, storage) {\n        const res = storage || new Array(complex.length >>> 1);\n        for (let i = 0; i < complex.length; i += 2)\n            res[i >>> 1] = complex[i];\n        return res;\n    }\n\n    /**\n     * Convert a real-valued input array to a complex-valued output array.\n     * @param {Float64Array} input The real-valued input array.\n     * @param {Float64Array} [storage] Optional buffer to store the output array.\n     * @returns {Float64Array} The complex-valued output array.\n     */\n    toComplexArray(input, storage) {\n        const res = storage || this.createComplexArray();\n        for (let i = 0; i < res.length; i += 2) {\n            res[i] = input[i >>> 1];\n            res[i + 1] = 0;\n        }\n        return res;\n    }\n\n    /**\n     * Performs a Fast Fourier Transform (FFT) on the given input data and stores the result in the output buffer.\n     * \n     * @param {Float64Array} out The output buffer to store the result.\n     * @param {Float64Array} data The input data to transform.\n     * \n     * @throws {Error} Input and output buffers must be different.\n     * \n     * @returns {void}\n     */\n    transform(out, data) {\n        if (out === data)\n            throw new Error('Input and output buffers must be different');\n\n        this._transform4(out, data, 1 /* DONE */);\n    }\n\n    /**\n     * Performs a real-valued forward FFT on the given input buffer and stores the result in the given output buffer.\n     * The input buffer must contain real values only, while the output buffer will contain complex values. The input and\n     * output buffers must be different.\n     *\n     * @param {Float64Array} out The output buffer.\n     * @param {Float64Array} data The input buffer containing real values.\n     *\n     * @throws {Error} If the input and output buffers are the same.\n     */\n    realTransform(out, data) {\n        if (out === data)\n            throw new Error('Input and output buffers must be different');\n\n        this._realTransform4(out, data, 1 /* DONE */);\n    }\n\n    /**\n     * Performs an inverse FFT transformation on the given `data` array, and stores the result in `out`.\n     * The `out` array must be a different buffer than the `data` array. The `out` array will contain the\n     * result of the transformation. The `data` array will not be modified.\n     * \n     * @param {Float64Array} out The output buffer for the transformed data.\n     * @param {Float64Array} data The input data to transform.\n     * @throws {Error} If `out` and `data` refer to the same buffer.\n     * @returns {void}\n     */\n    inverseTransform(out, data) {\n        if (out === data)\n            throw new Error('Input and output buffers must be different');\n\n        this._transform4(out, data, -1 /* DONE */);\n        for (let i = 0; i < out.length; ++i)\n            out[i] /= this.size;\n    }\n\n    /**\n     * Performs a radix-4 implementation of a discrete Fourier transform on a given set of data.\n     *\n     * @param {Float64Array} out The output buffer for the transformed data.\n     * @param {Float64Array} data The input buffer of data to be transformed.\n     * @param {number} inv A scaling factor to apply to the transform.\n     * @returns {void}\n     */\n    _transform4(out, data, inv) {\n        // radix-4 implementation\n\n        const size = this._csize;\n\n        // Initial step (permute and transform)\n        const width = this._width;\n        let step = 1 << width;\n        let len = (size / step) << 1;\n\n        let outOff;\n        let t;\n        const bitrev = this._bitrev;\n        if (len === 4) {\n            for (outOff = 0, t = 0; outOff < size; outOff += len, ++t) {\n                const off = bitrev[t];\n                this._singleTransform2(data, out, outOff, off, step);\n            }\n        } else {\n            // len === 8\n            for (outOff = 0, t = 0; outOff < size; outOff += len, ++t) {\n                const off = bitrev[t];\n                this._singleTransform4(data, out, outOff, off, step, inv);\n            }\n        }\n\n        // Loop through steps in decreasing order\n        const table = this.table;\n        for (step >>= 2; step >= 2; step >>= 2) {\n            len = (size / step) << 1;\n            const quarterLen = len >>> 2;\n\n            // Loop through offsets in the data\n            for (outOff = 0; outOff < size; outOff += len) {\n                // Full case\n                const limit = outOff + quarterLen - 1;\n                for (let i = outOff, k = 0; i < limit; i += 2, k += step) {\n                    const A = i;\n                    const B = A + quarterLen;\n                    const C = B + quarterLen;\n                    const D = C + quarterLen;\n\n                    // Original values\n                    const Ar = out[A];\n                    const Ai = out[A + 1];\n                    const Br = out[B];\n                    const Bi = out[B + 1];\n                    const Cr = out[C];\n                    const Ci = out[C + 1];\n                    const Dr = out[D];\n                    const Di = out[D + 1];\n\n                    const tableBr = table[k];\n                    const tableBi = inv * table[k + 1];\n                    const MBr = Br * tableBr - Bi * tableBi;\n                    const MBi = Br * tableBi + Bi * tableBr;\n\n                    const tableCr = table[2 * k];\n                    const tableCi = inv * table[2 * k + 1];\n                    const MCr = Cr * tableCr - Ci * tableCi;\n                    const MCi = Cr * tableCi + Ci * tableCr;\n\n                    const tableDr = table[3 * k];\n                    const tableDi = inv * table[3 * k + 1];\n                    const MDr = Dr * tableDr - Di * tableDi;\n                    const MDi = Dr * tableDi + Di * tableDr;\n\n                    // Pre-Final values\n                    const T0r = Ar + MCr;\n                    const T0i = Ai + MCi;\n                    const T1r = Ar - MCr;\n                    const T1i = Ai - MCi;\n                    const T2r = MBr + MDr;\n                    const T2i = MBi + MDi;\n                    const T3r = inv * (MBr - MDr);\n                    const T3i = inv * (MBi - MDi);\n\n                    // Final values\n                    out[A] = T0r + T2r;\n                    out[A + 1] = T0i + T2i;\n                    out[B] = T1r + T3i;\n                    out[B + 1] = T1i - T3r;\n                    out[C] = T0r - T2r;\n                    out[C + 1] = T0i - T2i;\n                    out[D] = T1r - T3i;\n                    out[D + 1] = T1i + T3r;\n                }\n            }\n        }\n    }\n\n    /**\n     * Performs a radix-2 implementation of a discrete Fourier transform on a given set of data.\n     *\n     * @param {Float64Array} data The input buffer of data to be transformed.\n     * @param {Float64Array} out The output buffer for the transformed data.\n     * @param {number} outOff The offset at which to write the output data.\n     * @param {number} off The offset at which to begin reading the input data.\n     * @param {number} step The step size for indexing the input data.\n     * @returns {void}\n     */\n    _singleTransform2(data, out, outOff, off, step) {\n        // radix-2 implementation\n        // NOTE: Only called for len=4\n\n        const evenR = data[off];\n        const evenI = data[off + 1];\n        const oddR = data[off + step];\n        const oddI = data[off + step + 1];\n\n        out[outOff] = evenR + oddR;\n        out[outOff + 1] = evenI + oddI;\n        out[outOff + 2] = evenR - oddR;\n        out[outOff + 3] = evenI - oddI;\n    }\n\n    /**\n     * Performs radix-4 transformation on input data of length 8\n     *\n     * @param {Float64Array} data Input data array of length 8\n     * @param {Float64Array} out Output data array of length 8\n     * @param {number} outOff Index of output array to start writing from\n     * @param {number} off Index of input array to start reading from\n     * @param {number} step Step size between elements in input array\n     * @param {number} inv Scaling factor for inverse transform\n     * \n     * @returns {void}\n     */\n    _singleTransform4(data, out, outOff, off, step, inv) {\n        // radix-4\n        // NOTE: Only called for len=8\n        const step2 = step * 2;\n        const step3 = step * 3;\n\n        // Original values\n        const Ar = data[off];\n        const Ai = data[off + 1];\n        const Br = data[off + step];\n        const Bi = data[off + step + 1];\n        const Cr = data[off + step2];\n        const Ci = data[off + step2 + 1];\n        const Dr = data[off + step3];\n        const Di = data[off + step3 + 1];\n\n        // Pre-Final values\n        const T0r = Ar + Cr;\n        const T0i = Ai + Ci;\n        const T1r = Ar - Cr;\n        const T1i = Ai - Ci;\n        const T2r = Br + Dr;\n        const T2i = Bi + Di;\n        const T3r = inv * (Br - Dr);\n        const T3i = inv * (Bi - Di);\n\n        // Final values\n        out[outOff] = T0r + T2r;\n        out[outOff + 1] = T0i + T2i;\n        out[outOff + 2] = T1r + T3i;\n        out[outOff + 3] = T1i - T3r;\n        out[outOff + 4] = T0r - T2r;\n        out[outOff + 5] = T0i - T2i;\n        out[outOff + 6] = T1r - T3i;\n        out[outOff + 7] = T1i + T3r;\n    }\n\n    /**\n     * Real input radix-4 implementation\n     * @param {Float64Array} out Output array for the transformed data\n     * @param {Float64Array} data Input array of real data to be transformed\n     * @param {number} inv The scale factor used to normalize the inverse transform\n     */\n    _realTransform4(out, data, inv) {\n        // Real input radix-4 implementation\n        const size = this._csize;\n\n        // Initial step (permute and transform)\n        const width = this._width;\n        let step = 1 << width;\n        let len = (size / step) << 1;\n\n        let outOff;\n        let t;\n        const bitrev = this._bitrev;\n        if (len === 4) {\n            for (outOff = 0, t = 0; outOff < size; outOff += len, ++t) {\n                const off = bitrev[t];\n                this._singleRealTransform2(data, out, outOff, off >>> 1, step >>> 1);\n            }\n        } else {\n            // len === 8\n            for (outOff = 0, t = 0; outOff < size; outOff += len, ++t) {\n                const off = bitrev[t];\n                this._singleRealTransform4(data, out, outOff, off >>> 1, step >>> 1, inv);\n            }\n        }\n\n        // Loop through steps in decreasing order\n        const table = this.table;\n        for (step >>= 2; step >= 2; step >>= 2) {\n            len = (size / step) << 1;\n            const halfLen = len >>> 1;\n            const quarterLen = halfLen >>> 1;\n            const hquarterLen = quarterLen >>> 1;\n\n            // Loop through offsets in the data\n            for (outOff = 0; outOff < size; outOff += len) {\n                for (let i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n                    const A = outOff + i;\n                    const B = A + quarterLen;\n                    const C = B + quarterLen;\n                    const D = C + quarterLen;\n\n                    // Original values\n                    const Ar = out[A];\n                    const Ai = out[A + 1];\n                    const Br = out[B];\n                    const Bi = out[B + 1];\n                    const Cr = out[C];\n                    const Ci = out[C + 1];\n                    const Dr = out[D];\n                    const Di = out[D + 1];\n\n                    // Middle values\n                    const MAr = Ar;\n                    const MAi = Ai;\n\n                    const tableBr = table[k];\n                    const tableBi = inv * table[k + 1];\n                    const MBr = Br * tableBr - Bi * tableBi;\n                    const MBi = Br * tableBi + Bi * tableBr;\n\n                    const tableCr = table[2 * k];\n                    const tableCi = inv * table[2 * k + 1];\n                    const MCr = Cr * tableCr - Ci * tableCi;\n                    const MCi = Cr * tableCi + Ci * tableCr;\n\n                    const tableDr = table[3 * k];\n                    const tableDi = inv * table[3 * k + 1];\n                    const MDr = Dr * tableDr - Di * tableDi;\n                    const MDi = Dr * tableDi + Di * tableDr;\n\n                    // Pre-Final values\n                    const T0r = MAr + MCr;\n                    const T0i = MAi + MCi;\n                    const T1r = MAr - MCr;\n                    const T1i = MAi - MCi;\n                    const T2r = MBr + MDr;\n                    const T2i = MBi + MDi;\n                    const T3r = inv * (MBr - MDr);\n                    const T3i = inv * (MBi - MDi);\n\n                    // Final values\n                    out[A] = T0r + T2r;\n                    out[A + 1] = T0i + T2i;\n                    out[B] = T1r + T3i;\n                    out[B + 1] = T1i - T3r;\n\n                    // Output final middle point\n                    if (i === 0) {\n                        out[C] = T0r - T2r;\n                        out[C + 1] = T0i - T2i;\n                        continue;\n                    }\n\n                    // Do not overwrite ourselves\n                    if (i === hquarterLen)\n                        continue;\n\n                    const SA = outOff + quarterLen - i;\n                    const SB = outOff + halfLen - i;\n\n                    out[SA] = T1r - inv * T3i;\n                    out[SA + 1] = -T1i - inv * T3r;\n                    out[SB] = T0r - inv * T2r;\n                    out[SB + 1] = -T0i + inv * T2i;\n                }\n            }\n        }\n\n        // Complete the spectrum by adding its mirrored negative frequency components.\n        const half = size >>> 1;\n        for (let i = 2; i < half; i += 2) {\n            out[size - i] = out[i];\n            out[size - i + 1] = -out[i + 1];\n        }\n    }\n\n    /**\n     * Performs a single real input radix-2 transformation on the provided data\n     * \n     * @param {Float64Array} data The input data array\n     * @param {Float64Array} out The output data array\n     * @param {number} outOff The output offset\n     * @param {number} off The input offset\n     * @param {number} step The step\n     * \n     * @returns {void}\n     */\n    _singleRealTransform2(data, out, outOff, off, step) {\n        // radix-2 implementation\n        // NOTE: Only called for len=4\n\n        const evenR = data[off];\n        const oddR = data[off + step];\n\n        out[outOff] = evenR + oddR;\n        out[outOff + 1] = 0;\n        out[outOff + 2] = evenR - oddR;\n        out[outOff + 3] = 0;\n    }\n\n    /**\n     * Computes a single real-valued transform using radix-4 algorithm.\n     * This method is only called for len=8.\n     *\n     * @param {Float64Array} data The input data array.\n     * @param {Float64Array} out The output data array.\n     * @param {number} outOff The offset into the output array.\n     * @param {number} off The offset into the input array.\n     * @param {number} step The step size for the input array.\n     * @param {number} inv The value of inverse.\n     */\n    _singleRealTransform4(data, out, outOff, off, step, inv) {\n        // radix-4\n        // NOTE: Only called for len=8\n        const step2 = step * 2;\n        const step3 = step * 3;\n\n        // Original values\n        const Ar = data[off];\n        const Br = data[off + step];\n        const Cr = data[off + step2];\n        const Dr = data[off + step3];\n\n        // Pre-Final values\n        const T0r = Ar + Cr;\n        const T1r = Ar - Cr;\n        const T2r = Br + Dr;\n        const T3r = inv * (Br - Dr);\n\n        // Final values\n        out[outOff] = T0r + T2r;\n        out[outOff + 1] = 0;\n        out[outOff + 2] = T1r;\n        out[outOff + 3] = -T3r;\n        out[outOff + 4] = T0r - T2r;\n        out[outOff + 5] = 0;\n        out[outOff + 6] = T1r;\n        out[outOff + 7] = T3r;\n    }\n}\n\n/**\n * NP2FFT class provides functionality for performing Fast Fourier Transform on arrays\n * which are not a power of two in length. In such cases, the chirp-z transform is used.\n * \n * For more information, see: https://math.stackexchange.com/questions/77118/non-power-of-2-ffts/77156#77156\n */\nclass NP2FFT {\n\n    /**\n     * Constructs a new NP2FFT object.\n     * @param {number} fft_length The length of the FFT\n     */\n    constructor(fft_length) {\n        // Helper variables\n        const a = 2 * (fft_length - 1);\n        const b = 2 * (2 * fft_length - 1);\n        const nextP2 = 2 ** (Math.ceil(Math.log2(b)))\n        this.bufferSize = nextP2;\n        this._a = a;\n\n        // Define buffers\n        // Compute chirp for transform\n        const chirp = new Float64Array(b);\n        const ichirp = new Float64Array(nextP2);\n        this._chirpBuffer = new Float64Array(nextP2);\n        this._buffer1 = new Float64Array(nextP2);\n        this._buffer2 = new Float64Array(nextP2);\n        this._outBuffer1 = new Float64Array(nextP2);\n        this._outBuffer2 = new Float64Array(nextP2);\n\n        // Compute complex exponentiation\n        const theta = -2 * Math.PI / fft_length;\n        const baseR = Math.cos(theta);\n        const baseI = Math.sin(theta);\n\n        // Precompute helper for chirp-z transform\n        for (let i = 0; i < b >> 1; ++i) {\n            // Compute complex power:\n            const e = (i + 1 - fft_length) ** 2 / 2.0;\n\n            // Compute the modulus and argument of the result\n            const result_mod = Math.sqrt(baseR ** 2 + baseI ** 2) ** e;\n            const result_arg = e * Math.atan2(baseI, baseR);\n\n            // Convert the result back to rectangular form\n            // and assign to chirp and ichirp\n            const i2 = 2 * i;\n            chirp[i2] = result_mod * Math.cos(result_arg);\n            chirp[i2 + 1] = result_mod * Math.sin(result_arg);\n\n            // conjugate\n            ichirp[i2] = chirp[i2];\n            ichirp[i2 + 1] = - chirp[i2 + 1];\n        }\n        this._slicedChirpBuffer = chirp.subarray(a, b);\n\n        // create object to perform Fast Fourier Transforms\n        // with `nextP2` complex numbers\n        this._f = new P2FFT(nextP2 >> 1);\n        this._f.transform(this._chirpBuffer, ichirp);\n    }\n\n    _transform(output, input, real) {\n        const ib1 = this._buffer1;\n        const ib2 = this._buffer2;\n        const ob2 = this._outBuffer1;\n        const ob3 = this._outBuffer2;\n        const cb = this._chirpBuffer;\n        const sb = this._slicedChirpBuffer;\n        const a = this._a;\n\n        if (real) {\n            // Real multiplication\n            for (let j = 0; j < sb.length; j += 2) {\n                const j2 = j + 1\n                const j3 = j >> 1;\n\n                const a_real = input[j3];\n                ib1[j] = a_real * sb[j];\n                ib1[j2] = a_real * sb[j2];\n            }\n        } else {\n            // Complex multiplication\n            for (let j = 0; j < sb.length; j += 2) {\n                const j2 = j + 1\n                ib1[j] = input[j] * sb[j] - input[j2] * sb[j2];\n                ib1[j2] = input[j] * sb[j2] + input[j2] * sb[j];\n            }\n        }\n        this._f.transform(ob2, ib1);\n\n        for (let j = 0; j < cb.length; j += 2) {\n            const j2 = j + 1;\n\n            ib2[j] = ob2[j] * cb[j] - ob2[j2] * cb[j2];\n            ib2[j2] = ob2[j] * cb[j2] + ob2[j2] * cb[j];\n        }\n        this._f.inverseTransform(ob3, ib2);\n\n        for (let j = 0; j < ob3.length; j += 2) {\n            const a_real = ob3[j + a];\n            const a_imag = ob3[j + a + 1];\n            const b_real = sb[j];\n            const b_imag = sb[j + 1];\n\n            output[j] = a_real * b_real - a_imag * b_imag;\n            output[j + 1] = a_real * b_imag + a_imag * b_real;\n        }\n    }\n\n    transform(output, input) {\n        this._transform(output, input, false);\n    }\n\n    realTransform(output, input) {\n        this._transform(output, input, true);\n    }\n}\n\nclass FFT {\n    constructor(fft_length) {\n        this.fft_length = fft_length;\n        this.isPowerOfTwo = isPowerOfTwo(fft_length);\n        if (this.isPowerOfTwo) {\n            this.fft = new P2FFT(fft_length);\n            this.outputBufferSize = 2 * fft_length;\n        } else {\n            this.fft = new NP2FFT(fft_length);\n            this.outputBufferSize = this.fft.bufferSize;\n        }\n    }\n\n    realTransform(out, input) {\n        this.fft.realTransform(out, input);\n    }\n\n    transform(out, input) {\n        this.fft.transform(out, input);\n    }\n}\n\n\n/**\n * Performs median filter on the provided data. Padding is done by mirroring the data.\n * @param {AnyTypedArray} data The input array\n * @param {number} windowSize The window size\n */\nfunction medianFilter(data, windowSize) {\n\n    if (windowSize % 2 === 0 || windowSize <= 0) {\n        throw new Error('Window size must be a positive odd number');\n    }\n\n    // @ts-ignore\n    const outputArray = new data.constructor(data.length);\n\n    // @ts-ignore\n    const buffer = new data.constructor(windowSize); // Reusable array for storing values\n\n    const halfWindowSize = Math.floor(windowSize / 2);\n\n    for (let i = 0; i < data.length; ++i) {\n        let valuesIndex = 0;\n\n        for (let j = -halfWindowSize; j <= halfWindowSize; ++j) {\n            let index = i + j;\n            if (index < 0) {\n                index = Math.abs(index);\n            } else if (index >= data.length) {\n                index = 2 * (data.length - 1) - index;\n            }\n\n            buffer[valuesIndex++] = data[index];\n        }\n\n        buffer.sort();\n        outputArray[i] = buffer[halfWindowSize];\n    }\n\n    return outputArray;\n}\n\n/**\n * Helper function to round a number to a given number of decimals\n * @param {number} num The number to round\n * @param {number} decimals The number of decimals\n * @returns {number} The rounded number\n */\nfunction round(num, decimals) {\n    const pow = Math.pow(10, decimals);\n    return Math.round(num * pow) / pow;\n}\n\n/**\n * Helper function to round a number to the nearest integer, with ties rounded to the nearest even number.\n * Also known as \"bankers' rounding\". This is the default rounding mode in python. For example:\n * 1.5 rounds to 2 and 2.5 rounds to 2.\n * \n * @param {number} x The number to round\n * @returns {number} The rounded number\n */\nfunction bankers_round(x) {\n    const r = Math.round(x);\n    const br = Math.abs(x) % 1 === 0.5 ? (r % 2 === 0 ? r : r - 1) : r;\n    return br;\n}\n\n\n/**\n * Measures similarity between two temporal sequences (e.g., input audio and output tokens\n * to generate token-level timestamps).\n * @param {number[][]} matrix \n * @returns {number[][]}\n */\nfunction dynamic_time_warping(matrix) {\n    const output_length = matrix.length;\n    const input_length = matrix[0].length;\n\n    const outputShape = [output_length + 1, input_length + 1];\n\n    const cost = Array.from(\n        { length: outputShape[0] },\n        () => Array(outputShape[1]).fill(Infinity)\n    );\n    cost[0][0] = 0;\n\n    const trace = Array.from(\n        { length: outputShape[0] },\n        () => Array(outputShape[1]).fill(-1)\n    );\n\n    for (let j = 1; j < outputShape[1]; ++j) {\n        for (let i = 1; i < outputShape[0]; ++i) {\n            const c0 = cost[i - 1][j - 1];\n            const c1 = cost[i - 1][j];\n            const c2 = cost[i][j - 1];\n\n            let c, t;\n            if (c0 < c1 && c0 < c2) {\n                c = c0;\n                t = 0;\n            } else if (c1 < c0 && c1 < c2) {\n                c = c1;\n                t = 1;\n            } else {\n                c = c2;\n                t = 2;\n            }\n            cost[i][j] = matrix[i - 1][j - 1] + c;\n            trace[i][j] = t;\n        }\n    }\n\n    for (let i = 0; i < outputShape[1]; ++i) { // trace[0, :] = 2\n        trace[0][i] = 2;\n    }\n    for (let i = 0; i < outputShape[0]; ++i) { // trace[:, 0] = 1\n        trace[i][0] = 1;\n    }\n\n    // backtrace\n    let i = output_length;\n    let j = input_length;\n    let text_indices = [];\n    let time_indices = [];\n    while (i > 0 || j > 0) {\n        text_indices.push(i - 1);\n        time_indices.push(j - 1);\n\n        switch (trace[i][j]) {\n            case 0:\n                --i; --j;\n                break;\n            case 1:\n                --i;\n                break;\n            case 2:\n                --j;\n                break;\n            default:\n                throw new Error(\n                    `Internal error in dynamic time warping. Unexpected trace[${i}, ${j}]. Please file a bug report.`\n                )\n        }\n    }\n\n    text_indices.reverse();\n    time_indices.reverse();\n\n    return [text_indices, time_indices];\n\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/tensor.js\":\n/*!*****************************!*\\\n  !*** ./src/utils/tensor.js ***!\n  \\*****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataTypeMap: () => (/* binding */ DataTypeMap),\n/* harmony export */   Tensor: () => (/* binding */ Tensor),\n/* harmony export */   cat: () => (/* binding */ cat),\n/* harmony export */   full: () => (/* binding */ full),\n/* harmony export */   full_like: () => (/* binding */ full_like),\n/* harmony export */   interpolate: () => (/* binding */ interpolate),\n/* harmony export */   interpolate_4d: () => (/* binding */ interpolate_4d),\n/* harmony export */   layer_norm: () => (/* binding */ layer_norm),\n/* harmony export */   matmul: () => (/* binding */ matmul),\n/* harmony export */   mean: () => (/* binding */ mean),\n/* harmony export */   mean_pooling: () => (/* binding */ mean_pooling),\n/* harmony export */   ones: () => (/* binding */ ones),\n/* harmony export */   ones_like: () => (/* binding */ ones_like),\n/* harmony export */   permute: () => (/* binding */ permute),\n/* harmony export */   quantize_embeddings: () => (/* binding */ quantize_embeddings),\n/* harmony export */   rand: () => (/* binding */ rand),\n/* harmony export */   rfft: () => (/* binding */ rfft),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   stack: () => (/* binding */ stack),\n/* harmony export */   std_mean: () => (/* binding */ std_mean),\n/* harmony export */   topk: () => (/* binding */ topk),\n/* harmony export */   zeros: () => (/* binding */ zeros),\n/* harmony export */   zeros_like: () => (/* binding */ zeros_like)\n/* harmony export */ });\n/* harmony import */ var _maths_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../backends/onnx.js */ \"./src/backends/onnx.js\");\n/* harmony import */ var _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/registry.js */ \"./src/ops/registry.js\");\n/**\n * @file Helper module for `Tensor` processing.\n *\n * These functions and classes are only used internally,\n * meaning an end-user shouldn't need to access anything here.\n *\n * @module utils/tensor\n */\n\n\n\n\n\n\n\nconst DataTypeMap = Object.freeze({\n    float32: Float32Array,\n    // @ts-ignore ts(2552) Limited availability of Float16Array across browsers:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float16Array\n    float16: typeof Float16Array !== \"undefined\" ? Float16Array: Uint16Array,\n    float64: Float64Array,\n    string: Array, // string[]\n    int8: Int8Array,\n    uint8: Uint8Array,\n    int16: Int16Array,\n    uint16: Uint16Array,\n    int32: Int32Array,\n    uint32: Uint32Array,\n    int64: BigInt64Array,\n    uint64: BigUint64Array,\n    bool: Uint8Array,\n    uint4: Uint8Array,\n    int4: Int8Array,\n});\n\n/**\n * @typedef {keyof typeof DataTypeMap} DataType\n * @typedef {import('./maths.js').AnyTypedArray | any[]} DataArray\n */\n\n\nclass Tensor {\n    /** @type {number[]} Dimensions of the tensor. */\n    get dims() {\n        // @ts-ignore\n        return this.ort_tensor.dims;\n    }\n    set dims(value) {\n        // FIXME: ONNXTensor declares dims as readonly so one needs to use the constructor() if dims change.\n        // @ts-ignore\n        this.ort_tensor.dims = value;\n    }\n\n    /** @type {DataType} Type of the tensor. */\n    get type() {\n        return this.ort_tensor.type;\n    };\n\n    /** @type {DataArray} The data stored in the tensor. */\n    get data() {\n        return this.ort_tensor.data;\n    }\n\n    /** @type {number} The number of elements in the tensor. */\n    get size() {\n        return this.ort_tensor.size;\n    };\n\n    /** @type {string} The location of the tensor data. */\n    get location() {\n        return this.ort_tensor.location;\n    };\n\n    ort_tensor;\n\n    /**\n     * Create a new Tensor or copy an existing Tensor.\n     * @param {[DataType, DataArray, number[]]|[ONNXTensor]} args\n     */\n    constructor(...args) {\n        if ((0,_backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.isONNXTensor)(args[0])) {\n            this.ort_tensor = /** @type {ONNXTensor} */ (args[0]);\n        } else {\n            // Create new tensor\n            this.ort_tensor = new _backends_onnx_js__WEBPACK_IMPORTED_MODULE_1__.Tensor(\n                /** @type {DataType} */(args[0]),\n                // @ts-expect-error ts(2769) Type 'number' is not assignable to type 'bigint'.\n                /** @type {Exclude<import('./maths.js').AnyTypedArray, Uint8ClampedArray>} */(args[1]),\n                args[2],\n            );\n        }\n\n        return new Proxy(this, {\n            get: (obj, key) => {\n                if (typeof key === 'string') {\n                    let index = Number(key);\n                    if (Number.isInteger(index)) {\n                        // key is an integer (i.e., index)\n                        return obj._getitem(index);\n                    }\n                }\n                // @ts-ignore\n                return obj[key];\n            },\n            set: (obj, key, value) => {\n                // TODO allow setting of data\n\n                // @ts-ignore\n                return obj[key] = value;\n            }\n        });\n    }\n\n    dispose() {\n        this.ort_tensor.dispose();\n        // this.ort_tensor = undefined;\n    }\n\n    /**\n     * Returns an iterator object for iterating over the tensor data in row-major order.\n     * If the tensor has more than one dimension, the iterator will yield subarrays.\n     * @returns {Iterator} An iterator object for iterating over the tensor data in row-major order.\n     */\n    *[Symbol.iterator]() {\n        const [iterLength, ...iterDims] = this.dims;\n\n        if (iterDims.length > 0) {\n            const iterSize = iterDims.reduce((a, b) => a * b);\n            for (let i = 0; i < iterLength; ++i) {\n                yield this._subarray(i, iterSize, iterDims);\n            }\n        } else {\n            yield* this.data\n        }\n\n    }\n\n    /**\n     * Index into a Tensor object.\n     * @param {number} index The index to access.\n     * @returns {Tensor} The data at the specified index.\n     */\n    _getitem(index) {\n        const [iterLength, ...iterDims] = this.dims;\n\n        index = safeIndex(index, iterLength);\n\n        if (iterDims.length > 0) {\n            const iterSize = iterDims.reduce((a, b) => a * b);\n            return this._subarray(index, iterSize, iterDims);\n        } else {\n            return new Tensor(this.type, [this.data[index]], iterDims);\n        }\n    }\n\n    /**\n     * @param {number|bigint} item The item to search for in the tensor\n     * @returns {number} The index of the first occurrence of item in the tensor data.\n     */\n    indexOf(item) {\n        const this_data = this.data;\n        for (let index = 0; index < this_data.length; ++index) {\n            // Note: == instead of === so we can match Ints with BigInts\n            if (this_data[index] == item) {\n                return index;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @param {number} index\n     * @param {number} iterSize\n     * @param {any} iterDims\n     * @returns {Tensor}\n     */\n    _subarray(index, iterSize, iterDims) {\n        const o1 = index * iterSize;\n        const o2 = (index + 1) * iterSize;\n\n        // We use subarray if available (typed array), otherwise we use slice (normal array)\n        const data =\n            ('subarray' in this.data)\n                ? this.data.subarray(o1, o2)\n                : this.data.slice(o1, o2);\n        return new Tensor(this.type, data, iterDims);\n    }\n\n    /**\n     * Returns the value of this tensor as a standard JavaScript Number. This only works\n     * for tensors with one element. For other cases, see `Tensor.tolist()`.\n     * @returns {number|bigint} The value of this tensor as a standard JavaScript Number.\n     * @throws {Error} If the tensor has more than one element.\n     */\n    item() {\n        const this_data = this.data;\n        if (this_data.length !== 1) {\n            throw new Error(`a Tensor with ${this_data.length} elements cannot be converted to Scalar`);\n        }\n        return this_data[0];\n    }\n\n    /**\n     * Convert tensor data to a n-dimensional JS list\n     * @returns {Array}\n     */\n    tolist() {\n        return reshape(this.data, this.dims)\n    }\n\n    /**\n     * Return a new Tensor with the sigmoid function applied to each element.\n     * @returns {Tensor} The tensor with the sigmoid function applied.\n     */\n    sigmoid() {\n        return this.clone().sigmoid_();\n    }\n\n    /**\n     * Applies the sigmoid function to the tensor in place.\n     * @returns {Tensor} Returns `this`.\n     */\n    sigmoid_() {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] = 1 / (1 + Math.exp(-this_data[i]));\n        }\n        return this;\n    }\n\n    /**\n     * Return a new Tensor with a callback function applied to each element.\n     * @param {Function} callback - The function to apply to each element. It should take three arguments:\n     *                              the current element, its index, and the tensor's data array.\n     * @returns {Tensor} A new Tensor with the callback function applied to each element.\n     */\n    map(callback) {\n        return this.clone().map_(callback);\n    }\n\n    /**\n     * Apply a callback function to each element of the tensor in place.\n     * @param {Function} callback - The function to apply to each element. It should take three arguments:\n     *                              the current element, its index, and the tensor's data array.\n     * @returns {Tensor} Returns `this`.\n     */\n    map_(callback) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] = callback(this_data[i], i, this_data);\n        }\n        return this;\n    }\n\n    /**\n     * Return a new Tensor with every element multiplied by a constant.\n     * @param {number} val The value to multiply by.\n     * @returns {Tensor} The new tensor.\n     */\n    mul(val) {\n        return this.clone().mul_(val);\n    }\n\n    /**\n     * Multiply the tensor by a constant in place.\n     * @param {number} val The value to multiply by.\n     * @returns {Tensor} Returns `this`.\n     */\n    mul_(val) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] *= val;\n        }\n        return this;\n    }\n\n    /**\n     * Return a new Tensor with every element divided by a constant.\n     * @param {number} val The value to divide by.\n     * @returns {Tensor} The new tensor.\n     */\n    div(val) {\n        return this.clone().div_(val);\n    }\n\n    /**\n     * Divide the tensor by a constant in place.\n     * @param {number} val The value to divide by.\n     * @returns {Tensor} Returns `this`.\n     */\n    div_(val) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] /= val;\n        }\n        return this;\n    }\n\n    /**\n     * Return a new Tensor with every element added by a constant.\n     * @param {number} val The value to add by.\n     * @returns {Tensor} The new tensor.\n     */\n    add(val) {\n        return this.clone().add_(val);\n    }\n\n    /**\n     * Add the tensor by a constant in place.\n     * @param {number} val The value to add by.\n     * @returns {Tensor} Returns `this`.\n     */\n    add_(val) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] += val;\n        }\n        return this;\n    }\n\n    /**\n     * Return a new Tensor with every element subtracted by a constant.\n     * @param {number} val The value to subtract by.\n     * @returns {Tensor} The new tensor.\n     */\n    sub(val) {\n        return this.clone().sub_(val);\n    }\n\n    /**\n     * Subtract the tensor by a constant in place.\n     * @param {number} val The value to subtract by.\n     * @returns {Tensor} Returns `this`.\n     */\n    sub_(val) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] -= val;\n        }\n        return this;\n    }\n\n    /**\n     * Creates a deep copy of the current Tensor.\n     * @returns {Tensor} A new Tensor with the same type, data, and dimensions as the original.\n     */\n    clone() {\n        return new Tensor(this.type, this.data.slice(), this.dims.slice());\n    }\n\n    /**\n     * Performs a slice operation on the Tensor along specified dimensions.\n     *\n     * Consider a Tensor that has a dimension of [4, 7]:\n     * ```\n     * [ 1,  2,  3,  4,  5,  6,  7]\n     * [ 8,  9, 10, 11, 12, 13, 14]\n     * [15, 16, 17, 18, 19, 20, 21]\n     * [22, 23, 24, 25, 26, 27, 28]\n     * ```\n     * We can slice against the two dims of row and column, for instance in this\n     * case we can start at the second element, and return to the second last,\n     * like this:\n     * ```\n     * tensor.slice([1, -1], [1, -1]);\n     * ```\n     * which would return:\n     * ```\n     * [  9, 10, 11, 12, 13 ]\n     * [ 16, 17, 18, 19, 20 ]\n     * ```\n     *\n     * @param {...(number|number[]|null)} slices The slice specifications for each dimension.\n     * - If a number is given, then a single element is selected.\n     * - If an array of two numbers is given, then a range of elements [start, end (exclusive)] is selected.\n     * - If null is given, then the entire dimension is selected.\n     * @returns {Tensor} A new Tensor containing the selected elements.\n     * @throws {Error} If the slice input is invalid.\n     */\n    slice(...slices) {\n        // This allows for slicing with ranges and numbers\n        const newTensorDims = [];\n        const newOffsets = [];\n\n        // slices is an array of numbers or arrays of numbers\n        // e.g., slices = [0, [1, 3], null, [0, 3]]\n        for (let sliceIndex = 0; sliceIndex < this.dims.length; ++sliceIndex) {\n            let slice = slices[sliceIndex];\n\n            if (slice === null || slice === undefined) {\n                // null or undefined means take the whole dimension\n                newOffsets.push([0, this.dims[sliceIndex]]);\n                newTensorDims.push(this.dims[sliceIndex]);\n\n            } else if (typeof slice === 'number') {\n                slice = safeIndex(slice, this.dims[sliceIndex], sliceIndex);\n\n                // A number means take a single element\n                newOffsets.push([slice, slice + 1]);\n\n            } else if (Array.isArray(slice) && slice.length === 2) {\n                // An array of length 2 means take a range of elements\n                let [start, end] = slice;\n                start = start === null\n                    ? 0\n                    : safeIndex(start, this.dims[sliceIndex], sliceIndex, false);\n                end = end === null\n                    ? this.dims[sliceIndex]\n                    : safeIndex(end, this.dims[sliceIndex], sliceIndex, false);\n\n                if (start > end) {\n                    throw new Error(`Invalid slice: ${slice}`);\n                }\n\n                const offsets = [\n                    Math.max(start, 0),\n                    Math.min(end, this.dims[sliceIndex])\n                ];\n\n                newOffsets.push(offsets);\n                newTensorDims.push(offsets[1] - offsets[0]);\n\n            } else {\n                throw new Error(`Invalid slice: ${slice}`);\n            }\n        }\n\n        const newDims = newOffsets.map(([start, end]) => end - start);\n        const newBufferSize = newDims.reduce((a, b) => a * b);\n\n        const this_data = this.data;\n        // Allocate memory\n        // @ts-ignore\n        const data = new this_data.constructor(newBufferSize);\n\n        // Precompute strides\n        const stride = this.stride();\n\n        for (let i = 0; i < newBufferSize; ++i) {\n            let originalIndex = 0;\n            for (let j = newDims.length - 1, num = i; j >= 0; --j) {\n                const size = newDims[j];\n                originalIndex += ((num % size) + newOffsets[j][0]) * stride[j];\n                num = Math.floor(num / size);\n            }\n            data[i] = this_data[originalIndex];\n        }\n        return new Tensor(this.type, data, newTensorDims);\n    }\n\n    /**\n     * Return a permuted version of this Tensor, according to the provided dimensions.\n     * @param  {...number} dims Dimensions to permute.\n     * @returns {Tensor} The permuted tensor.\n     */\n    permute(...dims) {\n        return permute(this, dims);\n    }\n\n    // TODO: implement transpose. For now (backwards compatibility), it's just an alias for permute()\n    transpose(...dims) {\n        return this.permute(...dims);\n    }\n\n    /**\n     * Returns the sum of each row of the input tensor in the given dimension dim.\n     *\n     * @param {number} [dim=null] The dimension or dimensions to reduce. If `null`, all dimensions are reduced.\n     * @param {boolean} keepdim Whether the output tensor has `dim` retained or not.\n     * @returns The summed tensor\n     */\n    sum(dim = null, keepdim = false) {\n        return this.norm(1, dim, keepdim);\n    }\n\n    /**\n     * Returns the matrix norm or vector norm of a given tensor.\n     * @param {number|string} [p='fro'] The order of norm\n     * @param {number} [dim=null] Specifies which dimension of the tensor to calculate the norm across.\n     * If dim is None, the norm will be calculated across all dimensions of input.\n     * @param {boolean} [keepdim=false] Whether the output tensors have dim retained or not.\n     * @returns {Tensor} The norm of the tensor.\n     */\n    norm(p = 'fro', dim = null, keepdim = false) {\n        if (p === 'fro') {\n            // NOTE: Since we only support integer dims, Frobenius norm produces the same result as p=2.\n            p = 2;\n        } else if (typeof p === 'string') {\n            throw Error(`Unsupported norm: ${p}`);\n        }\n\n        const this_data = this.data;\n        const fn = (a, b) => a + (b ** p);\n\n        if (dim === null) {\n            // @ts-ignore\n            const val = this_data.reduce(fn, 0) ** (1 / p);\n            return new Tensor(this.type, [val], []);\n        }\n\n        const [type, result, resultDims] = reduce_helper(fn, this, dim, keepdim);\n\n        if (p !== 1) {\n            for (let i = 0; i < result.length; ++i) {\n                result[i] = result[i] ** (1 / p);\n            }\n        }\n        return new Tensor(type, result, resultDims);\n    }\n\n    /**\n     * Performs `L_p` normalization of inputs over specified dimension. Operates in place.\n     * @param {number} [p=2] The exponent value in the norm formulation\n     * @param {number} [dim=1] The dimension to reduce\n     * @returns {Tensor} `this` for operation chaining.\n     */\n    normalize_(p = 2.0, dim = 1) {\n        dim = safeIndex(dim, this.dims.length);\n\n        const norm = this.norm(p, dim, true);\n\n        const this_data = this.data;\n        const norm_data = norm.data;\n        for (let i = 0; i < this_data.length; ++i) {\n\n            // Calculate the index in the resulting array\n            let resultIndex = 0;\n\n            for (let j = this.dims.length - 1, num = i, resultMultiplier = 1; j >= 0; --j) {\n                const size = this.dims[j];\n                if (j !== dim) {\n                    const index = num % size;\n                    resultIndex += index * resultMultiplier;\n                    resultMultiplier *= this.dims[j];\n                }\n                num = Math.floor(num / size);\n            }\n\n            // Divide by normalized value\n            this_data[i] /= norm_data[resultIndex];\n        }\n\n        return this;\n    }\n\n    /**\n     * Performs `L_p` normalization of inputs over specified dimension.\n     * @param {number} [p=2] The exponent value in the norm formulation\n     * @param {number} [dim=1] The dimension to reduce\n     * @returns {Tensor} The normalized tensor.\n     */\n    normalize(p = 2.0, dim = 1) {\n        return this.clone().normalize_(p, dim);\n    }\n\n    /**\n     * Compute and return the stride of this tensor.\n     * Stride is the jump necessary to go from one element to the next one in the specified dimension dim.\n     * @returns {number[]} The stride of this tensor.\n     */\n    stride() {\n        return dimsToStride(this.dims);\n    }\n\n    /**\n     * Returns a tensor with all specified dimensions of input of size 1 removed.\n     *\n     * NOTE: The returned tensor shares the storage with the input tensor, so changing the contents of one will change the contents of the other.\n     * If you would like a copy, use `tensor.clone()` before squeezing.\n     *\n     * @param {number|number[]} [dim=null] If given, the input will be squeezed only in the specified dimensions.\n     * @returns {Tensor} The squeezed tensor\n     */\n    squeeze(dim = null) {\n        return new Tensor(\n            this.type,\n            this.data,\n            calc_squeeze_dims(this.dims, dim)\n        )\n    }\n\n    /**\n     * In-place version of @see {@link Tensor.squeeze}\n     */\n    squeeze_(dim = null) {\n        this.dims = calc_squeeze_dims(this.dims, dim);\n        return this;\n    }\n\n    /**\n     * Returns a new tensor with a dimension of size one inserted at the specified position.\n     *\n     * NOTE: The returned tensor shares the same underlying data with this tensor.\n     *\n     * @param {number} dim The index at which to insert the singleton dimension\n     * @returns {Tensor} The unsqueezed tensor\n     */\n    unsqueeze(dim = null) {\n        return new Tensor(\n            this.type,\n            this.data,\n            calc_unsqueeze_dims(this.dims, dim)\n        );\n    }\n\n    /**\n     * In-place version of @see {@link Tensor.unsqueeze}\n     */\n    unsqueeze_(dim = null) {\n        this.dims = calc_unsqueeze_dims(this.dims, dim);\n        return this;\n    }\n\n    /**\n     * In-place version of @see {@link Tensor.flatten}\n     */\n    flatten_(start_dim = 0, end_dim = -1) {\n        // TODO validate inputs\n        end_dim = (end_dim + this.dims.length) % this.dims.length;\n\n        let dimsToKeepBefore = this.dims.slice(0, start_dim);\n        let dimsToFlatten = this.dims.slice(start_dim, end_dim + 1);\n        let dimsToKeepAfter = this.dims.slice(end_dim + 1);\n\n        this.dims = [...dimsToKeepBefore, dimsToFlatten.reduce((a, b) => a * b, 1), ...dimsToKeepAfter]\n        return this;\n    }\n\n    /**\n     * Flattens input by reshaping it into a one-dimensional tensor.\n     * If `start_dim` or `end_dim` are passed, only dimensions starting with `start_dim`\n     * and ending with `end_dim` are flattened. The order of elements in input is unchanged.\n     * @param {number} start_dim the first dim to flatten\n     * @param {number} end_dim the last dim to flatten\n     * @returns {Tensor} The flattened tensor.\n     */\n    flatten(start_dim = 0, end_dim = -1) {\n        return this.clone().flatten_(start_dim, end_dim);\n    }\n\n    /**\n     * Returns a new tensor with the same data as the `self` tensor but of a different `shape`.\n     * @param  {...number} dims the desired size\n     * @returns {Tensor} The tensor with the same data but different shape\n     */\n    view(...dims) {\n        // TODO: validate dims\n        let inferredIndex = -1;\n        for (let i = 0; i < dims.length; ++i) {\n            if (dims[i] === -1) {\n                if (inferredIndex !== -1) {\n                    throw new Error(\"Only one dimension can be inferred\");\n                }\n                inferredIndex = i;\n            }\n        }\n\n        const this_data = this.data;\n        if (inferredIndex !== -1) {\n            // Some dimension must be inferred\n            const productOther = dims.reduce((product, curr, index) => {\n                return index !== inferredIndex ? product * curr : product\n            }, 1);\n\n            dims[inferredIndex] = this_data.length / productOther;\n        }\n        return new Tensor(this.type, this_data, dims); // NOTE: uses same underlying storage\n    }\n\n    neg_() {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] = -this_data[i];\n        }\n        return this;\n    }\n    neg() {\n        return this.clone().neg_();\n    }\n\n    /**\n     * Computes input > val element-wise.\n     * @param {number} val The value to compare with.\n     * @returns {Tensor} A boolean tensor that is `true` where input is greater than other and `false` elsewhere.\n     */\n    gt(val) {\n        const mask = new Uint8Array(this.data.length);\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            mask[i] = this_data[i] > val ? 1 : 0;\n        }\n        return new Tensor('bool', mask, this.dims);\n    }\n\n    /**\n     * Computes input < val element-wise.\n     * @param {number} val The value to compare with.\n     * @returns {Tensor} A boolean tensor that is `true` where input is less than other and `false` elsewhere.\n     */\n    lt(val) {\n        const mask = new Uint8Array(this.data.length);\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            mask[i] = this_data[i] < val ? 1 : 0;\n        }\n        return new Tensor('bool', mask, this.dims);\n    }\n\n    /**\n     * In-place version of @see {@link Tensor.clamp}\n     */\n    clamp_(min, max) {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] = Math.min(Math.max(this_data[i], min), max);\n        }\n        return this;\n    }\n\n    /**\n     * Clamps all elements in input into the range [ min, max ]\n     * @param {number} min lower-bound of the range to be clamped to\n     * @param {number} max upper-bound of the range to be clamped to\n     * @returns {Tensor} the output tensor.\n     */\n    clamp(min, max) {\n        return this.clone().clamp_(min, max);\n    }\n\n    /**\n     * In-place version of @see {@link Tensor.round}\n     */\n    round_() {\n        const this_data = this.data;\n        for (let i = 0; i < this_data.length; ++i) {\n            this_data[i] = Math.round(this_data[i]);\n        }\n        return this;\n    }\n\n    /**\n     * Rounds elements of input to the nearest integer.\n     * @returns {Tensor} the output tensor.\n     */\n    round() {\n        return this.clone().round_();\n    }\n\n    mean(dim = null, keepdim = false) {\n        return mean(this, dim, keepdim);\n    }\n\n    min(dim = null, keepdim = false) {\n        if (dim === null) {\n            // None to reduce over all dimensions.\n            const val = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.min)(this.data)[0];\n            return new Tensor(this.type, [val], [/* scalar */]);\n        }\n        const [type, result, resultDims] = reduce_helper((a, b) => Math.min(a, b), this, dim, keepdim, Infinity);\n        return new Tensor(type, result, resultDims);\n    }\n\n    max(dim = null, keepdim = false) {\n        if (dim === null) {\n            // None to reduce over all dimensions.\n            const val = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.max)(this.data)[0];\n            return new Tensor(this.type, [val], [/* scalar */]);\n        }\n        const [type, result, resultDims] = reduce_helper((a, b) => Math.max(a, b), this, dim, keepdim, -Infinity);\n        return new Tensor(type, result, resultDims);\n    }\n\n    argmin(dim = null, keepdim = false) {\n        if (dim !== null) {\n            throw new Error(\"`dim !== null` not yet implemented.\");\n        }\n        const index = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.min)(this.data)[1];\n        return new Tensor('int64', [BigInt(index)], []);\n    }\n    argmax(dim = null, keepdim = false) {\n        if (dim !== null) {\n            throw new Error(\"`dim !== null` not yet implemented.\");\n        }\n        const index = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.max)(this.data)[1];\n        return new Tensor('int64', [BigInt(index)], []);\n    }\n\n    /**\n     * Performs Tensor dtype conversion.\n     * @param {DataType} type The desired data type.\n     * @returns {Tensor} The converted tensor.\n     */\n    to(type) {\n        // If the self Tensor already has the correct dtype, then self is returned.\n        if (this.type === type) return this;\n\n        // Otherwise, the returned tensor is a copy of self with the desired dtype.\n        if (!DataTypeMap.hasOwnProperty(type)) {\n            throw new Error(`Unsupported type: ${type}`);\n        }\n\n        // Handle special cases where a mapping function is needed (e.g., where one type is a bigint and the other is a number)\n        let map_fn;\n        const is_source_bigint = ['int64', 'uint64'].includes(this.type);\n        const is_dest_bigint = ['int64', 'uint64'].includes(type);\n        if (is_source_bigint && !is_dest_bigint) {\n            // TypeError: Cannot convert a BigInt value to a number\n            map_fn = Number;\n        } else if (!is_source_bigint && is_dest_bigint) {\n            // TypeError: Cannot convert [x] to a BigInt\n            map_fn = BigInt;\n        }\n\n        // @ts-ignore\n        return new Tensor(type, DataTypeMap[type].from(this.data, map_fn), this.dims);\n    }\n}\n\n/**\n * This creates a nested array of a given type and depth (see examples).\n *\n * @example\n *   NestArray<string, 1>; // string[]\n * @example\n *   NestArray<number, 2>; // number[][]\n * @example\n *   NestArray<string, 3>; // string[][][] etc.\n * @template T\n * @template {number} Depth\n * @template {never[]} [Acc=[]]\n * @typedef {Acc['length'] extends Depth ? T : NestArray<T[], Depth, [...Acc, never]>} NestArray\n */\n\n/**\n * Reshapes a 1-dimensional array into an n-dimensional array, according to the provided dimensions.\n *\n * @example\n *   reshape([10                    ], [1      ]); // Type: number[]      Value: [10]\n *   reshape([1, 2, 3, 4            ], [2, 2   ]); // Type: number[][]    Value: [[1, 2], [3, 4]]\n *   reshape([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 2]); // Type: number[][][]  Value: [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]\n *   reshape([1, 2, 3, 4, 5, 6, 7, 8], [4, 2   ]); // Type: number[][]    Value: [[1, 2], [3, 4], [5, 6], [7, 8]]\n * @param {T[]|DataArray} data The input array to reshape.\n * @param {DIM} dimensions The target shape/dimensions.\n * @template T\n * @template {[number]|number[]} DIM\n * @returns {NestArray<T, DIM[\"length\"]>} The reshaped array.\n */\nfunction reshape(data, dimensions) {\n\n    const totalElements = data.length;\n    const dimensionSize = dimensions.reduce((a, b) => a * b);\n\n    if (totalElements !== dimensionSize) {\n        throw Error(`cannot reshape array of size ${totalElements} into shape (${dimensions})`);\n    }\n\n    /** @type {any} */\n    let reshapedArray = data;\n\n    for (let i = dimensions.length - 1; i >= 0; i--) {\n        reshapedArray = reshapedArray.reduce((acc, val) => {\n            let lastArray = acc[acc.length - 1];\n\n            if (lastArray.length < dimensions[i]) {\n                lastArray.push(val);\n            } else {\n                acc.push([val]);\n            }\n\n            return acc;\n        }, [[]]);\n    }\n\n    return reshapedArray[0];\n}\n\n/**\n * Permutes a tensor according to the provided axes.\n * @param {any} tensor The input tensor to permute.\n * @param {Array} axes The axes to permute the tensor along.\n * @returns {Tensor} The permuted tensor.\n */\nfunction permute(tensor, axes) {\n    const [permutedData, shape] = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.permute_data)(tensor.data, tensor.dims, axes);\n    return new Tensor(tensor.type, permutedData, shape);\n}\n\n\n/**\n * Interpolates an Tensor to the given size.\n * @param {Tensor} input The input tensor to interpolate. Data must be channel-first (i.e., [c, h, w])\n * @param {number[]} size The output size of the image\n * @param {string} mode The interpolation mode\n * @param {boolean} align_corners Whether to align corners.\n * @returns {Tensor} The interpolated tensor.\n */\nfunction interpolate(input, [out_height, out_width], mode = 'bilinear', align_corners = false) {\n\n    // Input image dimensions\n    const in_channels = input.dims.at(-3) ?? 1;\n    const in_height = input.dims.at(-2);\n    const in_width = input.dims.at(-1);\n\n    let output = (0,_maths_js__WEBPACK_IMPORTED_MODULE_0__.interpolate_data)(\n        /** @type {import('./maths.js').TypedArray}*/(input.data),\n        [in_channels, in_height, in_width],\n        [out_height, out_width],\n        mode,\n        align_corners\n    );\n    return new Tensor(input.type, output, [in_channels, out_height, out_width]);\n}\n\n\n/**\n * Down/up samples the input.\n * Inspired by https://pytorch.org/docs/stable/generated/torch.nn.functional.interpolate.html.\n * @param {Tensor} input the input tensor\n * @param {Object} options the options for the interpolation\n * @param {[number, number]|[number, number, number]|[number, number, number, number]} [options.size=null] output spatial size.\n * @param {\"nearest\"|\"bilinear\"|\"bicubic\"} [options.mode='bilinear'] algorithm used for upsampling\n * @returns {Promise<Tensor>} The interpolated tensor.\n */\nasync function interpolate_4d(input, {\n    size = null,\n    mode = 'bilinear',\n} = {}) {\n\n    // Error checking\n    if (input.dims.length !== 4) {\n        throw new Error('`interpolate_4d` currently only supports 4D input.');\n    }\n    if (!size) {\n        // TODO: support scale_factor\n        throw new Error('`interpolate_4d` requires a `size` argument.');\n    }\n\n    // Fill in missing dimensions\n    let targetDims;\n    if (size.length === 2) {\n        targetDims = [...input.dims.slice(0, 2), ...size];\n    } else if (size.length === 3) {\n        targetDims = [input.dims[0], ...size];\n    } else if (size.length === 4) {\n        targetDims = size;\n    } else {\n        throw new Error('`size` must be of length 2, 3, or 4.');\n    }\n\n    let op;\n    if (mode === 'nearest') {\n        op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.nearest_interpolate_4d;\n    } else if (mode === 'bilinear') {\n        op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.bilinear_interpolate_4d;\n    } else if (mode === 'bicubic') {\n        op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.bicubic_interpolate_4d;\n    } else {\n        throw new Error(`Unsupported mode: ${mode}`);\n    }\n\n    const sizeTensor = new Tensor('int64', new BigInt64Array(targetDims.map(BigInt)), [targetDims.length]);\n    return await op({ x: input, s: sizeTensor });\n}\n\n/**\n * Matrix product of two tensors.\n * Inspired by https://pytorch.org/docs/stable/generated/torch.matmul.html\n * @param {Tensor} a the first tensor to be multiplied\n * @param {Tensor} b the second tensor to be multiplied\n * @returns {Promise<Tensor>} The matrix product of the two tensors.\n */\nasync function matmul(a, b) {\n    const op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.matmul;\n    return await op({ a, b });\n}\n\n/**\n * Computes the one dimensional Fourier transform of real-valued input.\n * Inspired by https://pytorch.org/docs/stable/generated/torch.fft.rfft.html\n * @param {Tensor} x the real input tensor\n * @param {Tensor} a The dimension along which to take the one dimensional real FFT.\n * @returns {Promise<Tensor>} the output tensor.\n */\nasync function rfft(x, a) {\n    const op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.rfft;\n    return await op({ x, a });\n}\n\n\n/**\n * Returns the k largest elements of the given input tensor.\n * Inspired by https://pytorch.org/docs/stable/generated/torch.topk.html\n * @param {Tensor} x the input tensor\n * @param {number} [k] the k in \"top-k\"\n * @returns {Promise<[Tensor, Tensor]>} the output tuple of (Tensor, LongTensor) of top-k elements and their indices.\n */\nasync function topk(x, k) {\n    const op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.top_k;\n\n    if (k == null) {\n        k = x.dims.at(-1);\n    } else {\n        k = Math.min(k, x.dims.at(-1));\n    }\n    return await op({\n        x,\n        k: new Tensor(\n            'int64',\n            [BigInt(k)],\n            [1]\n        )\n    });\n}\n\n\nconst arrayToIndexTensor = (array) => new Tensor('int64', array, [array.length]);\n/**\n * Slice a multidimensional float32 tensor.\n * @param {Tensor} data: Tensor of data to extract slices from\n * @param {number[]} starts: 1-D array of starting indices of corresponding axis in axes\n * @param {number[]} ends: 1-D array of ending indices (exclusive) of corresponding axis in axes\n * @param {number[]} axes: 1-D array of axes that starts and ends apply to\n * @param {number[]} [steps]: 1-D array of slice step of corresponding axis in axes.\n * @returns {Promise<Tensor>} Sliced data tensor.\n */\nasync function slice(data, starts, ends, axes, steps) {\n    const op = await _ops_registry_js__WEBPACK_IMPORTED_MODULE_2__.TensorOpRegistry.slice;\n    return await op({\n        x: data,\n        s: arrayToIndexTensor(starts),\n        e: arrayToIndexTensor(ends),\n        a: arrayToIndexTensor(axes),\n        t: arrayToIndexTensor(steps ?? new Array(axes.length).fill(1)),\n    });\n}\n\n\n/**\n * Perform mean pooling of the last hidden state followed by a normalization step.\n * @param {Tensor} last_hidden_state Tensor of shape [batchSize, seqLength, embedDim]\n * @param {Tensor} attention_mask Tensor of shape [batchSize, seqLength]\n * @returns {Tensor} Returns a new Tensor of shape [batchSize, embedDim].\n */\nfunction mean_pooling(last_hidden_state, attention_mask) {\n    // last_hidden_state: [batchSize, seqLength, embedDim]\n    // attention_mask:    [batchSize, seqLength]\n    const lastHiddenStateData = last_hidden_state.data;\n    const attentionMaskData = attention_mask.data;\n\n    const shape = [last_hidden_state.dims[0], last_hidden_state.dims[2]];\n\n    // @ts-ignore\n    const returnedData = new lastHiddenStateData.constructor(shape[0] * shape[1]);\n    const [batchSize, seqLength, embedDim] = last_hidden_state.dims;\n\n    let outIndex = 0;\n    for (let i = 0; i < batchSize; ++i) {\n        const offset = i * embedDim * seqLength;\n\n        for (let k = 0; k < embedDim; ++k) {\n            let sum = 0;\n            let count = 0;\n\n            const attnMaskOffset = i * seqLength;\n            const offset2 = offset + k;\n            // Pool over all words in sequence\n            for (let j = 0; j < seqLength; ++j) {\n                // index into attention mask\n                const attn = Number(attentionMaskData[attnMaskOffset + j]);\n\n                count += attn;\n                sum += lastHiddenStateData[offset2 + j * embedDim] * attn;\n            }\n\n            const avg = sum / count;\n            returnedData[outIndex++] = avg;\n        }\n    }\n\n    return new Tensor(\n        last_hidden_state.type,\n        returnedData,\n        shape\n    )\n}\n\n/**\n * Apply Layer Normalization for last certain number of dimensions.\n * @param {Tensor} input The input tensor\n * @param {number[]} normalized_shape input shape from an expected input of size\n * @param {Object} options The options for the layer normalization\n * @param {number} [options.eps=1e-5] A value added to the denominator for numerical stability.\n * @returns {Tensor} The normalized tensor.\n */\nfunction layer_norm(input, normalized_shape, {\n    eps = 1e-5,\n} = {}) {\n    if (input.dims.length !== 2) {\n        throw new Error('`layer_norm` currently only supports 2D input.');\n    }\n\n    const [batchSize, featureDim] = input.dims;\n\n    if (normalized_shape.length !== 1 && normalized_shape[0] !== featureDim) {\n        throw new Error('`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.');\n    }\n\n    const [std, mean] = std_mean(input, 1, 0, true);\n    const stdData = /** @type {Float32Array} */(std.data);\n    const meanData = /** @type {Float32Array} */(mean.data);\n\n    const inputData = /** @type {Float32Array} */(input.data);\n\n    // @ts-ignore\n    const returnedData = new inputData.constructor(inputData.length);\n\n    for (let i = 0; i < batchSize; ++i) {\n        const offset = i * featureDim;\n        for (let j = 0; j < featureDim; ++j) {\n            const offset2 = offset + j;\n            returnedData[offset2] = (inputData[offset2] - meanData[i]) / (stdData[i] + eps);\n        }\n    }\n    return new Tensor(input.type, returnedData, input.dims);\n}\n\n/**\n * Helper function to calculate new dimensions when performing a squeeze operation.\n * @param {number[]} dims The dimensions of the tensor.\n * @param {number|number[]|null} dim The dimension(s) to squeeze.\n * @returns {number[]} The new dimensions.\n * @private\n */\nfunction calc_squeeze_dims(dims, dim) {\n    dims = dims.slice();\n    if (dim === null) {\n        dims = dims.filter((d) => d !== 1);\n    } else if (typeof dim === 'number') {\n        if (dims[dim] === 1) {\n            dims.splice(dim, 1);\n        }\n    } else if (Array.isArray(dim)) {\n        dims = dims.filter((x, i) => {\n            return x !== 1 || !dim.includes(i);\n        });\n    }\n    return dims;\n}\n\n/**\n * Helper function to calculate new dimensions when performing an unsqueeze operation.\n * @param {number[]} dims The dimensions of the tensor.\n * @param {number} dim The dimension to unsqueeze.\n * @returns {number[]} The new dimensions.\n * @private\n */\nfunction calc_unsqueeze_dims(dims, dim) {\n    // Dimension out of range (e.g., \"expected to be in range of [-4, 3], but got 4\")\n    // + 1 since we allow inserting at the end (i.e. dim = -1)\n    dim = safeIndex(dim, dims.length + 1);\n    dims = dims.slice();\n    // Insert 1 into specified dimension\n    dims.splice(dim, 0, 1);\n    return dims;\n}\n\n/**\n * Safely calculate the index for an array of a given size, allowing negative indexing.\n * @param {number} index The index that will be used.\n * @param {number} size The size of the array.\n * @param {number} [dimension=null] The dimension that the index is for (optional).\n * @returns {number} The index, guaranteed to be non-negative and less than `arrayLength`.\n *\n * @throws {Error} If the index is out of range.\n * @private\n */\nfunction safeIndex(index, size, dimension = null, boundsCheck = true) {\n    if (boundsCheck && (index < -size || index >= size)) {\n        throw new Error(`IndexError: index ${index} is out of bounds for dimension${dimension === null ? '' : ' ' + dimension} with size ${size}`);\n    }\n\n    if (index < 0) {\n        // Negative indexing, ensuring positive index\n        index = ((index % size) + size) % size;\n    }\n    return index;\n}\n\n/**\n * Concatenates an array of tensors along a specified dimension.\n * @param {Tensor[]} tensors The array of tensors to concatenate.\n * @param {number} dim The dimension to concatenate along.\n * @returns {Tensor} The concatenated tensor.\n */\nfunction cat(tensors, dim = 0) {\n    dim = safeIndex(dim, tensors[0].dims.length);\n\n    // TODO do validation of shapes\n\n    const resultDims = tensors[0].dims.slice();\n    resultDims[dim] = tensors.reduce((a, b) => a + b.dims[dim], 0);\n\n    // Create a new array to store the accumulated values\n    const resultSize = resultDims.reduce((a, b) => a * b, 1);\n    // @ts-ignore\n    const result = new tensors[0].data.constructor(resultSize);\n\n    // Create output tensor of same type as first\n    const resultType = tensors[0].type;\n\n    if (dim === 0) {\n        // Handle special case for performance reasons\n\n        let offset = 0;\n        for (const tensor of tensors) {\n            const tensorData = tensor.data;\n            result.set(tensorData, offset);\n            offset += tensorData.length;\n        }\n\n    } else {\n\n        let currentDim = 0;\n\n        for (let t = 0; t < tensors.length; ++t) {\n            const { data, dims } = tensors[t];\n\n            // Iterate over the data array\n            for (let i = 0; i < data.length; ++i) {\n                // Calculate the index in the resulting array\n                let resultIndex = 0;\n\n                for (let j = dims.length - 1, num = i, resultMultiplier = 1; j >= 0; --j) {\n                    const size = dims[j];\n                    let index = num % size;\n                    if (j === dim) {\n                        index += currentDim;\n                    }\n                    resultIndex += index * resultMultiplier;\n                    resultMultiplier *= resultDims[j];\n                    num = Math.floor(num / size);\n                }\n                // Accumulate the value at the current index\n                result[resultIndex] = data[i];\n            }\n\n            currentDim += dims[dim];\n        }\n    }\n    return new Tensor(resultType, result, resultDims);\n}\n\n/**\n * Stack an array of tensors along a specified dimension.\n * @param {Tensor[]} tensors The array of tensors to stack.\n * @param {number} dim The dimension to stack along.\n * @returns {Tensor} The stacked tensor.\n */\nfunction stack(tensors, dim = 0) {\n    // TODO do validation of shapes\n    // NOTE: stack expects each tensor to be equal size\n    return cat(tensors.map(t => t.unsqueeze(dim)), dim);\n}\n\n\n/**\n * @param {(previousValue: any, currentValue: any, currentIndex?: number, resultIndex?: number) => any} callbackfn\n * @param {Tensor} input the input tensor.\n * @param {number|null} dim the dimension to reduce.\n * @param {boolean} keepdim whether the output tensor has dim retained or not.\n * @returns {[DataType, any, number[]]} The reduced tensor data.\n */\nfunction reduce_helper(callbackfn, input, dim = null, keepdim = false, initialValue = null) {\n    const inputData = input.data;\n    const inputDims = input.dims;\n\n    // Negative indexing\n    dim = safeIndex(dim, inputDims.length);\n\n    // Calculate the shape of the resulting array after summation\n    const resultDims = inputDims.slice(); // Copy the original dimensions\n    resultDims[dim] = 1; // Remove the specified axis\n\n    // Create a new array to store the accumulated values\n    // @ts-ignore\n    const result = new inputData.constructor(inputData.length / inputDims[dim]);\n    if (initialValue !== null) {\n        result.fill(initialValue);\n    }\n\n    // Iterate over the data array\n    for (let i = 0; i < inputData.length; ++i) {\n\n        // Calculate the index in the resulting array\n        let resultIndex = 0;\n\n        for (let j = inputDims.length - 1, num = i, resultMultiplier = 1; j >= 0; --j) {\n            const size = inputDims[j];\n            if (j !== dim) {\n                const index = num % size;\n                resultIndex += index * resultMultiplier;\n                resultMultiplier *= resultDims[j];\n            }\n            num = Math.floor(num / size);\n        }\n\n        // Accumulate the value at the current index\n        result[resultIndex] = callbackfn(result[resultIndex], inputData[i], i, resultIndex);\n    }\n\n    if (!keepdim) resultDims.splice(dim, 1);\n\n    return [input.type, result, resultDims];\n}\n\n\n/**\n * Calculates the standard deviation and mean over the dimensions specified by dim. dim can be a single dimension or `null` to reduce over all dimensions.\n * @param {Tensor} input the input tenso\n * @param {number|null} dim the dimension to reduce. If None, all dimensions are reduced.\n * @param {number} correction difference between the sample size and sample degrees of freedom. Defaults to Bessel's correction, correction=1.\n * @param {boolean} keepdim whether the output tensor has dim retained or not.\n * @returns {Tensor[]} A tuple of (std, mean) tensors.\n */\nfunction std_mean(input, dim = null, correction = 1, keepdim = false) {\n    const inputData = /** @type {Float32Array} */(input.data);\n    const inputDims = input.dims;\n\n    if (dim === null) {\n        // None to reduce over all dimensions.\n        const sum = inputData.reduce((a, b) => a + b, 0);\n        const mean = sum / inputData.length;\n        const std = Math.sqrt(inputData.reduce((a, b) => a + (b - mean) ** 2, 0) / (inputData.length - correction));\n\n        const meanTensor = new Tensor(input.type, [mean], [/* scalar */]);\n        const stdTensor = new Tensor(input.type, [std], [/* scalar */]);\n\n        return [stdTensor, meanTensor];\n    }\n    dim = safeIndex(dim, inputDims.length);\n    const meanTensor = mean(input, dim, keepdim);\n    const meanTensorData = meanTensor.data;\n\n    // Compute squared sum\n    const [type, result, resultDims] = reduce_helper((a, b, i, j) => a + (b - meanTensorData[j]) ** 2, input, dim, keepdim);\n\n    // Square root of the squared sum\n    for (let i = 0; i < result.length; ++i) {\n        result[i] = Math.sqrt(result[i] / (inputDims[dim] - correction));\n    }\n\n    const stdTensor = new Tensor(type, result, resultDims);\n\n    return [stdTensor, meanTensor];\n}\n\n/**\n * Returns the mean value of each row of the input tensor in the given dimension dim.\n * @param {Tensor} input the input tensor.\n * @param {number|null} dim the dimension to reduce.\n * @param {boolean} keepdim whether the output tensor has dim retained or not.\n * @returns {Tensor} A new tensor with means taken along the specified dimension.\n */\nfunction mean(input, dim = null, keepdim = false) {\n    const inputDims = input.dims;\n    const inputData = /** @type {Float32Array} */(input.data);\n\n    if (dim === null) {\n        // None to reduce over all dimensions.\n        const val = inputData.reduce((a, b) => a + b, 0);\n        return new Tensor(input.type, [val / inputData.length], [/* scalar */]);\n    }\n    dim = safeIndex(dim, inputDims.length);\n\n    // Compute sum\n    const [type, result, resultDims] = reduce_helper((a, b) => a + b, input, dim, keepdim);\n\n    // Divide by number of elements in the dimension\n    if (inputDims[dim] !== 1) {\n        for (let i = 0; i < result.length; ++i) {\n            result[i] /= inputDims[dim];\n        }\n    }\n\n    return new Tensor(type, result, resultDims);\n}\n\n\nfunction dimsToStride(dims) {\n    const stride = new Array(dims.length);\n    for (let i = dims.length - 1, s2 = 1; i >= 0; --i) {\n        stride[i] = s2;\n        s2 *= dims[i];\n    }\n    return stride;\n}\n\nfunction fullHelper(size, fill_value, dtype, cls) {\n    const numElements = size.reduce((a, b) => a * b, 1);\n    return new Tensor(\n        dtype,\n        new cls(numElements).fill(fill_value),\n        size\n    )\n}\n\n/**\n * Creates a tensor of size size filled with fill_value. The tensor's dtype is inferred from fill_value.\n * @param {number[]} size A sequence of integers defining the shape of the output tensor.\n * @param {number|bigint|boolean} fill_value The value to fill the output tensor with.\n * @returns {Tensor} The filled tensor.\n */\nfunction full(size, fill_value) {\n    let dtype;\n    let typedArrayCls;\n    if (typeof fill_value === 'number') {\n        dtype = 'float32';\n        typedArrayCls = Float32Array;\n    } else if (typeof fill_value === 'bigint') {\n        dtype = 'int64';\n        typedArrayCls = BigInt64Array;\n    } else if (typeof fill_value === 'boolean') {\n        dtype = 'bool';\n        typedArrayCls = Uint8Array;\n    } else {\n        // TODO: support other dtypes\n        throw new Error(`Unsupported data type: ${typeof fill_value}`);\n    }\n    return fullHelper(size, fill_value, dtype, typedArrayCls);\n}\n\nfunction full_like(tensor, fill_value) {\n    return full(tensor.dims, fill_value);\n}\n\n/**\n * Returns a tensor filled with the scalar value 1, with the shape defined by the variable argument size.\n * @param {number[]} size A sequence of integers defining the shape of the output tensor.\n * @returns {Tensor} The ones tensor.\n */\nfunction ones(size) {\n    return fullHelper(size, 1n, 'int64', BigInt64Array);\n}\n\n/**\n * Returns a tensor filled with the scalar value 1, with the same size as input.\n * @param {Tensor} tensor The size of input will determine size of the output tensor.\n * @returns {Tensor} The ones tensor.\n */\nfunction ones_like(tensor) {\n    return ones(tensor.dims);\n}\n\n/**\n * Returns a tensor filled with the scalar value 0, with the shape defined by the variable argument size.\n * @param {number[]} size A sequence of integers defining the shape of the output tensor.\n * @returns {Tensor} The zeros tensor.\n */\nfunction zeros(size) {\n    return fullHelper(size, 0n, 'int64', BigInt64Array);\n}\n\n/**\n * Returns a tensor filled with the scalar value 0, with the same size as input.\n * @param {Tensor} tensor The size of input will determine size of the output tensor.\n * @returns {Tensor} The zeros tensor.\n */\nfunction zeros_like(tensor) {\n    return zeros(tensor.dims);\n}\n\n/**\n * Returns a tensor filled with random numbers from a uniform distribution on the interval [0, 1)\n * @param {number[]} size A sequence of integers defining the shape of the output tensor.\n * @returns {Tensor} The random tensor.\n */\nfunction rand(size) {\n    const length = size.reduce((a, b) => a * b, 1);\n    return new Tensor(\n        \"float32\",\n        Float32Array.from({ length }, () => Math.random()),\n        size,\n    )\n}\n\n/**\n * Quantizes the embeddings tensor to binary or unsigned binary precision.\n * @param {Tensor} tensor The tensor to quantize.\n * @param {'binary'|'ubinary'} precision The precision to use for quantization.\n * @returns {Tensor} The quantized tensor.\n */\nfunction quantize_embeddings(tensor, precision) {\n    if (tensor.dims.length !== 2) {\n        throw new Error(\"The tensor must have 2 dimensions\");\n    }\n    if (tensor.dims.at(-1) % 8 !== 0) {\n        throw new Error(\"The last dimension of the tensor must be a multiple of 8\");\n    }\n    if (!['binary', 'ubinary'].includes(precision)) {\n        throw new Error(\"The precision must be either 'binary' or 'ubinary'\");\n    }\n\n    const signed = precision === 'binary';\n    const dtype = signed ? 'int8' : 'uint8';\n\n    // Create a typed array to store the packed bits\n    const cls = signed ? Int8Array : Uint8Array;\n    const inputData = tensor.data;\n    const outputData = new cls(inputData.length / 8);\n\n    // Iterate over each number in the array\n    for (let i = 0; i < inputData.length; ++i) {\n        // Determine if the number is greater than 0\n        const bit = inputData[i] > 0 ? 1 : 0;\n\n        // Calculate the index in the typed array and the position within the byte\n        const arrayIndex = Math.floor(i / 8);\n        const bitPosition = i % 8;\n\n        // Pack the bit into the typed array\n        outputData[arrayIndex] |= bit << (7 - bitPosition);\n        if (signed && bitPosition === 0) {\n            outputData[arrayIndex] -= 128;\n        }\n    };\n\n    return new Tensor(dtype, outputData, [tensor.dims[0], tensor.dims[1] / 8]);\n}\n\n\n/***/ }),\n\n/***/ \"./src/utils/video.js\":\n/*!****************************!*\\\n  !*** ./src/utils/video.js ***!\n  \\****************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RawVideo: () => (/* binding */ RawVideo),\n/* harmony export */   RawVideoFrame: () => (/* binding */ RawVideoFrame),\n/* harmony export */   load_video: () => (/* binding */ load_video)\n/* harmony export */ });\n/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./image.js */ \"./src/utils/image.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../env.js */ \"./src/env.js\");\n\n\n\nclass RawVideoFrame {\n\n    /**\n     * @param {RawImage} image\n     * @param {number} timestamp\n     */\n    constructor(image, timestamp) {\n        this.image = image;\n        this.timestamp = timestamp;\n    }\n}\n\nclass RawVideo {\n    /**\n     * @param {RawVideoFrame[]|RawImage[]} frames\n     * @param {number} duration\n     */\n    constructor(frames, duration) {\n        if (frames.length > 0 && frames[0] instanceof _image_js__WEBPACK_IMPORTED_MODULE_0__.RawImage) {\n            // Assume uniform timestamps\n            frames = frames.map((image, i) => new RawVideoFrame(image, (i + 1) / (frames.length + 1) * duration));\n        }\n        this.frames = /** @type {RawVideoFrame[]} */ (frames);\n        this.duration = duration;\n    }\n\n    get width() {\n        return this.frames[0].image.width;\n    }\n    get height() {\n        return this.frames[0].image.height;\n    }\n\n    get fps() {\n        return this.frames.length / this.duration;\n    }\n}\n\n\n/**\n * Loads a video.\n *\n * @param {string|Blob|HTMLVideoElement} src The video to process.\n * @param {Object} [options] Optional parameters.\n * @param {number} [options.num_frames=null] The number of frames to sample uniformly.\n * @param {number} [options.fps=null] The number of frames to sample per second.\n *\n * @returns {Promise<RawVideo>} The loaded video.\n */\nasync function load_video(src, { num_frames = null, fps = null } = {}) {\n    if (!_env_js__WEBPACK_IMPORTED_MODULE_1__.apis.IS_BROWSER_ENV) {\n        throw new Error(\"`load_video` is currently only supported in browser environments.\");\n    }\n\n    // TODO: Support efficiently loading all frames using the WebCodecs API.\n    // Specfically, https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder\n    if (num_frames == null && fps == null) {\n        throw new Error(\"Either num_frames or fps must be provided.\");\n    }\n\n    const frames = [];\n\n    const video = document.createElement(\"video\");\n    video.crossOrigin = \"anonymous\";\n    video.muted = true; // mute to allow autoplay and seeking\n\n    if (typeof src === 'string') {\n        video.src = src;\n    } else if (src instanceof Blob) {\n        video.src = URL.createObjectURL(src);\n    } else if (src instanceof HTMLVideoElement) {\n        video.src = src.src;\n    } else {\n        throw new Error(\"Invalid URL or video element provided.\");\n    }\n    // Wait for metadata to load to obtain duration\n    await new Promise((resolve) => video.onloadedmetadata = resolve);\n\n    if (video.seekable.start(0) === video.seekable.end(0)) {\n        // Fallback: Download entire video if not seekable\n        const response = await fetch(video.src);\n        const blob = await response.blob();\n        video.src = URL.createObjectURL(blob);\n        await new Promise((resolve) => video.onloadedmetadata = resolve);\n    }\n\n    const duration = video.duration;\n\n    let count, step;\n    if (num_frames != null) {\n        count = num_frames;\n        step = num_frames === 1 ? 0 : duration / (num_frames - 1);\n    } else {\n        step = 1 / fps;\n        count = Math.floor(duration / step);\n    }\n\n    // Build an array of sample times based on num_frames or fps\n    let sampleTimes = [];\n    for (let i = 0; i < count; ++i) {\n        sampleTimes.push(num_frames === 1 ? duration / 2 : i * step);\n    }\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const ctx = canvas.getContext(\"2d\", { willReadFrequently: true });\n    for (const t of sampleTimes) {\n        video.currentTime = t;\n        await new Promise((resolve) => {\n            video.onseeked = resolve;\n        });\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const frameData = new _image_js__WEBPACK_IMPORTED_MODULE_0__.RawImage(imageData.data, canvas.width, canvas.height, 4);\n\n        const frame = new RawVideoFrame(frameData, t);\n        frames.push(frame);\n    }\n\n    // Clean up video element.\n    video.remove();\n\n    return new RawVideo(frames, duration);\n}\n\n\n/***/ })\n\n/******/ });\n/************************************************************************/\n/******/ // The module cache\n/******/ var __webpack_module_cache__ = {};\n/******/ \n/******/ // The require function\n/******/ function __webpack_require__(moduleId) {\n/******/ \t// Check if module is in cache\n/******/ \tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \tif (cachedModule !== undefined) {\n/******/ \t\treturn cachedModule.exports;\n/******/ \t}\n/******/ \t// Create a new module (and put it into the cache)\n/******/ \tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t// no module.id needed\n/******/ \t\t// no module.loaded needed\n/******/ \t\texports: {}\n/******/ \t};\n/******/ \n/******/ \t// Execute the module function\n/******/ \t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \n/******/ \t// Return the exports of the module\n/******/ \treturn module.exports;\n/******/ }\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/create fake namespace object */\n/******/ (() => {\n/******/ \tvar getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\n/******/ \tvar leafPrototypes;\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 16: return value when it's Promise-like\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = this(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif(typeof value === 'object' && value) {\n/******/ \t\t\tif((mode & 4) && value.__esModule) return value;\n/******/ \t\t\tif((mode & 16) && typeof value.then === 'function') return value;\n/******/ \t\t}\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tvar def = {};\n/******/ \t\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n/******/ \t\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n/******/ \t\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n/******/ \t\t}\n/******/ \t\tdef['default'] = () => (value);\n/******/ \t\t__webpack_require__.d(ns, def);\n/******/ \t\treturn ns;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/make namespace object */\n/******/ (() => {\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = (exports) => {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/ })();\n/******/ \n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.\n(() => {\n/*!*****************************!*\\\n  !*** ./src/transformers.js ***!\n  \\*****************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASTFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.ASTFeatureExtractor),\n/* harmony export */   ASTForAudioClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ASTForAudioClassification),\n/* harmony export */   ASTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ASTModel),\n/* harmony export */   ASTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ASTPreTrainedModel),\n/* harmony export */   AlbertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AlbertForMaskedLM),\n/* harmony export */   AlbertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AlbertForQuestionAnswering),\n/* harmony export */   AlbertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AlbertForSequenceClassification),\n/* harmony export */   AlbertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AlbertModel),\n/* harmony export */   AlbertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AlbertPreTrainedModel),\n/* harmony export */   AlbertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.AlbertTokenizer),\n/* harmony export */   AudioClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.AudioClassificationPipeline),\n/* harmony export */   AutoConfig: () => (/* reexport safe */ _configs_js__WEBPACK_IMPORTED_MODULE_4__.AutoConfig),\n/* harmony export */   AutoFeatureExtractor: () => (/* reexport safe */ _models_auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_12__.AutoFeatureExtractor),\n/* harmony export */   AutoImageProcessor: () => (/* reexport safe */ _models_auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_15__.AutoImageProcessor),\n/* harmony export */   AutoModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModel),\n/* harmony export */   AutoModelForAudioClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForAudioClassification),\n/* harmony export */   AutoModelForAudioFrameClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForAudioFrameClassification),\n/* harmony export */   AutoModelForAudioTextToText: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForAudioTextToText),\n/* harmony export */   AutoModelForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForCTC),\n/* harmony export */   AutoModelForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForCausalLM),\n/* harmony export */   AutoModelForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForDepthEstimation),\n/* harmony export */   AutoModelForDocumentQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForDocumentQuestionAnswering),\n/* harmony export */   AutoModelForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageClassification),\n/* harmony export */   AutoModelForImageFeatureExtraction: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageFeatureExtraction),\n/* harmony export */   AutoModelForImageMatting: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageMatting),\n/* harmony export */   AutoModelForImageSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageSegmentation),\n/* harmony export */   AutoModelForImageTextToText: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageTextToText),\n/* harmony export */   AutoModelForImageToImage: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForImageToImage),\n/* harmony export */   AutoModelForMaskGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForMaskGeneration),\n/* harmony export */   AutoModelForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForMaskedLM),\n/* harmony export */   AutoModelForNormalEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForNormalEstimation),\n/* harmony export */   AutoModelForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForObjectDetection),\n/* harmony export */   AutoModelForPoseEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForPoseEstimation),\n/* harmony export */   AutoModelForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForQuestionAnswering),\n/* harmony export */   AutoModelForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForSemanticSegmentation),\n/* harmony export */   AutoModelForSeq2SeqLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForSeq2SeqLM),\n/* harmony export */   AutoModelForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForSequenceClassification),\n/* harmony export */   AutoModelForSpeechSeq2Seq: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForSpeechSeq2Seq),\n/* harmony export */   AutoModelForTextToSpectrogram: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForTextToSpectrogram),\n/* harmony export */   AutoModelForTextToWaveform: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForTextToWaveform),\n/* harmony export */   AutoModelForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForTokenClassification),\n/* harmony export */   AutoModelForUniversalSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForUniversalSegmentation),\n/* harmony export */   AutoModelForVision2Seq: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForVision2Seq),\n/* harmony export */   AutoModelForXVector: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForXVector),\n/* harmony export */   AutoModelForZeroShotObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.AutoModelForZeroShotObjectDetection),\n/* harmony export */   AutoProcessor: () => (/* reexport safe */ _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_18__.AutoProcessor),\n/* harmony export */   AutoTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.AutoTokenizer),\n/* harmony export */   AutomaticSpeechRecognitionPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.AutomaticSpeechRecognitionPipeline),\n/* harmony export */   BackgroundRemovalPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.BackgroundRemovalPipeline),\n/* harmony export */   BartForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BartForConditionalGeneration),\n/* harmony export */   BartForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BartForSequenceClassification),\n/* harmony export */   BartModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BartModel),\n/* harmony export */   BartPretrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BartPretrainedModel),\n/* harmony export */   BartTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.BartTokenizer),\n/* harmony export */   BaseModelOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BaseModelOutput),\n/* harmony export */   BaseStreamer: () => (/* reexport safe */ _generation_streamers_js__WEBPACK_IMPORTED_MODULE_19__.BaseStreamer),\n/* harmony export */   BeitFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.BeitFeatureExtractor),\n/* harmony export */   BeitForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BeitForImageClassification),\n/* harmony export */   BeitModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BeitModel),\n/* harmony export */   BeitPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BeitPreTrainedModel),\n/* harmony export */   BertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertForMaskedLM),\n/* harmony export */   BertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertForQuestionAnswering),\n/* harmony export */   BertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertForSequenceClassification),\n/* harmony export */   BertForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertForTokenClassification),\n/* harmony export */   BertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertModel),\n/* harmony export */   BertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BertPreTrainedModel),\n/* harmony export */   BertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.BertTokenizer),\n/* harmony export */   BitImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.BitImageProcessor),\n/* harmony export */   BlenderbotForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotForConditionalGeneration),\n/* harmony export */   BlenderbotModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotModel),\n/* harmony export */   BlenderbotPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotPreTrainedModel),\n/* harmony export */   BlenderbotSmallForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotSmallForConditionalGeneration),\n/* harmony export */   BlenderbotSmallModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotSmallModel),\n/* harmony export */   BlenderbotSmallPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BlenderbotSmallPreTrainedModel),\n/* harmony export */   BlenderbotSmallTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.BlenderbotSmallTokenizer),\n/* harmony export */   BlenderbotTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.BlenderbotTokenizer),\n/* harmony export */   BloomForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BloomForCausalLM),\n/* harmony export */   BloomModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BloomModel),\n/* harmony export */   BloomPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.BloomPreTrainedModel),\n/* harmony export */   BloomTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.BloomTokenizer),\n/* harmony export */   CLIPFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.CLIPFeatureExtractor),\n/* harmony export */   CLIPImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.CLIPImageProcessor),\n/* harmony export */   CLIPModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPModel),\n/* harmony export */   CLIPPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPPreTrainedModel),\n/* harmony export */   CLIPSegForImageSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPSegForImageSegmentation),\n/* harmony export */   CLIPSegModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPSegModel),\n/* harmony export */   CLIPSegPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPSegPreTrainedModel),\n/* harmony export */   CLIPTextModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPTextModel),\n/* harmony export */   CLIPTextModelWithProjection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPTextModelWithProjection),\n/* harmony export */   CLIPTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.CLIPTokenizer),\n/* harmony export */   CLIPVisionModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPVisionModel),\n/* harmony export */   CLIPVisionModelWithProjection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CLIPVisionModelWithProjection),\n/* harmony export */   CamembertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertForMaskedLM),\n/* harmony export */   CamembertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertForQuestionAnswering),\n/* harmony export */   CamembertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertForSequenceClassification),\n/* harmony export */   CamembertForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertForTokenClassification),\n/* harmony export */   CamembertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertModel),\n/* harmony export */   CamembertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CamembertPreTrainedModel),\n/* harmony export */   CamembertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.CamembertTokenizer),\n/* harmony export */   CausalLMOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CausalLMOutput),\n/* harmony export */   CausalLMOutputWithPast: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CausalLMOutputWithPast),\n/* harmony export */   ChineseCLIPFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.ChineseCLIPFeatureExtractor),\n/* harmony export */   ChineseCLIPModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ChineseCLIPModel),\n/* harmony export */   ChineseCLIPPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ChineseCLIPPreTrainedModel),\n/* harmony export */   ClapAudioModelWithProjection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ClapAudioModelWithProjection),\n/* harmony export */   ClapFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.ClapFeatureExtractor),\n/* harmony export */   ClapModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ClapModel),\n/* harmony export */   ClapPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ClapPreTrainedModel),\n/* harmony export */   ClapTextModelWithProjection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ClapTextModelWithProjection),\n/* harmony export */   ClassifierFreeGuidanceLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.ClassifierFreeGuidanceLogitsProcessor),\n/* harmony export */   CodeGenForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CodeGenForCausalLM),\n/* harmony export */   CodeGenModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CodeGenModel),\n/* harmony export */   CodeGenPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CodeGenPreTrainedModel),\n/* harmony export */   CodeGenTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.CodeGenTokenizer),\n/* harmony export */   CodeLlamaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.CodeLlamaTokenizer),\n/* harmony export */   CohereForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CohereForCausalLM),\n/* harmony export */   CohereModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CohereModel),\n/* harmony export */   CoherePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.CoherePreTrainedModel),\n/* harmony export */   CohereTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.CohereTokenizer),\n/* harmony export */   ConvBertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertForMaskedLM),\n/* harmony export */   ConvBertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertForQuestionAnswering),\n/* harmony export */   ConvBertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertForSequenceClassification),\n/* harmony export */   ConvBertForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertForTokenClassification),\n/* harmony export */   ConvBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertModel),\n/* harmony export */   ConvBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvBertPreTrainedModel),\n/* harmony export */   ConvBertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.ConvBertTokenizer),\n/* harmony export */   ConvNextFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.ConvNextFeatureExtractor),\n/* harmony export */   ConvNextForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextForImageClassification),\n/* harmony export */   ConvNextImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.ConvNextImageProcessor),\n/* harmony export */   ConvNextModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextModel),\n/* harmony export */   ConvNextPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextPreTrainedModel),\n/* harmony export */   ConvNextV2ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextV2ForImageClassification),\n/* harmony export */   ConvNextV2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextV2Model),\n/* harmony export */   ConvNextV2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ConvNextV2PreTrainedModel),\n/* harmony export */   DPTFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DPTFeatureExtractor),\n/* harmony export */   DPTForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DPTForDepthEstimation),\n/* harmony export */   DPTImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DPTImageProcessor),\n/* harmony export */   DPTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DPTModel),\n/* harmony export */   DPTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DPTPreTrainedModel),\n/* harmony export */   DacDecoderModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacDecoderModel),\n/* harmony export */   DacDecoderOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacDecoderOutput),\n/* harmony export */   DacEncoderModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacEncoderModel),\n/* harmony export */   DacEncoderOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacEncoderOutput),\n/* harmony export */   DacFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.DacFeatureExtractor),\n/* harmony export */   DacModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacModel),\n/* harmony export */   DacPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DacPreTrainedModel),\n/* harmony export */   DataTypeMap: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.DataTypeMap),\n/* harmony export */   DebertaForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaForMaskedLM),\n/* harmony export */   DebertaForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaForQuestionAnswering),\n/* harmony export */   DebertaForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaForSequenceClassification),\n/* harmony export */   DebertaForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaForTokenClassification),\n/* harmony export */   DebertaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaModel),\n/* harmony export */   DebertaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaPreTrainedModel),\n/* harmony export */   DebertaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.DebertaTokenizer),\n/* harmony export */   DebertaV2ForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2ForMaskedLM),\n/* harmony export */   DebertaV2ForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2ForQuestionAnswering),\n/* harmony export */   DebertaV2ForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2ForSequenceClassification),\n/* harmony export */   DebertaV2ForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2ForTokenClassification),\n/* harmony export */   DebertaV2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2Model),\n/* harmony export */   DebertaV2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DebertaV2PreTrainedModel),\n/* harmony export */   DebertaV2Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.DebertaV2Tokenizer),\n/* harmony export */   DecisionTransformerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DecisionTransformerModel),\n/* harmony export */   DecisionTransformerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DecisionTransformerPreTrainedModel),\n/* harmony export */   DeiTFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DeiTFeatureExtractor),\n/* harmony export */   DeiTForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DeiTForImageClassification),\n/* harmony export */   DeiTImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DeiTImageProcessor),\n/* harmony export */   DeiTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DeiTModel),\n/* harmony export */   DeiTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DeiTPreTrainedModel),\n/* harmony export */   DepthAnythingForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DepthAnythingForDepthEstimation),\n/* harmony export */   DepthAnythingPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DepthAnythingPreTrainedModel),\n/* harmony export */   DepthEstimationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.DepthEstimationPipeline),\n/* harmony export */   DepthProForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DepthProForDepthEstimation),\n/* harmony export */   DepthProPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DepthProPreTrainedModel),\n/* harmony export */   DetrFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DetrFeatureExtractor),\n/* harmony export */   DetrForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrForObjectDetection),\n/* harmony export */   DetrForSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrForSegmentation),\n/* harmony export */   DetrImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DetrImageProcessor),\n/* harmony export */   DetrModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrModel),\n/* harmony export */   DetrObjectDetectionOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrObjectDetectionOutput),\n/* harmony export */   DetrPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrPreTrainedModel),\n/* harmony export */   DetrSegmentationOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DetrSegmentationOutput),\n/* harmony export */   Dinov2ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2ForImageClassification),\n/* harmony export */   Dinov2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2Model),\n/* harmony export */   Dinov2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2PreTrainedModel),\n/* harmony export */   Dinov2WithRegistersForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2WithRegistersForImageClassification),\n/* harmony export */   Dinov2WithRegistersModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2WithRegistersModel),\n/* harmony export */   Dinov2WithRegistersPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Dinov2WithRegistersPreTrainedModel),\n/* harmony export */   DistilBertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertForMaskedLM),\n/* harmony export */   DistilBertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertForQuestionAnswering),\n/* harmony export */   DistilBertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertForSequenceClassification),\n/* harmony export */   DistilBertForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertForTokenClassification),\n/* harmony export */   DistilBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertModel),\n/* harmony export */   DistilBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DistilBertPreTrainedModel),\n/* harmony export */   DistilBertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.DistilBertTokenizer),\n/* harmony export */   DocumentQuestionAnsweringPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.DocumentQuestionAnsweringPipeline),\n/* harmony export */   DonutFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DonutFeatureExtractor),\n/* harmony export */   DonutImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.DonutImageProcessor),\n/* harmony export */   DonutSwinModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DonutSwinModel),\n/* harmony export */   DonutSwinPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.DonutSwinPreTrainedModel),\n/* harmony export */   EfficientNetForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EfficientNetForImageClassification),\n/* harmony export */   EfficientNetImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.EfficientNetImageProcessor),\n/* harmony export */   EfficientNetModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EfficientNetModel),\n/* harmony export */   EfficientNetPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EfficientNetPreTrainedModel),\n/* harmony export */   ElectraForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraForMaskedLM),\n/* harmony export */   ElectraForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraForQuestionAnswering),\n/* harmony export */   ElectraForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraForSequenceClassification),\n/* harmony export */   ElectraForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraForTokenClassification),\n/* harmony export */   ElectraModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraModel),\n/* harmony export */   ElectraPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ElectraPreTrainedModel),\n/* harmony export */   ElectraTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.ElectraTokenizer),\n/* harmony export */   EncodecFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.EncodecFeatureExtractor),\n/* harmony export */   EosTokenCriteria: () => (/* reexport safe */ _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__.EosTokenCriteria),\n/* harmony export */   EsmForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EsmForMaskedLM),\n/* harmony export */   EsmForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EsmForSequenceClassification),\n/* harmony export */   EsmForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EsmForTokenClassification),\n/* harmony export */   EsmModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EsmModel),\n/* harmony export */   EsmPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.EsmPreTrainedModel),\n/* harmony export */   EsmTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.EsmTokenizer),\n/* harmony export */   ExaoneForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ExaoneForCausalLM),\n/* harmony export */   ExaoneModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ExaoneModel),\n/* harmony export */   ExaonePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ExaonePreTrainedModel),\n/* harmony export */   FFT: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.FFT),\n/* harmony export */   FalconForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FalconForCausalLM),\n/* harmony export */   FalconModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FalconModel),\n/* harmony export */   FalconPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FalconPreTrainedModel),\n/* harmony export */   FalconTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.FalconTokenizer),\n/* harmony export */   FastViTForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FastViTForImageClassification),\n/* harmony export */   FastViTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FastViTModel),\n/* harmony export */   FastViTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.FastViTPreTrainedModel),\n/* harmony export */   FeatureExtractionPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.FeatureExtractionPipeline),\n/* harmony export */   FeatureExtractor: () => (/* reexport safe */ _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_10__.FeatureExtractor),\n/* harmony export */   FillMaskPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.FillMaskPipeline),\n/* harmony export */   Florence2ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Florence2ForConditionalGeneration),\n/* harmony export */   Florence2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Florence2PreTrainedModel),\n/* harmony export */   Florence2Processor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Florence2Processor),\n/* harmony export */   ForcedBOSTokenLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.ForcedBOSTokenLogitsProcessor),\n/* harmony export */   ForcedEOSTokenLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.ForcedEOSTokenLogitsProcessor),\n/* harmony export */   GLPNFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.GLPNFeatureExtractor),\n/* harmony export */   GLPNForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GLPNForDepthEstimation),\n/* harmony export */   GLPNModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GLPNModel),\n/* harmony export */   GLPNPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GLPNPreTrainedModel),\n/* harmony export */   GPT2LMHeadModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPT2LMHeadModel),\n/* harmony export */   GPT2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPT2Model),\n/* harmony export */   GPT2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPT2PreTrainedModel),\n/* harmony export */   GPT2Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.GPT2Tokenizer),\n/* harmony export */   GPTBigCodeForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTBigCodeForCausalLM),\n/* harmony export */   GPTBigCodeModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTBigCodeModel),\n/* harmony export */   GPTBigCodePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTBigCodePreTrainedModel),\n/* harmony export */   GPTJForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTJForCausalLM),\n/* harmony export */   GPTJModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTJModel),\n/* harmony export */   GPTJPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTJPreTrainedModel),\n/* harmony export */   GPTNeoForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoForCausalLM),\n/* harmony export */   GPTNeoModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoModel),\n/* harmony export */   GPTNeoPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoPreTrainedModel),\n/* harmony export */   GPTNeoXForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoXForCausalLM),\n/* harmony export */   GPTNeoXModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoXModel),\n/* harmony export */   GPTNeoXPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GPTNeoXPreTrainedModel),\n/* harmony export */   GPTNeoXTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.GPTNeoXTokenizer),\n/* harmony export */   Gemma2ForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Gemma2ForCausalLM),\n/* harmony export */   Gemma2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Gemma2Model),\n/* harmony export */   Gemma2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Gemma2PreTrainedModel),\n/* harmony export */   GemmaForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GemmaForCausalLM),\n/* harmony export */   GemmaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GemmaModel),\n/* harmony export */   GemmaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GemmaPreTrainedModel),\n/* harmony export */   GemmaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.GemmaTokenizer),\n/* harmony export */   GlmForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GlmForCausalLM),\n/* harmony export */   GlmModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GlmModel),\n/* harmony export */   GlmPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GlmPreTrainedModel),\n/* harmony export */   GraniteForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GraniteForCausalLM),\n/* harmony export */   GraniteModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GraniteModel),\n/* harmony export */   GranitePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GranitePreTrainedModel),\n/* harmony export */   Grok1Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.Grok1Tokenizer),\n/* harmony export */   GroundingDinoForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GroundingDinoForObjectDetection),\n/* harmony export */   GroundingDinoImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.GroundingDinoImageProcessor),\n/* harmony export */   GroundingDinoPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GroundingDinoPreTrainedModel),\n/* harmony export */   GroundingDinoProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.GroundingDinoProcessor),\n/* harmony export */   GroupViTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GroupViTModel),\n/* harmony export */   GroupViTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.GroupViTPreTrainedModel),\n/* harmony export */   HeliumForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HeliumForCausalLM),\n/* harmony export */   HeliumModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HeliumModel),\n/* harmony export */   HeliumPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HeliumPreTrainedModel),\n/* harmony export */   HerbertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.HerbertTokenizer),\n/* harmony export */   HieraForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HieraForImageClassification),\n/* harmony export */   HieraModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HieraModel),\n/* harmony export */   HieraPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HieraPreTrainedModel),\n/* harmony export */   HubertForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HubertForCTC),\n/* harmony export */   HubertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HubertForSequenceClassification),\n/* harmony export */   HubertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HubertModel),\n/* harmony export */   HubertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.HubertPreTrainedModel),\n/* harmony export */   IJepaForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.IJepaForImageClassification),\n/* harmony export */   IJepaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.IJepaModel),\n/* harmony export */   IJepaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.IJepaPreTrainedModel),\n/* harmony export */   Idefics3ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Idefics3ForConditionalGeneration),\n/* harmony export */   Idefics3ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Idefics3ImageProcessor),\n/* harmony export */   Idefics3PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Idefics3PreTrainedModel),\n/* harmony export */   Idefics3Processor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Idefics3Processor),\n/* harmony export */   ImageClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ImageClassificationPipeline),\n/* harmony export */   ImageFeatureExtractionPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ImageFeatureExtractionPipeline),\n/* harmony export */   ImageFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.ImageFeatureExtractor),\n/* harmony export */   ImageMattingOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ImageMattingOutput),\n/* harmony export */   ImageProcessor: () => (/* reexport safe */ _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_13__.ImageProcessor),\n/* harmony export */   ImageSegmentationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ImageSegmentationPipeline),\n/* harmony export */   ImageToImagePipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ImageToImagePipeline),\n/* harmony export */   ImageToTextPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ImageToTextPipeline),\n/* harmony export */   InterruptableStoppingCriteria: () => (/* reexport safe */ _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__.InterruptableStoppingCriteria),\n/* harmony export */   JAISLMHeadModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JAISLMHeadModel),\n/* harmony export */   JAISModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JAISModel),\n/* harmony export */   JAISPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JAISPreTrainedModel),\n/* harmony export */   JinaCLIPImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.JinaCLIPImageProcessor),\n/* harmony export */   JinaCLIPModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JinaCLIPModel),\n/* harmony export */   JinaCLIPPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JinaCLIPPreTrainedModel),\n/* harmony export */   JinaCLIPProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.JinaCLIPProcessor),\n/* harmony export */   JinaCLIPTextModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JinaCLIPTextModel),\n/* harmony export */   JinaCLIPVisionModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.JinaCLIPVisionModel),\n/* harmony export */   LiteWhisperForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LiteWhisperForConditionalGeneration),\n/* harmony export */   LlamaForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlamaForCausalLM),\n/* harmony export */   LlamaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlamaModel),\n/* harmony export */   LlamaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlamaPreTrainedModel),\n/* harmony export */   LlamaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.LlamaTokenizer),\n/* harmony export */   LlavaForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlavaForConditionalGeneration),\n/* harmony export */   LlavaOnevisionForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlavaOnevisionForConditionalGeneration),\n/* harmony export */   LlavaOnevisionImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.LlavaOnevisionImageProcessor),\n/* harmony export */   LlavaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LlavaPreTrainedModel),\n/* harmony export */   LogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.LogitsProcessor),\n/* harmony export */   LogitsProcessorList: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.LogitsProcessorList),\n/* harmony export */   LogitsWarper: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.LogitsWarper),\n/* harmony export */   LongT5ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LongT5ForConditionalGeneration),\n/* harmony export */   LongT5Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LongT5Model),\n/* harmony export */   LongT5PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.LongT5PreTrainedModel),\n/* harmony export */   M2M100ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.M2M100ForConditionalGeneration),\n/* harmony export */   M2M100Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.M2M100Model),\n/* harmony export */   M2M100PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.M2M100PreTrainedModel),\n/* harmony export */   M2M100Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.M2M100Tokenizer),\n/* harmony export */   MBart50Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MBart50Tokenizer),\n/* harmony export */   MBartForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MBartForCausalLM),\n/* harmony export */   MBartForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MBartForConditionalGeneration),\n/* harmony export */   MBartForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MBartForSequenceClassification),\n/* harmony export */   MBartModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MBartModel),\n/* harmony export */   MBartPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MBartPreTrainedModel),\n/* harmony export */   MBartTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MBartTokenizer),\n/* harmony export */   MPNetForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetForMaskedLM),\n/* harmony export */   MPNetForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetForQuestionAnswering),\n/* harmony export */   MPNetForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetForSequenceClassification),\n/* harmony export */   MPNetForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetForTokenClassification),\n/* harmony export */   MPNetModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetModel),\n/* harmony export */   MPNetPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MPNetPreTrainedModel),\n/* harmony export */   MPNetTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MPNetTokenizer),\n/* harmony export */   MT5ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MT5ForConditionalGeneration),\n/* harmony export */   MT5Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MT5Model),\n/* harmony export */   MT5PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MT5PreTrainedModel),\n/* harmony export */   MarianMTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MarianMTModel),\n/* harmony export */   MarianModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MarianModel),\n/* harmony export */   MarianPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MarianPreTrainedModel),\n/* harmony export */   MarianTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MarianTokenizer),\n/* harmony export */   Mask2FormerImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Mask2FormerImageProcessor),\n/* harmony export */   MaskFormerFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MaskFormerFeatureExtractor),\n/* harmony export */   MaskFormerForInstanceSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MaskFormerForInstanceSegmentation),\n/* harmony export */   MaskFormerImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MaskFormerImageProcessor),\n/* harmony export */   MaskFormerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MaskFormerModel),\n/* harmony export */   MaskFormerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MaskFormerPreTrainedModel),\n/* harmony export */   MaskedLMOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MaskedLMOutput),\n/* harmony export */   MaxLengthCriteria: () => (/* reexport safe */ _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__.MaxLengthCriteria),\n/* harmony export */   MgpstrForSceneTextRecognition: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MgpstrForSceneTextRecognition),\n/* harmony export */   MgpstrModelOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MgpstrModelOutput),\n/* harmony export */   MgpstrPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MgpstrPreTrainedModel),\n/* harmony export */   MgpstrProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.MgpstrProcessor),\n/* harmony export */   MgpstrTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MgpstrTokenizer),\n/* harmony export */   MimiDecoderModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiDecoderModel),\n/* harmony export */   MimiDecoderOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiDecoderOutput),\n/* harmony export */   MimiEncoderModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiEncoderModel),\n/* harmony export */   MimiEncoderOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiEncoderOutput),\n/* harmony export */   MimiModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiModel),\n/* harmony export */   MimiPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MimiPreTrainedModel),\n/* harmony export */   MinLengthLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.MinLengthLogitsProcessor),\n/* harmony export */   MinNewTokensLengthLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.MinNewTokensLengthLogitsProcessor),\n/* harmony export */   MistralForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MistralForCausalLM),\n/* harmony export */   MistralModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MistralModel),\n/* harmony export */   MistralPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MistralPreTrainedModel),\n/* harmony export */   MobileBertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileBertForMaskedLM),\n/* harmony export */   MobileBertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileBertForQuestionAnswering),\n/* harmony export */   MobileBertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileBertForSequenceClassification),\n/* harmony export */   MobileBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileBertModel),\n/* harmony export */   MobileBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileBertPreTrainedModel),\n/* harmony export */   MobileBertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.MobileBertTokenizer),\n/* harmony export */   MobileLLMForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileLLMForCausalLM),\n/* harmony export */   MobileLLMModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileLLMModel),\n/* harmony export */   MobileLLMPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileLLMPreTrainedModel),\n/* harmony export */   MobileNetV1FeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV1FeatureExtractor),\n/* harmony export */   MobileNetV1ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV1ForImageClassification),\n/* harmony export */   MobileNetV1ForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV1ForSemanticSegmentation),\n/* harmony export */   MobileNetV1ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV1ImageProcessor),\n/* harmony export */   MobileNetV1Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV1Model),\n/* harmony export */   MobileNetV1PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV1PreTrainedModel),\n/* harmony export */   MobileNetV2FeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV2FeatureExtractor),\n/* harmony export */   MobileNetV2ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV2ForImageClassification),\n/* harmony export */   MobileNetV2ForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV2ForSemanticSegmentation),\n/* harmony export */   MobileNetV2ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV2ImageProcessor),\n/* harmony export */   MobileNetV2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV2Model),\n/* harmony export */   MobileNetV2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV2PreTrainedModel),\n/* harmony export */   MobileNetV3FeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV3FeatureExtractor),\n/* harmony export */   MobileNetV3ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV3ForImageClassification),\n/* harmony export */   MobileNetV3ForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV3ForSemanticSegmentation),\n/* harmony export */   MobileNetV3ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV3ImageProcessor),\n/* harmony export */   MobileNetV3Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV3Model),\n/* harmony export */   MobileNetV3PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV3PreTrainedModel),\n/* harmony export */   MobileNetV4FeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV4FeatureExtractor),\n/* harmony export */   MobileNetV4ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV4ForImageClassification),\n/* harmony export */   MobileNetV4ForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV4ForSemanticSegmentation),\n/* harmony export */   MobileNetV4ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileNetV4ImageProcessor),\n/* harmony export */   MobileNetV4Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV4Model),\n/* harmony export */   MobileNetV4PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileNetV4PreTrainedModel),\n/* harmony export */   MobileViTFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileViTFeatureExtractor),\n/* harmony export */   MobileViTForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTForImageClassification),\n/* harmony export */   MobileViTImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.MobileViTImageProcessor),\n/* harmony export */   MobileViTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTModel),\n/* harmony export */   MobileViTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTPreTrainedModel),\n/* harmony export */   MobileViTV2ForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTV2ForImageClassification),\n/* harmony export */   MobileViTV2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTV2Model),\n/* harmony export */   MobileViTV2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MobileViTV2PreTrainedModel),\n/* harmony export */   ModelOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModelOutput),\n/* harmony export */   ModernBertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModernBertForMaskedLM),\n/* harmony export */   ModernBertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModernBertForSequenceClassification),\n/* harmony export */   ModernBertForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModernBertForTokenClassification),\n/* harmony export */   ModernBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModernBertModel),\n/* harmony export */   ModernBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ModernBertPreTrainedModel),\n/* harmony export */   Moondream1ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Moondream1ForConditionalGeneration),\n/* harmony export */   MoonshineFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.MoonshineFeatureExtractor),\n/* harmony export */   MoonshineForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MoonshineForConditionalGeneration),\n/* harmony export */   MoonshineModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MoonshineModel),\n/* harmony export */   MoonshinePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MoonshinePreTrainedModel),\n/* harmony export */   MoonshineProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.MoonshineProcessor),\n/* harmony export */   MptForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MptForCausalLM),\n/* harmony export */   MptModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MptModel),\n/* harmony export */   MptPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MptPreTrainedModel),\n/* harmony export */   MultiModalityCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MultiModalityCausalLM),\n/* harmony export */   MultiModalityPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MultiModalityPreTrainedModel),\n/* harmony export */   MusicgenForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MusicgenForCausalLM),\n/* harmony export */   MusicgenForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MusicgenForConditionalGeneration),\n/* harmony export */   MusicgenModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MusicgenModel),\n/* harmony export */   MusicgenPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.MusicgenPreTrainedModel),\n/* harmony export */   NllbTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.NllbTokenizer),\n/* harmony export */   NoBadWordsLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.NoBadWordsLogitsProcessor),\n/* harmony export */   NoRepeatNGramLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.NoRepeatNGramLogitsProcessor),\n/* harmony export */   NomicBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.NomicBertModel),\n/* harmony export */   NomicBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.NomicBertPreTrainedModel),\n/* harmony export */   NougatImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.NougatImageProcessor),\n/* harmony export */   NougatTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.NougatTokenizer),\n/* harmony export */   OPTForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OPTForCausalLM),\n/* harmony export */   OPTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OPTModel),\n/* harmony export */   OPTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OPTPreTrainedModel),\n/* harmony export */   ObjectDetectionPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ObjectDetectionPipeline),\n/* harmony export */   Olmo2ForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Olmo2ForCausalLM),\n/* harmony export */   Olmo2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Olmo2Model),\n/* harmony export */   Olmo2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Olmo2PreTrainedModel),\n/* harmony export */   OlmoForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OlmoForCausalLM),\n/* harmony export */   OlmoModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OlmoModel),\n/* harmony export */   OlmoPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OlmoPreTrainedModel),\n/* harmony export */   OpenELMForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OpenELMForCausalLM),\n/* harmony export */   OpenELMModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OpenELMModel),\n/* harmony export */   OpenELMPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OpenELMPreTrainedModel),\n/* harmony export */   OwlViTFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.OwlViTFeatureExtractor),\n/* harmony export */   OwlViTForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OwlViTForObjectDetection),\n/* harmony export */   OwlViTImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.OwlViTImageProcessor),\n/* harmony export */   OwlViTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OwlViTModel),\n/* harmony export */   OwlViTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.OwlViTPreTrainedModel),\n/* harmony export */   OwlViTProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.OwlViTProcessor),\n/* harmony export */   Owlv2ForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Owlv2ForObjectDetection),\n/* harmony export */   Owlv2ImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Owlv2ImageProcessor),\n/* harmony export */   Owlv2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Owlv2Model),\n/* harmony export */   Owlv2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Owlv2PreTrainedModel),\n/* harmony export */   PaliGemmaForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PaliGemmaForConditionalGeneration),\n/* harmony export */   PaliGemmaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PaliGemmaPreTrainedModel),\n/* harmony export */   PaliGemmaProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.PaliGemmaProcessor),\n/* harmony export */   PatchTSMixerForPrediction: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSMixerForPrediction),\n/* harmony export */   PatchTSMixerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSMixerModel),\n/* harmony export */   PatchTSMixerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSMixerPreTrainedModel),\n/* harmony export */   PatchTSTForPrediction: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSTForPrediction),\n/* harmony export */   PatchTSTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSTModel),\n/* harmony export */   PatchTSTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PatchTSTPreTrainedModel),\n/* harmony export */   Phi3ForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Phi3ForCausalLM),\n/* harmony export */   Phi3Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Phi3Model),\n/* harmony export */   Phi3PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Phi3PreTrainedModel),\n/* harmony export */   Phi3VForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Phi3VForCausalLM),\n/* harmony export */   Phi3VImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Phi3VImageProcessor),\n/* harmony export */   Phi3VPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Phi3VPreTrainedModel),\n/* harmony export */   Phi3VProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Phi3VProcessor),\n/* harmony export */   PhiForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PhiForCausalLM),\n/* harmony export */   PhiModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PhiModel),\n/* harmony export */   PhiPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PhiPreTrainedModel),\n/* harmony export */   Pipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.Pipeline),\n/* harmony export */   PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PreTrainedModel),\n/* harmony export */   PreTrainedTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.PreTrainedTokenizer),\n/* harmony export */   PretrainedConfig: () => (/* reexport safe */ _configs_js__WEBPACK_IMPORTED_MODULE_4__.PretrainedConfig),\n/* harmony export */   PretrainedMixin: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PretrainedMixin),\n/* harmony export */   Processor: () => (/* reexport safe */ _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_16__.Processor),\n/* harmony export */   PvtForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PvtForImageClassification),\n/* harmony export */   PvtImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.PvtImageProcessor),\n/* harmony export */   PvtModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PvtModel),\n/* harmony export */   PvtPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PvtPreTrainedModel),\n/* harmony export */   PyAnnoteFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.PyAnnoteFeatureExtractor),\n/* harmony export */   PyAnnoteForAudioFrameClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PyAnnoteForAudioFrameClassification),\n/* harmony export */   PyAnnoteModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PyAnnoteModel),\n/* harmony export */   PyAnnotePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.PyAnnotePreTrainedModel),\n/* harmony export */   PyAnnoteProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.PyAnnoteProcessor),\n/* harmony export */   QuestionAnsweringModelOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.QuestionAnsweringModelOutput),\n/* harmony export */   QuestionAnsweringPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.QuestionAnsweringPipeline),\n/* harmony export */   Qwen2ForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Qwen2ForCausalLM),\n/* harmony export */   Qwen2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Qwen2Model),\n/* harmony export */   Qwen2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Qwen2PreTrainedModel),\n/* harmony export */   Qwen2Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.Qwen2Tokenizer),\n/* harmony export */   Qwen2VLForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Qwen2VLForConditionalGeneration),\n/* harmony export */   Qwen2VLImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Qwen2VLImageProcessor),\n/* harmony export */   Qwen2VLPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Qwen2VLPreTrainedModel),\n/* harmony export */   Qwen2VLProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Qwen2VLProcessor),\n/* harmony export */   RTDetrForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RTDetrForObjectDetection),\n/* harmony export */   RTDetrImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.RTDetrImageProcessor),\n/* harmony export */   RTDetrModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RTDetrModel),\n/* harmony export */   RTDetrObjectDetectionOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RTDetrObjectDetectionOutput),\n/* harmony export */   RTDetrPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RTDetrPreTrainedModel),\n/* harmony export */   RawAudio: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.RawAudio),\n/* harmony export */   RawImage: () => (/* reexport safe */ _utils_image_js__WEBPACK_IMPORTED_MODULE_6__.RawImage),\n/* harmony export */   RawVideo: () => (/* reexport safe */ _utils_video_js__WEBPACK_IMPORTED_MODULE_7__.RawVideo),\n/* harmony export */   RawVideoFrame: () => (/* reexport safe */ _utils_video_js__WEBPACK_IMPORTED_MODULE_7__.RawVideoFrame),\n/* harmony export */   RepetitionPenaltyLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.RepetitionPenaltyLogitsProcessor),\n/* harmony export */   ResNetForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ResNetForImageClassification),\n/* harmony export */   ResNetModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ResNetModel),\n/* harmony export */   ResNetPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ResNetPreTrainedModel),\n/* harmony export */   RoFormerForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerForMaskedLM),\n/* harmony export */   RoFormerForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerForQuestionAnswering),\n/* harmony export */   RoFormerForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerForSequenceClassification),\n/* harmony export */   RoFormerForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerForTokenClassification),\n/* harmony export */   RoFormerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerModel),\n/* harmony export */   RoFormerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RoFormerPreTrainedModel),\n/* harmony export */   RoFormerTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.RoFormerTokenizer),\n/* harmony export */   RobertaForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaForMaskedLM),\n/* harmony export */   RobertaForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaForQuestionAnswering),\n/* harmony export */   RobertaForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaForSequenceClassification),\n/* harmony export */   RobertaForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaForTokenClassification),\n/* harmony export */   RobertaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaModel),\n/* harmony export */   RobertaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.RobertaPreTrainedModel),\n/* harmony export */   RobertaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.RobertaTokenizer),\n/* harmony export */   SamImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.SamImageProcessor),\n/* harmony export */   SamImageSegmentationOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SamImageSegmentationOutput),\n/* harmony export */   SamModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SamModel),\n/* harmony export */   SamPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SamPreTrainedModel),\n/* harmony export */   SamProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.SamProcessor),\n/* harmony export */   SapiensForDepthEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SapiensForDepthEstimation),\n/* harmony export */   SapiensForNormalEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SapiensForNormalEstimation),\n/* harmony export */   SapiensForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SapiensForSemanticSegmentation),\n/* harmony export */   SapiensPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SapiensPreTrainedModel),\n/* harmony export */   SeamlessM4TFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.SeamlessM4TFeatureExtractor),\n/* harmony export */   SegformerFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.SegformerFeatureExtractor),\n/* harmony export */   SegformerForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SegformerForImageClassification),\n/* harmony export */   SegformerForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SegformerForSemanticSegmentation),\n/* harmony export */   SegformerImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.SegformerImageProcessor),\n/* harmony export */   SegformerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SegformerModel),\n/* harmony export */   SegformerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SegformerPreTrainedModel),\n/* harmony export */   Seq2SeqLMOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Seq2SeqLMOutput),\n/* harmony export */   SequenceClassifierOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SequenceClassifierOutput),\n/* harmony export */   SiglipImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.SiglipImageProcessor),\n/* harmony export */   SiglipModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SiglipModel),\n/* harmony export */   SiglipPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SiglipPreTrainedModel),\n/* harmony export */   SiglipTextModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SiglipTextModel),\n/* harmony export */   SiglipTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.SiglipTokenizer),\n/* harmony export */   SiglipVisionModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SiglipVisionModel),\n/* harmony export */   SmolVLMForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SmolVLMForConditionalGeneration),\n/* harmony export */   SmolVLMImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.SmolVLMImageProcessor),\n/* harmony export */   SmolVLMProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.SmolVLMProcessor),\n/* harmony export */   SpeechT5FeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.SpeechT5FeatureExtractor),\n/* harmony export */   SpeechT5ForSpeechToText: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SpeechT5ForSpeechToText),\n/* harmony export */   SpeechT5ForTextToSpeech: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SpeechT5ForTextToSpeech),\n/* harmony export */   SpeechT5HifiGan: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SpeechT5HifiGan),\n/* harmony export */   SpeechT5Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SpeechT5Model),\n/* harmony export */   SpeechT5PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SpeechT5PreTrainedModel),\n/* harmony export */   SpeechT5Processor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.SpeechT5Processor),\n/* harmony export */   SpeechT5Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.SpeechT5Tokenizer),\n/* harmony export */   SqueezeBertForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SqueezeBertForMaskedLM),\n/* harmony export */   SqueezeBertForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SqueezeBertForQuestionAnswering),\n/* harmony export */   SqueezeBertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SqueezeBertForSequenceClassification),\n/* harmony export */   SqueezeBertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SqueezeBertModel),\n/* harmony export */   SqueezeBertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SqueezeBertPreTrainedModel),\n/* harmony export */   SqueezeBertTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.SqueezeBertTokenizer),\n/* harmony export */   StableLmForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.StableLmForCausalLM),\n/* harmony export */   StableLmModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.StableLmModel),\n/* harmony export */   StableLmPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.StableLmPreTrainedModel),\n/* harmony export */   Starcoder2ForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Starcoder2ForCausalLM),\n/* harmony export */   Starcoder2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Starcoder2Model),\n/* harmony export */   Starcoder2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Starcoder2PreTrainedModel),\n/* harmony export */   StoppingCriteria: () => (/* reexport safe */ _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__.StoppingCriteria),\n/* harmony export */   StoppingCriteriaList: () => (/* reexport safe */ _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__.StoppingCriteriaList),\n/* harmony export */   StyleTextToSpeech2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.StyleTextToSpeech2Model),\n/* harmony export */   StyleTextToSpeech2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.StyleTextToSpeech2PreTrainedModel),\n/* harmony export */   SummarizationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.SummarizationPipeline),\n/* harmony export */   SuppressTokensAtBeginLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.SuppressTokensAtBeginLogitsProcessor),\n/* harmony export */   Swin2SRForImageSuperResolution: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Swin2SRForImageSuperResolution),\n/* harmony export */   Swin2SRImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.Swin2SRImageProcessor),\n/* harmony export */   Swin2SRModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Swin2SRModel),\n/* harmony export */   Swin2SRPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Swin2SRPreTrainedModel),\n/* harmony export */   SwinForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SwinForImageClassification),\n/* harmony export */   SwinForSemanticSegmentation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SwinForSemanticSegmentation),\n/* harmony export */   SwinModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SwinModel),\n/* harmony export */   SwinPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.SwinPreTrainedModel),\n/* harmony export */   T5ForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.T5ForConditionalGeneration),\n/* harmony export */   T5Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.T5Model),\n/* harmony export */   T5PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.T5PreTrainedModel),\n/* harmony export */   T5Tokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.T5Tokenizer),\n/* harmony export */   TableTransformerForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TableTransformerForObjectDetection),\n/* harmony export */   TableTransformerModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TableTransformerModel),\n/* harmony export */   TableTransformerObjectDetectionOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TableTransformerObjectDetectionOutput),\n/* harmony export */   TableTransformerPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TableTransformerPreTrainedModel),\n/* harmony export */   TemperatureLogitsWarper: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.TemperatureLogitsWarper),\n/* harmony export */   Tensor: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.Tensor),\n/* harmony export */   Text2TextGenerationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.Text2TextGenerationPipeline),\n/* harmony export */   TextClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.TextClassificationPipeline),\n/* harmony export */   TextGenerationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.TextGenerationPipeline),\n/* harmony export */   TextStreamer: () => (/* reexport safe */ _generation_streamers_js__WEBPACK_IMPORTED_MODULE_19__.TextStreamer),\n/* harmony export */   TextToAudioPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.TextToAudioPipeline),\n/* harmony export */   TokenClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.TokenClassificationPipeline),\n/* harmony export */   TokenClassifierOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TokenClassifierOutput),\n/* harmony export */   TokenizerModel: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.TokenizerModel),\n/* harmony export */   TopKLogitsWarper: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.TopKLogitsWarper),\n/* harmony export */   TopPLogitsWarper: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.TopPLogitsWarper),\n/* harmony export */   TrOCRForCausalLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TrOCRForCausalLM),\n/* harmony export */   TrOCRPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.TrOCRPreTrainedModel),\n/* harmony export */   TranslationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.TranslationPipeline),\n/* harmony export */   UltravoxModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UltravoxModel),\n/* harmony export */   UltravoxPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UltravoxPreTrainedModel),\n/* harmony export */   UltravoxProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.UltravoxProcessor),\n/* harmony export */   UniSpeechForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechForCTC),\n/* harmony export */   UniSpeechForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechForSequenceClassification),\n/* harmony export */   UniSpeechModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechModel),\n/* harmony export */   UniSpeechPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechPreTrainedModel),\n/* harmony export */   UniSpeechSatForAudioFrameClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechSatForAudioFrameClassification),\n/* harmony export */   UniSpeechSatForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechSatForCTC),\n/* harmony export */   UniSpeechSatForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechSatForSequenceClassification),\n/* harmony export */   UniSpeechSatModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechSatModel),\n/* harmony export */   UniSpeechSatPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.UniSpeechSatPreTrainedModel),\n/* harmony export */   VLChatProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.VLChatProcessor),\n/* harmony export */   VLMImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.VLMImageProcessor),\n/* harmony export */   ViTFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.ViTFeatureExtractor),\n/* harmony export */   ViTForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTForImageClassification),\n/* harmony export */   ViTImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.ViTImageProcessor),\n/* harmony export */   ViTMAEModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTMAEModel),\n/* harmony export */   ViTMAEPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTMAEPreTrainedModel),\n/* harmony export */   ViTMSNForImageClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTMSNForImageClassification),\n/* harmony export */   ViTMSNModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTMSNModel),\n/* harmony export */   ViTMSNPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTMSNPreTrainedModel),\n/* harmony export */   ViTModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTModel),\n/* harmony export */   ViTPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.ViTPreTrainedModel),\n/* harmony export */   VisionEncoderDecoderModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VisionEncoderDecoderModel),\n/* harmony export */   VitMatteForImageMatting: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitMatteForImageMatting),\n/* harmony export */   VitMatteImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.VitMatteImageProcessor),\n/* harmony export */   VitMattePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitMattePreTrainedModel),\n/* harmony export */   VitPoseForPoseEstimation: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitPoseForPoseEstimation),\n/* harmony export */   VitPoseImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.VitPoseImageProcessor),\n/* harmony export */   VitPosePreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitPosePreTrainedModel),\n/* harmony export */   VitsModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitsModel),\n/* harmony export */   VitsModelOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitsModelOutput),\n/* harmony export */   VitsPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.VitsPreTrainedModel),\n/* harmony export */   VitsTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.VitsTokenizer),\n/* harmony export */   Wav2Vec2BertForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2BertForCTC),\n/* harmony export */   Wav2Vec2BertForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2BertForSequenceClassification),\n/* harmony export */   Wav2Vec2BertModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2BertModel),\n/* harmony export */   Wav2Vec2BertPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2BertPreTrainedModel),\n/* harmony export */   Wav2Vec2CTCTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.Wav2Vec2CTCTokenizer),\n/* harmony export */   Wav2Vec2FeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.Wav2Vec2FeatureExtractor),\n/* harmony export */   Wav2Vec2ForAudioFrameClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2ForAudioFrameClassification),\n/* harmony export */   Wav2Vec2ForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2ForCTC),\n/* harmony export */   Wav2Vec2ForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2ForSequenceClassification),\n/* harmony export */   Wav2Vec2Model: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2Model),\n/* harmony export */   Wav2Vec2PreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.Wav2Vec2PreTrainedModel),\n/* harmony export */   Wav2Vec2Processor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Wav2Vec2Processor),\n/* harmony export */   Wav2Vec2ProcessorWithLM: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.Wav2Vec2ProcessorWithLM),\n/* harmony export */   WavLMForAudioFrameClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMForAudioFrameClassification),\n/* harmony export */   WavLMForCTC: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMForCTC),\n/* harmony export */   WavLMForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMForSequenceClassification),\n/* harmony export */   WavLMForXVector: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMForXVector),\n/* harmony export */   WavLMModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMModel),\n/* harmony export */   WavLMPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WavLMPreTrainedModel),\n/* harmony export */   WeSpeakerFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.WeSpeakerFeatureExtractor),\n/* harmony export */   WeSpeakerResNetModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WeSpeakerResNetModel),\n/* harmony export */   WeSpeakerResNetPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WeSpeakerResNetPreTrainedModel),\n/* harmony export */   WhisperFeatureExtractor: () => (/* reexport safe */ _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__.WhisperFeatureExtractor),\n/* harmony export */   WhisperForConditionalGeneration: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WhisperForConditionalGeneration),\n/* harmony export */   WhisperModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WhisperModel),\n/* harmony export */   WhisperPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.WhisperPreTrainedModel),\n/* harmony export */   WhisperProcessor: () => (/* reexport safe */ _models_processors_js__WEBPACK_IMPORTED_MODULE_17__.WhisperProcessor),\n/* harmony export */   WhisperTextStreamer: () => (/* reexport safe */ _generation_streamers_js__WEBPACK_IMPORTED_MODULE_19__.WhisperTextStreamer),\n/* harmony export */   WhisperTimeStampLogitsProcessor: () => (/* reexport safe */ _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__.WhisperTimeStampLogitsProcessor),\n/* harmony export */   WhisperTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.WhisperTokenizer),\n/* harmony export */   XLMForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMForQuestionAnswering),\n/* harmony export */   XLMForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMForSequenceClassification),\n/* harmony export */   XLMForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMForTokenClassification),\n/* harmony export */   XLMModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMModel),\n/* harmony export */   XLMPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMPreTrainedModel),\n/* harmony export */   XLMRobertaForMaskedLM: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaForMaskedLM),\n/* harmony export */   XLMRobertaForQuestionAnswering: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaForQuestionAnswering),\n/* harmony export */   XLMRobertaForSequenceClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaForSequenceClassification),\n/* harmony export */   XLMRobertaForTokenClassification: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaForTokenClassification),\n/* harmony export */   XLMRobertaModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaModel),\n/* harmony export */   XLMRobertaPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMRobertaPreTrainedModel),\n/* harmony export */   XLMRobertaTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.XLMRobertaTokenizer),\n/* harmony export */   XLMTokenizer: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.XLMTokenizer),\n/* harmony export */   XLMWithLMHeadModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XLMWithLMHeadModel),\n/* harmony export */   XVectorOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.XVectorOutput),\n/* harmony export */   YolosFeatureExtractor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.YolosFeatureExtractor),\n/* harmony export */   YolosForObjectDetection: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.YolosForObjectDetection),\n/* harmony export */   YolosImageProcessor: () => (/* reexport safe */ _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__.YolosImageProcessor),\n/* harmony export */   YolosModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.YolosModel),\n/* harmony export */   YolosObjectDetectionOutput: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.YolosObjectDetectionOutput),\n/* harmony export */   YolosPreTrainedModel: () => (/* reexport safe */ _models_js__WEBPACK_IMPORTED_MODULE_2__.YolosPreTrainedModel),\n/* harmony export */   ZeroShotAudioClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ZeroShotAudioClassificationPipeline),\n/* harmony export */   ZeroShotClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ZeroShotClassificationPipeline),\n/* harmony export */   ZeroShotImageClassificationPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ZeroShotImageClassificationPipeline),\n/* harmony export */   ZeroShotObjectDetectionPipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.ZeroShotObjectDetectionPipeline),\n/* harmony export */   bankers_round: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.bankers_round),\n/* harmony export */   cat: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.cat),\n/* harmony export */   cos_sim: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.cos_sim),\n/* harmony export */   dot: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.dot),\n/* harmony export */   dynamic_time_warping: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.dynamic_time_warping),\n/* harmony export */   env: () => (/* reexport safe */ _env_js__WEBPACK_IMPORTED_MODULE_0__.env),\n/* harmony export */   full: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.full),\n/* harmony export */   full_like: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.full_like),\n/* harmony export */   getKeyValueShapes: () => (/* reexport safe */ _configs_js__WEBPACK_IMPORTED_MODULE_4__.getKeyValueShapes),\n/* harmony export */   hamming: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.hamming),\n/* harmony export */   hanning: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.hanning),\n/* harmony export */   interpolate: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.interpolate),\n/* harmony export */   interpolate_4d: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.interpolate_4d),\n/* harmony export */   interpolate_data: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.interpolate_data),\n/* harmony export */   is_chinese_char: () => (/* reexport safe */ _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__.is_chinese_char),\n/* harmony export */   layer_norm: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.layer_norm),\n/* harmony export */   load_image: () => (/* reexport safe */ _utils_image_js__WEBPACK_IMPORTED_MODULE_6__.load_image),\n/* harmony export */   load_video: () => (/* reexport safe */ _utils_video_js__WEBPACK_IMPORTED_MODULE_7__.load_video),\n/* harmony export */   log_softmax: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.log_softmax),\n/* harmony export */   magnitude: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.magnitude),\n/* harmony export */   matmul: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.matmul),\n/* harmony export */   max: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.max),\n/* harmony export */   mean: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.mean),\n/* harmony export */   mean_pooling: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.mean_pooling),\n/* harmony export */   medianFilter: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.medianFilter),\n/* harmony export */   mel_filter_bank: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.mel_filter_bank),\n/* harmony export */   min: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.min),\n/* harmony export */   ones: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.ones),\n/* harmony export */   ones_like: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.ones_like),\n/* harmony export */   permute: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.permute),\n/* harmony export */   permute_data: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.permute_data),\n/* harmony export */   pipeline: () => (/* reexport safe */ _pipelines_js__WEBPACK_IMPORTED_MODULE_1__.pipeline),\n/* harmony export */   quantize_embeddings: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.quantize_embeddings),\n/* harmony export */   rand: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.rand),\n/* harmony export */   read_audio: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.read_audio),\n/* harmony export */   rfft: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.rfft),\n/* harmony export */   round: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.round),\n/* harmony export */   slice: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.slice),\n/* harmony export */   softmax: () => (/* reexport safe */ _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__.softmax),\n/* harmony export */   spectrogram: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.spectrogram),\n/* harmony export */   stack: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.stack),\n/* harmony export */   std_mean: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.std_mean),\n/* harmony export */   topk: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.topk),\n/* harmony export */   window_function: () => (/* reexport safe */ _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__.window_function),\n/* harmony export */   zeros: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.zeros),\n/* harmony export */   zeros_like: () => (/* reexport safe */ _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__.zeros_like)\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"./src/env.js\");\n/* harmony import */ var _pipelines_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipelines.js */ \"./src/pipelines.js\");\n/* harmony import */ var _models_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models.js */ \"./src/models.js\");\n/* harmony import */ var _tokenizers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tokenizers.js */ \"./src/tokenizers.js\");\n/* harmony import */ var _configs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./configs.js */ \"./src/configs.js\");\n/* harmony import */ var _utils_audio_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/audio.js */ \"./src/utils/audio.js\");\n/* harmony import */ var _utils_image_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/image.js */ \"./src/utils/image.js\");\n/* harmony import */ var _utils_video_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/video.js */ \"./src/utils/video.js\");\n/* harmony import */ var _utils_tensor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/tensor.js */ \"./src/utils/tensor.js\");\n/* harmony import */ var _utils_maths_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/maths.js */ \"./src/utils/maths.js\");\n/* harmony import */ var _base_feature_extraction_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base/feature_extraction_utils.js */ \"./src/base/feature_extraction_utils.js\");\n/* harmony import */ var _models_feature_extractors_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./models/feature_extractors.js */ \"./src/models/feature_extractors.js\");\n/* harmony import */ var _models_auto_feature_extraction_auto_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./models/auto/feature_extraction_auto.js */ \"./src/models/auto/feature_extraction_auto.js\");\n/* harmony import */ var _base_image_processors_utils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./base/image_processors_utils.js */ \"./src/base/image_processors_utils.js\");\n/* harmony import */ var _models_image_processors_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models/image_processors.js */ \"./src/models/image_processors.js\");\n/* harmony import */ var _models_auto_image_processing_auto_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./models/auto/image_processing_auto.js */ \"./src/models/auto/image_processing_auto.js\");\n/* harmony import */ var _base_processing_utils_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./base/processing_utils.js */ \"./src/base/processing_utils.js\");\n/* harmony import */ var _models_processors_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./models/processors.js */ \"./src/models/processors.js\");\n/* harmony import */ var _models_auto_processing_auto_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./models/auto/processing_auto.js */ \"./src/models/auto/processing_auto.js\");\n/* harmony import */ var _generation_streamers_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./generation/streamers.js */ \"./src/generation/streamers.js\");\n/* harmony import */ var _generation_stopping_criteria_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./generation/stopping_criteria.js */ \"./src/generation/stopping_criteria.js\");\n/* harmony import */ var _generation_logits_process_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./generation/logits_process.js */ \"./src/generation/logits_process.js\");\n/**\n * @file Entry point for the Transformers.js library. Only the exports from this file\n * are available to the end user, and are grouped as follows:\n * \n * 1. [Pipelines](./pipelines)\n * 2. [Environment variables](./env)\n * 3. [Models](./models)\n * 4. [Tokenizers](./tokenizers)\n * 5. [Processors](./processors)\n * \n * @module transformers\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n})();\n\nvar __webpack_exports__ASTFeatureExtractor = __webpack_exports__.ASTFeatureExtractor;\nvar __webpack_exports__ASTForAudioClassification = __webpack_exports__.ASTForAudioClassification;\nvar __webpack_exports__ASTModel = __webpack_exports__.ASTModel;\nvar __webpack_exports__ASTPreTrainedModel = __webpack_exports__.ASTPreTrainedModel;\nvar __webpack_exports__AlbertForMaskedLM = __webpack_exports__.AlbertForMaskedLM;\nvar __webpack_exports__AlbertForQuestionAnswering = __webpack_exports__.AlbertForQuestionAnswering;\nvar __webpack_exports__AlbertForSequenceClassification = __webpack_exports__.AlbertForSequenceClassification;\nvar __webpack_exports__AlbertModel = __webpack_exports__.AlbertModel;\nvar __webpack_exports__AlbertPreTrainedModel = __webpack_exports__.AlbertPreTrainedModel;\nvar __webpack_exports__AlbertTokenizer = __webpack_exports__.AlbertTokenizer;\nvar __webpack_exports__AudioClassificationPipeline = __webpack_exports__.AudioClassificationPipeline;\nvar __webpack_exports__AutoConfig = __webpack_exports__.AutoConfig;\nvar __webpack_exports__AutoFeatureExtractor = __webpack_exports__.AutoFeatureExtractor;\nvar __webpack_exports__AutoImageProcessor = __webpack_exports__.AutoImageProcessor;\nvar __webpack_exports__AutoModel = __webpack_exports__.AutoModel;\nvar __webpack_exports__AutoModelForAudioClassification = __webpack_exports__.AutoModelForAudioClassification;\nvar __webpack_exports__AutoModelForAudioFrameClassification = __webpack_exports__.AutoModelForAudioFrameClassification;\nvar __webpack_exports__AutoModelForAudioTextToText = __webpack_exports__.AutoModelForAudioTextToText;\nvar __webpack_exports__AutoModelForCTC = __webpack_exports__.AutoModelForCTC;\nvar __webpack_exports__AutoModelForCausalLM = __webpack_exports__.AutoModelForCausalLM;\nvar __webpack_exports__AutoModelForDepthEstimation = __webpack_exports__.AutoModelForDepthEstimation;\nvar __webpack_exports__AutoModelForDocumentQuestionAnswering = __webpack_exports__.AutoModelForDocumentQuestionAnswering;\nvar __webpack_exports__AutoModelForImageClassification = __webpack_exports__.AutoModelForImageClassification;\nvar __webpack_exports__AutoModelForImageFeatureExtraction = __webpack_exports__.AutoModelForImageFeatureExtraction;\nvar __webpack_exports__AutoModelForImageMatting = __webpack_exports__.AutoModelForImageMatting;\nvar __webpack_exports__AutoModelForImageSegmentation = __webpack_exports__.AutoModelForImageSegmentation;\nvar __webpack_exports__AutoModelForImageTextToText = __webpack_exports__.AutoModelForImageTextToText;\nvar __webpack_exports__AutoModelForImageToImage = __webpack_exports__.AutoModelForImageToImage;\nvar __webpack_exports__AutoModelForMaskGeneration = __webpack_exports__.AutoModelForMaskGeneration;\nvar __webpack_exports__AutoModelForMaskedLM = __webpack_exports__.AutoModelForMaskedLM;\nvar __webpack_exports__AutoModelForNormalEstimation = __webpack_exports__.AutoModelForNormalEstimation;\nvar __webpack_exports__AutoModelForObjectDetection = __webpack_exports__.AutoModelForObjectDetection;\nvar __webpack_exports__AutoModelForPoseEstimation = __webpack_exports__.AutoModelForPoseEstimation;\nvar __webpack_exports__AutoModelForQuestionAnswering = __webpack_exports__.AutoModelForQuestionAnswering;\nvar __webpack_exports__AutoModelForSemanticSegmentation = __webpack_exports__.AutoModelForSemanticSegmentation;\nvar __webpack_exports__AutoModelForSeq2SeqLM = __webpack_exports__.AutoModelForSeq2SeqLM;\nvar __webpack_exports__AutoModelForSequenceClassification = __webpack_exports__.AutoModelForSequenceClassification;\nvar __webpack_exports__AutoModelForSpeechSeq2Seq = __webpack_exports__.AutoModelForSpeechSeq2Seq;\nvar __webpack_exports__AutoModelForTextToSpectrogram = __webpack_exports__.AutoModelForTextToSpectrogram;\nvar __webpack_exports__AutoModelForTextToWaveform = __webpack_exports__.AutoModelForTextToWaveform;\nvar __webpack_exports__AutoModelForTokenClassification = __webpack_exports__.AutoModelForTokenClassification;\nvar __webpack_exports__AutoModelForUniversalSegmentation = __webpack_exports__.AutoModelForUniversalSegmentation;\nvar __webpack_exports__AutoModelForVision2Seq = __webpack_exports__.AutoModelForVision2Seq;\nvar __webpack_exports__AutoModelForXVector = __webpack_exports__.AutoModelForXVector;\nvar __webpack_exports__AutoModelForZeroShotObjectDetection = __webpack_exports__.AutoModelForZeroShotObjectDetection;\nvar __webpack_exports__AutoProcessor = __webpack_exports__.AutoProcessor;\nvar __webpack_exports__AutoTokenizer = __webpack_exports__.AutoTokenizer;\nvar __webpack_exports__AutomaticSpeechRecognitionPipeline = __webpack_exports__.AutomaticSpeechRecognitionPipeline;\nvar __webpack_exports__BackgroundRemovalPipeline = __webpack_exports__.BackgroundRemovalPipeline;\nvar __webpack_exports__BartForConditionalGeneration = __webpack_exports__.BartForConditionalGeneration;\nvar __webpack_exports__BartForSequenceClassification = __webpack_exports__.BartForSequenceClassification;\nvar __webpack_exports__BartModel = __webpack_exports__.BartModel;\nvar __webpack_exports__BartPretrainedModel = __webpack_exports__.BartPretrainedModel;\nvar __webpack_exports__BartTokenizer = __webpack_exports__.BartTokenizer;\nvar __webpack_exports__BaseModelOutput = __webpack_exports__.BaseModelOutput;\nvar __webpack_exports__BaseStreamer = __webpack_exports__.BaseStreamer;\nvar __webpack_exports__BeitFeatureExtractor = __webpack_exports__.BeitFeatureExtractor;\nvar __webpack_exports__BeitForImageClassification = __webpack_exports__.BeitForImageClassification;\nvar __webpack_exports__BeitModel = __webpack_exports__.BeitModel;\nvar __webpack_exports__BeitPreTrainedModel = __webpack_exports__.BeitPreTrainedModel;\nvar __webpack_exports__BertForMaskedLM = __webpack_exports__.BertForMaskedLM;\nvar __webpack_exports__BertForQuestionAnswering = __webpack_exports__.BertForQuestionAnswering;\nvar __webpack_exports__BertForSequenceClassification = __webpack_exports__.BertForSequenceClassification;\nvar __webpack_exports__BertForTokenClassification = __webpack_exports__.BertForTokenClassification;\nvar __webpack_exports__BertModel = __webpack_exports__.BertModel;\nvar __webpack_exports__BertPreTrainedModel = __webpack_exports__.BertPreTrainedModel;\nvar __webpack_exports__BertTokenizer = __webpack_exports__.BertTokenizer;\nvar __webpack_exports__BitImageProcessor = __webpack_exports__.BitImageProcessor;\nvar __webpack_exports__BlenderbotForConditionalGeneration = __webpack_exports__.BlenderbotForConditionalGeneration;\nvar __webpack_exports__BlenderbotModel = __webpack_exports__.BlenderbotModel;\nvar __webpack_exports__BlenderbotPreTrainedModel = __webpack_exports__.BlenderbotPreTrainedModel;\nvar __webpack_exports__BlenderbotSmallForConditionalGeneration = __webpack_exports__.BlenderbotSmallForConditionalGeneration;\nvar __webpack_exports__BlenderbotSmallModel = __webpack_exports__.BlenderbotSmallModel;\nvar __webpack_exports__BlenderbotSmallPreTrainedModel = __webpack_exports__.BlenderbotSmallPreTrainedModel;\nvar __webpack_exports__BlenderbotSmallTokenizer = __webpack_exports__.BlenderbotSmallTokenizer;\nvar __webpack_exports__BlenderbotTokenizer = __webpack_exports__.BlenderbotTokenizer;\nvar __webpack_exports__BloomForCausalLM = __webpack_exports__.BloomForCausalLM;\nvar __webpack_exports__BloomModel = __webpack_exports__.BloomModel;\nvar __webpack_exports__BloomPreTrainedModel = __webpack_exports__.BloomPreTrainedModel;\nvar __webpack_exports__BloomTokenizer = __webpack_exports__.BloomTokenizer;\nvar __webpack_exports__CLIPFeatureExtractor = __webpack_exports__.CLIPFeatureExtractor;\nvar __webpack_exports__CLIPImageProcessor = __webpack_exports__.CLIPImageProcessor;\nvar __webpack_exports__CLIPModel = __webpack_exports__.CLIPModel;\nvar __webpack_exports__CLIPPreTrainedModel = __webpack_exports__.CLIPPreTrainedModel;\nvar __webpack_exports__CLIPSegForImageSegmentation = __webpack_exports__.CLIPSegForImageSegmentation;\nvar __webpack_exports__CLIPSegModel = __webpack_exports__.CLIPSegModel;\nvar __webpack_exports__CLIPSegPreTrainedModel = __webpack_exports__.CLIPSegPreTrainedModel;\nvar __webpack_exports__CLIPTextModel = __webpack_exports__.CLIPTextModel;\nvar __webpack_exports__CLIPTextModelWithProjection = __webpack_exports__.CLIPTextModelWithProjection;\nvar __webpack_exports__CLIPTokenizer = __webpack_exports__.CLIPTokenizer;\nvar __webpack_exports__CLIPVisionModel = __webpack_exports__.CLIPVisionModel;\nvar __webpack_exports__CLIPVisionModelWithProjection = __webpack_exports__.CLIPVisionModelWithProjection;\nvar __webpack_exports__CamembertForMaskedLM = __webpack_exports__.CamembertForMaskedLM;\nvar __webpack_exports__CamembertForQuestionAnswering = __webpack_exports__.CamembertForQuestionAnswering;\nvar __webpack_exports__CamembertForSequenceClassification = __webpack_exports__.CamembertForSequenceClassification;\nvar __webpack_exports__CamembertForTokenClassification = __webpack_exports__.CamembertForTokenClassification;\nvar __webpack_exports__CamembertModel = __webpack_exports__.CamembertModel;\nvar __webpack_exports__CamembertPreTrainedModel = __webpack_exports__.CamembertPreTrainedModel;\nvar __webpack_exports__CamembertTokenizer = __webpack_exports__.CamembertTokenizer;\nvar __webpack_exports__CausalLMOutput = __webpack_exports__.CausalLMOutput;\nvar __webpack_exports__CausalLMOutputWithPast = __webpack_exports__.CausalLMOutputWithPast;\nvar __webpack_exports__ChineseCLIPFeatureExtractor = __webpack_exports__.ChineseCLIPFeatureExtractor;\nvar __webpack_exports__ChineseCLIPModel = __webpack_exports__.ChineseCLIPModel;\nvar __webpack_exports__ChineseCLIPPreTrainedModel = __webpack_exports__.ChineseCLIPPreTrainedModel;\nvar __webpack_exports__ClapAudioModelWithProjection = __webpack_exports__.ClapAudioModelWithProjection;\nvar __webpack_exports__ClapFeatureExtractor = __webpack_exports__.ClapFeatureExtractor;\nvar __webpack_exports__ClapModel = __webpack_exports__.ClapModel;\nvar __webpack_exports__ClapPreTrainedModel = __webpack_exports__.ClapPreTrainedModel;\nvar __webpack_exports__ClapTextModelWithProjection = __webpack_exports__.ClapTextModelWithProjection;\nvar __webpack_exports__ClassifierFreeGuidanceLogitsProcessor = __webpack_exports__.ClassifierFreeGuidanceLogitsProcessor;\nvar __webpack_exports__CodeGenForCausalLM = __webpack_exports__.CodeGenForCausalLM;\nvar __webpack_exports__CodeGenModel = __webpack_exports__.CodeGenModel;\nvar __webpack_exports__CodeGenPreTrainedModel = __webpack_exports__.CodeGenPreTrainedModel;\nvar __webpack_exports__CodeGenTokenizer = __webpack_exports__.CodeGenTokenizer;\nvar __webpack_exports__CodeLlamaTokenizer = __webpack_exports__.CodeLlamaTokenizer;\nvar __webpack_exports__CohereForCausalLM = __webpack_exports__.CohereForCausalLM;\nvar __webpack_exports__CohereModel = __webpack_exports__.CohereModel;\nvar __webpack_exports__CoherePreTrainedModel = __webpack_exports__.CoherePreTrainedModel;\nvar __webpack_exports__CohereTokenizer = __webpack_exports__.CohereTokenizer;\nvar __webpack_exports__ConvBertForMaskedLM = __webpack_exports__.ConvBertForMaskedLM;\nvar __webpack_exports__ConvBertForQuestionAnswering = __webpack_exports__.ConvBertForQuestionAnswering;\nvar __webpack_exports__ConvBertForSequenceClassification = __webpack_exports__.ConvBertForSequenceClassification;\nvar __webpack_exports__ConvBertForTokenClassification = __webpack_exports__.ConvBertForTokenClassification;\nvar __webpack_exports__ConvBertModel = __webpack_exports__.ConvBertModel;\nvar __webpack_exports__ConvBertPreTrainedModel = __webpack_exports__.ConvBertPreTrainedModel;\nvar __webpack_exports__ConvBertTokenizer = __webpack_exports__.ConvBertTokenizer;\nvar __webpack_exports__ConvNextFeatureExtractor = __webpack_exports__.ConvNextFeatureExtractor;\nvar __webpack_exports__ConvNextForImageClassification = __webpack_exports__.ConvNextForImageClassification;\nvar __webpack_exports__ConvNextImageProcessor = __webpack_exports__.ConvNextImageProcessor;\nvar __webpack_exports__ConvNextModel = __webpack_exports__.ConvNextModel;\nvar __webpack_exports__ConvNextPreTrainedModel = __webpack_exports__.ConvNextPreTrainedModel;\nvar __webpack_exports__ConvNextV2ForImageClassification = __webpack_exports__.ConvNextV2ForImageClassification;\nvar __webpack_exports__ConvNextV2Model = __webpack_exports__.ConvNextV2Model;\nvar __webpack_exports__ConvNextV2PreTrainedModel = __webpack_exports__.ConvNextV2PreTrainedModel;\nvar __webpack_exports__DPTFeatureExtractor = __webpack_exports__.DPTFeatureExtractor;\nvar __webpack_exports__DPTForDepthEstimation = __webpack_exports__.DPTForDepthEstimation;\nvar __webpack_exports__DPTImageProcessor = __webpack_exports__.DPTImageProcessor;\nvar __webpack_exports__DPTModel = __webpack_exports__.DPTModel;\nvar __webpack_exports__DPTPreTrainedModel = __webpack_exports__.DPTPreTrainedModel;\nvar __webpack_exports__DacDecoderModel = __webpack_exports__.DacDecoderModel;\nvar __webpack_exports__DacDecoderOutput = __webpack_exports__.DacDecoderOutput;\nvar __webpack_exports__DacEncoderModel = __webpack_exports__.DacEncoderModel;\nvar __webpack_exports__DacEncoderOutput = __webpack_exports__.DacEncoderOutput;\nvar __webpack_exports__DacFeatureExtractor = __webpack_exports__.DacFeatureExtractor;\nvar __webpack_exports__DacModel = __webpack_exports__.DacModel;\nvar __webpack_exports__DacPreTrainedModel = __webpack_exports__.DacPreTrainedModel;\nvar __webpack_exports__DataTypeMap = __webpack_exports__.DataTypeMap;\nvar __webpack_exports__DebertaForMaskedLM = __webpack_exports__.DebertaForMaskedLM;\nvar __webpack_exports__DebertaForQuestionAnswering = __webpack_exports__.DebertaForQuestionAnswering;\nvar __webpack_exports__DebertaForSequenceClassification = __webpack_exports__.DebertaForSequenceClassification;\nvar __webpack_exports__DebertaForTokenClassification = __webpack_exports__.DebertaForTokenClassification;\nvar __webpack_exports__DebertaModel = __webpack_exports__.DebertaModel;\nvar __webpack_exports__DebertaPreTrainedModel = __webpack_exports__.DebertaPreTrainedModel;\nvar __webpack_exports__DebertaTokenizer = __webpack_exports__.DebertaTokenizer;\nvar __webpack_exports__DebertaV2ForMaskedLM = __webpack_exports__.DebertaV2ForMaskedLM;\nvar __webpack_exports__DebertaV2ForQuestionAnswering = __webpack_exports__.DebertaV2ForQuestionAnswering;\nvar __webpack_exports__DebertaV2ForSequenceClassification = __webpack_exports__.DebertaV2ForSequenceClassification;\nvar __webpack_exports__DebertaV2ForTokenClassification = __webpack_exports__.DebertaV2ForTokenClassification;\nvar __webpack_exports__DebertaV2Model = __webpack_exports__.DebertaV2Model;\nvar __webpack_exports__DebertaV2PreTrainedModel = __webpack_exports__.DebertaV2PreTrainedModel;\nvar __webpack_exports__DebertaV2Tokenizer = __webpack_exports__.DebertaV2Tokenizer;\nvar __webpack_exports__DecisionTransformerModel = __webpack_exports__.DecisionTransformerModel;\nvar __webpack_exports__DecisionTransformerPreTrainedModel = __webpack_exports__.DecisionTransformerPreTrainedModel;\nvar __webpack_exports__DeiTFeatureExtractor = __webpack_exports__.DeiTFeatureExtractor;\nvar __webpack_exports__DeiTForImageClassification = __webpack_exports__.DeiTForImageClassification;\nvar __webpack_exports__DeiTImageProcessor = __webpack_exports__.DeiTImageProcessor;\nvar __webpack_exports__DeiTModel = __webpack_exports__.DeiTModel;\nvar __webpack_exports__DeiTPreTrainedModel = __webpack_exports__.DeiTPreTrainedModel;\nvar __webpack_exports__DepthAnythingForDepthEstimation = __webpack_exports__.DepthAnythingForDepthEstimation;\nvar __webpack_exports__DepthAnythingPreTrainedModel = __webpack_exports__.DepthAnythingPreTrainedModel;\nvar __webpack_exports__DepthEstimationPipeline = __webpack_exports__.DepthEstimationPipeline;\nvar __webpack_exports__DepthProForDepthEstimation = __webpack_exports__.DepthProForDepthEstimation;\nvar __webpack_exports__DepthProPreTrainedModel = __webpack_exports__.DepthProPreTrainedModel;\nvar __webpack_exports__DetrFeatureExtractor = __webpack_exports__.DetrFeatureExtractor;\nvar __webpack_exports__DetrForObjectDetection = __webpack_exports__.DetrForObjectDetection;\nvar __webpack_exports__DetrForSegmentation = __webpack_exports__.DetrForSegmentation;\nvar __webpack_exports__DetrImageProcessor = __webpack_exports__.DetrImageProcessor;\nvar __webpack_exports__DetrModel = __webpack_exports__.DetrModel;\nvar __webpack_exports__DetrObjectDetectionOutput = __webpack_exports__.DetrObjectDetectionOutput;\nvar __webpack_exports__DetrPreTrainedModel = __webpack_exports__.DetrPreTrainedModel;\nvar __webpack_exports__DetrSegmentationOutput = __webpack_exports__.DetrSegmentationOutput;\nvar __webpack_exports__Dinov2ForImageClassification = __webpack_exports__.Dinov2ForImageClassification;\nvar __webpack_exports__Dinov2Model = __webpack_exports__.Dinov2Model;\nvar __webpack_exports__Dinov2PreTrainedModel = __webpack_exports__.Dinov2PreTrainedModel;\nvar __webpack_exports__Dinov2WithRegistersForImageClassification = __webpack_exports__.Dinov2WithRegistersForImageClassification;\nvar __webpack_exports__Dinov2WithRegistersModel = __webpack_exports__.Dinov2WithRegistersModel;\nvar __webpack_exports__Dinov2WithRegistersPreTrainedModel = __webpack_exports__.Dinov2WithRegistersPreTrainedModel;\nvar __webpack_exports__DistilBertForMaskedLM = __webpack_exports__.DistilBertForMaskedLM;\nvar __webpack_exports__DistilBertForQuestionAnswering = __webpack_exports__.DistilBertForQuestionAnswering;\nvar __webpack_exports__DistilBertForSequenceClassification = __webpack_exports__.DistilBertForSequenceClassification;\nvar __webpack_exports__DistilBertForTokenClassification = __webpack_exports__.DistilBertForTokenClassification;\nvar __webpack_exports__DistilBertModel = __webpack_exports__.DistilBertModel;\nvar __webpack_exports__DistilBertPreTrainedModel = __webpack_exports__.DistilBertPreTrainedModel;\nvar __webpack_exports__DistilBertTokenizer = __webpack_exports__.DistilBertTokenizer;\nvar __webpack_exports__DocumentQuestionAnsweringPipeline = __webpack_exports__.DocumentQuestionAnsweringPipeline;\nvar __webpack_exports__DonutFeatureExtractor = __webpack_exports__.DonutFeatureExtractor;\nvar __webpack_exports__DonutImageProcessor = __webpack_exports__.DonutImageProcessor;\nvar __webpack_exports__DonutSwinModel = __webpack_exports__.DonutSwinModel;\nvar __webpack_exports__DonutSwinPreTrainedModel = __webpack_exports__.DonutSwinPreTrainedModel;\nvar __webpack_exports__EfficientNetForImageClassification = __webpack_exports__.EfficientNetForImageClassification;\nvar __webpack_exports__EfficientNetImageProcessor = __webpack_exports__.EfficientNetImageProcessor;\nvar __webpack_exports__EfficientNetModel = __webpack_exports__.EfficientNetModel;\nvar __webpack_exports__EfficientNetPreTrainedModel = __webpack_exports__.EfficientNetPreTrainedModel;\nvar __webpack_exports__ElectraForMaskedLM = __webpack_exports__.ElectraForMaskedLM;\nvar __webpack_exports__ElectraForQuestionAnswering = __webpack_exports__.ElectraForQuestionAnswering;\nvar __webpack_exports__ElectraForSequenceClassification = __webpack_exports__.ElectraForSequenceClassification;\nvar __webpack_exports__ElectraForTokenClassification = __webpack_exports__.ElectraForTokenClassification;\nvar __webpack_exports__ElectraModel = __webpack_exports__.ElectraModel;\nvar __webpack_exports__ElectraPreTrainedModel = __webpack_exports__.ElectraPreTrainedModel;\nvar __webpack_exports__ElectraTokenizer = __webpack_exports__.ElectraTokenizer;\nvar __webpack_exports__EncodecFeatureExtractor = __webpack_exports__.EncodecFeatureExtractor;\nvar __webpack_exports__EosTokenCriteria = __webpack_exports__.EosTokenCriteria;\nvar __webpack_exports__EsmForMaskedLM = __webpack_exports__.EsmForMaskedLM;\nvar __webpack_exports__EsmForSequenceClassification = __webpack_exports__.EsmForSequenceClassification;\nvar __webpack_exports__EsmForTokenClassification = __webpack_exports__.EsmForTokenClassification;\nvar __webpack_exports__EsmModel = __webpack_exports__.EsmModel;\nvar __webpack_exports__EsmPreTrainedModel = __webpack_exports__.EsmPreTrainedModel;\nvar __webpack_exports__EsmTokenizer = __webpack_exports__.EsmTokenizer;\nvar __webpack_exports__ExaoneForCausalLM = __webpack_exports__.ExaoneForCausalLM;\nvar __webpack_exports__ExaoneModel = __webpack_exports__.ExaoneModel;\nvar __webpack_exports__ExaonePreTrainedModel = __webpack_exports__.ExaonePreTrainedModel;\nvar __webpack_exports__FFT = __webpack_exports__.FFT;\nvar __webpack_exports__FalconForCausalLM = __webpack_exports__.FalconForCausalLM;\nvar __webpack_exports__FalconModel = __webpack_exports__.FalconModel;\nvar __webpack_exports__FalconPreTrainedModel = __webpack_exports__.FalconPreTrainedModel;\nvar __webpack_exports__FalconTokenizer = __webpack_exports__.FalconTokenizer;\nvar __webpack_exports__FastViTForImageClassification = __webpack_exports__.FastViTForImageClassification;\nvar __webpack_exports__FastViTModel = __webpack_exports__.FastViTModel;\nvar __webpack_exports__FastViTPreTrainedModel = __webpack_exports__.FastViTPreTrainedModel;\nvar __webpack_exports__FeatureExtractionPipeline = __webpack_exports__.FeatureExtractionPipeline;\nvar __webpack_exports__FeatureExtractor = __webpack_exports__.FeatureExtractor;\nvar __webpack_exports__FillMaskPipeline = __webpack_exports__.FillMaskPipeline;\nvar __webpack_exports__Florence2ForConditionalGeneration = __webpack_exports__.Florence2ForConditionalGeneration;\nvar __webpack_exports__Florence2PreTrainedModel = __webpack_exports__.Florence2PreTrainedModel;\nvar __webpack_exports__Florence2Processor = __webpack_exports__.Florence2Processor;\nvar __webpack_exports__ForcedBOSTokenLogitsProcessor = __webpack_exports__.ForcedBOSTokenLogitsProcessor;\nvar __webpack_exports__ForcedEOSTokenLogitsProcessor = __webpack_exports__.ForcedEOSTokenLogitsProcessor;\nvar __webpack_exports__GLPNFeatureExtractor = __webpack_exports__.GLPNFeatureExtractor;\nvar __webpack_exports__GLPNForDepthEstimation = __webpack_exports__.GLPNForDepthEstimation;\nvar __webpack_exports__GLPNModel = __webpack_exports__.GLPNModel;\nvar __webpack_exports__GLPNPreTrainedModel = __webpack_exports__.GLPNPreTrainedModel;\nvar __webpack_exports__GPT2LMHeadModel = __webpack_exports__.GPT2LMHeadModel;\nvar __webpack_exports__GPT2Model = __webpack_exports__.GPT2Model;\nvar __webpack_exports__GPT2PreTrainedModel = __webpack_exports__.GPT2PreTrainedModel;\nvar __webpack_exports__GPT2Tokenizer = __webpack_exports__.GPT2Tokenizer;\nvar __webpack_exports__GPTBigCodeForCausalLM = __webpack_exports__.GPTBigCodeForCausalLM;\nvar __webpack_exports__GPTBigCodeModel = __webpack_exports__.GPTBigCodeModel;\nvar __webpack_exports__GPTBigCodePreTrainedModel = __webpack_exports__.GPTBigCodePreTrainedModel;\nvar __webpack_exports__GPTJForCausalLM = __webpack_exports__.GPTJForCausalLM;\nvar __webpack_exports__GPTJModel = __webpack_exports__.GPTJModel;\nvar __webpack_exports__GPTJPreTrainedModel = __webpack_exports__.GPTJPreTrainedModel;\nvar __webpack_exports__GPTNeoForCausalLM = __webpack_exports__.GPTNeoForCausalLM;\nvar __webpack_exports__GPTNeoModel = __webpack_exports__.GPTNeoModel;\nvar __webpack_exports__GPTNeoPreTrainedModel = __webpack_exports__.GPTNeoPreTrainedModel;\nvar __webpack_exports__GPTNeoXForCausalLM = __webpack_exports__.GPTNeoXForCausalLM;\nvar __webpack_exports__GPTNeoXModel = __webpack_exports__.GPTNeoXModel;\nvar __webpack_exports__GPTNeoXPreTrainedModel = __webpack_exports__.GPTNeoXPreTrainedModel;\nvar __webpack_exports__GPTNeoXTokenizer = __webpack_exports__.GPTNeoXTokenizer;\nvar __webpack_exports__Gemma2ForCausalLM = __webpack_exports__.Gemma2ForCausalLM;\nvar __webpack_exports__Gemma2Model = __webpack_exports__.Gemma2Model;\nvar __webpack_exports__Gemma2PreTrainedModel = __webpack_exports__.Gemma2PreTrainedModel;\nvar __webpack_exports__GemmaForCausalLM = __webpack_exports__.GemmaForCausalLM;\nvar __webpack_exports__GemmaModel = __webpack_exports__.GemmaModel;\nvar __webpack_exports__GemmaPreTrainedModel = __webpack_exports__.GemmaPreTrainedModel;\nvar __webpack_exports__GemmaTokenizer = __webpack_exports__.GemmaTokenizer;\nvar __webpack_exports__GlmForCausalLM = __webpack_exports__.GlmForCausalLM;\nvar __webpack_exports__GlmModel = __webpack_exports__.GlmModel;\nvar __webpack_exports__GlmPreTrainedModel = __webpack_exports__.GlmPreTrainedModel;\nvar __webpack_exports__GraniteForCausalLM = __webpack_exports__.GraniteForCausalLM;\nvar __webpack_exports__GraniteModel = __webpack_exports__.GraniteModel;\nvar __webpack_exports__GranitePreTrainedModel = __webpack_exports__.GranitePreTrainedModel;\nvar __webpack_exports__Grok1Tokenizer = __webpack_exports__.Grok1Tokenizer;\nvar __webpack_exports__GroundingDinoForObjectDetection = __webpack_exports__.GroundingDinoForObjectDetection;\nvar __webpack_exports__GroundingDinoImageProcessor = __webpack_exports__.GroundingDinoImageProcessor;\nvar __webpack_exports__GroundingDinoPreTrainedModel = __webpack_exports__.GroundingDinoPreTrainedModel;\nvar __webpack_exports__GroundingDinoProcessor = __webpack_exports__.GroundingDinoProcessor;\nvar __webpack_exports__GroupViTModel = __webpack_exports__.GroupViTModel;\nvar __webpack_exports__GroupViTPreTrainedModel = __webpack_exports__.GroupViTPreTrainedModel;\nvar __webpack_exports__HeliumForCausalLM = __webpack_exports__.HeliumForCausalLM;\nvar __webpack_exports__HeliumModel = __webpack_exports__.HeliumModel;\nvar __webpack_exports__HeliumPreTrainedModel = __webpack_exports__.HeliumPreTrainedModel;\nvar __webpack_exports__HerbertTokenizer = __webpack_exports__.HerbertTokenizer;\nvar __webpack_exports__HieraForImageClassification = __webpack_exports__.HieraForImageClassification;\nvar __webpack_exports__HieraModel = __webpack_exports__.HieraModel;\nvar __webpack_exports__HieraPreTrainedModel = __webpack_exports__.HieraPreTrainedModel;\nvar __webpack_exports__HubertForCTC = __webpack_exports__.HubertForCTC;\nvar __webpack_exports__HubertForSequenceClassification = __webpack_exports__.HubertForSequenceClassification;\nvar __webpack_exports__HubertModel = __webpack_exports__.HubertModel;\nvar __webpack_exports__HubertPreTrainedModel = __webpack_exports__.HubertPreTrainedModel;\nvar __webpack_exports__IJepaForImageClassification = __webpack_exports__.IJepaForImageClassification;\nvar __webpack_exports__IJepaModel = __webpack_exports__.IJepaModel;\nvar __webpack_exports__IJepaPreTrainedModel = __webpack_exports__.IJepaPreTrainedModel;\nvar __webpack_exports__Idefics3ForConditionalGeneration = __webpack_exports__.Idefics3ForConditionalGeneration;\nvar __webpack_exports__Idefics3ImageProcessor = __webpack_exports__.Idefics3ImageProcessor;\nvar __webpack_exports__Idefics3PreTrainedModel = __webpack_exports__.Idefics3PreTrainedModel;\nvar __webpack_exports__Idefics3Processor = __webpack_exports__.Idefics3Processor;\nvar __webpack_exports__ImageClassificationPipeline = __webpack_exports__.ImageClassificationPipeline;\nvar __webpack_exports__ImageFeatureExtractionPipeline = __webpack_exports__.ImageFeatureExtractionPipeline;\nvar __webpack_exports__ImageFeatureExtractor = __webpack_exports__.ImageFeatureExtractor;\nvar __webpack_exports__ImageMattingOutput = __webpack_exports__.ImageMattingOutput;\nvar __webpack_exports__ImageProcessor = __webpack_exports__.ImageProcessor;\nvar __webpack_exports__ImageSegmentationPipeline = __webpack_exports__.ImageSegmentationPipeline;\nvar __webpack_exports__ImageToImagePipeline = __webpack_exports__.ImageToImagePipeline;\nvar __webpack_exports__ImageToTextPipeline = __webpack_exports__.ImageToTextPipeline;\nvar __webpack_exports__InterruptableStoppingCriteria = __webpack_exports__.InterruptableStoppingCriteria;\nvar __webpack_exports__JAISLMHeadModel = __webpack_exports__.JAISLMHeadModel;\nvar __webpack_exports__JAISModel = __webpack_exports__.JAISModel;\nvar __webpack_exports__JAISPreTrainedModel = __webpack_exports__.JAISPreTrainedModel;\nvar __webpack_exports__JinaCLIPImageProcessor = __webpack_exports__.JinaCLIPImageProcessor;\nvar __webpack_exports__JinaCLIPModel = __webpack_exports__.JinaCLIPModel;\nvar __webpack_exports__JinaCLIPPreTrainedModel = __webpack_exports__.JinaCLIPPreTrainedModel;\nvar __webpack_exports__JinaCLIPProcessor = __webpack_exports__.JinaCLIPProcessor;\nvar __webpack_exports__JinaCLIPTextModel = __webpack_exports__.JinaCLIPTextModel;\nvar __webpack_exports__JinaCLIPVisionModel = __webpack_exports__.JinaCLIPVisionModel;\nvar __webpack_exports__LiteWhisperForConditionalGeneration = __webpack_exports__.LiteWhisperForConditionalGeneration;\nvar __webpack_exports__LlamaForCausalLM = __webpack_exports__.LlamaForCausalLM;\nvar __webpack_exports__LlamaModel = __webpack_exports__.LlamaModel;\nvar __webpack_exports__LlamaPreTrainedModel = __webpack_exports__.LlamaPreTrainedModel;\nvar __webpack_exports__LlamaTokenizer = __webpack_exports__.LlamaTokenizer;\nvar __webpack_exports__LlavaForConditionalGeneration = __webpack_exports__.LlavaForConditionalGeneration;\nvar __webpack_exports__LlavaOnevisionForConditionalGeneration = __webpack_exports__.LlavaOnevisionForConditionalGeneration;\nvar __webpack_exports__LlavaOnevisionImageProcessor = __webpack_exports__.LlavaOnevisionImageProcessor;\nvar __webpack_exports__LlavaPreTrainedModel = __webpack_exports__.LlavaPreTrainedModel;\nvar __webpack_exports__LogitsProcessor = __webpack_exports__.LogitsProcessor;\nvar __webpack_exports__LogitsProcessorList = __webpack_exports__.LogitsProcessorList;\nvar __webpack_exports__LogitsWarper = __webpack_exports__.LogitsWarper;\nvar __webpack_exports__LongT5ForConditionalGeneration = __webpack_exports__.LongT5ForConditionalGeneration;\nvar __webpack_exports__LongT5Model = __webpack_exports__.LongT5Model;\nvar __webpack_exports__LongT5PreTrainedModel = __webpack_exports__.LongT5PreTrainedModel;\nvar __webpack_exports__M2M100ForConditionalGeneration = __webpack_exports__.M2M100ForConditionalGeneration;\nvar __webpack_exports__M2M100Model = __webpack_exports__.M2M100Model;\nvar __webpack_exports__M2M100PreTrainedModel = __webpack_exports__.M2M100PreTrainedModel;\nvar __webpack_exports__M2M100Tokenizer = __webpack_exports__.M2M100Tokenizer;\nvar __webpack_exports__MBart50Tokenizer = __webpack_exports__.MBart50Tokenizer;\nvar __webpack_exports__MBartForCausalLM = __webpack_exports__.MBartForCausalLM;\nvar __webpack_exports__MBartForConditionalGeneration = __webpack_exports__.MBartForConditionalGeneration;\nvar __webpack_exports__MBartForSequenceClassification = __webpack_exports__.MBartForSequenceClassification;\nvar __webpack_exports__MBartModel = __webpack_exports__.MBartModel;\nvar __webpack_exports__MBartPreTrainedModel = __webpack_exports__.MBartPreTrainedModel;\nvar __webpack_exports__MBartTokenizer = __webpack_exports__.MBartTokenizer;\nvar __webpack_exports__MPNetForMaskedLM = __webpack_exports__.MPNetForMaskedLM;\nvar __webpack_exports__MPNetForQuestionAnswering = __webpack_exports__.MPNetForQuestionAnswering;\nvar __webpack_exports__MPNetForSequenceClassification = __webpack_exports__.MPNetForSequenceClassification;\nvar __webpack_exports__MPNetForTokenClassification = __webpack_exports__.MPNetForTokenClassification;\nvar __webpack_exports__MPNetModel = __webpack_exports__.MPNetModel;\nvar __webpack_exports__MPNetPreTrainedModel = __webpack_exports__.MPNetPreTrainedModel;\nvar __webpack_exports__MPNetTokenizer = __webpack_exports__.MPNetTokenizer;\nvar __webpack_exports__MT5ForConditionalGeneration = __webpack_exports__.MT5ForConditionalGeneration;\nvar __webpack_exports__MT5Model = __webpack_exports__.MT5Model;\nvar __webpack_exports__MT5PreTrainedModel = __webpack_exports__.MT5PreTrainedModel;\nvar __webpack_exports__MarianMTModel = __webpack_exports__.MarianMTModel;\nvar __webpack_exports__MarianModel = __webpack_exports__.MarianModel;\nvar __webpack_exports__MarianPreTrainedModel = __webpack_exports__.MarianPreTrainedModel;\nvar __webpack_exports__MarianTokenizer = __webpack_exports__.MarianTokenizer;\nvar __webpack_exports__Mask2FormerImageProcessor = __webpack_exports__.Mask2FormerImageProcessor;\nvar __webpack_exports__MaskFormerFeatureExtractor = __webpack_exports__.MaskFormerFeatureExtractor;\nvar __webpack_exports__MaskFormerForInstanceSegmentation = __webpack_exports__.MaskFormerForInstanceSegmentation;\nvar __webpack_exports__MaskFormerImageProcessor = __webpack_exports__.MaskFormerImageProcessor;\nvar __webpack_exports__MaskFormerModel = __webpack_exports__.MaskFormerModel;\nvar __webpack_exports__MaskFormerPreTrainedModel = __webpack_exports__.MaskFormerPreTrainedModel;\nvar __webpack_exports__MaskedLMOutput = __webpack_exports__.MaskedLMOutput;\nvar __webpack_exports__MaxLengthCriteria = __webpack_exports__.MaxLengthCriteria;\nvar __webpack_exports__MgpstrForSceneTextRecognition = __webpack_exports__.MgpstrForSceneTextRecognition;\nvar __webpack_exports__MgpstrModelOutput = __webpack_exports__.MgpstrModelOutput;\nvar __webpack_exports__MgpstrPreTrainedModel = __webpack_exports__.MgpstrPreTrainedModel;\nvar __webpack_exports__MgpstrProcessor = __webpack_exports__.MgpstrProcessor;\nvar __webpack_exports__MgpstrTokenizer = __webpack_exports__.MgpstrTokenizer;\nvar __webpack_exports__MimiDecoderModel = __webpack_exports__.MimiDecoderModel;\nvar __webpack_exports__MimiDecoderOutput = __webpack_exports__.MimiDecoderOutput;\nvar __webpack_exports__MimiEncoderModel = __webpack_exports__.MimiEncoderModel;\nvar __webpack_exports__MimiEncoderOutput = __webpack_exports__.MimiEncoderOutput;\nvar __webpack_exports__MimiModel = __webpack_exports__.MimiModel;\nvar __webpack_exports__MimiPreTrainedModel = __webpack_exports__.MimiPreTrainedModel;\nvar __webpack_exports__MinLengthLogitsProcessor = __webpack_exports__.MinLengthLogitsProcessor;\nvar __webpack_exports__MinNewTokensLengthLogitsProcessor = __webpack_exports__.MinNewTokensLengthLogitsProcessor;\nvar __webpack_exports__MistralForCausalLM = __webpack_exports__.MistralForCausalLM;\nvar __webpack_exports__MistralModel = __webpack_exports__.MistralModel;\nvar __webpack_exports__MistralPreTrainedModel = __webpack_exports__.MistralPreTrainedModel;\nvar __webpack_exports__MobileBertForMaskedLM = __webpack_exports__.MobileBertForMaskedLM;\nvar __webpack_exports__MobileBertForQuestionAnswering = __webpack_exports__.MobileBertForQuestionAnswering;\nvar __webpack_exports__MobileBertForSequenceClassification = __webpack_exports__.MobileBertForSequenceClassification;\nvar __webpack_exports__MobileBertModel = __webpack_exports__.MobileBertModel;\nvar __webpack_exports__MobileBertPreTrainedModel = __webpack_exports__.MobileBertPreTrainedModel;\nvar __webpack_exports__MobileBertTokenizer = __webpack_exports__.MobileBertTokenizer;\nvar __webpack_exports__MobileLLMForCausalLM = __webpack_exports__.MobileLLMForCausalLM;\nvar __webpack_exports__MobileLLMModel = __webpack_exports__.MobileLLMModel;\nvar __webpack_exports__MobileLLMPreTrainedModel = __webpack_exports__.MobileLLMPreTrainedModel;\nvar __webpack_exports__MobileNetV1FeatureExtractor = __webpack_exports__.MobileNetV1FeatureExtractor;\nvar __webpack_exports__MobileNetV1ForImageClassification = __webpack_exports__.MobileNetV1ForImageClassification;\nvar __webpack_exports__MobileNetV1ForSemanticSegmentation = __webpack_exports__.MobileNetV1ForSemanticSegmentation;\nvar __webpack_exports__MobileNetV1ImageProcessor = __webpack_exports__.MobileNetV1ImageProcessor;\nvar __webpack_exports__MobileNetV1Model = __webpack_exports__.MobileNetV1Model;\nvar __webpack_exports__MobileNetV1PreTrainedModel = __webpack_exports__.MobileNetV1PreTrainedModel;\nvar __webpack_exports__MobileNetV2FeatureExtractor = __webpack_exports__.MobileNetV2FeatureExtractor;\nvar __webpack_exports__MobileNetV2ForImageClassification = __webpack_exports__.MobileNetV2ForImageClassification;\nvar __webpack_exports__MobileNetV2ForSemanticSegmentation = __webpack_exports__.MobileNetV2ForSemanticSegmentation;\nvar __webpack_exports__MobileNetV2ImageProcessor = __webpack_exports__.MobileNetV2ImageProcessor;\nvar __webpack_exports__MobileNetV2Model = __webpack_exports__.MobileNetV2Model;\nvar __webpack_exports__MobileNetV2PreTrainedModel = __webpack_exports__.MobileNetV2PreTrainedModel;\nvar __webpack_exports__MobileNetV3FeatureExtractor = __webpack_exports__.MobileNetV3FeatureExtractor;\nvar __webpack_exports__MobileNetV3ForImageClassification = __webpack_exports__.MobileNetV3ForImageClassification;\nvar __webpack_exports__MobileNetV3ForSemanticSegmentation = __webpack_exports__.MobileNetV3ForSemanticSegmentation;\nvar __webpack_exports__MobileNetV3ImageProcessor = __webpack_exports__.MobileNetV3ImageProcessor;\nvar __webpack_exports__MobileNetV3Model = __webpack_exports__.MobileNetV3Model;\nvar __webpack_exports__MobileNetV3PreTrainedModel = __webpack_exports__.MobileNetV3PreTrainedModel;\nvar __webpack_exports__MobileNetV4FeatureExtractor = __webpack_exports__.MobileNetV4FeatureExtractor;\nvar __webpack_exports__MobileNetV4ForImageClassification = __webpack_exports__.MobileNetV4ForImageClassification;\nvar __webpack_exports__MobileNetV4ForSemanticSegmentation = __webpack_exports__.MobileNetV4ForSemanticSegmentation;\nvar __webpack_exports__MobileNetV4ImageProcessor = __webpack_exports__.MobileNetV4ImageProcessor;\nvar __webpack_exports__MobileNetV4Model = __webpack_exports__.MobileNetV4Model;\nvar __webpack_exports__MobileNetV4PreTrainedModel = __webpack_exports__.MobileNetV4PreTrainedModel;\nvar __webpack_exports__MobileViTFeatureExtractor = __webpack_exports__.MobileViTFeatureExtractor;\nvar __webpack_exports__MobileViTForImageClassification = __webpack_exports__.MobileViTForImageClassification;\nvar __webpack_exports__MobileViTImageProcessor = __webpack_exports__.MobileViTImageProcessor;\nvar __webpack_exports__MobileViTModel = __webpack_exports__.MobileViTModel;\nvar __webpack_exports__MobileViTPreTrainedModel = __webpack_exports__.MobileViTPreTrainedModel;\nvar __webpack_exports__MobileViTV2ForImageClassification = __webpack_exports__.MobileViTV2ForImageClassification;\nvar __webpack_exports__MobileViTV2Model = __webpack_exports__.MobileViTV2Model;\nvar __webpack_exports__MobileViTV2PreTrainedModel = __webpack_exports__.MobileViTV2PreTrainedModel;\nvar __webpack_exports__ModelOutput = __webpack_exports__.ModelOutput;\nvar __webpack_exports__ModernBertForMaskedLM = __webpack_exports__.ModernBertForMaskedLM;\nvar __webpack_exports__ModernBertForSequenceClassification = __webpack_exports__.ModernBertForSequenceClassification;\nvar __webpack_exports__ModernBertForTokenClassification = __webpack_exports__.ModernBertForTokenClassification;\nvar __webpack_exports__ModernBertModel = __webpack_exports__.ModernBertModel;\nvar __webpack_exports__ModernBertPreTrainedModel = __webpack_exports__.ModernBertPreTrainedModel;\nvar __webpack_exports__Moondream1ForConditionalGeneration = __webpack_exports__.Moondream1ForConditionalGeneration;\nvar __webpack_exports__MoonshineFeatureExtractor = __webpack_exports__.MoonshineFeatureExtractor;\nvar __webpack_exports__MoonshineForConditionalGeneration = __webpack_exports__.MoonshineForConditionalGeneration;\nvar __webpack_exports__MoonshineModel = __webpack_exports__.MoonshineModel;\nvar __webpack_exports__MoonshinePreTrainedModel = __webpack_exports__.MoonshinePreTrainedModel;\nvar __webpack_exports__MoonshineProcessor = __webpack_exports__.MoonshineProcessor;\nvar __webpack_exports__MptForCausalLM = __webpack_exports__.MptForCausalLM;\nvar __webpack_exports__MptModel = __webpack_exports__.MptModel;\nvar __webpack_exports__MptPreTrainedModel = __webpack_exports__.MptPreTrainedModel;\nvar __webpack_exports__MultiModalityCausalLM = __webpack_exports__.MultiModalityCausalLM;\nvar __webpack_exports__MultiModalityPreTrainedModel = __webpack_exports__.MultiModalityPreTrainedModel;\nvar __webpack_exports__MusicgenForCausalLM = __webpack_exports__.MusicgenForCausalLM;\nvar __webpack_exports__MusicgenForConditionalGeneration = __webpack_exports__.MusicgenForConditionalGeneration;\nvar __webpack_exports__MusicgenModel = __webpack_exports__.MusicgenModel;\nvar __webpack_exports__MusicgenPreTrainedModel = __webpack_exports__.MusicgenPreTrainedModel;\nvar __webpack_exports__NllbTokenizer = __webpack_exports__.NllbTokenizer;\nvar __webpack_exports__NoBadWordsLogitsProcessor = __webpack_exports__.NoBadWordsLogitsProcessor;\nvar __webpack_exports__NoRepeatNGramLogitsProcessor = __webpack_exports__.NoRepeatNGramLogitsProcessor;\nvar __webpack_exports__NomicBertModel = __webpack_exports__.NomicBertModel;\nvar __webpack_exports__NomicBertPreTrainedModel = __webpack_exports__.NomicBertPreTrainedModel;\nvar __webpack_exports__NougatImageProcessor = __webpack_exports__.NougatImageProcessor;\nvar __webpack_exports__NougatTokenizer = __webpack_exports__.NougatTokenizer;\nvar __webpack_exports__OPTForCausalLM = __webpack_exports__.OPTForCausalLM;\nvar __webpack_exports__OPTModel = __webpack_exports__.OPTModel;\nvar __webpack_exports__OPTPreTrainedModel = __webpack_exports__.OPTPreTrainedModel;\nvar __webpack_exports__ObjectDetectionPipeline = __webpack_exports__.ObjectDetectionPipeline;\nvar __webpack_exports__Olmo2ForCausalLM = __webpack_exports__.Olmo2ForCausalLM;\nvar __webpack_exports__Olmo2Model = __webpack_exports__.Olmo2Model;\nvar __webpack_exports__Olmo2PreTrainedModel = __webpack_exports__.Olmo2PreTrainedModel;\nvar __webpack_exports__OlmoForCausalLM = __webpack_exports__.OlmoForCausalLM;\nvar __webpack_exports__OlmoModel = __webpack_exports__.OlmoModel;\nvar __webpack_exports__OlmoPreTrainedModel = __webpack_exports__.OlmoPreTrainedModel;\nvar __webpack_exports__OpenELMForCausalLM = __webpack_exports__.OpenELMForCausalLM;\nvar __webpack_exports__OpenELMModel = __webpack_exports__.OpenELMModel;\nvar __webpack_exports__OpenELMPreTrainedModel = __webpack_exports__.OpenELMPreTrainedModel;\nvar __webpack_exports__OwlViTFeatureExtractor = __webpack_exports__.OwlViTFeatureExtractor;\nvar __webpack_exports__OwlViTForObjectDetection = __webpack_exports__.OwlViTForObjectDetection;\nvar __webpack_exports__OwlViTImageProcessor = __webpack_exports__.OwlViTImageProcessor;\nvar __webpack_exports__OwlViTModel = __webpack_exports__.OwlViTModel;\nvar __webpack_exports__OwlViTPreTrainedModel = __webpack_exports__.OwlViTPreTrainedModel;\nvar __webpack_exports__OwlViTProcessor = __webpack_exports__.OwlViTProcessor;\nvar __webpack_exports__Owlv2ForObjectDetection = __webpack_exports__.Owlv2ForObjectDetection;\nvar __webpack_exports__Owlv2ImageProcessor = __webpack_exports__.Owlv2ImageProcessor;\nvar __webpack_exports__Owlv2Model = __webpack_exports__.Owlv2Model;\nvar __webpack_exports__Owlv2PreTrainedModel = __webpack_exports__.Owlv2PreTrainedModel;\nvar __webpack_exports__PaliGemmaForConditionalGeneration = __webpack_exports__.PaliGemmaForConditionalGeneration;\nvar __webpack_exports__PaliGemmaPreTrainedModel = __webpack_exports__.PaliGemmaPreTrainedModel;\nvar __webpack_exports__PaliGemmaProcessor = __webpack_exports__.PaliGemmaProcessor;\nvar __webpack_exports__PatchTSMixerForPrediction = __webpack_exports__.PatchTSMixerForPrediction;\nvar __webpack_exports__PatchTSMixerModel = __webpack_exports__.PatchTSMixerModel;\nvar __webpack_exports__PatchTSMixerPreTrainedModel = __webpack_exports__.PatchTSMixerPreTrainedModel;\nvar __webpack_exports__PatchTSTForPrediction = __webpack_exports__.PatchTSTForPrediction;\nvar __webpack_exports__PatchTSTModel = __webpack_exports__.PatchTSTModel;\nvar __webpack_exports__PatchTSTPreTrainedModel = __webpack_exports__.PatchTSTPreTrainedModel;\nvar __webpack_exports__Phi3ForCausalLM = __webpack_exports__.Phi3ForCausalLM;\nvar __webpack_exports__Phi3Model = __webpack_exports__.Phi3Model;\nvar __webpack_exports__Phi3PreTrainedModel = __webpack_exports__.Phi3PreTrainedModel;\nvar __webpack_exports__Phi3VForCausalLM = __webpack_exports__.Phi3VForCausalLM;\nvar __webpack_exports__Phi3VImageProcessor = __webpack_exports__.Phi3VImageProcessor;\nvar __webpack_exports__Phi3VPreTrainedModel = __webpack_exports__.Phi3VPreTrainedModel;\nvar __webpack_exports__Phi3VProcessor = __webpack_exports__.Phi3VProcessor;\nvar __webpack_exports__PhiForCausalLM = __webpack_exports__.PhiForCausalLM;\nvar __webpack_exports__PhiModel = __webpack_exports__.PhiModel;\nvar __webpack_exports__PhiPreTrainedModel = __webpack_exports__.PhiPreTrainedModel;\nvar __webpack_exports__Pipeline = __webpack_exports__.Pipeline;\nvar __webpack_exports__PreTrainedModel = __webpack_exports__.PreTrainedModel;\nvar __webpack_exports__PreTrainedTokenizer = __webpack_exports__.PreTrainedTokenizer;\nvar __webpack_exports__PretrainedConfig = __webpack_exports__.PretrainedConfig;\nvar __webpack_exports__PretrainedMixin = __webpack_exports__.PretrainedMixin;\nvar __webpack_exports__Processor = __webpack_exports__.Processor;\nvar __webpack_exports__PvtForImageClassification = __webpack_exports__.PvtForImageClassification;\nvar __webpack_exports__PvtImageProcessor = __webpack_exports__.PvtImageProcessor;\nvar __webpack_exports__PvtModel = __webpack_exports__.PvtModel;\nvar __webpack_exports__PvtPreTrainedModel = __webpack_exports__.PvtPreTrainedModel;\nvar __webpack_exports__PyAnnoteFeatureExtractor = __webpack_exports__.PyAnnoteFeatureExtractor;\nvar __webpack_exports__PyAnnoteForAudioFrameClassification = __webpack_exports__.PyAnnoteForAudioFrameClassification;\nvar __webpack_exports__PyAnnoteModel = __webpack_exports__.PyAnnoteModel;\nvar __webpack_exports__PyAnnotePreTrainedModel = __webpack_exports__.PyAnnotePreTrainedModel;\nvar __webpack_exports__PyAnnoteProcessor = __webpack_exports__.PyAnnoteProcessor;\nvar __webpack_exports__QuestionAnsweringModelOutput = __webpack_exports__.QuestionAnsweringModelOutput;\nvar __webpack_exports__QuestionAnsweringPipeline = __webpack_exports__.QuestionAnsweringPipeline;\nvar __webpack_exports__Qwen2ForCausalLM = __webpack_exports__.Qwen2ForCausalLM;\nvar __webpack_exports__Qwen2Model = __webpack_exports__.Qwen2Model;\nvar __webpack_exports__Qwen2PreTrainedModel = __webpack_exports__.Qwen2PreTrainedModel;\nvar __webpack_exports__Qwen2Tokenizer = __webpack_exports__.Qwen2Tokenizer;\nvar __webpack_exports__Qwen2VLForConditionalGeneration = __webpack_exports__.Qwen2VLForConditionalGeneration;\nvar __webpack_exports__Qwen2VLImageProcessor = __webpack_exports__.Qwen2VLImageProcessor;\nvar __webpack_exports__Qwen2VLPreTrainedModel = __webpack_exports__.Qwen2VLPreTrainedModel;\nvar __webpack_exports__Qwen2VLProcessor = __webpack_exports__.Qwen2VLProcessor;\nvar __webpack_exports__RTDetrForObjectDetection = __webpack_exports__.RTDetrForObjectDetection;\nvar __webpack_exports__RTDetrImageProcessor = __webpack_exports__.RTDetrImageProcessor;\nvar __webpack_exports__RTDetrModel = __webpack_exports__.RTDetrModel;\nvar __webpack_exports__RTDetrObjectDetectionOutput = __webpack_exports__.RTDetrObjectDetectionOutput;\nvar __webpack_exports__RTDetrPreTrainedModel = __webpack_exports__.RTDetrPreTrainedModel;\nvar __webpack_exports__RawAudio = __webpack_exports__.RawAudio;\nvar __webpack_exports__RawImage = __webpack_exports__.RawImage;\nvar __webpack_exports__RawVideo = __webpack_exports__.RawVideo;\nvar __webpack_exports__RawVideoFrame = __webpack_exports__.RawVideoFrame;\nvar __webpack_exports__RepetitionPenaltyLogitsProcessor = __webpack_exports__.RepetitionPenaltyLogitsProcessor;\nvar __webpack_exports__ResNetForImageClassification = __webpack_exports__.ResNetForImageClassification;\nvar __webpack_exports__ResNetModel = __webpack_exports__.ResNetModel;\nvar __webpack_exports__ResNetPreTrainedModel = __webpack_exports__.ResNetPreTrainedModel;\nvar __webpack_exports__RoFormerForMaskedLM = __webpack_exports__.RoFormerForMaskedLM;\nvar __webpack_exports__RoFormerForQuestionAnswering = __webpack_exports__.RoFormerForQuestionAnswering;\nvar __webpack_exports__RoFormerForSequenceClassification = __webpack_exports__.RoFormerForSequenceClassification;\nvar __webpack_exports__RoFormerForTokenClassification = __webpack_exports__.RoFormerForTokenClassification;\nvar __webpack_exports__RoFormerModel = __webpack_exports__.RoFormerModel;\nvar __webpack_exports__RoFormerPreTrainedModel = __webpack_exports__.RoFormerPreTrainedModel;\nvar __webpack_exports__RoFormerTokenizer = __webpack_exports__.RoFormerTokenizer;\nvar __webpack_exports__RobertaForMaskedLM = __webpack_exports__.RobertaForMaskedLM;\nvar __webpack_exports__RobertaForQuestionAnswering = __webpack_exports__.RobertaForQuestionAnswering;\nvar __webpack_exports__RobertaForSequenceClassification = __webpack_exports__.RobertaForSequenceClassification;\nvar __webpack_exports__RobertaForTokenClassification = __webpack_exports__.RobertaForTokenClassification;\nvar __webpack_exports__RobertaModel = __webpack_exports__.RobertaModel;\nvar __webpack_exports__RobertaPreTrainedModel = __webpack_exports__.RobertaPreTrainedModel;\nvar __webpack_exports__RobertaTokenizer = __webpack_exports__.RobertaTokenizer;\nvar __webpack_exports__SamImageProcessor = __webpack_exports__.SamImageProcessor;\nvar __webpack_exports__SamImageSegmentationOutput = __webpack_exports__.SamImageSegmentationOutput;\nvar __webpack_exports__SamModel = __webpack_exports__.SamModel;\nvar __webpack_exports__SamPreTrainedModel = __webpack_exports__.SamPreTrainedModel;\nvar __webpack_exports__SamProcessor = __webpack_exports__.SamProcessor;\nvar __webpack_exports__SapiensForDepthEstimation = __webpack_exports__.SapiensForDepthEstimation;\nvar __webpack_exports__SapiensForNormalEstimation = __webpack_exports__.SapiensForNormalEstimation;\nvar __webpack_exports__SapiensForSemanticSegmentation = __webpack_exports__.SapiensForSemanticSegmentation;\nvar __webpack_exports__SapiensPreTrainedModel = __webpack_exports__.SapiensPreTrainedModel;\nvar __webpack_exports__SeamlessM4TFeatureExtractor = __webpack_exports__.SeamlessM4TFeatureExtractor;\nvar __webpack_exports__SegformerFeatureExtractor = __webpack_exports__.SegformerFeatureExtractor;\nvar __webpack_exports__SegformerForImageClassification = __webpack_exports__.SegformerForImageClassification;\nvar __webpack_exports__SegformerForSemanticSegmentation = __webpack_exports__.SegformerForSemanticSegmentation;\nvar __webpack_exports__SegformerImageProcessor = __webpack_exports__.SegformerImageProcessor;\nvar __webpack_exports__SegformerModel = __webpack_exports__.SegformerModel;\nvar __webpack_exports__SegformerPreTrainedModel = __webpack_exports__.SegformerPreTrainedModel;\nvar __webpack_exports__Seq2SeqLMOutput = __webpack_exports__.Seq2SeqLMOutput;\nvar __webpack_exports__SequenceClassifierOutput = __webpack_exports__.SequenceClassifierOutput;\nvar __webpack_exports__SiglipImageProcessor = __webpack_exports__.SiglipImageProcessor;\nvar __webpack_exports__SiglipModel = __webpack_exports__.SiglipModel;\nvar __webpack_exports__SiglipPreTrainedModel = __webpack_exports__.SiglipPreTrainedModel;\nvar __webpack_exports__SiglipTextModel = __webpack_exports__.SiglipTextModel;\nvar __webpack_exports__SiglipTokenizer = __webpack_exports__.SiglipTokenizer;\nvar __webpack_exports__SiglipVisionModel = __webpack_exports__.SiglipVisionModel;\nvar __webpack_exports__SmolVLMForConditionalGeneration = __webpack_exports__.SmolVLMForConditionalGeneration;\nvar __webpack_exports__SmolVLMImageProcessor = __webpack_exports__.SmolVLMImageProcessor;\nvar __webpack_exports__SmolVLMProcessor = __webpack_exports__.SmolVLMProcessor;\nvar __webpack_exports__SpeechT5FeatureExtractor = __webpack_exports__.SpeechT5FeatureExtractor;\nvar __webpack_exports__SpeechT5ForSpeechToText = __webpack_exports__.SpeechT5ForSpeechToText;\nvar __webpack_exports__SpeechT5ForTextToSpeech = __webpack_exports__.SpeechT5ForTextToSpeech;\nvar __webpack_exports__SpeechT5HifiGan = __webpack_exports__.SpeechT5HifiGan;\nvar __webpack_exports__SpeechT5Model = __webpack_exports__.SpeechT5Model;\nvar __webpack_exports__SpeechT5PreTrainedModel = __webpack_exports__.SpeechT5PreTrainedModel;\nvar __webpack_exports__SpeechT5Processor = __webpack_exports__.SpeechT5Processor;\nvar __webpack_exports__SpeechT5Tokenizer = __webpack_exports__.SpeechT5Tokenizer;\nvar __webpack_exports__SqueezeBertForMaskedLM = __webpack_exports__.SqueezeBertForMaskedLM;\nvar __webpack_exports__SqueezeBertForQuestionAnswering = __webpack_exports__.SqueezeBertForQuestionAnswering;\nvar __webpack_exports__SqueezeBertForSequenceClassification = __webpack_exports__.SqueezeBertForSequenceClassification;\nvar __webpack_exports__SqueezeBertModel = __webpack_exports__.SqueezeBertModel;\nvar __webpack_exports__SqueezeBertPreTrainedModel = __webpack_exports__.SqueezeBertPreTrainedModel;\nvar __webpack_exports__SqueezeBertTokenizer = __webpack_exports__.SqueezeBertTokenizer;\nvar __webpack_exports__StableLmForCausalLM = __webpack_exports__.StableLmForCausalLM;\nvar __webpack_exports__StableLmModel = __webpack_exports__.StableLmModel;\nvar __webpack_exports__StableLmPreTrainedModel = __webpack_exports__.StableLmPreTrainedModel;\nvar __webpack_exports__Starcoder2ForCausalLM = __webpack_exports__.Starcoder2ForCausalLM;\nvar __webpack_exports__Starcoder2Model = __webpack_exports__.Starcoder2Model;\nvar __webpack_exports__Starcoder2PreTrainedModel = __webpack_exports__.Starcoder2PreTrainedModel;\nvar __webpack_exports__StoppingCriteria = __webpack_exports__.StoppingCriteria;\nvar __webpack_exports__StoppingCriteriaList = __webpack_exports__.StoppingCriteriaList;\nvar __webpack_exports__StyleTextToSpeech2Model = __webpack_exports__.StyleTextToSpeech2Model;\nvar __webpack_exports__StyleTextToSpeech2PreTrainedModel = __webpack_exports__.StyleTextToSpeech2PreTrainedModel;\nvar __webpack_exports__SummarizationPipeline = __webpack_exports__.SummarizationPipeline;\nvar __webpack_exports__SuppressTokensAtBeginLogitsProcessor = __webpack_exports__.SuppressTokensAtBeginLogitsProcessor;\nvar __webpack_exports__Swin2SRForImageSuperResolution = __webpack_exports__.Swin2SRForImageSuperResolution;\nvar __webpack_exports__Swin2SRImageProcessor = __webpack_exports__.Swin2SRImageProcessor;\nvar __webpack_exports__Swin2SRModel = __webpack_exports__.Swin2SRModel;\nvar __webpack_exports__Swin2SRPreTrainedModel = __webpack_exports__.Swin2SRPreTrainedModel;\nvar __webpack_exports__SwinForImageClassification = __webpack_exports__.SwinForImageClassification;\nvar __webpack_exports__SwinForSemanticSegmentation = __webpack_exports__.SwinForSemanticSegmentation;\nvar __webpack_exports__SwinModel = __webpack_exports__.SwinModel;\nvar __webpack_exports__SwinPreTrainedModel = __webpack_exports__.SwinPreTrainedModel;\nvar __webpack_exports__T5ForConditionalGeneration = __webpack_exports__.T5ForConditionalGeneration;\nvar __webpack_exports__T5Model = __webpack_exports__.T5Model;\nvar __webpack_exports__T5PreTrainedModel = __webpack_exports__.T5PreTrainedModel;\nvar __webpack_exports__T5Tokenizer = __webpack_exports__.T5Tokenizer;\nvar __webpack_exports__TableTransformerForObjectDetection = __webpack_exports__.TableTransformerForObjectDetection;\nvar __webpack_exports__TableTransformerModel = __webpack_exports__.TableTransformerModel;\nvar __webpack_exports__TableTransformerObjectDetectionOutput = __webpack_exports__.TableTransformerObjectDetectionOutput;\nvar __webpack_exports__TableTransformerPreTrainedModel = __webpack_exports__.TableTransformerPreTrainedModel;\nvar __webpack_exports__TemperatureLogitsWarper = __webpack_exports__.TemperatureLogitsWarper;\nvar __webpack_exports__Tensor = __webpack_exports__.Tensor;\nvar __webpack_exports__Text2TextGenerationPipeline = __webpack_exports__.Text2TextGenerationPipeline;\nvar __webpack_exports__TextClassificationPipeline = __webpack_exports__.TextClassificationPipeline;\nvar __webpack_exports__TextGenerationPipeline = __webpack_exports__.TextGenerationPipeline;\nvar __webpack_exports__TextStreamer = __webpack_exports__.TextStreamer;\nvar __webpack_exports__TextToAudioPipeline = __webpack_exports__.TextToAudioPipeline;\nvar __webpack_exports__TokenClassificationPipeline = __webpack_exports__.TokenClassificationPipeline;\nvar __webpack_exports__TokenClassifierOutput = __webpack_exports__.TokenClassifierOutput;\nvar __webpack_exports__TokenizerModel = __webpack_exports__.TokenizerModel;\nvar __webpack_exports__TopKLogitsWarper = __webpack_exports__.TopKLogitsWarper;\nvar __webpack_exports__TopPLogitsWarper = __webpack_exports__.TopPLogitsWarper;\nvar __webpack_exports__TrOCRForCausalLM = __webpack_exports__.TrOCRForCausalLM;\nvar __webpack_exports__TrOCRPreTrainedModel = __webpack_exports__.TrOCRPreTrainedModel;\nvar __webpack_exports__TranslationPipeline = __webpack_exports__.TranslationPipeline;\nvar __webpack_exports__UltravoxModel = __webpack_exports__.UltravoxModel;\nvar __webpack_exports__UltravoxPreTrainedModel = __webpack_exports__.UltravoxPreTrainedModel;\nvar __webpack_exports__UltravoxProcessor = __webpack_exports__.UltravoxProcessor;\nvar __webpack_exports__UniSpeechForCTC = __webpack_exports__.UniSpeechForCTC;\nvar __webpack_exports__UniSpeechForSequenceClassification = __webpack_exports__.UniSpeechForSequenceClassification;\nvar __webpack_exports__UniSpeechModel = __webpack_exports__.UniSpeechModel;\nvar __webpack_exports__UniSpeechPreTrainedModel = __webpack_exports__.UniSpeechPreTrainedModel;\nvar __webpack_exports__UniSpeechSatForAudioFrameClassification = __webpack_exports__.UniSpeechSatForAudioFrameClassification;\nvar __webpack_exports__UniSpeechSatForCTC = __webpack_exports__.UniSpeechSatForCTC;\nvar __webpack_exports__UniSpeechSatForSequenceClassification = __webpack_exports__.UniSpeechSatForSequenceClassification;\nvar __webpack_exports__UniSpeechSatModel = __webpack_exports__.UniSpeechSatModel;\nvar __webpack_exports__UniSpeechSatPreTrainedModel = __webpack_exports__.UniSpeechSatPreTrainedModel;\nvar __webpack_exports__VLChatProcessor = __webpack_exports__.VLChatProcessor;\nvar __webpack_exports__VLMImageProcessor = __webpack_exports__.VLMImageProcessor;\nvar __webpack_exports__ViTFeatureExtractor = __webpack_exports__.ViTFeatureExtractor;\nvar __webpack_exports__ViTForImageClassification = __webpack_exports__.ViTForImageClassification;\nvar __webpack_exports__ViTImageProcessor = __webpack_exports__.ViTImageProcessor;\nvar __webpack_exports__ViTMAEModel = __webpack_exports__.ViTMAEModel;\nvar __webpack_exports__ViTMAEPreTrainedModel = __webpack_exports__.ViTMAEPreTrainedModel;\nvar __webpack_exports__ViTMSNForImageClassification = __webpack_exports__.ViTMSNForImageClassification;\nvar __webpack_exports__ViTMSNModel = __webpack_exports__.ViTMSNModel;\nvar __webpack_exports__ViTMSNPreTrainedModel = __webpack_exports__.ViTMSNPreTrainedModel;\nvar __webpack_exports__ViTModel = __webpack_exports__.ViTModel;\nvar __webpack_exports__ViTPreTrainedModel = __webpack_exports__.ViTPreTrainedModel;\nvar __webpack_exports__VisionEncoderDecoderModel = __webpack_exports__.VisionEncoderDecoderModel;\nvar __webpack_exports__VitMatteForImageMatting = __webpack_exports__.VitMatteForImageMatting;\nvar __webpack_exports__VitMatteImageProcessor = __webpack_exports__.VitMatteImageProcessor;\nvar __webpack_exports__VitMattePreTrainedModel = __webpack_exports__.VitMattePreTrainedModel;\nvar __webpack_exports__VitPoseForPoseEstimation = __webpack_exports__.VitPoseForPoseEstimation;\nvar __webpack_exports__VitPoseImageProcessor = __webpack_exports__.VitPoseImageProcessor;\nvar __webpack_exports__VitPosePreTrainedModel = __webpack_exports__.VitPosePreTrainedModel;\nvar __webpack_exports__VitsModel = __webpack_exports__.VitsModel;\nvar __webpack_exports__VitsModelOutput = __webpack_exports__.VitsModelOutput;\nvar __webpack_exports__VitsPreTrainedModel = __webpack_exports__.VitsPreTrainedModel;\nvar __webpack_exports__VitsTokenizer = __webpack_exports__.VitsTokenizer;\nvar __webpack_exports__Wav2Vec2BertForCTC = __webpack_exports__.Wav2Vec2BertForCTC;\nvar __webpack_exports__Wav2Vec2BertForSequenceClassification = __webpack_exports__.Wav2Vec2BertForSequenceClassification;\nvar __webpack_exports__Wav2Vec2BertModel = __webpack_exports__.Wav2Vec2BertModel;\nvar __webpack_exports__Wav2Vec2BertPreTrainedModel = __webpack_exports__.Wav2Vec2BertPreTrainedModel;\nvar __webpack_exports__Wav2Vec2CTCTokenizer = __webpack_exports__.Wav2Vec2CTCTokenizer;\nvar __webpack_exports__Wav2Vec2FeatureExtractor = __webpack_exports__.Wav2Vec2FeatureExtractor;\nvar __webpack_exports__Wav2Vec2ForAudioFrameClassification = __webpack_exports__.Wav2Vec2ForAudioFrameClassification;\nvar __webpack_exports__Wav2Vec2ForCTC = __webpack_exports__.Wav2Vec2ForCTC;\nvar __webpack_exports__Wav2Vec2ForSequenceClassification = __webpack_exports__.Wav2Vec2ForSequenceClassification;\nvar __webpack_exports__Wav2Vec2Model = __webpack_exports__.Wav2Vec2Model;\nvar __webpack_exports__Wav2Vec2PreTrainedModel = __webpack_exports__.Wav2Vec2PreTrainedModel;\nvar __webpack_exports__Wav2Vec2Processor = __webpack_exports__.Wav2Vec2Processor;\nvar __webpack_exports__Wav2Vec2ProcessorWithLM = __webpack_exports__.Wav2Vec2ProcessorWithLM;\nvar __webpack_exports__WavLMForAudioFrameClassification = __webpack_exports__.WavLMForAudioFrameClassification;\nvar __webpack_exports__WavLMForCTC = __webpack_exports__.WavLMForCTC;\nvar __webpack_exports__WavLMForSequenceClassification = __webpack_exports__.WavLMForSequenceClassification;\nvar __webpack_exports__WavLMForXVector = __webpack_exports__.WavLMForXVector;\nvar __webpack_exports__WavLMModel = __webpack_exports__.WavLMModel;\nvar __webpack_exports__WavLMPreTrainedModel = __webpack_exports__.WavLMPreTrainedModel;\nvar __webpack_exports__WeSpeakerFeatureExtractor = __webpack_exports__.WeSpeakerFeatureExtractor;\nvar __webpack_exports__WeSpeakerResNetModel = __webpack_exports__.WeSpeakerResNetModel;\nvar __webpack_exports__WeSpeakerResNetPreTrainedModel = __webpack_exports__.WeSpeakerResNetPreTrainedModel;\nvar __webpack_exports__WhisperFeatureExtractor = __webpack_exports__.WhisperFeatureExtractor;\nvar __webpack_exports__WhisperForConditionalGeneration = __webpack_exports__.WhisperForConditionalGeneration;\nvar __webpack_exports__WhisperModel = __webpack_exports__.WhisperModel;\nvar __webpack_exports__WhisperPreTrainedModel = __webpack_exports__.WhisperPreTrainedModel;\nvar __webpack_exports__WhisperProcessor = __webpack_exports__.WhisperProcessor;\nvar __webpack_exports__WhisperTextStreamer = __webpack_exports__.WhisperTextStreamer;\nvar __webpack_exports__WhisperTimeStampLogitsProcessor = __webpack_exports__.WhisperTimeStampLogitsProcessor;\nvar __webpack_exports__WhisperTokenizer = __webpack_exports__.WhisperTokenizer;\nvar __webpack_exports__XLMForQuestionAnswering = __webpack_exports__.XLMForQuestionAnswering;\nvar __webpack_exports__XLMForSequenceClassification = __webpack_exports__.XLMForSequenceClassification;\nvar __webpack_exports__XLMForTokenClassification = __webpack_exports__.XLMForTokenClassification;\nvar __webpack_exports__XLMModel = __webpack_exports__.XLMModel;\nvar __webpack_exports__XLMPreTrainedModel = __webpack_exports__.XLMPreTrainedModel;\nvar __webpack_exports__XLMRobertaForMaskedLM = __webpack_exports__.XLMRobertaForMaskedLM;\nvar __webpack_exports__XLMRobertaForQuestionAnswering = __webpack_exports__.XLMRobertaForQuestionAnswering;\nvar __webpack_exports__XLMRobertaForSequenceClassification = __webpack_exports__.XLMRobertaForSequenceClassification;\nvar __webpack_exports__XLMRobertaForTokenClassification = __webpack_exports__.XLMRobertaForTokenClassification;\nvar __webpack_exports__XLMRobertaModel = __webpack_exports__.XLMRobertaModel;\nvar __webpack_exports__XLMRobertaPreTrainedModel = __webpack_exports__.XLMRobertaPreTrainedModel;\nvar __webpack_exports__XLMRobertaTokenizer = __webpack_exports__.XLMRobertaTokenizer;\nvar __webpack_exports__XLMTokenizer = __webpack_exports__.XLMTokenizer;\nvar __webpack_exports__XLMWithLMHeadModel = __webpack_exports__.XLMWithLMHeadModel;\nvar __webpack_exports__XVectorOutput = __webpack_exports__.XVectorOutput;\nvar __webpack_exports__YolosFeatureExtractor = __webpack_exports__.YolosFeatureExtractor;\nvar __webpack_exports__YolosForObjectDetection = __webpack_exports__.YolosForObjectDetection;\nvar __webpack_exports__YolosImageProcessor = __webpack_exports__.YolosImageProcessor;\nvar __webpack_exports__YolosModel = __webpack_exports__.YolosModel;\nvar __webpack_exports__YolosObjectDetectionOutput = __webpack_exports__.YolosObjectDetectionOutput;\nvar __webpack_exports__YolosPreTrainedModel = __webpack_exports__.YolosPreTrainedModel;\nvar __webpack_exports__ZeroShotAudioClassificationPipeline = __webpack_exports__.ZeroShotAudioClassificationPipeline;\nvar __webpack_exports__ZeroShotClassificationPipeline = __webpack_exports__.ZeroShotClassificationPipeline;\nvar __webpack_exports__ZeroShotImageClassificationPipeline = __webpack_exports__.ZeroShotImageClassificationPipeline;\nvar __webpack_exports__ZeroShotObjectDetectionPipeline = __webpack_exports__.ZeroShotObjectDetectionPipeline;\nvar __webpack_exports__bankers_round = __webpack_exports__.bankers_round;\nvar __webpack_exports__cat = __webpack_exports__.cat;\nvar __webpack_exports__cos_sim = __webpack_exports__.cos_sim;\nvar __webpack_exports__dot = __webpack_exports__.dot;\nvar __webpack_exports__dynamic_time_warping = __webpack_exports__.dynamic_time_warping;\nvar __webpack_exports__env = __webpack_exports__.env;\nvar __webpack_exports__full = __webpack_exports__.full;\nvar __webpack_exports__full_like = __webpack_exports__.full_like;\nvar __webpack_exports__getKeyValueShapes = __webpack_exports__.getKeyValueShapes;\nvar __webpack_exports__hamming = __webpack_exports__.hamming;\nvar __webpack_exports__hanning = __webpack_exports__.hanning;\nvar __webpack_exports__interpolate = __webpack_exports__.interpolate;\nvar __webpack_exports__interpolate_4d = __webpack_exports__.interpolate_4d;\nvar __webpack_exports__interpolate_data = __webpack_exports__.interpolate_data;\nvar __webpack_exports__is_chinese_char = __webpack_exports__.is_chinese_char;\nvar __webpack_exports__layer_norm = __webpack_exports__.layer_norm;\nvar __webpack_exports__load_image = __webpack_exports__.load_image;\nvar __webpack_exports__load_video = __webpack_exports__.load_video;\nvar __webpack_exports__log_softmax = __webpack_exports__.log_softmax;\nvar __webpack_exports__magnitude = __webpack_exports__.magnitude;\nvar __webpack_exports__matmul = __webpack_exports__.matmul;\nvar __webpack_exports__max = __webpack_exports__.max;\nvar __webpack_exports__mean = __webpack_exports__.mean;\nvar __webpack_exports__mean_pooling = __webpack_exports__.mean_pooling;\nvar __webpack_exports__medianFilter = __webpack_exports__.medianFilter;\nvar __webpack_exports__mel_filter_bank = __webpack_exports__.mel_filter_bank;\nvar __webpack_exports__min = __webpack_exports__.min;\nvar __webpack_exports__ones = __webpack_exports__.ones;\nvar __webpack_exports__ones_like = __webpack_exports__.ones_like;\nvar __webpack_exports__permute = __webpack_exports__.permute;\nvar __webpack_exports__permute_data = __webpack_exports__.permute_data;\nvar __webpack_exports__pipeline = __webpack_exports__.pipeline;\nvar __webpack_exports__quantize_embeddings = __webpack_exports__.quantize_embeddings;\nvar __webpack_exports__rand = __webpack_exports__.rand;\nvar __webpack_exports__read_audio = __webpack_exports__.read_audio;\nvar __webpack_exports__rfft = __webpack_exports__.rfft;\nvar __webpack_exports__round = __webpack_exports__.round;\nvar __webpack_exports__slice = __webpack_exports__.slice;\nvar __webpack_exports__softmax = __webpack_exports__.softmax;\nvar __webpack_exports__spectrogram = __webpack_exports__.spectrogram;\nvar __webpack_exports__stack = __webpack_exports__.stack;\nvar __webpack_exports__std_mean = __webpack_exports__.std_mean;\nvar __webpack_exports__topk = __webpack_exports__.topk;\nvar __webpack_exports__window_function = __webpack_exports__.window_function;\nvar __webpack_exports__zeros = __webpack_exports__.zeros;\nvar __webpack_exports__zeros_like = __webpack_exports__.zeros_like;\nexport { __webpack_exports__ASTFeatureExtractor as ASTFeatureExtractor, __webpack_exports__ASTForAudioClassification as ASTForAudioClassification, __webpack_exports__ASTModel as ASTModel, __webpack_exports__ASTPreTrainedModel as ASTPreTrainedModel, __webpack_exports__AlbertForMaskedLM as AlbertForMaskedLM, __webpack_exports__AlbertForQuestionAnswering as AlbertForQuestionAnswering, __webpack_exports__AlbertForSequenceClassification as AlbertForSequenceClassification, __webpack_exports__AlbertModel as AlbertModel, __webpack_exports__AlbertPreTrainedModel as AlbertPreTrainedModel, __webpack_exports__AlbertTokenizer as AlbertTokenizer, __webpack_exports__AudioClassificationPipeline as AudioClassificationPipeline, __webpack_exports__AutoConfig as AutoConfig, __webpack_exports__AutoFeatureExtractor as AutoFeatureExtractor, __webpack_exports__AutoImageProcessor as AutoImageProcessor, __webpack_exports__AutoModel as AutoModel, __webpack_exports__AutoModelForAudioClassification as AutoModelForAudioClassification, __webpack_exports__AutoModelForAudioFrameClassification as AutoModelForAudioFrameClassification, __webpack_exports__AutoModelForAudioTextToText as AutoModelForAudioTextToText, __webpack_exports__AutoModelForCTC as AutoModelForCTC, __webpack_exports__AutoModelForCausalLM as AutoModelForCausalLM, __webpack_exports__AutoModelForDepthEstimation as AutoModelForDepthEstimation, __webpack_exports__AutoModelForDocumentQuestionAnswering as AutoModelForDocumentQuestionAnswering, __webpack_exports__AutoModelForImageClassification as AutoModelForImageClassification, __webpack_exports__AutoModelForImageFeatureExtraction as AutoModelForImageFeatureExtraction, __webpack_exports__AutoModelForImageMatting as AutoModelForImageMatting, __webpack_exports__AutoModelForImageSegmentation as AutoModelForImageSegmentation, __webpack_exports__AutoModelForImageTextToText as AutoModelForImageTextToText, __webpack_exports__AutoModelForImageToImage as AutoModelForImageToImage, __webpack_exports__AutoModelForMaskGeneration as AutoModelForMaskGeneration, __webpack_exports__AutoModelForMaskedLM as AutoModelForMaskedLM, __webpack_exports__AutoModelForNormalEstimation as AutoModelForNormalEstimation, __webpack_exports__AutoModelForObjectDetection as AutoModelForObjectDetection, __webpack_exports__AutoModelForPoseEstimation as AutoModelForPoseEstimation, __webpack_exports__AutoModelForQuestionAnswering as AutoModelForQuestionAnswering, __webpack_exports__AutoModelForSemanticSegmentation as AutoModelForSemanticSegmentation, __webpack_exports__AutoModelForSeq2SeqLM as AutoModelForSeq2SeqLM, __webpack_exports__AutoModelForSequenceClassification as AutoModelForSequenceClassification, __webpack_exports__AutoModelForSpeechSeq2Seq as AutoModelForSpeechSeq2Seq, __webpack_exports__AutoModelForTextToSpectrogram as AutoModelForTextToSpectrogram, __webpack_exports__AutoModelForTextToWaveform as AutoModelForTextToWaveform, __webpack_exports__AutoModelForTokenClassification as AutoModelForTokenClassification, __webpack_exports__AutoModelForUniversalSegmentation as AutoModelForUniversalSegmentation, __webpack_exports__AutoModelForVision2Seq as AutoModelForVision2Seq, __webpack_exports__AutoModelForXVector as AutoModelForXVector, __webpack_exports__AutoModelForZeroShotObjectDetection as AutoModelForZeroShotObjectDetection, __webpack_exports__AutoProcessor as AutoProcessor, __webpack_exports__AutoTokenizer as AutoTokenizer, __webpack_exports__AutomaticSpeechRecognitionPipeline as AutomaticSpeechRecognitionPipeline, __webpack_exports__BackgroundRemovalPipeline as BackgroundRemovalPipeline, __webpack_exports__BartForConditionalGeneration as BartForConditionalGeneration, __webpack_exports__BartForSequenceClassification as BartForSequenceClassification, __webpack_exports__BartModel as BartModel, __webpack_exports__BartPretrainedModel as BartPretrainedModel, __webpack_exports__BartTokenizer as BartTokenizer, __webpack_exports__BaseModelOutput as BaseModelOutput, __webpack_exports__BaseStreamer as BaseStreamer, __webpack_exports__BeitFeatureExtractor as BeitFeatureExtractor, __webpack_exports__BeitForImageClassification as BeitForImageClassification, __webpack_exports__BeitModel as BeitModel, __webpack_exports__BeitPreTrainedModel as BeitPreTrainedModel, __webpack_exports__BertForMaskedLM as BertForMaskedLM, __webpack_exports__BertForQuestionAnswering as BertForQuestionAnswering, __webpack_exports__BertForSequenceClassification as BertForSequenceClassification, __webpack_exports__BertForTokenClassification as BertForTokenClassification, __webpack_exports__BertModel as BertModel, __webpack_exports__BertPreTrainedModel as BertPreTrainedModel, __webpack_exports__BertTokenizer as BertTokenizer, __webpack_exports__BitImageProcessor as BitImageProcessor, __webpack_exports__BlenderbotForConditionalGeneration as BlenderbotForConditionalGeneration, __webpack_exports__BlenderbotModel as BlenderbotModel, __webpack_exports__BlenderbotPreTrainedModel as BlenderbotPreTrainedModel, __webpack_exports__BlenderbotSmallForConditionalGeneration as BlenderbotSmallForConditionalGeneration, __webpack_exports__BlenderbotSmallModel as BlenderbotSmallModel, __webpack_exports__BlenderbotSmallPreTrainedModel as BlenderbotSmallPreTrainedModel, __webpack_exports__BlenderbotSmallTokenizer as BlenderbotSmallTokenizer, __webpack_exports__BlenderbotTokenizer as BlenderbotTokenizer, __webpack_exports__BloomForCausalLM as BloomForCausalLM, __webpack_exports__BloomModel as BloomModel, __webpack_exports__BloomPreTrainedModel as BloomPreTrainedModel, __webpack_exports__BloomTokenizer as BloomTokenizer, __webpack_exports__CLIPFeatureExtractor as CLIPFeatureExtractor, __webpack_exports__CLIPImageProcessor as CLIPImageProcessor, __webpack_exports__CLIPModel as CLIPModel, __webpack_exports__CLIPPreTrainedModel as CLIPPreTrainedModel, __webpack_exports__CLIPSegForImageSegmentation as CLIPSegForImageSegmentation, __webpack_exports__CLIPSegModel as CLIPSegModel, __webpack_exports__CLIPSegPreTrainedModel as CLIPSegPreTrainedModel, __webpack_exports__CLIPTextModel as CLIPTextModel, __webpack_exports__CLIPTextModelWithProjection as CLIPTextModelWithProjection, __webpack_exports__CLIPTokenizer as CLIPTokenizer, __webpack_exports__CLIPVisionModel as CLIPVisionModel, __webpack_exports__CLIPVisionModelWithProjection as CLIPVisionModelWithProjection, __webpack_exports__CamembertForMaskedLM as CamembertForMaskedLM, __webpack_exports__CamembertForQuestionAnswering as CamembertForQuestionAnswering, __webpack_exports__CamembertForSequenceClassification as CamembertForSequenceClassification, __webpack_exports__CamembertForTokenClassification as CamembertForTokenClassification, __webpack_exports__CamembertModel as CamembertModel, __webpack_exports__CamembertPreTrainedModel as CamembertPreTrainedModel, __webpack_exports__CamembertTokenizer as CamembertTokenizer, __webpack_exports__CausalLMOutput as CausalLMOutput, __webpack_exports__CausalLMOutputWithPast as CausalLMOutputWithPast, __webpack_exports__ChineseCLIPFeatureExtractor as ChineseCLIPFeatureExtractor, __webpack_exports__ChineseCLIPModel as ChineseCLIPModel, __webpack_exports__ChineseCLIPPreTrainedModel as ChineseCLIPPreTrainedModel, __webpack_exports__ClapAudioModelWithProjection as ClapAudioModelWithProjection, __webpack_exports__ClapFeatureExtractor as ClapFeatureExtractor, __webpack_exports__ClapModel as ClapModel, __webpack_exports__ClapPreTrainedModel as ClapPreTrainedModel, __webpack_exports__ClapTextModelWithProjection as ClapTextModelWithProjection, __webpack_exports__ClassifierFreeGuidanceLogitsProcessor as ClassifierFreeGuidanceLogitsProcessor, __webpack_exports__CodeGenForCausalLM as CodeGenForCausalLM, __webpack_exports__CodeGenModel as CodeGenModel, __webpack_exports__CodeGenPreTrainedModel as CodeGenPreTrainedModel, __webpack_exports__CodeGenTokenizer as CodeGenTokenizer, __webpack_exports__CodeLlamaTokenizer as CodeLlamaTokenizer, __webpack_exports__CohereForCausalLM as CohereForCausalLM, __webpack_exports__CohereModel as CohereModel, __webpack_exports__CoherePreTrainedModel as CoherePreTrainedModel, __webpack_exports__CohereTokenizer as CohereTokenizer, __webpack_exports__ConvBertForMaskedLM as ConvBertForMaskedLM, __webpack_exports__ConvBertForQuestionAnswering as ConvBertForQuestionAnswering, __webpack_exports__ConvBertForSequenceClassification as ConvBertForSequenceClassification, __webpack_exports__ConvBertForTokenClassification as ConvBertForTokenClassification, __webpack_exports__ConvBertModel as ConvBertModel, __webpack_exports__ConvBertPreTrainedModel as ConvBertPreTrainedModel, __webpack_exports__ConvBertTokenizer as ConvBertTokenizer, __webpack_exports__ConvNextFeatureExtractor as ConvNextFeatureExtractor, __webpack_exports__ConvNextForImageClassification as ConvNextForImageClassification, __webpack_exports__ConvNextImageProcessor as ConvNextImageProcessor, __webpack_exports__ConvNextModel as ConvNextModel, __webpack_exports__ConvNextPreTrainedModel as ConvNextPreTrainedModel, __webpack_exports__ConvNextV2ForImageClassification as ConvNextV2ForImageClassification, __webpack_exports__ConvNextV2Model as ConvNextV2Model, __webpack_exports__ConvNextV2PreTrainedModel as ConvNextV2PreTrainedModel, __webpack_exports__DPTFeatureExtractor as DPTFeatureExtractor, __webpack_exports__DPTForDepthEstimation as DPTForDepthEstimation, __webpack_exports__DPTImageProcessor as DPTImageProcessor, __webpack_exports__DPTModel as DPTModel, __webpack_exports__DPTPreTrainedModel as DPTPreTrainedModel, __webpack_exports__DacDecoderModel as DacDecoderModel, __webpack_exports__DacDecoderOutput as DacDecoderOutput, __webpack_exports__DacEncoderModel as DacEncoderModel, __webpack_exports__DacEncoderOutput as DacEncoderOutput, __webpack_exports__DacFeatureExtractor as DacFeatureExtractor, __webpack_exports__DacModel as DacModel, __webpack_exports__DacPreTrainedModel as DacPreTrainedModel, __webpack_exports__DataTypeMap as DataTypeMap, __webpack_exports__DebertaForMaskedLM as DebertaForMaskedLM, __webpack_exports__DebertaForQuestionAnswering as DebertaForQuestionAnswering, __webpack_exports__DebertaForSequenceClassification as DebertaForSequenceClassification, __webpack_exports__DebertaForTokenClassification as DebertaForTokenClassification, __webpack_exports__DebertaModel as DebertaModel, __webpack_exports__DebertaPreTrainedModel as DebertaPreTrainedModel, __webpack_exports__DebertaTokenizer as DebertaTokenizer, __webpack_exports__DebertaV2ForMaskedLM as DebertaV2ForMaskedLM, __webpack_exports__DebertaV2ForQuestionAnswering as DebertaV2ForQuestionAnswering, __webpack_exports__DebertaV2ForSequenceClassification as DebertaV2ForSequenceClassification, __webpack_exports__DebertaV2ForTokenClassification as DebertaV2ForTokenClassification, __webpack_exports__DebertaV2Model as DebertaV2Model, __webpack_exports__DebertaV2PreTrainedModel as DebertaV2PreTrainedModel, __webpack_exports__DebertaV2Tokenizer as DebertaV2Tokenizer, __webpack_exports__DecisionTransformerModel as DecisionTransformerModel, __webpack_exports__DecisionTransformerPreTrainedModel as DecisionTransformerPreTrainedModel, __webpack_exports__DeiTFeatureExtractor as DeiTFeatureExtractor, __webpack_exports__DeiTForImageClassification as DeiTForImageClassification, __webpack_exports__DeiTImageProcessor as DeiTImageProcessor, __webpack_exports__DeiTModel as DeiTModel, __webpack_exports__DeiTPreTrainedModel as DeiTPreTrainedModel, __webpack_exports__DepthAnythingForDepthEstimation as DepthAnythingForDepthEstimation, __webpack_exports__DepthAnythingPreTrainedModel as DepthAnythingPreTrainedModel, __webpack_exports__DepthEstimationPipeline as DepthEstimationPipeline, __webpack_exports__DepthProForDepthEstimation as DepthProForDepthEstimation, __webpack_exports__DepthProPreTrainedModel as DepthProPreTrainedModel, __webpack_exports__DetrFeatureExtractor as DetrFeatureExtractor, __webpack_exports__DetrForObjectDetection as DetrForObjectDetection, __webpack_exports__DetrForSegmentation as DetrForSegmentation, __webpack_exports__DetrImageProcessor as DetrImageProcessor, __webpack_exports__DetrModel as DetrModel, __webpack_exports__DetrObjectDetectionOutput as DetrObjectDetectionOutput, __webpack_exports__DetrPreTrainedModel as DetrPreTrainedModel, __webpack_exports__DetrSegmentationOutput as DetrSegmentationOutput, __webpack_exports__Dinov2ForImageClassification as Dinov2ForImageClassification, __webpack_exports__Dinov2Model as Dinov2Model, __webpack_exports__Dinov2PreTrainedModel as Dinov2PreTrainedModel, __webpack_exports__Dinov2WithRegistersForImageClassification as Dinov2WithRegistersForImageClassification, __webpack_exports__Dinov2WithRegistersModel as Dinov2WithRegistersModel, __webpack_exports__Dinov2WithRegistersPreTrainedModel as Dinov2WithRegistersPreTrainedModel, __webpack_exports__DistilBertForMaskedLM as DistilBertForMaskedLM, __webpack_exports__DistilBertForQuestionAnswering as DistilBertForQuestionAnswering, __webpack_exports__DistilBertForSequenceClassification as DistilBertForSequenceClassification, __webpack_exports__DistilBertForTokenClassification as DistilBertForTokenClassification, __webpack_exports__DistilBertModel as DistilBertModel, __webpack_exports__DistilBertPreTrainedModel as DistilBertPreTrainedModel, __webpack_exports__DistilBertTokenizer as DistilBertTokenizer, __webpack_exports__DocumentQuestionAnsweringPipeline as DocumentQuestionAnsweringPipeline, __webpack_exports__DonutFeatureExtractor as DonutFeatureExtractor, __webpack_exports__DonutImageProcessor as DonutImageProcessor, __webpack_exports__DonutSwinModel as DonutSwinModel, __webpack_exports__DonutSwinPreTrainedModel as DonutSwinPreTrainedModel, __webpack_exports__EfficientNetForImageClassification as EfficientNetForImageClassification, __webpack_exports__EfficientNetImageProcessor as EfficientNetImageProcessor, __webpack_exports__EfficientNetModel as EfficientNetModel, __webpack_exports__EfficientNetPreTrainedModel as EfficientNetPreTrainedModel, __webpack_exports__ElectraForMaskedLM as ElectraForMaskedLM, __webpack_exports__ElectraForQuestionAnswering as ElectraForQuestionAnswering, __webpack_exports__ElectraForSequenceClassification as ElectraForSequenceClassification, __webpack_exports__ElectraForTokenClassification as ElectraForTokenClassification, __webpack_exports__ElectraModel as ElectraModel, __webpack_exports__ElectraPreTrainedModel as ElectraPreTrainedModel, __webpack_exports__ElectraTokenizer as ElectraTokenizer, __webpack_exports__EncodecFeatureExtractor as EncodecFeatureExtractor, __webpack_exports__EosTokenCriteria as EosTokenCriteria, __webpack_exports__EsmForMaskedLM as EsmForMaskedLM, __webpack_exports__EsmForSequenceClassification as EsmForSequenceClassification, __webpack_exports__EsmForTokenClassification as EsmForTokenClassification, __webpack_exports__EsmModel as EsmModel, __webpack_exports__EsmPreTrainedModel as EsmPreTrainedModel, __webpack_exports__EsmTokenizer as EsmTokenizer, __webpack_exports__ExaoneForCausalLM as ExaoneForCausalLM, __webpack_exports__ExaoneModel as ExaoneModel, __webpack_exports__ExaonePreTrainedModel as ExaonePreTrainedModel, __webpack_exports__FFT as FFT, __webpack_exports__FalconForCausalLM as FalconForCausalLM, __webpack_exports__FalconModel as FalconModel, __webpack_exports__FalconPreTrainedModel as FalconPreTrainedModel, __webpack_exports__FalconTokenizer as FalconTokenizer, __webpack_exports__FastViTForImageClassification as FastViTForImageClassification, __webpack_exports__FastViTModel as FastViTModel, __webpack_exports__FastViTPreTrainedModel as FastViTPreTrainedModel, __webpack_exports__FeatureExtractionPipeline as FeatureExtractionPipeline, __webpack_exports__FeatureExtractor as FeatureExtractor, __webpack_exports__FillMaskPipeline as FillMaskPipeline, __webpack_exports__Florence2ForConditionalGeneration as Florence2ForConditionalGeneration, __webpack_exports__Florence2PreTrainedModel as Florence2PreTrainedModel, __webpack_exports__Florence2Processor as Florence2Processor, __webpack_exports__ForcedBOSTokenLogitsProcessor as ForcedBOSTokenLogitsProcessor, __webpack_exports__ForcedEOSTokenLogitsProcessor as ForcedEOSTokenLogitsProcessor, __webpack_exports__GLPNFeatureExtractor as GLPNFeatureExtractor, __webpack_exports__GLPNForDepthEstimation as GLPNForDepthEstimation, __webpack_exports__GLPNModel as GLPNModel, __webpack_exports__GLPNPreTrainedModel as GLPNPreTrainedModel, __webpack_exports__GPT2LMHeadModel as GPT2LMHeadModel, __webpack_exports__GPT2Model as GPT2Model, __webpack_exports__GPT2PreTrainedModel as GPT2PreTrainedModel, __webpack_exports__GPT2Tokenizer as GPT2Tokenizer, __webpack_exports__GPTBigCodeForCausalLM as GPTBigCodeForCausalLM, __webpack_exports__GPTBigCodeModel as GPTBigCodeModel, __webpack_exports__GPTBigCodePreTrainedModel as GPTBigCodePreTrainedModel, __webpack_exports__GPTJForCausalLM as GPTJForCausalLM, __webpack_exports__GPTJModel as GPTJModel, __webpack_exports__GPTJPreTrainedModel as GPTJPreTrainedModel, __webpack_exports__GPTNeoForCausalLM as GPTNeoForCausalLM, __webpack_exports__GPTNeoModel as GPTNeoModel, __webpack_exports__GPTNeoPreTrainedModel as GPTNeoPreTrainedModel, __webpack_exports__GPTNeoXForCausalLM as GPTNeoXForCausalLM, __webpack_exports__GPTNeoXModel as GPTNeoXModel, __webpack_exports__GPTNeoXPreTrainedModel as GPTNeoXPreTrainedModel, __webpack_exports__GPTNeoXTokenizer as GPTNeoXTokenizer, __webpack_exports__Gemma2ForCausalLM as Gemma2ForCausalLM, __webpack_exports__Gemma2Model as Gemma2Model, __webpack_exports__Gemma2PreTrainedModel as Gemma2PreTrainedModel, __webpack_exports__GemmaForCausalLM as GemmaForCausalLM, __webpack_exports__GemmaModel as GemmaModel, __webpack_exports__GemmaPreTrainedModel as GemmaPreTrainedModel, __webpack_exports__GemmaTokenizer as GemmaTokenizer, __webpack_exports__GlmForCausalLM as GlmForCausalLM, __webpack_exports__GlmModel as GlmModel, __webpack_exports__GlmPreTrainedModel as GlmPreTrainedModel, __webpack_exports__GraniteForCausalLM as GraniteForCausalLM, __webpack_exports__GraniteModel as GraniteModel, __webpack_exports__GranitePreTrainedModel as GranitePreTrainedModel, __webpack_exports__Grok1Tokenizer as Grok1Tokenizer, __webpack_exports__GroundingDinoForObjectDetection as GroundingDinoForObjectDetection, __webpack_exports__GroundingDinoImageProcessor as GroundingDinoImageProcessor, __webpack_exports__GroundingDinoPreTrainedModel as GroundingDinoPreTrainedModel, __webpack_exports__GroundingDinoProcessor as GroundingDinoProcessor, __webpack_exports__GroupViTModel as GroupViTModel, __webpack_exports__GroupViTPreTrainedModel as GroupViTPreTrainedModel, __webpack_exports__HeliumForCausalLM as HeliumForCausalLM, __webpack_exports__HeliumModel as HeliumModel, __webpack_exports__HeliumPreTrainedModel as HeliumPreTrainedModel, __webpack_exports__HerbertTokenizer as HerbertTokenizer, __webpack_exports__HieraForImageClassification as HieraForImageClassification, __webpack_exports__HieraModel as HieraModel, __webpack_exports__HieraPreTrainedModel as HieraPreTrainedModel, __webpack_exports__HubertForCTC as HubertForCTC, __webpack_exports__HubertForSequenceClassification as HubertForSequenceClassification, __webpack_exports__HubertModel as HubertModel, __webpack_exports__HubertPreTrainedModel as HubertPreTrainedModel, __webpack_exports__IJepaForImageClassification as IJepaForImageClassification, __webpack_exports__IJepaModel as IJepaModel, __webpack_exports__IJepaPreTrainedModel as IJepaPreTrainedModel, __webpack_exports__Idefics3ForConditionalGeneration as Idefics3ForConditionalGeneration, __webpack_exports__Idefics3ImageProcessor as Idefics3ImageProcessor, __webpack_exports__Idefics3PreTrainedModel as Idefics3PreTrainedModel, __webpack_exports__Idefics3Processor as Idefics3Processor, __webpack_exports__ImageClassificationPipeline as ImageClassificationPipeline, __webpack_exports__ImageFeatureExtractionPipeline as ImageFeatureExtractionPipeline, __webpack_exports__ImageFeatureExtractor as ImageFeatureExtractor, __webpack_exports__ImageMattingOutput as ImageMattingOutput, __webpack_exports__ImageProcessor as ImageProcessor, __webpack_exports__ImageSegmentationPipeline as ImageSegmentationPipeline, __webpack_exports__ImageToImagePipeline as ImageToImagePipeline, __webpack_exports__ImageToTextPipeline as ImageToTextPipeline, __webpack_exports__InterruptableStoppingCriteria as InterruptableStoppingCriteria, __webpack_exports__JAISLMHeadModel as JAISLMHeadModel, __webpack_exports__JAISModel as JAISModel, __webpack_exports__JAISPreTrainedModel as JAISPreTrainedModel, __webpack_exports__JinaCLIPImageProcessor as JinaCLIPImageProcessor, __webpack_exports__JinaCLIPModel as JinaCLIPModel, __webpack_exports__JinaCLIPPreTrainedModel as JinaCLIPPreTrainedModel, __webpack_exports__JinaCLIPProcessor as JinaCLIPProcessor, __webpack_exports__JinaCLIPTextModel as JinaCLIPTextModel, __webpack_exports__JinaCLIPVisionModel as JinaCLIPVisionModel, __webpack_exports__LiteWhisperForConditionalGeneration as LiteWhisperForConditionalGeneration, __webpack_exports__LlamaForCausalLM as LlamaForCausalLM, __webpack_exports__LlamaModel as LlamaModel, __webpack_exports__LlamaPreTrainedModel as LlamaPreTrainedModel, __webpack_exports__LlamaTokenizer as LlamaTokenizer, __webpack_exports__LlavaForConditionalGeneration as LlavaForConditionalGeneration, __webpack_exports__LlavaOnevisionForConditionalGeneration as LlavaOnevisionForConditionalGeneration, __webpack_exports__LlavaOnevisionImageProcessor as LlavaOnevisionImageProcessor, __webpack_exports__LlavaPreTrainedModel as LlavaPreTrainedModel, __webpack_exports__LogitsProcessor as LogitsProcessor, __webpack_exports__LogitsProcessorList as LogitsProcessorList, __webpack_exports__LogitsWarper as LogitsWarper, __webpack_exports__LongT5ForConditionalGeneration as LongT5ForConditionalGeneration, __webpack_exports__LongT5Model as LongT5Model, __webpack_exports__LongT5PreTrainedModel as LongT5PreTrainedModel, __webpack_exports__M2M100ForConditionalGeneration as M2M100ForConditionalGeneration, __webpack_exports__M2M100Model as M2M100Model, __webpack_exports__M2M100PreTrainedModel as M2M100PreTrainedModel, __webpack_exports__M2M100Tokenizer as M2M100Tokenizer, __webpack_exports__MBart50Tokenizer as MBart50Tokenizer, __webpack_exports__MBartForCausalLM as MBartForCausalLM, __webpack_exports__MBartForConditionalGeneration as MBartForConditionalGeneration, __webpack_exports__MBartForSequenceClassification as MBartForSequenceClassification, __webpack_exports__MBartModel as MBartModel, __webpack_exports__MBartPreTrainedModel as MBartPreTrainedModel, __webpack_exports__MBartTokenizer as MBartTokenizer, __webpack_exports__MPNetForMaskedLM as MPNetForMaskedLM, __webpack_exports__MPNetForQuestionAnswering as MPNetForQuestionAnswering, __webpack_exports__MPNetForSequenceClassification as MPNetForSequenceClassification, __webpack_exports__MPNetForTokenClassification as MPNetForTokenClassification, __webpack_exports__MPNetModel as MPNetModel, __webpack_exports__MPNetPreTrainedModel as MPNetPreTrainedModel, __webpack_exports__MPNetTokenizer as MPNetTokenizer, __webpack_exports__MT5ForConditionalGeneration as MT5ForConditionalGeneration, __webpack_exports__MT5Model as MT5Model, __webpack_exports__MT5PreTrainedModel as MT5PreTrainedModel, __webpack_exports__MarianMTModel as MarianMTModel, __webpack_exports__MarianModel as MarianModel, __webpack_exports__MarianPreTrainedModel as MarianPreTrainedModel, __webpack_exports__MarianTokenizer as MarianTokenizer, __webpack_exports__Mask2FormerImageProcessor as Mask2FormerImageProcessor, __webpack_exports__MaskFormerFeatureExtractor as MaskFormerFeatureExtractor, __webpack_exports__MaskFormerForInstanceSegmentation as MaskFormerForInstanceSegmentation, __webpack_exports__MaskFormerImageProcessor as MaskFormerImageProcessor, __webpack_exports__MaskFormerModel as MaskFormerModel, __webpack_exports__MaskFormerPreTrainedModel as MaskFormerPreTrainedModel, __webpack_exports__MaskedLMOutput as MaskedLMOutput, __webpack_exports__MaxLengthCriteria as MaxLengthCriteria, __webpack_exports__MgpstrForSceneTextRecognition as MgpstrForSceneTextRecognition, __webpack_exports__MgpstrModelOutput as MgpstrModelOutput, __webpack_exports__MgpstrPreTrainedModel as MgpstrPreTrainedModel, __webpack_exports__MgpstrProcessor as MgpstrProcessor, __webpack_exports__MgpstrTokenizer as MgpstrTokenizer, __webpack_exports__MimiDecoderModel as MimiDecoderModel, __webpack_exports__MimiDecoderOutput as MimiDecoderOutput, __webpack_exports__MimiEncoderModel as MimiEncoderModel, __webpack_exports__MimiEncoderOutput as MimiEncoderOutput, __webpack_exports__MimiModel as MimiModel, __webpack_exports__MimiPreTrainedModel as MimiPreTrainedModel, __webpack_exports__MinLengthLogitsProcessor as MinLengthLogitsProcessor, __webpack_exports__MinNewTokensLengthLogitsProcessor as MinNewTokensLengthLogitsProcessor, __webpack_exports__MistralForCausalLM as MistralForCausalLM, __webpack_exports__MistralModel as MistralModel, __webpack_exports__MistralPreTrainedModel as MistralPreTrainedModel, __webpack_exports__MobileBertForMaskedLM as MobileBertForMaskedLM, __webpack_exports__MobileBertForQuestionAnswering as MobileBertForQuestionAnswering, __webpack_exports__MobileBertForSequenceClassification as MobileBertForSequenceClassification, __webpack_exports__MobileBertModel as MobileBertModel, __webpack_exports__MobileBertPreTrainedModel as MobileBertPreTrainedModel, __webpack_exports__MobileBertTokenizer as MobileBertTokenizer, __webpack_exports__MobileLLMForCausalLM as MobileLLMForCausalLM, __webpack_exports__MobileLLMModel as MobileLLMModel, __webpack_exports__MobileLLMPreTrainedModel as MobileLLMPreTrainedModel, __webpack_exports__MobileNetV1FeatureExtractor as MobileNetV1FeatureExtractor, __webpack_exports__MobileNetV1ForImageClassification as MobileNetV1ForImageClassification, __webpack_exports__MobileNetV1ForSemanticSegmentation as MobileNetV1ForSemanticSegmentation, __webpack_exports__MobileNetV1ImageProcessor as MobileNetV1ImageProcessor, __webpack_exports__MobileNetV1Model as MobileNetV1Model, __webpack_exports__MobileNetV1PreTrainedModel as MobileNetV1PreTrainedModel, __webpack_exports__MobileNetV2FeatureExtractor as MobileNetV2FeatureExtractor, __webpack_exports__MobileNetV2ForImageClassification as MobileNetV2ForImageClassification, __webpack_exports__MobileNetV2ForSemanticSegmentation as MobileNetV2ForSemanticSegmentation, __webpack_exports__MobileNetV2ImageProcessor as MobileNetV2ImageProcessor, __webpack_exports__MobileNetV2Model as MobileNetV2Model, __webpack_exports__MobileNetV2PreTrainedModel as MobileNetV2PreTrainedModel, __webpack_exports__MobileNetV3FeatureExtractor as MobileNetV3FeatureExtractor, __webpack_exports__MobileNetV3ForImageClassification as MobileNetV3ForImageClassification, __webpack_exports__MobileNetV3ForSemanticSegmentation as MobileNetV3ForSemanticSegmentation, __webpack_exports__MobileNetV3ImageProcessor as MobileNetV3ImageProcessor, __webpack_exports__MobileNetV3Model as MobileNetV3Model, __webpack_exports__MobileNetV3PreTrainedModel as MobileNetV3PreTrainedModel, __webpack_exports__MobileNetV4FeatureExtractor as MobileNetV4FeatureExtractor, __webpack_exports__MobileNetV4ForImageClassification as MobileNetV4ForImageClassification, __webpack_exports__MobileNetV4ForSemanticSegmentation as MobileNetV4ForSemanticSegmentation, __webpack_exports__MobileNetV4ImageProcessor as MobileNetV4ImageProcessor, __webpack_exports__MobileNetV4Model as MobileNetV4Model, __webpack_exports__MobileNetV4PreTrainedModel as MobileNetV4PreTrainedModel, __webpack_exports__MobileViTFeatureExtractor as MobileViTFeatureExtractor, __webpack_exports__MobileViTForImageClassification as MobileViTForImageClassification, __webpack_exports__MobileViTImageProcessor as MobileViTImageProcessor, __webpack_exports__MobileViTModel as MobileViTModel, __webpack_exports__MobileViTPreTrainedModel as MobileViTPreTrainedModel, __webpack_exports__MobileViTV2ForImageClassification as MobileViTV2ForImageClassification, __webpack_exports__MobileViTV2Model as MobileViTV2Model, __webpack_exports__MobileViTV2PreTrainedModel as MobileViTV2PreTrainedModel, __webpack_exports__ModelOutput as ModelOutput, __webpack_exports__ModernBertForMaskedLM as ModernBertForMaskedLM, __webpack_exports__ModernBertForSequenceClassification as ModernBertForSequenceClassification, __webpack_exports__ModernBertForTokenClassification as ModernBertForTokenClassification, __webpack_exports__ModernBertModel as ModernBertModel, __webpack_exports__ModernBertPreTrainedModel as ModernBertPreTrainedModel, __webpack_exports__Moondream1ForConditionalGeneration as Moondream1ForConditionalGeneration, __webpack_exports__MoonshineFeatureExtractor as MoonshineFeatureExtractor, __webpack_exports__MoonshineForConditionalGeneration as MoonshineForConditionalGeneration, __webpack_exports__MoonshineModel as MoonshineModel, __webpack_exports__MoonshinePreTrainedModel as MoonshinePreTrainedModel, __webpack_exports__MoonshineProcessor as MoonshineProcessor, __webpack_exports__MptForCausalLM as MptForCausalLM, __webpack_exports__MptModel as MptModel, __webpack_exports__MptPreTrainedModel as MptPreTrainedModel, __webpack_exports__MultiModalityCausalLM as MultiModalityCausalLM, __webpack_exports__MultiModalityPreTrainedModel as MultiModalityPreTrainedModel, __webpack_exports__MusicgenForCausalLM as MusicgenForCausalLM, __webpack_exports__MusicgenForConditionalGeneration as MusicgenForConditionalGeneration, __webpack_exports__MusicgenModel as MusicgenModel, __webpack_exports__MusicgenPreTrainedModel as MusicgenPreTrainedModel, __webpack_exports__NllbTokenizer as NllbTokenizer, __webpack_exports__NoBadWordsLogitsProcessor as NoBadWordsLogitsProcessor, __webpack_exports__NoRepeatNGramLogitsProcessor as NoRepeatNGramLogitsProcessor, __webpack_exports__NomicBertModel as NomicBertModel, __webpack_exports__NomicBertPreTrainedModel as NomicBertPreTrainedModel, __webpack_exports__NougatImageProcessor as NougatImageProcessor, __webpack_exports__NougatTokenizer as NougatTokenizer, __webpack_exports__OPTForCausalLM as OPTForCausalLM, __webpack_exports__OPTModel as OPTModel, __webpack_exports__OPTPreTrainedModel as OPTPreTrainedModel, __webpack_exports__ObjectDetectionPipeline as ObjectDetectionPipeline, __webpack_exports__Olmo2ForCausalLM as Olmo2ForCausalLM, __webpack_exports__Olmo2Model as Olmo2Model, __webpack_exports__Olmo2PreTrainedModel as Olmo2PreTrainedModel, __webpack_exports__OlmoForCausalLM as OlmoForCausalLM, __webpack_exports__OlmoModel as OlmoModel, __webpack_exports__OlmoPreTrainedModel as OlmoPreTrainedModel, __webpack_exports__OpenELMForCausalLM as OpenELMForCausalLM, __webpack_exports__OpenELMModel as OpenELMModel, __webpack_exports__OpenELMPreTrainedModel as OpenELMPreTrainedModel, __webpack_exports__OwlViTFeatureExtractor as OwlViTFeatureExtractor, __webpack_exports__OwlViTForObjectDetection as OwlViTForObjectDetection, __webpack_exports__OwlViTImageProcessor as OwlViTImageProcessor, __webpack_exports__OwlViTModel as OwlViTModel, __webpack_exports__OwlViTPreTrainedModel as OwlViTPreTrainedModel, __webpack_exports__OwlViTProcessor as OwlViTProcessor, __webpack_exports__Owlv2ForObjectDetection as Owlv2ForObjectDetection, __webpack_exports__Owlv2ImageProcessor as Owlv2ImageProcessor, __webpack_exports__Owlv2Model as Owlv2Model, __webpack_exports__Owlv2PreTrainedModel as Owlv2PreTrainedModel, __webpack_exports__PaliGemmaForConditionalGeneration as PaliGemmaForConditionalGeneration, __webpack_exports__PaliGemmaPreTrainedModel as PaliGemmaPreTrainedModel, __webpack_exports__PaliGemmaProcessor as PaliGemmaProcessor, __webpack_exports__PatchTSMixerForPrediction as PatchTSMixerForPrediction, __webpack_exports__PatchTSMixerModel as PatchTSMixerModel, __webpack_exports__PatchTSMixerPreTrainedModel as PatchTSMixerPreTrainedModel, __webpack_exports__PatchTSTForPrediction as PatchTSTForPrediction, __webpack_exports__PatchTSTModel as PatchTSTModel, __webpack_exports__PatchTSTPreTrainedModel as PatchTSTPreTrainedModel, __webpack_exports__Phi3ForCausalLM as Phi3ForCausalLM, __webpack_exports__Phi3Model as Phi3Model, __webpack_exports__Phi3PreTrainedModel as Phi3PreTrainedModel, __webpack_exports__Phi3VForCausalLM as Phi3VForCausalLM, __webpack_exports__Phi3VImageProcessor as Phi3VImageProcessor, __webpack_exports__Phi3VPreTrainedModel as Phi3VPreTrainedModel, __webpack_exports__Phi3VProcessor as Phi3VProcessor, __webpack_exports__PhiForCausalLM as PhiForCausalLM, __webpack_exports__PhiModel as PhiModel, __webpack_exports__PhiPreTrainedModel as PhiPreTrainedModel, __webpack_exports__Pipeline as Pipeline, __webpack_exports__PreTrainedModel as PreTrainedModel, __webpack_exports__PreTrainedTokenizer as PreTrainedTokenizer, __webpack_exports__PretrainedConfig as PretrainedConfig, __webpack_exports__PretrainedMixin as PretrainedMixin, __webpack_exports__Processor as Processor, __webpack_exports__PvtForImageClassification as PvtForImageClassification, __webpack_exports__PvtImageProcessor as PvtImageProcessor, __webpack_exports__PvtModel as PvtModel, __webpack_exports__PvtPreTrainedModel as PvtPreTrainedModel, __webpack_exports__PyAnnoteFeatureExtractor as PyAnnoteFeatureExtractor, __webpack_exports__PyAnnoteForAudioFrameClassification as PyAnnoteForAudioFrameClassification, __webpack_exports__PyAnnoteModel as PyAnnoteModel, __webpack_exports__PyAnnotePreTrainedModel as PyAnnotePreTrainedModel, __webpack_exports__PyAnnoteProcessor as PyAnnoteProcessor, __webpack_exports__QuestionAnsweringModelOutput as QuestionAnsweringModelOutput, __webpack_exports__QuestionAnsweringPipeline as QuestionAnsweringPipeline, __webpack_exports__Qwen2ForCausalLM as Qwen2ForCausalLM, __webpack_exports__Qwen2Model as Qwen2Model, __webpack_exports__Qwen2PreTrainedModel as Qwen2PreTrainedModel, __webpack_exports__Qwen2Tokenizer as Qwen2Tokenizer, __webpack_exports__Qwen2VLForConditionalGeneration as Qwen2VLForConditionalGeneration, __webpack_exports__Qwen2VLImageProcessor as Qwen2VLImageProcessor, __webpack_exports__Qwen2VLPreTrainedModel as Qwen2VLPreTrainedModel, __webpack_exports__Qwen2VLProcessor as Qwen2VLProcessor, __webpack_exports__RTDetrForObjectDetection as RTDetrForObjectDetection, __webpack_exports__RTDetrImageProcessor as RTDetrImageProcessor, __webpack_exports__RTDetrModel as RTDetrModel, __webpack_exports__RTDetrObjectDetectionOutput as RTDetrObjectDetectionOutput, __webpack_exports__RTDetrPreTrainedModel as RTDetrPreTrainedModel, __webpack_exports__RawAudio as RawAudio, __webpack_exports__RawImage as RawImage, __webpack_exports__RawVideo as RawVideo, __webpack_exports__RawVideoFrame as RawVideoFrame, __webpack_exports__RepetitionPenaltyLogitsProcessor as RepetitionPenaltyLogitsProcessor, __webpack_exports__ResNetForImageClassification as ResNetForImageClassification, __webpack_exports__ResNetModel as ResNetModel, __webpack_exports__ResNetPreTrainedModel as ResNetPreTrainedModel, __webpack_exports__RoFormerForMaskedLM as RoFormerForMaskedLM, __webpack_exports__RoFormerForQuestionAnswering as RoFormerForQuestionAnswering, __webpack_exports__RoFormerForSequenceClassification as RoFormerForSequenceClassification, __webpack_exports__RoFormerForTokenClassification as RoFormerForTokenClassification, __webpack_exports__RoFormerModel as RoFormerModel, __webpack_exports__RoFormerPreTrainedModel as RoFormerPreTrainedModel, __webpack_exports__RoFormerTokenizer as RoFormerTokenizer, __webpack_exports__RobertaForMaskedLM as RobertaForMaskedLM, __webpack_exports__RobertaForQuestionAnswering as RobertaForQuestionAnswering, __webpack_exports__RobertaForSequenceClassification as RobertaForSequenceClassification, __webpack_exports__RobertaForTokenClassification as RobertaForTokenClassification, __webpack_exports__RobertaModel as RobertaModel, __webpack_exports__RobertaPreTrainedModel as RobertaPreTrainedModel, __webpack_exports__RobertaTokenizer as RobertaTokenizer, __webpack_exports__SamImageProcessor as SamImageProcessor, __webpack_exports__SamImageSegmentationOutput as SamImageSegmentationOutput, __webpack_exports__SamModel as SamModel, __webpack_exports__SamPreTrainedModel as SamPreTrainedModel, __webpack_exports__SamProcessor as SamProcessor, __webpack_exports__SapiensForDepthEstimation as SapiensForDepthEstimation, __webpack_exports__SapiensForNormalEstimation as SapiensForNormalEstimation, __webpack_exports__SapiensForSemanticSegmentation as SapiensForSemanticSegmentation, __webpack_exports__SapiensPreTrainedModel as SapiensPreTrainedModel, __webpack_exports__SeamlessM4TFeatureExtractor as SeamlessM4TFeatureExtractor, __webpack_exports__SegformerFeatureExtractor as SegformerFeatureExtractor, __webpack_exports__SegformerForImageClassification as SegformerForImageClassification, __webpack_exports__SegformerForSemanticSegmentation as SegformerForSemanticSegmentation, __webpack_exports__SegformerImageProcessor as SegformerImageProcessor, __webpack_exports__SegformerModel as SegformerModel, __webpack_exports__SegformerPreTrainedModel as SegformerPreTrainedModel, __webpack_exports__Seq2SeqLMOutput as Seq2SeqLMOutput, __webpack_exports__SequenceClassifierOutput as SequenceClassifierOutput, __webpack_exports__SiglipImageProcessor as SiglipImageProcessor, __webpack_exports__SiglipModel as SiglipModel, __webpack_exports__SiglipPreTrainedModel as SiglipPreTrainedModel, __webpack_exports__SiglipTextModel as SiglipTextModel, __webpack_exports__SiglipTokenizer as SiglipTokenizer, __webpack_exports__SiglipVisionModel as SiglipVisionModel, __webpack_exports__SmolVLMForConditionalGeneration as SmolVLMForConditionalGeneration, __webpack_exports__SmolVLMImageProcessor as SmolVLMImageProcessor, __webpack_exports__SmolVLMProcessor as SmolVLMProcessor, __webpack_exports__SpeechT5FeatureExtractor as SpeechT5FeatureExtractor, __webpack_exports__SpeechT5ForSpeechToText as SpeechT5ForSpeechToText, __webpack_exports__SpeechT5ForTextToSpeech as SpeechT5ForTextToSpeech, __webpack_exports__SpeechT5HifiGan as SpeechT5HifiGan, __webpack_exports__SpeechT5Model as SpeechT5Model, __webpack_exports__SpeechT5PreTrainedModel as SpeechT5PreTrainedModel, __webpack_exports__SpeechT5Processor as SpeechT5Processor, __webpack_exports__SpeechT5Tokenizer as SpeechT5Tokenizer, __webpack_exports__SqueezeBertForMaskedLM as SqueezeBertForMaskedLM, __webpack_exports__SqueezeBertForQuestionAnswering as SqueezeBertForQuestionAnswering, __webpack_exports__SqueezeBertForSequenceClassification as SqueezeBertForSequenceClassification, __webpack_exports__SqueezeBertModel as SqueezeBertModel, __webpack_exports__SqueezeBertPreTrainedModel as SqueezeBertPreTrainedModel, __webpack_exports__SqueezeBertTokenizer as SqueezeBertTokenizer, __webpack_exports__StableLmForCausalLM as StableLmForCausalLM, __webpack_exports__StableLmModel as StableLmModel, __webpack_exports__StableLmPreTrainedModel as StableLmPreTrainedModel, __webpack_exports__Starcoder2ForCausalLM as Starcoder2ForCausalLM, __webpack_exports__Starcoder2Model as Starcoder2Model, __webpack_exports__Starcoder2PreTrainedModel as Starcoder2PreTrainedModel, __webpack_exports__StoppingCriteria as StoppingCriteria, __webpack_exports__StoppingCriteriaList as StoppingCriteriaList, __webpack_exports__StyleTextToSpeech2Model as StyleTextToSpeech2Model, __webpack_exports__StyleTextToSpeech2PreTrainedModel as StyleTextToSpeech2PreTrainedModel, __webpack_exports__SummarizationPipeline as SummarizationPipeline, __webpack_exports__SuppressTokensAtBeginLogitsProcessor as SuppressTokensAtBeginLogitsProcessor, __webpack_exports__Swin2SRForImageSuperResolution as Swin2SRForImageSuperResolution, __webpack_exports__Swin2SRImageProcessor as Swin2SRImageProcessor, __webpack_exports__Swin2SRModel as Swin2SRModel, __webpack_exports__Swin2SRPreTrainedModel as Swin2SRPreTrainedModel, __webpack_exports__SwinForImageClassification as SwinForImageClassification, __webpack_exports__SwinForSemanticSegmentation as SwinForSemanticSegmentation, __webpack_exports__SwinModel as SwinModel, __webpack_exports__SwinPreTrainedModel as SwinPreTrainedModel, __webpack_exports__T5ForConditionalGeneration as T5ForConditionalGeneration, __webpack_exports__T5Model as T5Model, __webpack_exports__T5PreTrainedModel as T5PreTrainedModel, __webpack_exports__T5Tokenizer as T5Tokenizer, __webpack_exports__TableTransformerForObjectDetection as TableTransformerForObjectDetection, __webpack_exports__TableTransformerModel as TableTransformerModel, __webpack_exports__TableTransformerObjectDetectionOutput as TableTransformerObjectDetectionOutput, __webpack_exports__TableTransformerPreTrainedModel as TableTransformerPreTrainedModel, __webpack_exports__TemperatureLogitsWarper as TemperatureLogitsWarper, __webpack_exports__Tensor as Tensor, __webpack_exports__Text2TextGenerationPipeline as Text2TextGenerationPipeline, __webpack_exports__TextClassificationPipeline as TextClassificationPipeline, __webpack_exports__TextGenerationPipeline as TextGenerationPipeline, __webpack_exports__TextStreamer as TextStreamer, __webpack_exports__TextToAudioPipeline as TextToAudioPipeline, __webpack_exports__TokenClassificationPipeline as TokenClassificationPipeline, __webpack_exports__TokenClassifierOutput as TokenClassifierOutput, __webpack_exports__TokenizerModel as TokenizerModel, __webpack_exports__TopKLogitsWarper as TopKLogitsWarper, __webpack_exports__TopPLogitsWarper as TopPLogitsWarper, __webpack_exports__TrOCRForCausalLM as TrOCRForCausalLM, __webpack_exports__TrOCRPreTrainedModel as TrOCRPreTrainedModel, __webpack_exports__TranslationPipeline as TranslationPipeline, __webpack_exports__UltravoxModel as UltravoxModel, __webpack_exports__UltravoxPreTrainedModel as UltravoxPreTrainedModel, __webpack_exports__UltravoxProcessor as UltravoxProcessor, __webpack_exports__UniSpeechForCTC as UniSpeechForCTC, __webpack_exports__UniSpeechForSequenceClassification as UniSpeechForSequenceClassification, __webpack_exports__UniSpeechModel as UniSpeechModel, __webpack_exports__UniSpeechPreTrainedModel as UniSpeechPreTrainedModel, __webpack_exports__UniSpeechSatForAudioFrameClassification as UniSpeechSatForAudioFrameClassification, __webpack_exports__UniSpeechSatForCTC as UniSpeechSatForCTC, __webpack_exports__UniSpeechSatForSequenceClassification as UniSpeechSatForSequenceClassification, __webpack_exports__UniSpeechSatModel as UniSpeechSatModel, __webpack_exports__UniSpeechSatPreTrainedModel as UniSpeechSatPreTrainedModel, __webpack_exports__VLChatProcessor as VLChatProcessor, __webpack_exports__VLMImageProcessor as VLMImageProcessor, __webpack_exports__ViTFeatureExtractor as ViTFeatureExtractor, __webpack_exports__ViTForImageClassification as ViTForImageClassification, __webpack_exports__ViTImageProcessor as ViTImageProcessor, __webpack_exports__ViTMAEModel as ViTMAEModel, __webpack_exports__ViTMAEPreTrainedModel as ViTMAEPreTrainedModel, __webpack_exports__ViTMSNForImageClassification as ViTMSNForImageClassification, __webpack_exports__ViTMSNModel as ViTMSNModel, __webpack_exports__ViTMSNPreTrainedModel as ViTMSNPreTrainedModel, __webpack_exports__ViTModel as ViTModel, __webpack_exports__ViTPreTrainedModel as ViTPreTrainedModel, __webpack_exports__VisionEncoderDecoderModel as VisionEncoderDecoderModel, __webpack_exports__VitMatteForImageMatting as VitMatteForImageMatting, __webpack_exports__VitMatteImageProcessor as VitMatteImageProcessor, __webpack_exports__VitMattePreTrainedModel as VitMattePreTrainedModel, __webpack_exports__VitPoseForPoseEstimation as VitPoseForPoseEstimation, __webpack_exports__VitPoseImageProcessor as VitPoseImageProcessor, __webpack_exports__VitPosePreTrainedModel as VitPosePreTrainedModel, __webpack_exports__VitsModel as VitsModel, __webpack_exports__VitsModelOutput as VitsModelOutput, __webpack_exports__VitsPreTrainedModel as VitsPreTrainedModel, __webpack_exports__VitsTokenizer as VitsTokenizer, __webpack_exports__Wav2Vec2BertForCTC as Wav2Vec2BertForCTC, __webpack_exports__Wav2Vec2BertForSequenceClassification as Wav2Vec2BertForSequenceClassification, __webpack_exports__Wav2Vec2BertModel as Wav2Vec2BertModel, __webpack_exports__Wav2Vec2BertPreTrainedModel as Wav2Vec2BertPreTrainedModel, __webpack_exports__Wav2Vec2CTCTokenizer as Wav2Vec2CTCTokenizer, __webpack_exports__Wav2Vec2FeatureExtractor as Wav2Vec2FeatureExtractor, __webpack_exports__Wav2Vec2ForAudioFrameClassification as Wav2Vec2ForAudioFrameClassification, __webpack_exports__Wav2Vec2ForCTC as Wav2Vec2ForCTC, __webpack_exports__Wav2Vec2ForSequenceClassification as Wav2Vec2ForSequenceClassification, __webpack_exports__Wav2Vec2Model as Wav2Vec2Model, __webpack_exports__Wav2Vec2PreTrainedModel as Wav2Vec2PreTrainedModel, __webpack_exports__Wav2Vec2Processor as Wav2Vec2Processor, __webpack_exports__Wav2Vec2ProcessorWithLM as Wav2Vec2ProcessorWithLM, __webpack_exports__WavLMForAudioFrameClassification as WavLMForAudioFrameClassification, __webpack_exports__WavLMForCTC as WavLMForCTC, __webpack_exports__WavLMForSequenceClassification as WavLMForSequenceClassification, __webpack_exports__WavLMForXVector as WavLMForXVector, __webpack_exports__WavLMModel as WavLMModel, __webpack_exports__WavLMPreTrainedModel as WavLMPreTrainedModel, __webpack_exports__WeSpeakerFeatureExtractor as WeSpeakerFeatureExtractor, __webpack_exports__WeSpeakerResNetModel as WeSpeakerResNetModel, __webpack_exports__WeSpeakerResNetPreTrainedModel as WeSpeakerResNetPreTrainedModel, __webpack_exports__WhisperFeatureExtractor as WhisperFeatureExtractor, __webpack_exports__WhisperForConditionalGeneration as WhisperForConditionalGeneration, __webpack_exports__WhisperModel as WhisperModel, __webpack_exports__WhisperPreTrainedModel as WhisperPreTrainedModel, __webpack_exports__WhisperProcessor as WhisperProcessor, __webpack_exports__WhisperTextStreamer as WhisperTextStreamer, __webpack_exports__WhisperTimeStampLogitsProcessor as WhisperTimeStampLogitsProcessor, __webpack_exports__WhisperTokenizer as WhisperTokenizer, __webpack_exports__XLMForQuestionAnswering as XLMForQuestionAnswering, __webpack_exports__XLMForSequenceClassification as XLMForSequenceClassification, __webpack_exports__XLMForTokenClassification as XLMForTokenClassification, __webpack_exports__XLMModel as XLMModel, __webpack_exports__XLMPreTrainedModel as XLMPreTrainedModel, __webpack_exports__XLMRobertaForMaskedLM as XLMRobertaForMaskedLM, __webpack_exports__XLMRobertaForQuestionAnswering as XLMRobertaForQuestionAnswering, __webpack_exports__XLMRobertaForSequenceClassification as XLMRobertaForSequenceClassification, __webpack_exports__XLMRobertaForTokenClassification as XLMRobertaForTokenClassification, __webpack_exports__XLMRobertaModel as XLMRobertaModel, __webpack_exports__XLMRobertaPreTrainedModel as XLMRobertaPreTrainedModel, __webpack_exports__XLMRobertaTokenizer as XLMRobertaTokenizer, __webpack_exports__XLMTokenizer as XLMTokenizer, __webpack_exports__XLMWithLMHeadModel as XLMWithLMHeadModel, __webpack_exports__XVectorOutput as XVectorOutput, __webpack_exports__YolosFeatureExtractor as YolosFeatureExtractor, __webpack_exports__YolosForObjectDetection as YolosForObjectDetection, __webpack_exports__YolosImageProcessor as YolosImageProcessor, __webpack_exports__YolosModel as YolosModel, __webpack_exports__YolosObjectDetectionOutput as YolosObjectDetectionOutput, __webpack_exports__YolosPreTrainedModel as YolosPreTrainedModel, __webpack_exports__ZeroShotAudioClassificationPipeline as ZeroShotAudioClassificationPipeline, __webpack_exports__ZeroShotClassificationPipeline as ZeroShotClassificationPipeline, __webpack_exports__ZeroShotImageClassificationPipeline as ZeroShotImageClassificationPipeline, __webpack_exports__ZeroShotObjectDetectionPipeline as ZeroShotObjectDetectionPipeline, __webpack_exports__bankers_round as bankers_round, __webpack_exports__cat as cat, __webpack_exports__cos_sim as cos_sim, __webpack_exports__dot as dot, __webpack_exports__dynamic_time_warping as dynamic_time_warping, __webpack_exports__env as env, __webpack_exports__full as full, __webpack_exports__full_like as full_like, __webpack_exports__getKeyValueShapes as getKeyValueShapes, __webpack_exports__hamming as hamming, __webpack_exports__hanning as hanning, __webpack_exports__interpolate as interpolate, __webpack_exports__interpolate_4d as interpolate_4d, __webpack_exports__interpolate_data as interpolate_data, __webpack_exports__is_chinese_char as is_chinese_char, __webpack_exports__layer_norm as layer_norm, __webpack_exports__load_image as load_image, __webpack_exports__load_video as load_video, __webpack_exports__log_softmax as log_softmax, __webpack_exports__magnitude as magnitude, __webpack_exports__matmul as matmul, __webpack_exports__max as max, __webpack_exports__mean as mean, __webpack_exports__mean_pooling as mean_pooling, __webpack_exports__medianFilter as medianFilter, __webpack_exports__mel_filter_bank as mel_filter_bank, __webpack_exports__min as min, __webpack_exports__ones as ones, __webpack_exports__ones_like as ones_like, __webpack_exports__permute as permute, __webpack_exports__permute_data as permute_data, __webpack_exports__pipeline as pipeline, __webpack_exports__quantize_embeddings as quantize_embeddings, __webpack_exports__rand as rand, __webpack_exports__read_audio as read_audio, __webpack_exports__rfft as rfft, __webpack_exports__round as round, __webpack_exports__slice as slice, __webpack_exports__softmax as softmax, __webpack_exports__spectrogram as spectrogram, __webpack_exports__stack as stack, __webpack_exports__std_mean as std_mean, __webpack_exports__topk as topk, __webpack_exports__window_function as window_function, __webpack_exports__zeros as zeros, __webpack_exports__zeros_like as zeros_like };\n\n//# sourceMappingURL=transformers.web.js.map"],"names":["__WEBPACK_EXTERNAL_MODULE_onnxruntime_common_82b39e9f__","__WEBPACK_EXTERNAL_MODULE_onnxruntime_web_74d14b94__"],"mappings":"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nB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,IAAI;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,IAAI;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,GAAG,GAAG;;AAErB;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG,EAAE;;AAEd;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG,GAAG;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,GAAG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,GAAG;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,GAAG;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B,GAAG,GAAG;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,GAAG,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,IAAI;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,IAAI;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,KAAK;;AAE9B;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,GAAG,IAAI;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,IAAI;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,IAAI;;AAE9B;AACA;AACA;AACA;AACA,IAAI,qBAAqB,GAAG,KAAK;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gCAAgC,GAAG,IAAI;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,IAAI;;AAE1B;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,GAAG,IAAI;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,IAAI;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,IAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,GAAG,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,KAAK;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,GAAG,KAAK;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,KAAK;;AAEzB;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,GAAG,KAAK;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,IAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAA4B,GAAG,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB,GAAG,IAAI;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE;;AAE1B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAG,2CAA2C,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hE;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,cAAc;AACtE,SAAS,CAAC;AACV;AACA;AACA;;;AAGA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,qBAAqB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,qBAAqB,CAAC;AACpD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,YAAY;AACpE,SAAS,CAAC;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,mBAAmB,CAAC;AACpD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,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A;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B,SAAS,sBAAsB,CAAC;AACpE;;AAEA;AACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;;AAEjD;AACA;AACA;AACA,MAAM,QAAQ,SAAS,kBAAkB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,kBAAkB,CAAC;AACvD;;AAEA;AACA,MAAM,4BAA4B,SAAS,eAAe,CAAC;;AAE3D;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,4BAA4B,CAAC;AAC3E;;;AAGA;AACA,MAAM,sBAAsB,SAAS,eAAe,CAAC;AACrD,MAAM,8BAA8B,SAAS,sBAAsB,CAAC;AACpE,MAAM,yBAAyB,SAAS,sBAAsB,CAAC;AAC/D,MAAM,0BAA0B,SAAS,sBAAsB,CAAC;AAChE;;AAEA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;AACtD,MAAM,0BAA0B,SAAS,uBAAuB,CAAC;AACjE;;AAEA;AACA,MAAM,yBAAyB,SAAS,eAAe,CAAC;AACxD,MAAM,eAAe,SAAS,yBAAyB,CAAC;AACxD,MAAM,iCAAiC,SAAS,yBAAyB,CAAC;AAC1E;;AAEA;AACA,MAAM,mBAAmB,SAAS,eAAe,CAAC;;AAElD;AACA;AACA;AACA,MAAM,SAAS,SAAS,mBAAmB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,mBAAmB,CAAC;AACzD;;AAEA;AACA,MAAM,wBAAwB,SAAS,eAAe,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,wBAAwB,CAAC;AACtD;;;AAGA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD;AACA;AACA;AACA,MAAM,8BAA8B,SAAS,uBAAuB,CAAC;AACrE;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;;AAGA;AACA,MAAM,yBAAyB,SAAS,eAAe,CAAC;;AAExD;AACA;AACA;AACA,MAAM,eAAe,SAAS,yBAAyB,CAAC;;AAExD;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,yBAAyB,CAAC;AACzE;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;;AAEpD;AACA;AACA;AACA,MAAM,WAAW,SAAS,qBAAqB,CAAC;;AAEhD;AACA;AACA;AACA,MAAM,4BAA4B,SAAS,qBAAqB,CAAC;AACjE;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA,MAAM,kCAAkC,SAAS,eAAe,CAAC;;AAEjE;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,kCAAkC,CAAC;;AAE1E;AACA;AACA;AACA,MAAM,yCAAyC,SAAS,kCAAkC,CAAC;AAC3F;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;AACA,MAAM,4BAA4B,SAAS,eAAe,CAAC;AAC3D,MAAM,+BAA+B,SAAS,4BAA4B,CAAC;;AAE3E;AACA,MAAM,oBAAoB,SAAS,eAAe,CAAC;AACnD,MAAM,UAAU,SAAS,oBAAoB,CAAC;AAC9C,MAAM,uBAAuB,SAAS,oBAAoB,CAAC;AAC3D;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,0BAA0B,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC9E;AACA;;AAEA,MAAM,0BAA0B,SAAS,WAAW,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE;AACxC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC;AACA;AACA;;;;;AAKA;AACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,SAAS,kBAAkB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,oBAAoB,CAAC,EAAE,YAAY,EAAE,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,MAAM,cAAc,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,OAAO,CAAC,YAAY,EAAE;AAChC,QAAQ,IAAI,CAAC,YAAY,CAAC,gBAAgB,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE;AACzF;AACA,YAAY,YAAY,GAAG;AAC3B,gBAAgB,GAAG,YAAY;AAC/B,gBAAgB,IAAI,MAAM,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC;AACjE;AACA;;AAEA,QAAQ,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,YAAY,CAAC,YAAY,EAAE;AACrE;AACA,YAAY,MAAM,KAAK,GAAG,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACrE,YAAY,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChE,YAAY,YAAY,CAAC,YAAY,GAAG,IAAI,6CAA6C,CAAC,MAAM;AAChG,gBAAgB,OAAO;AACvB,gBAAgB,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACvD,gBAAgB;AAChB,aAAa;AACb;;AAEA,QAAQ,MAAM,cAAc,GAAG;AAC/B,YAAY,gBAAgB,EAAE,YAAY,CAAC,gBAAgB;AAC3D,YAAY,2BAA2B,EAAE,YAAY,CAAC,2BAA2B;AACjF,SAAS;AACT,QAAQ,IAAI,YAAY,CAAC,YAAY,EAAE;AACvC,YAAY,cAAc,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY;AACnE;AACA,QAAQ,IAAI,YAAY,CAAC,YAAY,EAAE;AACvC,YAAY,cAAc,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY;AACnE;AACA,QAAQ,IAAI,YAAY,CAAC,WAAW,EAAE;AACtC,YAAY,cAAc,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW;AACjE;;AAEA;AACA;AACA;AACA,QAAQ,OAAO,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAAE,cAAc,CAAC;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,0BAA0B,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC9E;AACA;;;AAGA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,WAAW,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE;AAC5C,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC;AACA;AACA;;;AAGA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;AAEpD,MAAM,WAAW,SAAS,qBAAqB,CAAC;;AAEhD,MAAM,aAAa,SAAS,qBAAqB,CAAC;AAClD;;AAEA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;AAEpD,MAAM,WAAW,SAAS,qBAAqB,CAAC;;AAEhD,MAAM,8BAA8B,SAAS,qBAAqB,CAAC;AACnE;;AAEA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD,MAAM,cAAc,SAAS,uBAAuB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA,MAAM,iCAAiC,SAAS,uBAAuB,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;;AAEA;AACA;AACA;AACA,MAAM,mCAAmC,SAAS,uBAAuB,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACzE;AACA;AACA;;;AAGA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC,SAAS,uBAAuB,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACzE;AACA;AACA;;AAEA;AACA;AACA,MAAM,8BAA8B,SAAS,eAAe,CAAC,GAC7D,MAAM,oBAAoB,SAAS,8BAA8B,CAAC;AAClE;;;AAGA;AACA;AACA,MAAM,wBAAwB,SAAS,eAAe,CAAC;AAEvD;AACA;AACA;AACA,MAAM,cAAc,SAAS,wBAAwB,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,eAAe,SAAS,wBAAwB,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA,MAAM,kCAAkC,SAAS,wBAAwB,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA;AACA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAE1D;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,2BAA2B,CAAC;;AAE5D;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,2BAA2B,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA,MAAM,qCAAqC,SAAS,2BAA2B,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;;AAEA;AACA;AACA;AACA,MAAM,uCAAuC,SAAS,2BAA2B,CAAC;AAClF;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACzE;AACA;AACA;;AAEA;AACA;AACA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAE1D;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,2BAA2B,CAAC;;AAE5D;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,2BAA2B,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA,MAAM,qCAAqC,SAAS,2BAA2B,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,uBAAuB,CAAC;;AAElD;AACA;AACA;AACA,MAAM,YAAY,SAAS,uBAAuB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,uBAAuB,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,eAAe,CAAC;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,SAAS,oBAAoB,CAAC;;AAE9C;AACA;AACA;AACA,MAAM,WAAW,SAAS,oBAAoB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA,MAAM,8BAA8B,SAAS,oBAAoB,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,oBAAoB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,oBAAoB,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACzE;AACA;;AAEA,MAAM,iCAAiC,SAAS,eAAe,CAAC;AAChE,MAAM,uBAAuB,SAAS,iCAAiC,CAAC;;AAExE;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,uBAAuB,CAAC;;AAE9D;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,uBAAuB,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,eAAe,CAAC,YAAY,EAAE,kBAAkB,EAAE;AAC5D,QAAQ,SAAS,GAAG,GAAG;AACvB,QAAQ,WAAW,GAAG,GAAG;AACzB,QAAQ,WAAW,GAAG,IAAI;AAC1B,QAAQ,OAAO,GAAG,IAAI;AACtB;AACA,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,YAAY,GAAG;AAC7B,YAAY,SAAS,EAAE;AACvB;;AAEA,QAAQ,MAAM,EAAE,eAAe,EAAE,sBAAsB,EAAE,GAAG,MAAM,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC;;AAEpG;AACA,QAAQ,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB;AACxE,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;AAClD,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;;AAElD;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY;;AAErD,QAAQ,IAAI,gBAAgB,GAAG,EAAE;AACjC,QAAQ,IAAI,eAAe,GAAG,IAAI;AAClC,QAAQ,IAAI,eAAe,GAAG,IAAI;AAClC,QAAQ,IAAI,GAAG,GAAG,CAAC;;AAEnB,QAAQ,OAAO,IAAI,EAAE;AACrB,YAAY,EAAE,GAAG;;AAEjB,YAAY,MAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC;AAClE,YAAY,IAAI,eAAe;AAC/B,YAAY,IAAI,eAAe,EAAE;AACjC,gBAAgB,eAAe,GAAG,eAAe,CAAC,mBAAmB;AACrE,aAAa,MAAM;AACnB,gBAAgB,eAAe,GAAG,IAAI,6CAA6C,CAAC,MAAM;AAC1F,oBAAoB,SAAS;AAC7B,oBAAoB,IAAI,YAAY,CAAC,YAAY,CAAC;AAClD,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;AACxC;AACA;AACA,YAAY,IAAI,YAAY,GAAG;AAC/B,gBAAgB,gBAAgB;AAChC,gBAAgB,eAAe;AAC/B,gBAAgB,sBAAsB,EAAE,sBAAsB;AAC9D,gBAAgB,kBAAkB,EAAE,kBAAkB;AACtD,gBAAgB,qBAAqB,EAAE,eAAe;AACtD,aAAa;;AAEb,YAAY,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,CAAC;AAChE,YAAY,eAAe,GAAG,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE,YAAY,CAAC;AACnG,YAAY,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,eAAe,CAAC;;AAErF,YAAY,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,eAAe;AACtD,YAAY,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC;;AAE3C,YAAY,IAAI,GAAG,IAAI,MAAM;AAC7B;AACA,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI;AACvF,aAAa,EAAE;AACf,gBAAgB;AAChB;AACA;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAG,6CAA6C,CAAC,GAAG,EAAE,gBAAgB,CAAC;AACnG,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC;;AAEzF,QAAQ,OAAO;AACf,YAAY,WAAW;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,eAAe,CAAC;AAC9C,IAAI,eAAe,GAAG,aAAa;AACnC;AACA;;;AAGA;AACA;AACA,MAAM,oBAAoB,SAAS,eAAe,CAAC;;AAEnD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,oBAAoB,CAAC;;AAEpD;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,eAAe,CAAC;;AAErD,MAAM,YAAY,SAAS,sBAAsB,CAAC;;AAElD,MAAM,kBAAkB,SAAS,sBAAsB,CAAC;AACxD;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,SAAS,eAAe,CAAC;;AAExD,MAAM,eAAe,SAAS,yBAAyB,CAAC;;AAExD,MAAM,qBAAqB,SAAS,yBAAyB,CAAC;AAC9D;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;;AAEpD,MAAM,WAAW,SAAS,qBAAqB,CAAC;;AAEhD,MAAM,iBAAiB,SAAS,qBAAqB,CAAC;AACtD;;;AAGA;AACA;AACA,MAAM,mBAAmB,SAAS,eAAe,CAAC;;AAElD,MAAM,SAAS,SAAS,mBAAmB,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,SAAS,mBAAmB,CAAC;AAC9D;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,YAAY;AACpE,SAAS,CAAC;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B,SAAS,mBAAmB,CAAC;AAC/D;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,aAAa;AACrE,SAAS,CAAC;AACV;AACA;AACA;;;AAGA;AACA;AACA,MAAM,mBAAmB,SAAS,eAAe,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,SAAS,mBAAmB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACnE;AACA;AACA;;AAEA;AACA;AACA,MAAM,wBAAwB,SAAS,eAAe,CAAC;;AAEvD;AACA;AACA;AACA,MAAM,cAAc,SAAS,wBAAwB,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,wBAAwB,CAAC;;AAEvE;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,wBAAwB,CAAC;;AAExE;;AAEA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,uBAAuB,CAAC;AAC1D;;;AAGA;AACA,MAAM,2BAA2B,SAAS,eAAe,CAAC;;AAE1D;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,2BAA2B,CAAC;;AAE5D;AACA;AACA;AACA,MAAM,kCAAkC,SAAS,2BAA2B,CAAC;AAC7E;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA;;AAEA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD;AACA;AACA;AACA,MAAM,mBAAmB,SAAS,uBAAuB,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,eAAe,CAAC;AAC/D,IAAI,cAAc,GAAG;AACrB,QAAQ,WAAW;AACnB,QAAQ,gBAAgB;AACxB,QAAQ,iBAAiB;AACzB,QAAQ,mBAAmB;AAC3B,QAAQ,wBAAwB;AAChC,QAAQ,iBAAiB;AACzB,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uCAAuC,CAAC,OAAO,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,OAAO,CAAC,IAAI;AACxD;AACA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa;AAC/D,QAAQ,MAAM,UAAU,IAAI,SAAS,GAAG,aAAa,CAAC;;AAEtD,QAAQ,IAAI,WAAW,GAAG,CAAC;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;AAC/C;AACA,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;AACtE,gBAAgB;AAChB;;AAEA,YAAY,MAAM,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC;AACvC,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,aAAa;;AAEjE,YAAY,MAAM,IAAI,GAAG,GAAG,GAAG,GAAG;AAClC,YAAY,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,UAAU,EAAE;AAChD,gBAAgB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D;AACA;;AAEA,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,aAAa,CAAC;AACrE,QAAQ,MAAM,QAAQ,GAAG,WAAW,IAAI,UAAU,GAAG,aAAa,CAAC;AACnE;AACA,QAAQ,OAAO,IAAI,6CAA6C,CAAC,MAAM;AACvE,YAAY,OAAO,CAAC,IAAI;AACxB,YAAY,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC;AAC9C,YAAY,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ;AAChD,SAAS;AACT;;;AAGA,IAAI,6BAA6B,CAAC,SAAS,EAAE,YAAY,EAAE,iBAAiB,EAAE;AAC9E;AACA,QAAQ,IAAI,cAAc,GAAG,eAAe,CAAC,SAAS,CAAC;AACvD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/D;AACA,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,KAAK,CAAC,EAAE;AAClE;AACA,oBAAoB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,iBAAiB,CAAC,cAAc,KAAK,IAAI,IAAI,iBAAiB,CAAC,cAAc,GAAG,CAAC,EAAE;AAC/F;AACA,YAAY,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC;AAClE;;AAEA,QAAQ,MAAM,OAAO,GAAG,KAAK,CAAC,6BAA6B,CAAC,cAAc,EAAE,YAAY,EAAE,iBAAiB,CAAC;AAC5G,QAAQ,OAAO,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,QAAQ,CAAC,OAAO,EAAE;;AAE5B,QAAQ,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;;AAExD;AACA;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,uCAAuC;AACxE,kCAAkC,UAAU;AAC5C,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAExB,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE;;AAElG,QAAQ,OAAO,YAAY;AAC3B;AACA;AACA;;AAEA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;;AAEzD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,0BAA0B,CAAC;;AAE1D;AACA;AACA;AACA;AACA,MAAM,iCAAiC,SAAS,0BAA0B,CAAC;AAC3E;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;;AAEA,MAAM,kCAAkC,SAAS,0BAA0B,CAAC;AAC5E;;AAEA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;;AAEzD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,0BAA0B,CAAC;;AAE1D;AACA;AACA;AACA;AACA,MAAM,iCAAiC,SAAS,0BAA0B,CAAC;AAC3E;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA,MAAM,kCAAkC,SAAS,0BAA0B,CAAC;AAC5E;;AAEA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;;AAEzD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,0BAA0B,CAAC;;AAE1D;AACA;AACA;AACA;AACA,MAAM,iCAAiC,SAAS,0BAA0B,CAAC;AAC3E;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA,MAAM,kCAAkC,SAAS,0BAA0B,CAAC;AAC5E;;AAEA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;;AAEzD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,0BAA0B,CAAC;;AAE1D;AACA;AACA;AACA;AACA,MAAM,iCAAiC,SAAS,0BAA0B,CAAC;AAC3E;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5E;AACA;AACA,MAAM,kCAAkC,SAAS,0BAA0B,CAAC;AAC5E;;AAEA;AACA;AACA,MAAM,kCAAkC,SAAS,eAAe,CAAC;;AAEjE;AACA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,kCAAkC,CAAC;;AAE1E;;AAEA,MAAM,4BAA4B,SAAS,eAAe,CAAC;AAC3D,MAAM,qBAAqB,SAAS,4BAA4B,CAAC;AACjE,IAAI,cAAc,GAAG;AACrB;AACA,QAAQ,WAAW;AACnB,QAAQ,cAAc;AACtB,QAAQ,iBAAiB;AACzB,QAAQ,iBAAiB;;AAEzB;AACA,QAAQ,gBAAgB;AACxB,QAAQ,cAAc;AACtB,QAAQ,iBAAiB;AACzB,KAAK;;AAEL;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,IAAI,EAAE;AACzB,QAAQ,KAAK,CAAC,GAAG,IAAI,CAAC;;AAEtB;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,MAAM;AACtC;;AAEA,IAAI,MAAM,OAAO,CAAC,YAAY,EAAE;AAChC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,IAAI,MAAM;;AAEpD;AACA;AACA;AACA;;AAEA,QAAQ,IAAI,QAAQ;AACpB,QAAQ,IAAI,IAAI,KAAK,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;AAC9D,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC;AAClE,YAAY,MAAM,WAAW,GAAG,IAAG,2CAA2C,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC;AACtH,YAAY,QAAQ,GAAG,MAAM,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC;AAC7D,SAAS,MAAM;AACf,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;AAC3D,YAAY,MAAM,WAAW,GAAG,IAAG,2CAA2C,CAAC,IAAI,EAAE;AACrF,gBAAgB,SAAS,EAAE,YAAY,CAAC,SAAS;AACjD,aAAa,EAAE,OAAO,CAAC,UAAU,CAAC;AAClC,YAAY,QAAQ,GAAG,MAAM,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC;AAC7D;;AAEA,QAAQ,MAAM,OAAO,GAAG,EAAE,GAAG,YAAY,EAAE,GAAG,QAAQ;AACtD,QAAQ,MAAM,QAAQ,GAAG,MAAM,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC;;AAE5D,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ;AAClC,YAAY,IAAI,KAAK;AACrB,kBAAkB;AAClB,kBAAkB;AAClB,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvE;;AAEA,QAAQ,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,IAAI,EAAE,IAAG,2CAA2C,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;;AAE/H,QAAQ,OAAO;AACf,YAAY,GAAG,QAAQ;AACvB,YAAY,GAAG,QAAQ;AACvB,YAAY,GAAG,QAAQ;AACvB,SAAS;AACT;;AAEA;AACA;AACA;AACA,IAAI,MAAM,QAAQ,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,CAAC,gBAAgB,GAAG,MAAM;AACtC,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;AACtC;;AAEA;AACA;AACA;AACA,IAAI,MAAM,eAAe,CAAC,OAAO,EAAE;AACnC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,OAAO;;AAEvC,QAAQ,MAAM,gBAAgB,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1F,QAAQ,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;;AAExD,QAAQ,MAAM,gBAAgB,GAAG,uBAAuB,UAAU,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC;;AAEzG,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;AAC1D,QAAQ,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,UAAU,CAAC,YAAY,EAAE;AACjE,YAAY,gBAAgB;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,OAAO,GAAG;AACxB,aAAa,IAAI,CAAC,CAAC;AACnB,aAAa,IAAI,CAAC,GAAG,GAAG,CAAC;AACzB,aAAa,MAAM,CAAC,CAAC,EAAE,GAAG;AAC1B,aAAa,EAAE,CAAC,OAAO,CAAC;;AAExB;AACA,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AACtC,YAAY,MAAM,GAAG,GAAG,6CAA6C,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;AACjG,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAC5B;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;;AAEA,MAAM,iBAAiB,SAAS,WAAW,CAAC;AAC5C,IAAI,WAAW,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE;AACxD,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;AACtC,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;;AAEA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC;AAClE;AACA;;AAEA,MAAM,qBAAqB,SAAS,eAAe,CAAC;;AAEpD;AACA;AACA;AACA;AACA,MAAM,6BAA6B,SAAS,qBAAqB,CAAC;AAClE;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACrE;AACA;;AAEA;AACA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;;AAEtD;AACA;AACA;AACA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,uBAAuB,CAAC;AAC5D;;AAEA;AACA;AACA,MAAM,2BAA2B,SAAS,eAAe,CAAC;;AAE1D;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,2BAA2B,CAAC;;AAE5D;AACA;AACA;AACA,MAAM,yBAAyB,SAAS,2BAA2B,CAAC;AACpE;;AAEA;AACA,MAAM,uBAAuB,SAAS,eAAe,CAAC;AACtD,IAAI,cAAc,GAAG;AACrB,QAAQ,WAAW;AACnB,QAAQ,gBAAgB;AACxB,QAAQ,cAAc;AACtB,QAAQ,cAAc;AACtB,QAAQ,iBAAiB;AACzB,KAAK;AACL;;AAEA,MAAM,aAAa,SAAS,uBAAuB,CAAC;;AAEpD,IAAI,oCAAoC,CAAC,MAAM,EAAE;AACjD,QAAQ,MAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;AACnE,QAAQ,MAAM,uBAAuB,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,iBAAiB,CAAC;;AAEzF,QAAQ,OAAO,2CAA2C,CAAC;AAC3D;AACA,YAAY,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;AACpD,YAAY,GAAG,MAAM;AACrB,YAAY,cAAc,EAAE,uBAAuB;AACnD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,MAAM,mBAAmB,SAAS,eAAe,CAAC;AAClD,IAAI,eAAe,GAAG,cAAc;AACpC,IAAI,cAAc,GAAG,CAAC,cAAc,CAAC;AACrC;;AAEA,MAAM,iBAAiB,SAAS,WAAW,CAAC;AAC5C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,WAAW,EAAE,EAAE;AACjC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;AACtC;AACA;;AAEA,MAAM,iBAAiB,SAAS,WAAW,CAAC;AAC5C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,YAAY,EAAE,EAAE;AAClC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY;AACxC;AACA;;AAEA;AACA;AACA;AACA,MAAM,SAAS,SAAS,mBAAmB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,MAAM,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,IAAI,iBAAiB,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9F;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,MAAM,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,IAAI,iBAAiB,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9F;AACA;;AAEA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,eAAe;AACvE,SAAS,CAAC;AACV;AACA;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,eAAe;AACvE,SAAS,CAAC;AACV;AACA;AACA;;;AAGA;AACA;AACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;AACjD,IAAI,eAAe,GAAG,cAAc;AACpC,IAAI,cAAc,GAAG,CAAC,cAAc,CAAC;AACrC;;AAEA,MAAM,gBAAgB,SAAS,WAAW,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,WAAW,EAAE,EAAE;AACjC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;AACtC;AACA;;AAEA,MAAM,gBAAgB,SAAS,WAAW,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,YAAY,EAAE,EAAE;AAClC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY;AACxC;AACA;;AAEA;AACA;AACA;AACA,MAAM,QAAQ,SAAS,kBAAkB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,MAAM,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,IAAI,gBAAgB,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,MAAM,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,IAAI,gBAAgB,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;AAC7F;AACA;;AAEA,MAAM,eAAe,SAAS,kBAAkB,CAAC;AACjD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,eAAe;AACvE,SAAS,CAAC;AACV;AACA;AACA,MAAM,eAAe,SAAS,kBAAkB,CAAC;AACjD;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,6BAA6B,EAAE;AACpE,YAAY,GAAG,OAAO;AACtB;AACA,YAAY,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,eAAe;AACvE,SAAS,CAAC;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,eAAe,CAAC;AACtB;AACA;AACA;AACA;AACA,IAAI,OAAO,oBAAoB,GAAG,IAAI;;AAEtC;AACA;AACA;AACA;AACA,IAAI,OAAO,YAAY,GAAG,KAAK;;;AAG/B;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE;AAChE,QAAQ,iBAAiB,GAAG,IAAI;AAChC,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,gBAAgB,GAAG,KAAK;AAChC,QAAQ,QAAQ,GAAG,MAAM;AACzB,QAAQ,eAAe,GAAG,IAAI;AAC9B,QAAQ,SAAS,GAAG,MAAM;AAC1B,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,KAAK,GAAG,IAAI;AACpB,QAAQ,wBAAwB,GAAG,IAAI;AACvC,QAAQ,eAAe,GAAG,EAAE;AAC5B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,OAAO,GAAG;AACxB,YAAY,iBAAiB;AAC7B,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB,YAAY,wBAAwB;AACpC,YAAY,eAAe;AAC3B;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,wCAAwC,CAAC,UAAU,CAAC,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC;;AAE1I,QAAQ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;AACxC,YAAY,MAAM,IAAI,KAAK,CAAC,uEAAuE,GAAG,IAAI,CAAC,IAAI,CAAC;AAChH;AACA,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU;AACpD,QAAQ,KAAK,MAAM,mBAAmB,IAAI,IAAI,CAAC,oBAAoB,EAAE;AACrE,YAAY,IAAI,SAAS,GAAG,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC;AAC/D,YAAY,IAAI,CAAC,SAAS,EAAE;AAC5B;AACA,gBAAgB,KAAK,MAAM,GAAG,IAAI,mBAAmB,CAAC,MAAM,EAAE,EAAE;AAChE,oBAAoB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;AAC/C,wBAAwB,SAAS,GAAG,GAAG;AACvC,wBAAwB;AACxB;AACA;AACA,gBAAgB,IAAI,CAAC,SAAS,EAAE,SAAS;AACzC;AACA,YAAY,OAAO,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC;AAC7F;;AAEA,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,IAAI,EAAE,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE;AACzD,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,UAAU,CAAC,2CAA2C,CAAC,CAAC;AAC7G;AACA,YAAY,OAAO,MAAM,eAAe,CAAC,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC;AAChG,SAAS,MAAM;AACf,YAAY,MAAM,KAAK,CAAC,CAAC,wBAAwB,EAAE,UAAU,CAAC,CAAC;AAC/D;AACA;AACA;;AAEA,MAAM,gCAAgC,GAAG,IAAI,GAAG,CAAC;AACjD,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACtD,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACrD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACtD,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,aAAa,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACzD,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,cAAc,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACnD,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,aAAa,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC3D,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,eAAe,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAC/D,IAAI,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACrD,IAAI,CAAC,eAAe,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,+BAA+B,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC7D,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,kBAAkB,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;;AAExE,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7C,IAAI,CAAC,mBAAmB,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AAC3E,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7C,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7C,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACrD,IAAI,CAAC,aAAa,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC3D,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,uBAAuB,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACrF,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACtD,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;;AAEtC,IAAI,CAAC,SAAS,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,IAAI,CAAC,cAAc,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;AAE9D,IAAI,CAAC,sBAAsB,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACpF,IAAI,CAAC,UAAU,EAAE,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;AAC1D,IAAI,CAAC,cAAc,EAAE,CAAC,2BAA2B,EAAE,iBAAiB,CAAC,CAAC;;AAEtE,IAAI,CAAC,cAAc,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC5D,IAAI,CAAC,cAAc,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC5D,IAAI,CAAC,cAAc,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AAC5D,IAAI,CAAC,cAAc,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;;AAE5D,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,SAAS,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;;AAEjF,IAAI,CAAC,wBAAwB,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACpF,CAAC,CAAC;;AAEF,MAAM,mCAAmC,GAAG,IAAI,GAAG,CAAC;AACpD,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAChC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7C,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,kBAAkB,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;AACxE,CAAC,CAAC;;AAEF,MAAM,gCAAgC,GAAG,IAAI,GAAG,CAAC;AACjD,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,gCAAgC,GAAG,IAAI,GAAG,CAAC;AACjD,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,aAAa,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACzD,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7C,IAAI,CAAC,UAAU,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAChD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACrD,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACzC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,IAAI,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACxD,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC5C,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,CAAC,CAAC;;AAEF,MAAM,wCAAwC,GAAG,IAAI,GAAG,CAAC;AACzD,IAAI,CAAC,UAAU,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACtE,IAAI,CAAC,SAAS,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACrF,IAAI,CAAC,cAAc,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAClG,IAAI,CAAC,WAAW,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC3F,CAAC,CAAC;;AAEF,MAAM,2CAA2C,GAAG,IAAI,GAAG,CAAC;AAC5D,IAAI,CAAC,UAAU,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACtE,CAAC,CAAC;;AAEF,MAAM,wCAAwC,GAAG,IAAI,GAAG,CAAC;AACzD,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACtC,IAAI,CAAC,UAAU,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACxF,CAAC,CAAC;;AAEF,MAAM,+CAA+C,GAAG,IAAI,GAAG,CAAC;AAChE,IAAI,CAAC,MAAM,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AAC9E,IAAI,CAAC,YAAY,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAChG,IAAI,CAAC,UAAU,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC1F,IAAI,CAAC,SAAS,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACvF,IAAI,CAAC,KAAK,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC3E,IAAI,CAAC,UAAU,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC1F,IAAI,CAAC,WAAW,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAC7F,IAAI,CAAC,SAAS,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACvF,IAAI,CAAC,YAAY,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAC9F,IAAI,CAAC,OAAO,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACjF,IAAI,CAAC,QAAQ,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACpF,IAAI,CAAC,YAAY,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAChG,IAAI,CAAC,SAAS,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACvF,IAAI,CAAC,KAAK,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC3E,IAAI,CAAC,aAAa,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AACjG,IAAI,CAAC,MAAM,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AAC9E,IAAI,CAAC,OAAO,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACjF,IAAI,CAAC,YAAY,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAChG,IAAI,CAAC,aAAa,EAAE,CAAC,sCAAsC,EAAE,oCAAoC,CAAC,CAAC;AACnG,CAAC,CAAC;;AAEF,MAAM,4CAA4C,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,MAAM,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AACxE,IAAI,CAAC,YAAY,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AAC1F,IAAI,CAAC,UAAU,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACpF,IAAI,CAAC,SAAS,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACjF,IAAI,CAAC,KAAK,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACrE,IAAI,CAAC,UAAU,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACpF,IAAI,CAAC,WAAW,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACvF,IAAI,CAAC,SAAS,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACjF,IAAI,CAAC,YAAY,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACxF,IAAI,CAAC,OAAO,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC3E,IAAI,CAAC,YAAY,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AAC1F,IAAI,CAAC,SAAS,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACjF,IAAI,CAAC,KAAK,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACrE,IAAI,CAAC,aAAa,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AAC3F,CAAC,CAAC;;AAEF,MAAM,4CAA4C,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,IAAI,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AACtE,IAAI,CAAC,QAAQ,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AAClF,IAAI,CAAC,KAAK,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AACzE,IAAI,CAAC,MAAM,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC5E,IAAI,CAAC,OAAO,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AAC/E,IAAI,CAAC,QAAQ,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAChD,IAAI,CAAC,SAAS,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACnF,IAAI,CAAC,YAAY,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAC9F,IAAI,CAAC,kBAAkB,EAAE,CAAC,yCAAyC,EAAE,uCAAuC,CAAC,CAAC;AAC9G,CAAC,CAAC;;AAEF,MAAM,iCAAiC,GAAG,IAAI,GAAG,CAAC;AAClD,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,aAAa,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACrE,IAAI,CAAC,SAAS,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACzD,IAAI,CAAC,UAAU,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC5D,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,WAAW,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;AACjE,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AAC/C,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AAC/C,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AAC/C,IAAI,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AAC/C,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,YAAY,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACpE,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;;AAE9D;AACA,IAAI,CAAC,QAAQ,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACtD,CAAC,CAAC;;AAEF,MAAM,qCAAqC,GAAG,IAAI,GAAG,CAAC;AACtD,IAAI,CAAC,gBAAgB,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACxE,CAAC,CAAC;;;AAGF,MAAM,iCAAiC,GAAG,IAAI,GAAG,CAAC;AAClD,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AAClD,IAAI,CAAC,YAAY,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACpE,IAAI,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC9D,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AAC/C,IAAI,CAAC,UAAU,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC9D,IAAI,CAAC,WAAW,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;AACjE,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,YAAY,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;AAClE,IAAI,CAAC,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,YAAY,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACpE,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAC3D,IAAI,CAAC,KAAK,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AACvD,IAAI,CAAC,aAAa,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACrE,IAAI,CAAC,YAAY,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACpE,IAAI,CAAC,aAAa,EAAE,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;AACvE,CAAC,CAAC;;AAEF,MAAM,0CAA0C,GAAG,IAAI,GAAG,CAAC;AAC3D,IAAI,CAAC,MAAM,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACpE,IAAI,CAAC,UAAU,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAChF,IAAI,CAAC,SAAS,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC7E,IAAI,CAAC,UAAU,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAChF,IAAI,CAAC,WAAW,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACnF,IAAI,CAAC,SAAS,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC7E,IAAI,CAAC,YAAY,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACpF,IAAI,CAAC,OAAO,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACvE,IAAI,CAAC,QAAQ,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AAC1E,IAAI,CAAC,YAAY,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACtF,IAAI,CAAC,SAAS,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC7E,IAAI,CAAC,KAAK,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACjE,IAAI,CAAC,aAAa,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACvF,IAAI,CAAC,YAAY,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACtF,IAAI,CAAC,aAAa,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACzF,CAAC,CAAC;;AAEF,MAAM,oCAAoC,GAAG,IAAI,GAAG,CAAC;AACrD,IAAI,CAAC,wBAAwB,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACxF,IAAI,CAAC,UAAU,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACxF,IAAI,CAAC,SAAS,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACrF,CAAC,CAAC;;AAEF,MAAM,0CAA0C,GAAG,IAAI,GAAG,CAAC;AAC3D,IAAI,CAAC,OAAO,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AAC/E,IAAI,CAAC,iBAAiB,EAAE,CAAC,wCAAwC,EAAE,sCAAsC,CAAC,CAAC;AAC3G,IAAI,CAAC,YAAY,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAC9F,IAAI,CAAC,WAAW,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC3F,IAAI,CAAC,UAAU,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACtF,IAAI,CAAC,UAAU,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACxF,IAAI,CAAC,SAAS,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACrF,IAAI,CAAC,WAAW,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC3F,CAAC,CAAC;;AAEF,MAAM,0CAA0C,GAAG,IAAI,GAAG,CAAC;AAC3D,IAAI,CAAC,UAAU,EAAE,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAClD,CAAC,CAAC;;;AAGF,MAAM,mDAAmD,GAAG,IAAI,GAAG,CAAC;AACpE,IAAI,CAAC,wBAAwB,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACxF,CAAC,CAAC;;AAEF,MAAM,4CAA4C,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,KAAK,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACrE,IAAI,CAAC,OAAO,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC3E,IAAI,CAAC,KAAK,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACrE,IAAI,CAAC,SAAS,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC/E,IAAI,CAAC,SAAS,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AACjF,IAAI,CAAC,WAAW,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACvF,IAAI,CAAC,aAAa,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC7F,IAAI,CAAC,MAAM,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AACxE,IAAI,CAAC,MAAM,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AACxE,IAAI,CAAC,OAAO,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC3E,IAAI,CAAC,UAAU,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACpF,IAAI,CAAC,YAAY,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AAC1F,IAAI,CAAC,QAAQ,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC9E,IAAI,CAAC,uBAAuB,EAAE,CAAC,2CAA2C,EAAE,yCAAyC,CAAC,CAAC;AACvH,IAAI,CAAC,QAAQ,EAAE,CAAC,8BAA8B,EAAE,4BAA4B,CAAC,CAAC;AAC9E,IAAI,CAAC,MAAM,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AACxE,IAAI,CAAC,WAAW,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACvF,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAChG,IAAI,CAAC,cAAc,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC9F,IAAI,CAAC,cAAc,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC9F,IAAI,CAAC,cAAc,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC9F,IAAI,CAAC,cAAc,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC9F,CAAC,CAAC;;AAEF,MAAM,wCAAwC,GAAG,IAAI,GAAG,CAAC;AACzD,IAAI,CAAC,MAAM,EAAE,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;AAChE,IAAI,CAAC,SAAS,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACvE,IAAI,CAAC,mBAAmB,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AACrG,IAAI,CAAC,OAAO,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACnE,CAAC,CAAC;;AAEF,MAAM,kDAAkD,GAAG,IAAI,GAAG,CAAC;AACnE,IAAI,CAAC,QAAQ,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACtE,IAAI,CAAC,OAAO,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACnE,IAAI,CAAC,gBAAgB,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AAC5F,CAAC,CAAC;;AAEF,MAAM,0CAA0C,GAAG,IAAI,GAAG,CAAC;AAC3D;AACA,IAAI,CAAC,MAAM,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC1D,IAAI,CAAC,SAAS,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC7E,CAAC,CAAC;;AAEF,MAAM,6CAA6C,GAAG,IAAI,GAAG,CAAC;AAC9D,IAAI,CAAC,WAAW,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACzF,IAAI,CAAC,SAAS,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;;AAEnF,IAAI,CAAC,MAAM,EAAE,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;AAC1E,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAChG,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAChG,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAChG,IAAI,CAAC,cAAc,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAChG,CAAC,CAAC;;AAEF,MAAM,8CAA8C,GAAG,IAAI,GAAG,CAAC;AAC/D,IAAI,CAAC,MAAM,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC1D,IAAI,CAAC,YAAY,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC5F,CAAC,CAAC;;AAEF,MAAM,uCAAuC,GAAG,IAAI,GAAG,CAAC;AACxD,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAM,2BAA2B,GAAG,IAAI,GAAG,CAAC;AAC5C,IAAI,CAAC,UAAU,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACpD,IAAI,CAAC,eAAe,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AACjE,IAAI,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACvD,IAAI,CAAC,eAAe,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AACjE,IAAI,CAAC,OAAO,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC3C,IAAI,CAAC,QAAQ,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC9C,CAAC,CAAC;;AAEF,MAAM,4CAA4C,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,UAAU,EAAE,CAAC,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;AAC1F,IAAI,CAAC,eAAe,EAAE,CAAC,uCAAuC,EAAE,qCAAqC,CAAC,CAAC;AACvG,IAAI,CAAC,WAAW,EAAE,CAAC,oCAAoC,EAAE,kCAAkC,CAAC,CAAC;AAC7F,IAAI,CAAC,eAAe,EAAE,CAAC,uCAAuC,EAAE,qCAAqC,CAAC,CAAC;AACvG,IAAI,CAAC,OAAO,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACjF,IAAI,CAAC,QAAQ,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AACpF,IAAI,CAAC,+BAA+B,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AAC/F,CAAC,CAAC;;AAEF,MAAM,qCAAqC,GAAG,IAAI,GAAG,CAAC;AACtD,IAAI,CAAC,OAAO,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACnD,CAAC,CAAC;;AAEF,MAAM,kDAAkD,GAAG,IAAI,GAAG,CAAC;AACnE,IAAI,CAAC,eAAe,EAAE,CAAC,yCAAyC,EAAE,uCAAuC,CAAC,CAAC;AAC3G,IAAI,CAAC,OAAO,EAAE,CAAC,kCAAkC,EAAE,gCAAgC,CAAC,CAAC;AACrF,IAAI,CAAC,UAAU,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAC9F,IAAI,CAAC,UAAU,EAAE,CAAC,qCAAqC,EAAE,mCAAmC,CAAC,CAAC;AAC9F,CAAC,CAAC;;AAEF,MAAM,qCAAqC,GAAG,IAAI,GAAG,CAAC;AACtD,IAAI,CAAC,UAAU,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC,CAAC;AACtE,CAAC,CAAC;;AAEF,MAAM,8CAA8C,GAAG,IAAI,GAAG,CAAC;AAC/D,IAAI,CAAC,UAAU,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AAClE,IAAI,CAAC,cAAc,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AAC9E,CAAC;;AAED,MAAM,sCAAsC,GAAG,IAAI,GAAG,CAAC;AACvD,IAAI,CAAC,SAAS,EAAE,CAAC,gCAAgC,EAAE,8BAA8B,CAAC,CAAC;AACnF,CAAC;;AAED,MAAM,wCAAwC,GAAG,IAAI,GAAG,CAAC;AACzD,IAAI,CAAC,KAAK,EAAE,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AAC7D,IAAI,CAAC,gBAAgB,EAAE,CAAC,iCAAiC,EAAE,+BAA+B,CAAC,CAAC;AAC5F,IAAI,CAAC,MAAM,EAAE,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;AAChE,IAAI,CAAC,SAAS,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;AACzE,IAAI,CAAC,WAAW,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AAC7E,CAAC;;AAED,MAAM,yCAAyC,GAAG,IAAI,GAAG,CAAC;AAC1D,IAAI,CAAC,SAAS,EAAE,CAAC,4BAA4B,EAAE,0BAA0B,CAAC,CAAC;AAC3E,CAAC;;AAED,MAAM,uCAAuC,GAAG,IAAI,GAAG,CAAC;AACxD,IAAI,CAAC,SAAS,EAAE,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;AACvE,CAAC;;AAED;AACA;AACA,MAAM,gDAAgD,GAAG,IAAI,GAAG,CAAC;AACjE,IAAI,CAAC,MAAM,EAAE,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;AAC9E,IAAI,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AACxD,IAAI,CAAC,WAAW,EAAE,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC/D,CAAC;;AAED,MAAM,wBAAwB,GAAG;AACjC;AACA,IAAI,CAAC,gCAAgC,EAAE,WAAW,CAAC,WAAW,CAAC;AAC/D,IAAI,CAAC,mCAAmC,EAAE,WAAW,CAAC,cAAc,CAAC;AACrE,IAAI,CAAC,gCAAgC,EAAE,WAAW,CAAC,WAAW,CAAC;AAC/D,IAAI,CAAC,gCAAgC,EAAE,WAAW,CAAC,WAAW,CAAC;;AAE/D,IAAI,CAAC,+CAA+C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC9E,IAAI,CAAC,4CAA4C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC3E,IAAI,CAAC,4CAA4C,EAAE,WAAW,CAAC,OAAO,CAAC;AACvE,IAAI,CAAC,wCAAwC,EAAE,WAAW,CAAC,OAAO,CAAC;AACnE,IAAI,CAAC,iCAAiC,EAAE,WAAW,CAAC,WAAW,CAAC;AAChE,IAAI,CAAC,qCAAqC,EAAE,WAAW,CAAC,aAAa,CAAC;AACtE,IAAI,CAAC,iCAAiC,EAAE,WAAW,CAAC,WAAW,CAAC;AAChE,IAAI,CAAC,0CAA0C,EAAE,WAAW,CAAC,WAAW,CAAC;AACzE,IAAI,CAAC,oCAAoC,EAAE,WAAW,CAAC,UAAU,CAAC;AAClE,IAAI,CAAC,0CAA0C,EAAE,WAAW,CAAC,eAAe,CAAC;AAC7E,IAAI,CAAC,0CAA0C,EAAE,WAAW,CAAC,eAAe,CAAC;AAC7E,IAAI,CAAC,4CAA4C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC3E,IAAI,CAAC,0CAA0C,EAAE,WAAW,CAAC,WAAW,CAAC;AACzE,IAAI,CAAC,8CAA8C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC7E,IAAI,CAAC,6CAA6C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC5E,IAAI,CAAC,qCAAqC,EAAE,WAAW,CAAC,WAAW,CAAC;AACpE,IAAI,CAAC,8CAA8C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC7E,IAAI,CAAC,sCAAsC,EAAE,WAAW,CAAC,WAAW,CAAC;AACrE,IAAI,CAAC,wCAAwC,EAAE,WAAW,CAAC,WAAW,CAAC;AACvE,IAAI,CAAC,yCAAyC,EAAE,WAAW,CAAC,WAAW,CAAC;AACxE,IAAI,CAAC,uCAAuC,EAAE,WAAW,CAAC,WAAW,CAAC;AACtE,IAAI,CAAC,wCAAwC,EAAE,WAAW,CAAC,WAAW,CAAC;AACvE,IAAI,CAAC,kDAAkD,EAAE,WAAW,CAAC,WAAW,CAAC;AACjF,IAAI,CAAC,uCAAuC,EAAE,WAAW,CAAC,cAAc,CAAC;AACzE,IAAI,CAAC,2BAA2B,EAAE,WAAW,CAAC,WAAW,CAAC;AAC1D,IAAI,CAAC,4CAA4C,EAAE,WAAW,CAAC,WAAW,CAAC;AAC3E,IAAI,CAAC,2CAA2C,EAAE,WAAW,CAAC,OAAO,CAAC;AACtE,IAAI,CAAC,wCAAwC,EAAE,WAAW,CAAC,WAAW,CAAC;AACvE,IAAI,CAAC,qCAAqC,EAAE,WAAW,CAAC,WAAW,CAAC;AACpE,IAAI,CAAC,kDAAkD,EAAE,WAAW,CAAC,WAAW,CAAC;;AAEjF;AACA,IAAI,CAAC,gDAAgD,EAAE,WAAW,CAAC,WAAW,CAAC;AAC/E,CAAC;;AAED,KAAK,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,wBAAwB,EAAE;AACzD;AACA,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE,EAAE;AACnD,QAAQ,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAC1C,QAAQ,2BAA2B,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC;AACpD,QAAQ,2BAA2B,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;AACpD;AACA;;AAEA,MAAM,cAAc,GAAG;AACvB;AACA;AACA,IAAI,CAAC,kCAAkC,EAAE,gCAAgC,EAAE,WAAW,CAAC,QAAQ,CAAC;AAChG,IAAI,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,WAAW,CAAC,KAAK,CAAC;;AAE7D,IAAI,CAAC,6BAA6B,EAAE,2BAA2B,EAAE,WAAW,CAAC,WAAW,CAAC;AACzF,IAAI,CAAC,iBAAiB,EAAE,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC;AACjE,IAAI,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,WAAW,CAAC,WAAW,CAAC;AACrE,IAAI,CAAC,6BAA6B,EAAE,2BAA2B,EAAE,WAAW,CAAC,WAAW,CAAC;AACzF,IAAI,CAAC,8BAA8B,EAAE,4BAA4B,EAAE,WAAW,CAAC,WAAW,CAAC;;AAE3F,IAAI,CAAC,iBAAiB,EAAE,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC;AACjE,IAAI,CAAC,iBAAiB,EAAE,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC;AACjE,IAAI,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,WAAW,CAAC,WAAW,CAAC;AACnE,IAAI,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,WAAW,CAAC,WAAW,CAAC;AACnE;AACA,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,cAAc,EAAE;AAClD,IAAI,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AACtC,IAAI,2BAA2B,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC;AAChD,IAAI,2BAA2B,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;AAChD;;AAEA,MAAM,oBAAoB,GAAG,IAAI,GAAG,CAAC;AACrC,IAAI,CAAC,QAAQ,EAAE,0CAA0C,CAAC;AAC1D,IAAI,CAAC,UAAU,EAAE,0CAA0C,CAAC;AAC5D,IAAI,CAAC,OAAO,EAAE,0CAA0C,CAAC;AACzD,IAAI,CAAC,KAAK,EAAE,0CAA0C,CAAC;AACvD,CAAC,CAAC;AACF,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,oBAAoB,CAAC,OAAO,EAAE,EAAE;AAC9D,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,eAAe,CAAC;AAC1D,IAAI,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,WAAW,CAAC;AACzD,IAAI,2BAA2B,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC;AAC1D,IAAI,2BAA2B,CAAC,GAAG,CAAC,IAAI,EAAE,eAAe,CAAC;AAC1D;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,SAAS,eAAe,CAAC;AACxC;AACA;AACA,IAAI,OAAO,oBAAoB,GAAG,wBAAwB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,IAAI,OAAO,YAAY,GAAG,IAAI;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kCAAkC,SAAS,eAAe,CAAC;AACjE,IAAI,OAAO,oBAAoB,GAAG,CAAC,+CAA+C,CAAC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,eAAe,CAAC;AAC9D,IAAI,OAAO,oBAAoB,GAAG,CAAC,4CAA4C,CAAC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,eAAe,CAAC;AACpD,IAAI,OAAO,oBAAoB,GAAG,CAAC,4CAA4C,CAAC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,SAAS,eAAe,CAAC;AACxD,IAAI,OAAO,oBAAoB,GAAG,CAAC,wCAAwC,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B,SAAS,eAAe,CAAC;AAC5D,IAAI,OAAO,oBAAoB,GAAG,CAAC,2CAA2C,CAAC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;AACzD,IAAI,OAAO,oBAAoB,GAAG,CAAC,wCAAwC,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,eAAe,CAAC;AACnD,IAAI,OAAO,oBAAoB,GAAG,CAAC,iCAAiC,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,eAAe,CAAC;AACnD,IAAI,OAAO,oBAAoB,GAAG,CAAC,iCAAiC,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B,SAAS,eAAe,CAAC;AAC5D,IAAI,OAAO,oBAAoB,GAAG,CAAC,0CAA0C,CAAC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,eAAe,CAAC;AACrD,IAAI,OAAO,oBAAoB,GAAG,CAAC,oCAAoC,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B,SAAS,eAAe,CAAC;AAC9D,IAAI,OAAO,oBAAoB,GAAG,CAAC,4CAA4C,CAAC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B,SAAS,eAAe,CAAC;AAC5D,IAAI,OAAO,oBAAoB,GAAG,CAAC,0CAA0C,CAAC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,SAAS,eAAe,CAAC;AAC/D,IAAI,OAAO,oBAAoB,GAAG,CAAC,6CAA6C,CAAC;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iCAAiC,SAAS,eAAe,CAAC;AAChE,IAAI,OAAO,oBAAoB,GAAG,CAAC,8CAA8C,CAAC;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAC1D,IAAI,OAAO,oBAAoB,GAAG,CAAC,wCAAwC,CAAC;AAC5E;;AAEA,MAAM,mCAAmC,SAAS,eAAe,CAAC;AAClE,IAAI,OAAO,oBAAoB,GAAG,CAAC,kDAAkD,CAAC;AACtF;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,SAAS,eAAe,CAAC;AACzD,IAAI,OAAO,oBAAoB,GAAG,CAAC,uCAAuC,CAAC;AAC3E;;AAEA,MAAM,eAAe,SAAS,eAAe,CAAC;AAC9C,IAAI,OAAO,oBAAoB,GAAG,CAAC,2BAA2B,CAAC;AAC/D;;AAEA,MAAM,+BAA+B,SAAS,eAAe,CAAC;AAC9D,IAAI,OAAO,oBAAoB,GAAG,CAAC,4CAA4C,CAAC;AAChF;;AAEA,MAAM,mBAAmB,SAAS,eAAe,CAAC;AAClD,IAAI,OAAO,oBAAoB,GAAG,CAAC,qCAAqC,CAAC;AACzE;;AAEA,MAAM,oCAAoC,SAAS,eAAe,CAAC;AACnE,IAAI,OAAO,oBAAoB,GAAG,CAAC,kDAAkD,CAAC;AACtF;;AAEA,MAAM,qCAAqC,SAAS,eAAe,CAAC;AACpE,IAAI,OAAO,oBAAoB,GAAG,CAAC,mDAAmD,CAAC;AACvF;;AAEA,MAAM,wBAAwB,SAAS,eAAe,CAAC;AACvD,IAAI,OAAO,oBAAoB,GAAG,CAAC,qCAAqC,CAAC;AACzE;;AAEA,MAAM,wBAAwB,SAAS,eAAe,CAAC;AACvD,IAAI,OAAO,oBAAoB,GAAG,CAAC,sCAAsC,CAAC;AAC1E;;AAEA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAC1D,IAAI,OAAO,oBAAoB,GAAG,CAAC,wCAAwC,CAAC;AAC5E;;AAEA,MAAM,4BAA4B,SAAS,eAAe,CAAC;AAC3D,IAAI,OAAO,oBAAoB,GAAG,CAAC,yCAAyC,CAAC;AAC7E;;AAEA,MAAM,0BAA0B,SAAS,eAAe,CAAC;AACzD,IAAI,OAAO,oBAAoB,GAAG,CAAC,uCAAuC,CAAC;AAC3E;;AAEA,MAAM,kCAAkC,SAAS,eAAe,CAAC;AACjE,IAAI,OAAO,oBAAoB,GAAG,CAAC,gDAAgD,CAAC;AACpF;;AAEA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAC1D,IAAI,OAAO,oBAAoB,GAAG,CAAC,0CAA0C,CAAC;AAC9E;;AAEA,MAAM,2BAA2B,SAAS,eAAe,CAAC;AAC1D,IAAI,OAAO,oBAAoB,GAAG,CAAC,0CAA0C,CAAC;AAC9E;;AAEA;;AAEA;AACA,MAAM,eAAe,SAAS,WAAW,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,kBAAkB,GAAG,IAAI,EAAE,gBAAgB,GAAG,IAAI,EAAE,EAAE;AAClH,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe;AAC9C,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe;AAC9C,QAAQ,IAAI,CAAC,kBAAkB,GAAG,kBAAkB;AACpD,QAAQ,IAAI,CAAC,gBAAgB,GAAG,gBAAgB;AAChD;AACA;;AAEA;AACA;AACA;AACA,MAAM,wBAAwB,SAAS,WAAW,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,GAAG,UAAU,EAAE,EAAE;AAC3C,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;AACzD,QAAQ,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC;AACA,YAAY,IAAI,CAAC,UAAU,GAAG,eAAe;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,aAAa,SAAS,WAAW,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE;AACxC,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC;AACA;;AAEA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,WAAW,CAAC;AAChD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,EAAE;AAC5B,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA,MAAM,cAAc,SAAS,WAAW,CAAC;AACzC;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,EAAE;AAC5B,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA,MAAM,4BAA4B,SAAS,WAAW,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,YAAY,EAAE,UAAU,EAAE,EAAE;AAC9C,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY;AACxC,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC;AACA;;;AAGA;AACA;AACA;AACA,MAAM,cAAc,SAAS,WAAW,CAAC;AACzC;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,EAAE;AAC5B,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,WAAW,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,EAAE;AAC7C,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe;AAC9C;AACA;;AAEA,MAAM,kBAAkB,SAAS,WAAW,CAAC;AAC7C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,MAAM,EAAE,EAAE;AAC5B,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA,MAAM,eAAe,SAAS,WAAW,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE;AAC3C,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;AACtC;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,gGAAgG;AACtG;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAyE,mBAAmB,8BAA8B,uBAAuB;AACjJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,mBAAmB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAElH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AACvD,QAAQ,MAAM,WAAW,GAAG,IAAG,4CAA4C,CAAC,eAAe;AAC3F,YAAY,GAAG;AACf,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,EAAE;AACd,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;AACzC,YAAY,aAAa;AACzB,YAAY,IAAI;AAChB,YAAY,OAAO;AACnB,YAAY,IAAI;AAChB,SAAS;;AAET;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;;AAEtC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAG,4CAA4C,CAAC,eAAe,EAAE,GAAG,EAAE,MAAM,EAAE;AACpG,YAAY,QAAQ,EAAE,KAAK;AAC3B,SAAS;;AAET,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;AACpC,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,uBAAuB,CAAC,QAAQ,EAAE,UAAU,EAAE;AACxD;AACA,QAAQ,OAAO,IAAG,4CAA4C,CAAC,WAAW;AAC1E,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,MAAM;AACvB,YAAY,GAAG;AACf,YAAY,GAAG;AACf,YAAY;AACZ,gBAAgB,UAAU,EAAE,GAAG;AAC/B,gBAAgB,KAAK,EAAE,GAAG;AAC1B,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,WAAW,EAAE,IAAI;AACjC,gBAAgB,WAAW,EAAE,IAAI,CAAC,WAAW;AAC7C,gBAAgB,OAAO,EAAE,KAAK;AAC9B,gBAAgB,SAAS,EAAE,qBAAqB;AAChD,gBAAgB,gBAAgB,EAAE,IAAI;;AAEtC;AACA,gBAAgB,cAAc,EAAE,UAAU;AAC1C,gBAAgB,SAAS,EAAE,IAAI;AAC/B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,CAAC;;AAE9H,QAAQ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAC1F,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACtC;AACA,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACtC,YAAY,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI;AAC/C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3D,gBAAgB,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,KAAK;AACzE;AACA;;AAEA,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC/C,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,gDAAgD,GAAG,mBAAmB,iCAAiC,0BAA0B,CAAC;AAC3J,qBAAqB,IAAI,0CAA0C,GAAG,mBAAmB,2BAA2B,oBAAoB,CAAC;AACzI,qBAA0F,mBAAmB,+CAA+C,wCAAwC;AACpM,qBAAqB,IAAI,mDAAmD,GAAG,mBAAmB,iCAAiC,oCAAoC,CAAC;;;;;;;AAOxK,MAAM,oBAAoB,CAAC;;AAE3B;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC,EAAE,EAAE;;AAE5E,QAAQ,MAAM,kBAAkB,GAAG,MAAM,IAAG,0CAA0C,CAAC,YAAY,EAAE,6BAA6B,EAAE,gDAAgD,CAAC,sBAAsB,EAAE,IAAI,EAAE,OAAO,CAAC;;AAE3N;AACA,QAAQ,MAAM,GAAG,GAAG,kBAAkB,CAAC,sBAAsB;AAC7D,QAAQ,MAAM,uBAAuB,GAAG,mDAAmD,CAAC,GAAG,CAAC;;AAEhG,QAAQ,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,iCAAiC,EAAE,GAAG,CAAC,yBAAyB,EAAE,gDAAgD,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACpK;;AAEA;AACA,QAAQ,OAAO,IAAI,uBAAuB,CAAC,kBAAkB,CAAC;AAC9D;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,gDAAgD,GAAG,mBAAmB,iCAAiC,0BAA0B,CAAC;AAC3J,qBAAqB,IAAI,0CAA0C,GAAG,mBAAmB,2BAA2B,oBAAoB,CAAC;AACzI,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,iDAAiD,GAAG,mBAAmB,+BAA+B,kCAAkC,CAAC;;;;;;;AAOlK,MAAM,kBAAkB,CAAC;;AAEzB;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC,EAAE,EAAE;;AAE5E,QAAQ,MAAM,kBAAkB,GAAG,MAAM,IAAG,0CAA0C,CAAC,YAAY,EAAE,6BAA6B,EAAE,gDAAgD,CAAC,oBAAoB,EAAE,IAAI,EAAE,OAAO,CAAC;;AAEzN;AACA,QAAQ,MAAM,GAAG,GAAG,kBAAkB,CAAC,oBAAoB,IAAI,kBAAkB,CAAC,sBAAsB;AACxG,QAAQ,IAAI,qBAAqB,GAAG,iDAAiD,CAAC,GAAG,CAAC;;AAE1F,QAAQ,IAAI,CAAC,qBAAqB,EAAE;AACpC,YAAY,IAAI,GAAG,KAAK,SAAS,EAAE;AACnC;AACA,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,sBAAsB,EAAE,GAAG,CAAC,iEAAiE,EAAE,gDAAgD,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACjM;AACA,YAAY,qBAAqB,GAAG,4DAA4D,CAAC,cAAc;AAC/G;;AAEA;AACA,QAAQ,OAAO,IAAI,qBAAqB,CAAC,kBAAkB,CAAC;AAC5D;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,sCAAsC;AAC5C;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,aAAa,EAAE,qBAAqB,aAAa;AACxE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,gDAAgD,GAAG,mBAAmB,iCAAiC,0BAA0B,CAAC;AAC3J,qBAAqB,IAAI,0CAA0C,GAAG,mBAAmB,2BAA2B,oBAAoB,CAAC;AACzI,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,yBAAyB,4BAA4B,CAAC;AAChJ,qBAAqB,IAAI,iDAAiD,GAAG,mBAAmB,+BAA+B,kCAAkC,CAAC;AAClK,qBAAqB,IAAI,mDAAmD,GAAG,mBAAmB,iCAAiC,oCAAoC,CAAC;;;;;;;;;;;AAWxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,CAAC;;AAEpB;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC,EAAE,EAAE;;AAE5E;AACA,QAAQ,MAAM,kBAAkB,GAAG,MAAM,IAAG,0CAA0C,CAAC,YAAY,EAAE,6BAA6B,EAAE,gDAAgD,CAAC,oBAAoB,EAAE,IAAI,EAAE,OAAO,CAAC;;AAEzN,QAAQ,MAAM,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,eAAe,EAAE,GAAG,kBAAkB;AACpG,QAAQ,IAAI,eAAe,IAAI,2CAA2C,CAAC,eAAe,CAAC,EAAE;AAC7F,YAAY,OAAO,2CAA2C,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,6BAA6B,EAAE,OAAO,CAAC;AACvI;;AAEA,QAAQ,IAAI,CAAC,oBAAoB,IAAI,CAAC,sBAAsB,EAAE;AAC9D,YAAY,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC;AACzG;;AAEA,QAAQ,MAAM,UAAU,GAAG,EAAE;AAC7B,QAAQ,IAAI,oBAAoB,EAAE;AAClC,YAAY,MAAM,qBAAqB,GAAG,iDAAiD,CAAC,oBAAoB,CAAC;AACjH,YAAY,IAAI,CAAC,qBAAqB,EAAE;AACxC,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,+BAA+B,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC;AAC3F;AACA,YAAY,UAAU,CAAC,eAAe,GAAG,IAAI,qBAAqB,CAAC,kBAAkB,CAAC;AACtF;;AAEA,QAAQ,IAAI,sBAAsB,EAAE;AACpC,YAAY,MAAM,qBAAqB,GAAG,iDAAiD,CAAC,sBAAsB,CAAC;AACnH,YAAY,IAAI,qBAAqB,EAAE;AACvC;AACA,gBAAgB,UAAU,CAAC,eAAe,GAAG,IAAI,qBAAqB,CAAC,kBAAkB,CAAC;AAC1F,aAAa,MAAM;AACnB,gBAAgB,MAAM,uBAAuB,GAAG,mDAAmD,CAAC,sBAAsB,CAAC;AAC3H,gBAAgB,IAAI,CAAC,uBAAuB,EAAE;AAC9C,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,iCAAiC,EAAE,sBAAsB,CAAC,EAAE,CAAC,CAAC;AACnG;AACA,gBAAgB,UAAU,CAAC,iBAAiB,GAAG,IAAI,uBAAuB,CAAC,kBAAkB,CAAC;AAC9F;AACA;;AAEA,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,OAAO,IAAI,sDAAsD,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC;AACvG;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,oBAAoB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAG/G,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAG5G,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B;AACpG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,2BAA2B,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAGtH,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAyE,mBAAmB,8BAA8B,uBAAuB;AACjJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,oBAAoB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAEnH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAG,4CAA4C,CAAC,eAAe;AAC1F,YAAY,IAAI,CAAC,MAAM,CAAC,iBAAiB;AACzC,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,IAAI;AAChB,YAAY,KAAK;AACjB,SAAS;;AAET,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAG,4CAA4C,CAAC,eAAe;AACjG,YAAY,IAAI,CAAC,MAAM,CAAC,iBAAiB;AACzC,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,SAAS;;AAET,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAG,4CAA4C,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM;;AAE1H;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE;;AAEpE;AACA,QAAQ,IAAI,SAAS;AAErB,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,GAAG,UAAU;AACjD,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE;AACtB,YAAY,IAAI,UAAU,KAAK,YAAY,EAAE;AAE7C,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;AAClE,gBAAgB,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,UAAU,CAAC;;AAEnE,gBAAgB,SAAS,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;AAC7H,aAAa,MAAM;AACnB;AACA,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,UAAU,CAAC,iBAAiB,CAAC;AACrF;AACA,SAAS,MAAM;AACf,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;AAC1B,gBAAgB,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;AAC1D,gBAAgB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;;AAEpC,gBAAgB,IAAI,OAAO,KAAK,QAAQ,EAAE;AAC1C,oBAAoB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE;AACxF,wBAAwB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACtG;AACA,iBAAiB,MAAM,IAAI,OAAO,KAAK,WAAW,EAAE;AACpD,oBAAoB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE;AACnF,wBAAwB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/C;AACA;AACA,gBAAgB,QAAQ,GAAG,MAAM;AACjC;;AAEA,YAAY,IAAI,UAAU,KAAK,QAAQ,EAAE;AACzC,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,UAAU,CAAC,iBAAiB,CAAC;AACrF;;AAEA,YAAY,SAAS,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;AACzH;;AAEA,QAAQ,OAAO,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,uBAAuB,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,GAAG,IAAI,EAAE;AAC5E;AACA,QAAQ,OAAO,IAAG,4CAA4C,CAAC,WAAW;AAC1E,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,MAAM;AACvB,YAAY,IAAI,CAAC,MAAM,CAAC,eAAe;AACvC,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU;AAClC,YAAY;AACZ,gBAAgB,KAAK,EAAE,GAAG;AAC1B,gBAAgB,WAAW;AAC3B,gBAAgB,OAAO,EAAE,IAAI;;AAE7B;AACA,gBAAgB,cAAc,EAAE,UAAU;AAC1C,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,SAAS,EAAE,IAAI;AAC/B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,UAAU,GAAG,IAAI;AACzB,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,sBAAsB,CAAC;;AAE/H;AACA,QAAQ,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc;AACvD,YAAY,KAAK;AACjB,YAAY,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc;AACpD,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU;AAClC,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO;AAC/B,SAAS;;AAET,QAAQ,OAAO;AACf,YAAY,cAAc,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;AACvD;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,kBAAkB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC7G,MAAM,oBAAoB,SAAS,kBAAkB,CAAC;;;AAGtD,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB,CAAC;AAC/F,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB;AAC1F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,sBAAsB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACjH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,KAAK,GAAG,GAAG,GAAG,CAAC;AAC3D;;AAEA,IAAI,MAAM,MAAM,CAAC,KAAK,EAAE;AACxB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,EAAE,aAAa;AACtD,QAAQ,IAAI,aAAa,KAAK,SAAS,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,iDAAiD,CAAC,CAAC;AAChF;;AAEA,QAAQ,IAAI,aAAa,GAAG,GAAG,EAAE;AACjC;AACA,YAAY,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;;AAElF,YAAY,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAC,KAAK,EAAE;AACnF,gBAAgB,aAAa,EAAE,oBAAoB;AACnD,aAAa,CAAC;;AAEd,YAAY,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,EAAE;AAC5D,gBAAgB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvC,aAAa,CAAC;;AAEd;AACA,YAAY,KAAK,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC;AACzE,SAAS,MAAM;AACf;AACA,YAAY,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,EAAE;AACrE,gBAAgB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvC,aAAa,CAAC;AACd;;AAEA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,MAAM,wBAAwB,SAAS,sBAAsB,CAAC;;;AAG9D,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,mEAAmE,GAAG,mBAAmB,iDAAiD,oDAAoD,CAAC;;;AAGxN,MAAM,mBAAmB,SAAS,mEAAmE,CAAC,uBAAuB,CAAC;;;AAG9H,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,kBAAkB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC7G,MAAM,oBAAoB,SAAS,kBAAkB,CAAC;;AAEtD,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;;AAMlJ;AACA;AACA;AACA;AACA;;AAEA,MAAM,kBAAkB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;;AAEhD;AACA;AACA;AACA,QAAQ,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAC9D,QAAQ,MAAM,UAAU,GAAG,IAAG,6CAA6C,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC;;AAE/F,QAAQ,OAAO,EAAE,GAAG,MAAM,EAAE,UAAU,EAAE;AACxC;;AAEA;AACA,IAAI,6BAA6B,CAAC,GAAG,IAAI,EAAE;AAC3C,QAAQ,OAAO,IAAG,4DAA4D,CAAC,6BAA6B,EAAE,GAAG,IAAI,CAAC;AACtH;;AAEA;AACA,IAAI,kCAAkC,CAAC,GAAG,IAAI,EAAE;AAChD,QAAQ,OAAO,IAAG,4DAA4D,CAAC,kCAAkC,EAAE,GAAG,IAAI,CAAC;AAC3H;;AAEA;AACA,IAAI,kCAAkC,CAAC,GAAG,IAAI,EAAE;AAChD,QAAQ,OAAO,IAAG,4DAA4D,CAAC,kCAAkC,EAAE,GAAG,IAAI,CAAC;AAC3H;AACA;;AAEA,MAAM,oBAAoB,SAAS,kBAAkB,CAAC,GAAG;;;AAGzD,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB,CAAC;AACzF,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,mBAAmB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC9G,IAAI,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;AACzD,QAAQ,MAAM,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,CAAC,GAAG,OAAO;;AAEhE,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU;AACxC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC7C,YAAY,UAAU,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;AAClE;;AAEA,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;AACtC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACvC,YAAY,SAAS,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;AACjE;;AAEA,QAAQ,MAAM,eAAe,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAE5E,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;AAC5D,YAAY,MAAM,EAAE,IAAI;;AAExB;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,GAAG,OAAO;AACtB,SAAS,CAAC;AACV;AACA;AACA,MAAM,qBAAqB,SAAS,mBAAmB,CAAC;;;AAGxD,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC5G,MAAM,mBAAmB,SAAS,iBAAiB,CAAC,GAAG;;;AAGvD,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,0BAA0B,EAAE,qBAAqB,0BAA0B;AAClG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,0BAA0B,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACrH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI;AAC1D,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3D;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;AAKlJ,MAAM,uBAAuB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;AACtH;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,yBAAyB,CAAC;;AAElI,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;AAC3C,YAAY,KAAK,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC;AAC3C;;AAEA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY;AACrD,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,YAAY,KAAK,CAAC,EAAE;AAC/C,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,2EAA2E,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;AAC3H;;AAEA,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,CAAC;AACb,YAAY,YAAY;AACxB,YAAY,KAAK,CAAC,MAAM,GAAG,YAAY;AACvC,SAAS;AACT,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC3G,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,oCAAoC;AAC1C;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,2BAA2B,+GAA+G,CAAC,mBAAmB,CAAC;AAC3M,uBAAuB,oBAAoB,EAAE,2BAA2B,6DAA6D,CAAC,oBAAoB,CAAC;AAC3J,uBAAuB,mBAAmB,EAAE,2BAA2B,2DAA2D,CAAC,mBAAmB,CAAC;AACvJ,uBAAuB,uBAAuB,EAAE,2BAA2B,mEAAmE,CAAC,uBAAuB,CAAC;AACvK,uBAAuB,qBAAqB,EAAE,2BAA2B,6DAA6D,CAAC,cAAc,CAAC;AACtJ,uBAAuB,yBAAyB,EAAE,2BAA2B,uEAAuE,CAAC,yBAAyB,CAAC;AAC/K,uBAAuB,wBAAwB,EAAE,2BAA2B,qEAAqE,CAAC,wBAAwB,CAAC;AAC3K,uBAAuB,2BAA2B,EAAE,2BAA2B,6EAA6E,CAAC,2BAA2B,CAAC;AACzL,uBAAuB,wBAAwB,EAAE,2BAA2B,qEAAqE,CAAC,wBAAwB,CAAC;AAC3K,uBAAuB,wBAAwB,EAAE,2BAA2B,qEAAqE,CAAC,wBAAwB,CAAC;AAC3K,uBAAuB,yBAAyB,EAAE,2BAA2B,uEAAuE,CAAC,yBAAyB,CAAC;AAC/K,uBAAuB,uBAAuB,EAAE,2BAA2B,oEAAoE,CAAC,uBAAuB;AACvK,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,+GAA+G,GAAG,mBAAmB,4FAA4F,gGAAgG,CAAC;AAC3V,qBAAqB,IAAI,mEAAmE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACvN,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACrM,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,uEAAuE,GAAG,mBAAmB,oDAAoD,wDAAwD,CAAC;AACnO,qBAAqB,IAAI,qEAAqE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC7N,qBAAqB,IAAI,6EAA6E,GAAG,mBAAmB,0DAA0D,8DAA8D,CAAC;AACrP,qBAAqB,IAAI,qEAAqE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC7N,qBAAqB,IAAI,qEAAqE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC7N,qBAAqB,IAAI,uEAAuE,GAAG,mBAAmB,oDAAoD,wDAAwD,CAAC;AACnO,qBAAqB,IAAI,oEAAoE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACxN,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,0CAA0C,sCAAsC,CAAC;;;;;;;;;;;;;;AAc7L;;;;AAIA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;;;;;AAK5I,MAAM,kBAAkB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAClG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;;AAE/F,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AACpC,QAAQ,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC;;AAEjC,QAAQ,MAAM;AACd;AACA,YAAY,iCAAiC;AAC7C;AACA,YAAY,2BAA2B;AACvC;AACA,YAAY,uBAAuB;AACnC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;;AAEvC;AACA,QAAQ,IAAI,CAAC,iCAAiC,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,IAAI,EAAE,CAAC,CAAC;;AAEjH;AACA,QAAQ,IAAI,CAAC,2BAA2B,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,IAAI,EAAE,CAAC,CAAC;;AAErG;AACA,QAAQ,IAAI,CAAC,uBAAuB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;;AAE7F,QAAQ,IAAI,CAAC,OAAO,GAAG;AACvB,YAAY,UAAU,EAAE,iGAAiG;AACzH,YAAY,MAAM,EAAE,wDAAwD;AAC5E;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE;AAC5B,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC;AACzB;;AAEA,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;AAC9B;AACA,YAAY,IAAI,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACzD,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACrE;AACA;AACA,iBAAiB;AACjB,gBAAgB,KAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAC3E,oBAAoB,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC1C,wBAAwB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC1F,wBAAwB;AACxB;AACA;;AAEA;AACA,gBAAgB,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;AACpD,oBAAoB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA,QAAQ,OAAO,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;AACpD,QAAQ,MAAM,gCAAgC,GAAG,IAAI,CAAC,iCAAiC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW;;AAEhH;AACA,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC;;AAEhE,QAAQ,IAAI,YAAY;AACxB,QAAQ,QAAQ,gCAAgC;AAChD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,YAAY,GAAG,IAAI;AACnC,gBAAgB;;AAEhB,YAAY,KAAK,yBAAyB;AAC1C,YAAY,KAAK,QAAQ;AACzB,YAAY,KAAK,kBAAkB;AACnC,YAAY,KAAK,KAAK;AACtB,gBAAgB,MAAM,GAAG,GAAG,gCAAgC,KAAK,KAAK,GAAG,YAAY,GAAG,QAAQ;AAChG,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChE,gBAAgB,MAAM,MAAM,GAAG,EAAE;AACjC,gBAAgB,MAAM,KAAK,GAAG,EAAE;AAChC,gBAAgB,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC,IAAI,OAAO,EAAE;AAChE;AACA,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AAC3E,oBAAoB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;AAClD;AACA,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;AACjF,qBAAqB;AACrB;AACA,gBAAgB,YAAY,GAAG,EAAE,MAAM,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE;AACvD,gBAAgB;;AAEhB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,gCAAgC,CAAC,uBAAuB,CAAC,CAAC;AACtH;;AAEA,QAAQ,OAAO,EAAE,CAAC,IAAI,GAAG,YAAY;AACrC;;AAEA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE;;AAEhD,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC;AAC7B,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACrE;;AAEA,QAAQ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC;AACvE,QAAQ,MAAM,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE;;AAEpE,QAAQ,OAAO;AACf,YAAY,GAAG,YAAY;AAC3B,YAAY,GAAG,WAAW;AAC1B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,oBAAoB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAG/G,OAAO,CAAC;;AAER,MAAM,gEAAgE;AACtE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B;AACpG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;;AAMlJ;AACA;AACA;AACA;AACA;;AAEA,MAAM,2BAA2B,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;;AAEhD,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI;AAC7C,QAAQ,MAAM,UAAU,GAAG,IAAG,6CAA6C,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9G,QAAQ,OAAO,EAAE,GAAG,MAAM,EAAE,UAAU,EAAE;AACxC;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,0DAA0D;AAChE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB;AAC1F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;;;AAM/L;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,OAAO,EAAE,SAAS,EAAE;;AAErD,IAAI,MAAM,QAAQ,GAAG,CAAC;AACtB,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;;AAE7C,IAAI,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE;AACzC,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;AAC7C,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC;;AAEvC,IAAI,MAAM,cAAc,GAAG,SAAS,CAAC,MAAM,EAAE;AAC7C,IAAI,OAAO;AACX,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI;AAC3C,SAAS,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,IAAI;AACnC,SAAS,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;AACpC;;AAEA,MAAM,sBAAsB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACtG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;;AAE5C,QAAQ,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE;AACtF,QAAQ,MAAM,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE;;AAErE,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA,IAAI,sCAAsC,CAAC,OAAO,EAAE,SAAS,EAAE;AAC/D,QAAQ,aAAa,GAAG,IAAI;AAC5B,QAAQ,cAAc,GAAG,IAAI;AAC7B,QAAQ,YAAY,GAAG;AACvB,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO;AAC9C,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEzC,QAAQ,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,CAAC,MAAM,KAAK,UAAU,EAAE;AACzE,YAAY,MAAM,KAAK,CAAC,sFAAsF;AAC9G;AACA,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE7C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;AACvC,QAAQ,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;;AAE9C;AACA,QAAQ,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE;AACzC,aAAa,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,IAAG,4DAA4D,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC,CAAC;;AAE3I,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AAC7C,YAAY,MAAM,WAAW,GAAG,YAAY,KAAK,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI;;AAE9E;AACA,YAAY,IAAI,WAAW,KAAK,IAAI,EAAE;AACtC,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/F;;AAEA,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC;AAC1C,YAAY,MAAM,YAAY,GAAG,EAAE;AACnC,YAAY,MAAM,aAAa,GAAG,EAAE;AACpC,YAAY,MAAM,WAAW,GAAG,EAAE;AAClC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAClD,gBAAgB,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC;AAC7C,gBAAgB,IAAI,KAAK,IAAI,aAAa,EAAE;AAC5C,oBAAoB;AACpB;AACA,gBAAgB,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,gBAAgB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExC,gBAAgB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,gBAAgB,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;;AAErC,gBAAgB,MAAM,OAAO,GAAG,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC9F,gBAAgB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;AAC3C;AACA,YAAY,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC;AAChH;AACA,QAAQ,OAAO,OAAO;AACtB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB;AAC1F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;;AAMlJ,MAAM,sBAAsB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACjH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,IAAI,IAAI;AACnE,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6BAA6B,CAAC,YAAY,EAAE,uBAAuB,EAAE;AACzE,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;;AAEzD,QAAQ,MAAM,YAAY,GAAG,KAAK,GAAG,MAAM;AAC3C,QAAQ,IAAI,KAAK,IAAI,MAAM,EAAE;AAC7B,YAAY,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC,GAAG,uBAAuB;AACxF,YAAY,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC;AACrD,YAAY,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,uBAAuB,CAAC,GAAG,uBAAuB;AAC1F,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,uBAAuB,CAAC,GAAG,uBAAuB;AAC1F,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;AACrD,YAAY,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC,GAAG,uBAAuB;AACxF;AACA,QAAQ,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE;AAChC;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,kBAAkB,GAAG,IAAI;AACjC,QAAQ,mBAAmB,GAAG,KAAK;AACnC,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,IAAI,iBAAiB;AAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpC,YAAY,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAS,MAAM;AACf,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AACnD,gBAAgB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;AACtD;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3C,gBAAgB,iBAAiB,GAAG,2BAA2B,MAAM,EAAE;AACvE,aAAa,MAAM;AACnB,gBAAgB,iBAAiB,+BAA+B,MAAM,CAAC;AACvE;AACA;;AAEA;AACA,QAAQ,IAAI,gBAAgB,GAAG,EAAE;AACjC,QAAQ,IAAI,gBAAgB,GAAG,EAAE;AACjC,QAAQ,IAAI,gBAAgB,GAAG,EAAE;;AAEjC,QAAQ,MAAM,cAAc,GAAG,EAAE;AACjC,QAAQ,MAAM,oBAAoB,GAAG,EAAE;AACvC,QAAQ,KAAK,MAAM,WAAW,IAAI,iBAAiB,EAAE;;AAErD,YAAY,IAAI,WAAW,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzF;AACA,YAAY,cAAc,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC;;AAEzE;AACA,YAAY,oBAAoB,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC,CAAC;;AAErF;AACA,YAAY,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAElE,YAAY,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,cAAc;;AAExD;AACA,YAAY,IAAI,aAAa;AAC7B,YAAY,IAAI,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC/D,gBAAgB,IAAI,UAAU,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;AAC9D,gBAAgB,IAAI,UAAU,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;;AAE9D;AACA,gBAAgB,aAAa,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK;AAClF,oBAAoB,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC;;AAErG,oBAAoB,MAAM,OAAO,GAAG,MAAM,IAAG,6CAA6C,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE;AAC3H,wBAAwB,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC;AAC/D,qBAAqB,CAAC;;AAEtB,oBAAoB,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC;AACvH,oBAAoB,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY;AAChD,oBAAoB,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY;AAChD,oBAAoB,OAAO,IAAG,6CAA6C,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3F,iBAAiB,CAAC,CAAC;;AAEnB,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;AACjD,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;;AAEjD,aAAa,MAAM;AACnB;AACA,gBAAgB,MAAM,IAAI,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC;AACzD,gBAAgB,aAAa,GAAG,MAAM,OAAO,CAAC,GAAG;AACjD,oBAAoB,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,IAAG,6CAA6C,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,CAAC;AACnI,iBAAiB;;AAEjB,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5E,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5E;;AAEA,YAAY,gBAAgB,CAAC,IAAI,CAAC,IAAG,6CAA6C,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;AAC1G;;AAEA,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM;AAClD,QAAQ,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;;AAErD;AACA,QAAQ,IAAI,YAAY;AACxB,QAAQ,IAAI,oBAAoB;AAChC,QAAQ,IAAI,UAAU,KAAK,CAAC,EAAE;AAC9B,YAAY,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5D,YAAY,oBAAoB,GAAG,IAAG,6CAA6C,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;AACtH,SAAS,MAAM;AACf;AACA,YAAY,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExF,YAAY,oBAAoB,GAAG,IAAG,6CAA6C,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;AACpI,YAAY,MAAM,yBAAyB,GAAG,oBAAoB,CAAC,IAAI;AACvE,YAAY,MAAM,2BAA2B,GAAG,eAAe,GAAG,CAAC,GAAG,CAAC;AACvE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACjD,gBAAgB,MAAM,WAAW,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,gBAAgB,IAAI,WAAW,GAAG,eAAe,EAAE;AACnD,oBAAoB,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAG,6CAA6C,CAAC,GAAG,EAAE;AAChG,wBAAwB,gBAAgB,CAAC,CAAC,CAAC;AAC3C,wBAAwB,IAAG,6CAA6C,CAAC,IAAI,EAAE,CAAC,eAAe,GAAG,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3H,qBAAqB,EAAE,CAAC,CAAC;;AAEzB,oBAAoB,MAAM,YAAY,GAAG,CAAC,GAAG,2BAA2B,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC;AAC9F,oBAAoB,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,2BAA2B;;AAE5E;AACA,oBAAoB,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,CAAC;AACnF;AACA;AACA,YAAY,YAAY,GAAG,IAAG,6CAA6C,CAAC,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACvG;;AAEA,QAAQ,OAAO;AACf,YAAY,YAAY;AACxB,YAAY,oBAAoB;;AAEhC,YAAY,cAAc;AAC1B,YAAY,oBAAoB;AAChC,YAAY;AACZ,gBAAgB;AAChB,sBAAsB,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB;AACtE,sBAAsB;AACtB,aAAa;AACb;AACA;;AAEA,IAAI,MAAM,WAAW,CAAC,YAAY,EAAE,EAAE,YAAY,EAAE,EAAE;AACtD,QAAQ,MAAM,UAAU,GAAG,YAAY;AACvC,QAAQ,MAAM,SAAS,GAAG,YAAY;;AAEtC,QAAQ,MAAM,MAAM,GAAG,EAAE;;AAEzB,QAAQ,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;;AAE3D,QAAQ,IAAI,YAAY,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC;;AAE9C,QAAQ,IAAI,MAAM,GAAG,UAAU,IAAI,KAAK,GAAG,SAAS,EAAE;AACtD;AACA,YAAY,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AACzD,YAAY,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;;AAEvD;AACA,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;AACnE,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;;AAEjE;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACnD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACvD,oBAAoB,IAAI,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK;AACtD,oBAAoB,IAAI,CAAC,KAAK,YAAY,GAAG,CAAC,EAAE;AAChD,wBAAwB,OAAO,GAAG,MAAM,GAAG,cAAc;AACzD,wBAAwB,KAAK,GAAG,MAAM;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,OAAO,GAAG,CAAC,GAAG,cAAc;AACpD,wBAAwB,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,cAAc;AACxD;AACA,oBAAoB,IAAI,CAAC,KAAK,YAAY,GAAG,CAAC,EAAE;AAChD,wBAAwB,OAAO,GAAG,KAAK,GAAG,aAAa;AACvD,wBAAwB,KAAK,GAAG,KAAK;AACrC,qBAAqB,MAAM;AAC3B,wBAAwB,OAAO,GAAG,CAAC,GAAG,aAAa;AACnD,wBAAwB,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,aAAa;AACvD;;AAEA,oBAAoB,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;AACrD,oBAAoB,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;;AAE/C,oBAAoB,MAAM,KAAK,GAAG,MAAM,IAAG,6CAA6C,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnI,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC;AACA;;AAEA;AACA,YAAY,MAAM,mBAAmB,GAAG,UAAU;AAClD,YAAY,MAAM,kBAAkB,GAAG,SAAS;;AAEhD,YAAY,IAAI,MAAM,KAAK,mBAAmB,IAAI,KAAK,KAAK,kBAAkB,EAAE;AAChF,gBAAgB,YAAY,GAAG,MAAM,IAAG,6CAA6C,CAAC,cAAc,EAAE,YAAY,EAAE;AACpH,oBAAoB,IAAI,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;AACnE,iBAAiB;AACjB;AACA;;AAEA,QAAQ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;;AAEjC,QAAQ,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE;AACrD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAwE,mBAAmB,6BAA6B,sBAAsB;AAC9I,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;;;;;;;;AAQ5I;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,uBAAuB,EAAE,WAAW,EAAE,gBAAgB,EAAE;AAC5H,IAAI,IAAI,iBAAiB,GAAG,EAAE;AAC9B,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE;AAC/C,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE;AACnD,YAAY,iBAAiB;AAC7B,gBAAgB,uBAAuB;AACvC,gBAAgB,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACjD,gBAAgB,WAAW,CAAC,MAAM,CAAC,aAAa;AAChD,aAAa;AACb;AACA,QAAQ,iBAAiB,IAAI,IAAI;AACjC;;AAEA,IAAI,iBAAiB;AACrB,QAAQ,CAAC,EAAE,EAAE,uBAAuB,CAAC,CAAC;AACtC,QAAQ,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC7B,QAAQ,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC;AACzC,QAAQ,CAAC,EAAE,uBAAuB,CAAC;AACnC,KAAK;AACL,IAAI,OAAO,iBAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA,SAAS,oBAAoB,CAAC,aAAa,EAAE,uBAAuB,EAAE,WAAW,EAAE,gBAAgB,EAAE;AACrG,IAAI;AACJ,QAAQ,CAAC,EAAE,uBAAuB,CAAC,CAAC;AACpC,QAAQ,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC7B,QAAQ,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC;AACzC,QAAQ,CAAC,EAAE,uBAAuB,CAAC;AACnC;AACA;;AAEA,SAAS,uBAAuB,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,uBAAuB,EAAE,WAAW,EAAE,gBAAgB,EAAE;AAChI,IAAI,IAAI,UAAU,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,EAAE;AAC9C,QAAQ,OAAO,oBAAoB;AACnC,YAAY,aAAa;AACzB,YAAY,uBAAuB;AACnC,YAAY,WAAW;AACvB,YAAY;AACZ,SAAS;AACT;AACA,IAAI,OAAO,mBAAmB;AAC9B,QAAQ,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,uBAAuB,EAAE,WAAW,EAAE;AACrF,KAAK;AACL;;;AAGA,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,IAAI;;AAEvC,IAAI,gBAAgB,GAAG,2BAA2B;AAClD,IAAI,WAAW,GAAG,SAAS;AAC3B,IAAI,gBAAgB,GAAG,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;AACnD,QAAQ,OAAO,CAAC,mBAAmB,KAAK,IAAI;;AAE5C,QAAQ,IAAI,YAAY;;AAExB,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC;AACtE;;AAEA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC;AACzB;;AAEA,QAAQ,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChF,QAAQ,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEhF,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AACvD,QAAQ,MAAM,gBAAgB,GAAG;AACjC,QAAQ,MAAM,cAAc,GAAG,EAAE;AACjC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC;AAC7C,YAAY,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC;;AAE7C,YAAY,gBAAgB,CAAC,IAAI,CAAC,IAAG,2CAA2C,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;AAElH;AACA,YAAY,MAAM,oBAAoB,GAAG,WAAW,CAAC,GAAG;AACxD,gBAAgB,CAAC,MAAM,EAAE,CAAC,KAAK,uBAAuB;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,WAAW,CAAC,CAAC,CAAC;AAClC,oBAAoB,aAAa;AACjC,oBAAoB,IAAI,CAAC,gBAAgB;AACzC,oBAAoB,IAAI,CAAC,WAAW;AACpC,oBAAoB,IAAI,CAAC,gBAAgB;AACzC;AACA,aAAa;;AAEb,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;AAC/D,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3C,gBAAgB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;AACjF;;AAEA;AACA,YAAY,IAAI,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC;AAC5C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAClE,gBAAgB,UAAU,IAAI,oBAAoB,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3E;AACA,YAAY,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;AAC3C;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;;AAE1D,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,kCAAkC;AACxC;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,2BAA2B,2DAA2D,CAAC,oBAAoB,CAAC;AACzJ,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2DAA2D,CAAC,oBAAoB,CAAC;AACzJ,uBAAuB,kBAAkB,EAAE,2BAA2B,2DAA2D,CAAC,kBAAkB,CAAC;AACrJ,uBAAuB,2BAA2B,EAAE,2BAA2B,2EAA2E,CAAC,2BAA2B,CAAC;AACvL,uBAAuB,wBAAwB,EAAE,2BAA2B,mEAAmE,CAAC,wBAAwB,CAAC;AACzK,uBAAuB,sBAAsB,EAAE,2BAA2B,mEAAmE,CAAC,sBAAsB,CAAC;AACrK,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2DAA2D,CAAC,oBAAoB,CAAC;AACzJ,uBAAuB,kBAAkB,EAAE,2BAA2B,2DAA2D,CAAC,kBAAkB,CAAC;AACrJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2DAA2D,CAAC,oBAAoB,CAAC;AACzJ,uBAAuB,kBAAkB,EAAE,2BAA2B,2DAA2D,CAAC,kBAAkB,CAAC;AACrJ,uBAAuB,qBAAqB,EAAE,2BAA2B,6DAA6D,CAAC,qBAAqB,CAAC;AAC7J,uBAAuB,mBAAmB,EAAE,2BAA2B,6DAA6D,CAAC,mBAAmB,CAAC;AACzJ,uBAAuB,0BAA0B,EAAE,2BAA2B,2EAA2E,CAAC,0BAA0B,CAAC;AACrL,uBAAuB,oBAAoB,EAAE,2BAA2B,4DAA4D,CAAC,oBAAoB,CAAC;AAC1J,uBAAuB,2BAA2B,EAAE,2BAA2B,gFAAgF,CAAC,2BAA2B,CAAC;AAC5L,uBAAuB,sBAAsB,EAAE,2BAA2B,oEAAoE,CAAC,sBAAsB,CAAC;AACtK,uBAAuB,sBAAsB,EAAE,2BAA2B,sEAAsE,CAAC,sBAAsB,CAAC;AACxK,uBAAuB,4BAA4B,EAAE,2BAA2B,kFAAkF,CAAC,4BAA4B,CAAC;AAChM,uBAAuB,yBAAyB,EAAE,2BAA2B,0EAA0E,CAAC,yBAAyB,CAAC;AAClL,uBAAuB,0BAA0B,EAAE,2BAA2B,wEAAwE,CAAC,0BAA0B,CAAC;AAClL,uBAAuB,wBAAwB,EAAE,2BAA2B,wEAAwE,CAAC,wBAAwB,CAAC;AAC9K,uBAAuB,2BAA2B,EAAE,2BAA2B,4EAA4E,CAAC,2BAA2B,CAAC;AACxL,uBAAuB,yBAAyB,EAAE,2BAA2B,4EAA4E,CAAC,yBAAyB,CAAC;AACpL,uBAAuB,2BAA2B,EAAE,2BAA2B,4EAA4E,CAAC,2BAA2B,CAAC;AACxL,uBAAuB,yBAAyB,EAAE,2BAA2B,4EAA4E,CAAC,yBAAyB,CAAC;AACpL,uBAAuB,2BAA2B,EAAE,2BAA2B,4EAA4E,CAAC,2BAA2B,CAAC;AACxL,uBAAuB,yBAAyB,EAAE,2BAA2B,4EAA4E,CAAC,yBAAyB,CAAC;AACpL,uBAAuB,2BAA2B,EAAE,2BAA2B,4EAA4E,CAAC,2BAA2B,CAAC;AACxL,uBAAuB,yBAAyB,EAAE,2BAA2B,4EAA4E,CAAC,yBAAyB,CAAC;AACpL,uBAAuB,yBAAyB,EAAE,2BAA2B,sEAAsE,CAAC,yBAAyB,CAAC;AAC9K,uBAAuB,uBAAuB,EAAE,2BAA2B,sEAAsE,CAAC,uBAAuB,CAAC;AAC1K,uBAAuB,oBAAoB,EAAE,2BAA2B,gEAAgE,CAAC,oBAAoB,CAAC;AAC9J,uBAAuB,sBAAsB,EAAE,2BAA2B,gEAAgE,CAAC,sBAAsB,CAAC;AAClK,uBAAuB,oBAAoB,EAAE,2BAA2B,gEAAgE,CAAC,oBAAoB,CAAC;AAC9J,uBAAuB,mBAAmB,EAAE,2BAA2B,8DAA8D,CAAC,mBAAmB,CAAC;AAC1J,uBAAuB,mBAAmB,EAAE,2BAA2B,gEAAgE,CAAC,mBAAmB,CAAC;AAC5J,uBAAuB,iBAAiB,EAAE,2BAA2B,0DAA0D,CAAC,iBAAiB,CAAC;AAClJ,uBAAuB,qBAAqB,EAAE,2BAA2B,oEAAoE,CAAC,qBAAqB,CAAC;AACpK,uBAAuB,oBAAoB,EAAE,2BAA2B,kEAAkE,CAAC,oBAAoB,CAAC;AAChK,uBAAuB,iBAAiB,EAAE,2BAA2B,0DAA0D,CAAC,iBAAiB,CAAC;AAClJ,uBAAuB,yBAAyB,EAAE,2BAA2B,sEAAsE,CAAC,yBAAyB,CAAC;AAC9K,uBAAuB,uBAAuB,EAAE,2BAA2B,sEAAsE,CAAC,uBAAuB,CAAC;AAC1K,uBAAuB,oBAAoB,EAAE,2BAA2B,gEAAgE,CAAC,oBAAoB,CAAC;AAC9J,uBAAuB,qBAAqB,EAAE,2BAA2B,kEAAkE,CAAC,qBAAqB,CAAC;AAClK,uBAAuB,qBAAqB,EAAE,2BAA2B,kEAAkE,CAAC,qBAAqB,CAAC;AAClK,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,mBAAmB,EAAE,2BAA2B,0DAA0D,CAAC,mBAAmB,CAAC;AACtJ,uBAAuB,iBAAiB,EAAE,2BAA2B,0DAA0D,CAAC,iBAAiB,CAAC;AAClJ,uBAAuB,sBAAsB,EAAE,2BAA2B,oEAAoE,CAAC,sBAAsB,CAAC;AACtK,uBAAuB,qBAAqB,EAAE,2BAA2B,kEAAkE,CAAC,qBAAqB,CAAC;AAClK,uBAAuB,qBAAqB,EAAE,2BAA2B,8DAA8D,CAAC,qBAAqB,CAAC;AAC9J,uBAAuB,mBAAmB,EAAE,2BAA2B,8DAA8D,CAAC,mBAAmB;AACzJ,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,yDAAyD,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AACzL,qBAAqB,IAAI,2EAA2E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAC/O,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,mEAAmE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACvN,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACrM,qBAAqB,IAAI,yDAAyD,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AACzL,qBAAqB,IAAI,2EAA2E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAC/O,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,gFAAgF,GAAG,mBAAmB,4DAA4D,gEAAgE,CAAC;AAC5P,qBAAqB,IAAI,oEAAoE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACxN,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,sEAAsE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC9N,qBAAqB,IAAI,kFAAkF,GAAG,mBAAmB,8DAA8D,kEAAkE,CAAC;AAClQ,qBAAqB,IAAI,0EAA0E,GAAG,mBAAmB,sDAAsD,0DAA0D,CAAC;AAC1O,qBAAqB,IAAI,wEAAwE,GAAG,mBAAmB,oDAAoD,wDAAwD,CAAC;AACpO,qBAAqB,IAAI,4EAA4E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAChP,qBAAqB,IAAI,4EAA4E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAChP,qBAAqB,IAAI,4EAA4E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAChP,qBAAqB,IAAI,4EAA4E,GAAG,mBAAmB,wDAAwD,4DAA4D,CAAC;AAChP,qBAAqB,IAAI,sEAAsE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC9N,qBAAqB,IAAI,gEAAgE,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC5M,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,gEAAgE,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC5M,qBAAqB,IAAI,gEAAgE,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC5M,qBAAqB,IAAI,0DAA0D,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AAC1L,qBAAqB,IAAI,oEAAoE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACxN,qBAAqB,IAAI,kEAAkE,GAAG,mBAAmB,8CAA8C,kDAAkD,CAAC;AAClN,qBAAqB,IAAI,0DAA0D,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AAC1L,qBAAqB,IAAI,sEAAsE,GAAG,mBAAmB,kDAAkD,sDAAsD,CAAC;AAC9N,qBAAqB,IAAI,gEAAgE,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC5M,qBAAqB,IAAI,kEAAkE,GAAG,mBAAmB,8CAA8C,kDAAkD,CAAC;AAClN,qBAAqB,IAAI,kEAAkE,GAAG,mBAAmB,8CAA8C,kDAAkD,CAAC;AAClN,qBAAqB,IAAI,0DAA0D,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AAC1L,qBAAqB,IAAI,oEAAoE,GAAG,mBAAmB,gDAAgD,oDAAoD,CAAC;AACxN,qBAAqB,IAAI,kEAAkE,GAAG,mBAAmB,8CAA8C,kDAAkD,CAAC;AAClN,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CtM,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC5G,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC;AACd,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,QAAQ,EAAE;AACtB,gBAAgB,KAAK,EAAE,MAAM,CAAC,UAAU;AACxC,gBAAgB,MAAM,EAAE,MAAM,CAAC,UAAU;AACzC,aAAa;AACb,YAAY,GAAG,MAAM;AACrB,SAAS,CAAC;AACV;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc;AAC5F;;AAEA,IAAI,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;AACpD,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;AAC5D,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;AACjD,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,GAAG,OAAO;AACtB,SAAS,CAAC;AACV;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,wCAAwC;AAC9C;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe;AAC5E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;AAClJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;;;;AAS/I,MAAM,eAAe,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAC/F,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,IAAI;;AAEvC,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AACpC,QAAQ,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC;;AAEjC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;AAC9C,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe;AAC1D,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AACtD,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,YAAY,EAAE;AAC9B,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,aAAa,GAAG,SAAS;AACjC,KAAK,CAAC,EAAE,EAAE;AACV,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG;AACtC,gBAAgB;AAChB,qBAAqB,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM;AAC/C,qBAAqB,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM;AAChD,qBAAqB,GAAG,CAAC,CAAC,GAAG,KAAK,4CAA4C,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACjG,aAAa;AACb,SAAS,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC3C,YAAY,MAAM,GAAG,CAAC,MAAM,CAAC;AAC7B;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS;AACxC,QAAQ,MAAM,MAAM,GAAG,SAAS,CAAC,mBAAmB,CAAC,YAAY,EAAE;AACnE,YAAY,QAAQ,EAAE,KAAK;AAC3B,YAAY,qBAAqB,EAAE,IAAI;AACvC,YAAY,aAAa;AACzB,SAAS,CAAC;;AAEV,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;AACtF,QAAQ,MAAM,KAAK,GAAG,uBAAuB,MAAM;AACnD,aAAa,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;AAClC,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;AAC3C,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE;AAC1C,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,MAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACnJ;;AAEA,QAAQ,MAAM;AACd,YAAY,wBAAwB;AACpC,YAAY,kBAAkB;AAC9B,YAAY,gBAAgB;AAC5B,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC;AAClD,YAAY,IAAI,CAAC,SAAS;AAC1B,YAAY,IAAI,CAAC,eAAe;AAChC,YAAY,IAAI,CAAC,aAAa;AAC9B,SAAS,CAAC;;AAEV,QAAQ,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxC,QAAQ,IAAI,eAAe,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACrE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/C,YAAY,MAAM,wBAAwB,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;AAC5G,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAY,SAAS,GAAG,IAAG,2CAA2C,CAAC,WAAW;AAClF,gBAAgB,SAAS;AACzB,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,wBAAwB,EAAE,CAAC,gBAAgB,CAAC;AAClF,gBAAgB,MAAM;AACtB,aAAa;AACb,YAAY,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1E,YAAY,eAAe,GAAG,IAAG,2CAA2C,CAAC,WAAW;AACxF,gBAAgB,eAAe;AAC/B,gBAAgB,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,KAAK,CAAC;AAC5C,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACpD,aAAa;AACb;;AAEA,QAAQ,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC;AAC1C,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,SAAS,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC;AACzG,YAAY,cAAc,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACxI,YAAY,eAAe,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC;AACpH,YAAY,eAAe,EAAE,IAAI,6CAA6C,CAAC,MAAM;AACrF,gBAAgB,MAAM;AACtB,gBAAgB,IAAI,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACxE,gBAAgB,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC;AACtD,aAAa;AACb;;AAEA,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,YAAY,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AACnE;AACA,YAAY,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;AACnD,YAAY,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,YAAY,EAAE;AAChD;;AAEA,QAAQ,OAAO,KAAK;AACpB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB;AAC1F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,sBAAsB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACjH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB;AACA,QAAQ,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM;;AAEjF,QAAQ,MAAM,QAAQ,GAAG,WAAW,KAAK;AACzC,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI;AACzC,cAAc,WAAW,KAAK;AAC9B,kBAAkB,EAAE,aAAa,EAAE,IAAI;AACvC,kBAAkB,EAAE,YAAY,EAAE,IAAI,EAAE;;AAExC,QAAQ,MAAM,QAAQ,GAAG,aAAa,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC;AAC5D,QAAQ,KAAK,CAAC;AACd,YAAY,GAAG,KAAK;AACpB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,QAAQ;AACpB,YAAY,cAAc,EAAE,IAAI;AAChC,YAAY,SAAS,EAAE,IAAI;AAC3B,YAAY,YAAY,EAAE,IAAI;AAC9B,SAAS,CAAC;AACV;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;;;;;;AAM5I,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;;AAE/F,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE;;AAErD,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AAC7B,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACrE;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE;AACpE,QAAQ,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE;;AAErF,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,kEAAkE;AACxE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,4BAA4B,EAAE,qBAAqB,4BAA4B;AACtG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,4BAA4B,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAGvH,OAAO,CAAC;;AAER,MAAM,0DAA0D;AAChE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,uEAAuE,GAAG,mBAAmB,qDAAqD,wDAAwD,CAAC;;;;AAIpO;AACA,MAAM,yBAAyB,SAAS,uEAAuE,CAAC,wBAAwB,CAAC;;;AAGzI,OAAO,CAAC;;AAER,MAAM,wDAAwD;AAC9D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,0BAA0B,EAAE,qBAAqB,0BAA0B,CAAC;AACnG,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB;AAC9F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,wBAAwB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;AAEnH;AACA,IAAI,kCAAkC,CAAC,GAAG,IAAI,EAAE;AAChD,QAAQ,OAAO,IAAG,4DAA4D,CAAC,kCAAkC,EAAE,GAAG,IAAI,CAAC;AAC3H;AACA;AACA,IAAI,kCAAkC,CAAC,GAAG,IAAI,EAAE;AAChD,QAAQ,OAAO,IAAG,4DAA4D,CAAC,kCAAkC,EAAE,GAAG,IAAI,CAAC;AAC3H;AACA;AACA,MAAM,0BAA0B,SAAS,wBAAwB,CAAC;;;AAGlE,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe;AAC5E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,mBAAmB,GAAG;AAC5B,IAAI,MAAM,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;AAC9B,IAAI,KAAK,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;AAC5B,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC;AAC5B;AACA,MAAM,eAAe,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;;AAE/F;AACA;AACA;AACA,IAAI,IAAI,cAAc,GAAG;AACzB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc;AAC7C;;AAEA;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG;AACxB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa;AAC5C;;AAEA;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG;AACvB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,WAAW,EAAE,MAAM,EAAE;AACxC,QAAQ,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AACzD,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACjE;;AAEA,QAAQ,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,mBAAmB,CAAC,MAAM,CAAC;AACrE,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;AAErD,QAAQ,MAAM,CAAC,UAAU,EAAE,gBAAgB,CAAC,GAAG,WAAW,CAAC,IAAI;AAC/D,QAAQ,MAAM,WAAW,GAAG,EAAE;AAC9B,QAAQ,MAAM,OAAO,GAAG,EAAE;;AAE1B;AACA,QAAQ,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,EAAE;AACrD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AAC7C,YAAY,MAAM,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,YAAY,MAAM,GAAG,GAAG,EAAE;AAC1B,YAAY,MAAM,MAAM,GAAG,EAAE;;AAE7B;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,EAAE,CAAC,EAAE;AACvD;AACA,gBAAgB,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,IAAG,4CAA4C,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5K,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;AACrC,gBAAgB,IAAI,cAAc,IAAI,SAAS,EAAE;AACjD,oBAAoB;AACpB;AACA,gBAAgB,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;AACxC;;AAEA,YAAY,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,GAAG;AACrD,kBAAkB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;AAClD,kBAAkB,CAAC;;AAEnB,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC7B,YAAY,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAC9C;;AAEA,QAAQ,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AACxC,QAAQ,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,SAAS,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC9F;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,SAAS,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,SAAS,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC5F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,EAAE;AACvD,QAAQ,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,MAAM,CAAC;AAClF,QAAQ,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC;AAC9E,QAAQ,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC;;AAE1E,QAAQ,MAAM,cAAc,GAAG,EAAE;AACjC,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpD,YAAY,MAAM,CAAC,SAAS,EAAE,eAAe,CAAC,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACpJ,YAAY,cAAc,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;AAC5F,YAAY,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AAClC;;AAEA,QAAQ,OAAO;AACf,YAAY,cAAc;AAC1B,YAAY,MAAM;AAClB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,IAAI,aAAa,eAAe,CAAC,GAAG,IAAI,EAAE;AAC1C,QAAQ,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;;AAEzD;AACA,QAAQ,MAAM,aAAa,GAAG,MAAM,2CAA2C,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,EAAC;AAC5H,QAAQ,MAAM,YAAY,GAAG,MAAM,2CAA2C,CAAC,aAAa,CAAC,eAAe,CAAC,0BAA0B,EAAC;;AAExI;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG;AAC1B,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;AACjD,YAAY,cAAc,EAAE,IAAI,CAAC,SAAS;AAC1C,YAAY,aAAa,EAAE,aAAa;AACxC,YAAY,YAAY,EAAE,YAAY;AACtC;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE;AACrC,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;AAEzD,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACjD;;AAEA,QAAQ,OAAO,MAAM;AACrB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,yBAAyB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACpH,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;;;AAGpE,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,yBAAyB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACpH,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;;;AAGpE,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,yBAAyB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACpH,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;;;AAGpE,OAAO,CAAC;;AAER,MAAM,4DAA4D;AAClE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,yBAAyB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACpH,MAAM,2BAA2B,SAAS,yBAAyB,CAAC;;;AAGpE,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,uBAAuB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAClH,MAAM,yBAAyB,SAAS,uBAAuB,CAAC;;;AAGhE,OAAO,CAAC;;AAER,MAAM,wDAAwD;AAC9D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;AAKlJ,MAAM,yBAAyB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;AACxH;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,2BAA2B,CAAC;;AAEpI,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;AAC3C,YAAY,KAAK,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC;AAC3C;;AAEA,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,CAAC;AACb,YAAY,KAAK,CAAC,MAAM;AACxB,SAAS;AACT,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC3G,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;;;;;AAK7K;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAClG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAClD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;;;;AAItM;AACA,MAAM,oBAAoB,SAAS,6DAA6D,CAAC,mBAAmB,CAAC;;;AAGrH,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,6CAA6C,gDAAgD,CAAC;;;;AAI5M;AACA,MAAM,mBAAmB,SAAS,+DAA+D,CAAC,oBAAoB,CAAC;;;AAGvH,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB,CAAC;AAC3F,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,oBAAoB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC/G;AACA,IAAI,6BAA6B,CAAC,GAAG,IAAI,EAAE;AAC3C,QAAQ,OAAO,IAAG,4DAA4D,CAAC,6BAA6B,EAAE,GAAG,IAAI,CAAC;AACtH;AACA;AACA,MAAM,sBAAsB,SAAS,oBAAoB,CAAC;;;AAG1D,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe;AAC5E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;;;;AAI5I,MAAM,eAAe,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F;;;AAGA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB;AAClF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;;;;;AAK5I,MAAM,WAAW,GAAG,SAAS;;AAE7B,SAAS,uBAAuB;AAChC,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,aAAa;AACjB,IAAI,WAAW;AACf,IAAI,UAAU;AACd,EAAE;AACF,IAAI,OAAO,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,EAAE;AACpF;;AAEA,MAAM,kBAAkB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAClG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F,IAAI,OAAO,qBAAqB,GAAG,KAAK;;AAExC;AACA;AACA;;AAEA;AACA,IAAI,MAAM,KAAK,oCAAoC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE;AACrF,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,OAAO,CAAC,IAAI;AACxB,gBAAgB;AAChB;AACA,YAAY,IAAI,GAAG;AACnB;;AAEA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpC,YAAY,MAAM,GAAG,CAAC,MAAM;AAC5B;;AAEA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClC,YAAY,IAAI,GAAG,CAAC,IAAI;AACxB;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS;AAClD;AACA,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,gBAAgB;AAC7E,QAAQ,IAAI,aAAa;AACzB,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE;AACvD,YAAY,aAAa,GAAG,IAAI,CAAC,GAAG;AACpC,gBAAgB,MAAM,IAAI;AAC1B,oBAAoB,MAAM,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAChH,oBAAoB,MAAM,eAAe,GAAG,eAAe,CAAC,WAAW,CAAC,WAAW,CAAC;AACpF,oBAAoB,MAAM,SAAS,GAAG,eAAe,KAAK,EAAE,GAAG,CAAC,GAAG,eAAe,GAAG,WAAW,CAAC,MAAM;AACvG,oBAAoB,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI;AACpH;AACA;AACA,SAAS,MAAM;AACf,YAAY,OAAO,CAAC,IAAI;AACxB,gBAAgB,kGAAkG;AAClH,gBAAgB,mGAAmG;AACnH,gBAAgB,wGAAwG;AACxH,gBAAgB;AAChB;;AAEA,YAAY,aAAa,GAAG,IAAI,CAAC,GAAG;AACpC,gBAAgB,MAAM,IAAI,uBAAuB;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,SAAS;AAC7B,oBAAoB,gBAAgB;AACpC,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM,CAAC,MAAM;AACjC;AACA;AACA;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,MAAM,CAAC;AACjE,QAAQ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC;;AAEvE,QAAQ,OAAO;AACf,YAAY,GAAG,YAAY;AAC3B,YAAY,GAAG,WAAW;AAC1B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;AAIlJ,MAAM,UAAU,GAAG,GAAG;AACtB,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI;;AAElC,MAAM,mBAAmB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC9G,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC;AACd,YAAY,GAAG,MAAM;AACrB,YAAY,YAAY,EAAE,IAAI;AAC9B,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,QAAQ,EAAE,QAAQ;AAC9B,YAAY,cAAc,EAAE,IAAI;AAChC,YAAY,SAAS,EAAE,IAAI;AAC3B,SAAS,CAAC;;AAEV,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS;AAC1C;AACA,IAAI,qCAAqC,CAAC,KAAK,EAAE,MAAM,EAAE;AACzD;AACA,QAAQ,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,MAAM;AAC9C,QAAQ,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,GAAG,UAAU,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,UAAU,EAAE,GAAG,CAAC,IAAI,cAAc,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;AACvK;;AAEA;AACA,IAAI,4BAA4B,CAAC,KAAK,EAAE,IAAI,EAAE;AAC9C,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU;AACtC,QAAQ,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;;AAEtC,QAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,MAAM;AAClC,QAAQ,IAAI,KAAK,GAAG,CAAC;;AAErB;AACA,QAAQ,OAAO,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,MAAM,EAAE;AAC3D,YAAY,KAAK,IAAI,CAAC;AACtB;AACA,QAAQ,KAAK,IAAI,CAAC;;AAElB;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AAC7C,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;;AAE/C,QAAQ,OAAO,CAAC,KAAK,EAAE,KAAK;AAC5B;;;AAGA;AACA,IAAI,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;AACzD;AACA;AACA;AACA,QAAQ,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,GAAG,OAAO;AACjD,QAAQ,MAAM,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClE,QAAQ,MAAM,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;AAEhE;AACA,QAAQ,MAAM,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACrG,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACtE,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,eAAe;AAC3B,YAAY,GAAG,OAAO;AACtB,SAAS,CAAC;AACV;;AAEA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,SAAS,GAAG,IAAI;AACxB,KAAK,GAAG,EAAE,EAAE;AACZ;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS;AAC7D,QAAQ,IAAI,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACxD,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACrE;;AAEA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpC,YAAY,MAAM,GAAG,CAAC,MAAM,CAAC;AAC7B;;AAEA,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM;AACxC,QAAQ,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhF,QAAQ,MAAM,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;AAClE,QAAQ,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC;;AAE9E;AACA,QAAQ,MAAM,gBAAgB,GAAG,EAAE;AACnC,QAAQ,KAAK,MAAM,EAAE,YAAY,EAAE,IAAI,SAAS,EAAE;AAClD,YAAY,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAEvC,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;;AAE/D;AACA,YAAY,MAAM,kBAAkB,GAAG,MAAM,IAAG,6CAA6C,CAAC,cAAc,EAAE,YAAY,EAAE;AAC5H,gBAAgB,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;AAC9C,gBAAgB,IAAI,EAAE,SAAS;AAC/B,aAAa,CAAC;;AAEd,YAAY,IAAI,SAAS,GAAG,CAAC,EAAE;AAC/B,gBAAgB,MAAM,OAAO,GAAG,EAAE;AAClC,gBAAgB,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;AACpD,gBAAgB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC;AAC/D,gBAAgB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;AACjE,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACvD,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AAC3D,wBAAwB,IAAI,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK;AAC1D,wBAAwB,IAAI,CAAC,KAAK,YAAY,GAAG,CAAC,EAAE;AACpD,4BAA4B,OAAO,GAAG,MAAM,GAAG,YAAY;AAC3D,4BAA4B,KAAK,GAAG,MAAM;AAC1C,yBAAyB,MAAM;AAC/B,4BAA4B,OAAO,GAAG,CAAC,GAAG,YAAY;AACtD,4BAA4B,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,YAAY;AAC1D;AACA,wBAAwB,IAAI,CAAC,KAAK,YAAY,GAAG,CAAC,EAAE;AACpD,4BAA4B,OAAO,GAAG,KAAK,GAAG,WAAW;AACzD,4BAA4B,KAAK,GAAG,KAAK;AACzC,yBAAyB,MAAM;AAC/B,4BAA4B,OAAO,GAAG,CAAC,GAAG,WAAW;AACrD,4BAA4B,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,WAAW;AACzD;;AAEA,wBAAwB,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;AACzD,wBAAwB,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;AACnD,wBAAwB,MAAM,KAAK,GAAG,MAAM,IAAG,6CAA6C,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC;AAC3I,wBAAwB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3C;AACA;;AAEA,gBAAgB,MAAM,eAAe,GAAG,MAAM,IAAG,6CAA6C,CAAC,cAAc,EAAE,IAAG,6CAA6C,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;AAClL,oBAAoB,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;AAClD,oBAAoB,IAAI,EAAE,SAAS;AACnC,iBAAiB,CAAC,CAAC;;AAEnB;AACA,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,IAAG,6CAA6C,CAAC,GAAG,EAAE,CAAC,kBAAkB,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;AACtI,aAAa,MAAM;AACnB;AACA;AACA,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC;AACzD;AACA;;AAEA;AACA,QAAQ,MAAM,YAAY,GAAG,IAAG,6CAA6C,CAAC,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;;AAEzG;AACA,QAAQ,MAAM,KAAK,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;;AAElG,QAAQ,MAAM,WAAW,GAAG,IAAI,6CAA6C,CAAC,MAAM;AACpF,YAAY,OAAO;AACnB,YAAY,KAAK,CAAC,IAAI,EAAE;AACxB,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;AAC3B,SAAS;;AAET,QAAQ,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG;AACxC,YAAY,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC,qCAAqC,CAAC,KAAK,EAAE,MAAM,CAAC;AAC1F,SAAS;;AAET,QAAQ,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,oBAAoB,EAAE,WAAW,EAAE,cAAc,EAAE;AAClG;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,cAAc,EAAE,qBAAqB,cAAc;AAC1E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAwE,mBAAmB,6BAA6B,sBAAsB;;;;;;AAM9I,MAAM,WAAW,GAAG,WAAW;AAC/B,MAAM,mBAAmB,GAAG,kBAAkB;;AAE9C,MAAM,cAAc,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAC9F,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE;AACrC,QAAQ,OAAO,GAAG,IAAI;AACtB,QAAQ,UAAU,GAAG,IAAI;AACzB,QAAQ,SAAS,GAAG,IAAI;AACxB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC;AACzB;;AAEA,QAAQ,IAAI,WAAW,EAAE,YAAY;AACrC,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC;AAC5E,YAAY,MAAM,EAAE,cAAc,EAAE,GAAG,YAAY;;AAEnD;AACA;AACA,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9H,YAAY,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;;AAEhF;AACA,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/F,YAAY,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,cAAc,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AAC/E,SAAS,MAAM;AACf,YAAY,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC9C;;AAEA,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4BAA4B;AAClC;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,2BAA2B,+DAA+D,CAAC,kBAAkB,CAAC;AACzJ,uBAAuB,sBAAsB,EAAE,2BAA2B,yEAAyE,CAAC,sBAAsB,CAAC;AAC3K,uBAAuB,iBAAiB,EAAE,2BAA2B,6DAA6D,CAAC,iBAAiB,CAAC;AACrJ,uBAAuB,iBAAiB,EAAE,2BAA2B,+DAA+D,CAAC,iBAAiB,CAAC;AACvJ,uBAAuB,eAAe,EAAE,2BAA2B,2DAA2D,CAAC,eAAe,CAAC;AAC/I,uBAAuB,kBAAkB,EAAE,2BAA2B,+DAA+D,CAAC,kBAAkB,CAAC;AACzJ,uBAAuB,eAAe,EAAE,2BAA2B,yDAAyD,CAAC,eAAe,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,+DAA+D,CAAC,kBAAkB,CAAC;AACzJ,uBAAuB,cAAc,EAAE,2BAA2B,yDAAyD,CAAC,cAAc,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,gBAAgB,EAAE,2BAA2B,8DAA8D,CAAC,gBAAgB,CAAC;AACpJ,uBAAuB,YAAY,EAAE,2BAA2B,oDAAoD,CAAC,YAAY,CAAC;AAClI,uBAAuB,gBAAgB,EAAE,2BAA2B,4DAA4D,CAAC,gBAAgB,CAAC;AAClJ,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,eAAe,EAAE,2BAA2B,uDAAuD,CAAC,eAAe,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,uBAAuB,EAAE,2BAA2B,8EAA8E,CAAC,uBAAuB,CAAC;AAClL,uBAAuB,gBAAgB,EAAE,2BAA2B,4DAA4D,CAAC,gBAAgB;AACjJ,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC3M,qBAAqB,IAAI,yEAAyE,GAAG,mBAAmB,sDAAsD,0DAA0D,CAAC;AACzO,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACrM,qBAAqB,IAAI,uDAAuD,GAAG,mBAAmB,oCAAoC,wCAAwC,CAAC;AACnL,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC3M,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAC/L,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC3M,qBAAqB,IAAI,yDAAyD,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AACzL,qBAAqB,IAAI,yDAAyD,GAAG,mBAAmB,sCAAsC,0CAA0C,CAAC;AACzL,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,4CAA4C,gDAAgD,CAAC;AAC3M,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,oDAAoD,GAAG,mBAAmB,gCAAgC,oCAAoC,CAAC;AACxK,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,8EAA8E,GAAG,mBAAmB,0DAA0D,8DAA8D,CAAC;AACtP,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,wCAAwC,4CAA4C,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBhM,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAG5G,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB;AAC9F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;AAClJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,wBAAwB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;AACvH;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,CAAC;;AAEnI,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;AAC3C,YAAY,KAAK,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC;AAC3C;;AAEA,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,CAAC;AACb,YAAY,CAAC;AACb,YAAY,KAAK,CAAC,MAAM;AACxB,SAAS;AACT,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC3G,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,OAAO,EAAE;AAC/B,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gCAAgC,CAAC,MAAM,EAAE,WAAW,EAAE;AAC1D,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW;AAC5D,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;;AAErC,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;AAC9C,YAAY,MAAM,oBAAoB,GAAG,EAAE;;AAE3C,YAAY,IAAI,eAAe,GAAG,EAAE;AACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpD;AACA,gBAAgB,MAAM,aAAa,GAAG,IAAG,4CAA4C,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACzG,gBAAgB,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,aAAa,CAAC;AACvG,gBAAgB,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;AAE/C,gBAAgB,IAAI,EAAE,KAAK,eAAe,EAAE;AAC5C;AACA,oBAAoB,eAAe,GAAG,EAAE;AACxC,oBAAoB,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;AACxE,iBAAiB,MAAM;AACvB;AACA,oBAAoB,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG;AACzD,oBAAoB,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK;AAC9D;AACA;;AAEA,YAAY,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG;AACjD;AACA;AACA,gBAAgB,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM;AAChD,oBAAoB,EAAE;AACtB,oBAAoB,KAAK,EAAE,KAAK,GAAG,KAAK;AACxC,oBAAoB,GAAG,EAAE,GAAG,GAAG,KAAK;AACpC,oBAAoB,UAAU,EAAE,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC;AACrD,iBAAiB;AACjB,aAAa,CAAC;AACd;AACA,QAAQ,OAAO,OAAO;AACtB;;AAEA;;;AAGA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,yCAAyC,sDAAsD,CAAC;;;;AAI3M,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,uBAAuB,GAAG,4DAA4D,CAAC;;AAElG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK;AACjD;;AAEA;AACA,IAAI,gCAAgC,CAAC,GAAG,IAAI,EAAE;AAC9C,QAAQ,8CAA8C,CAAC,IAAI,CAAC,iBAAiB,EAAE,gCAAgC,CAAC,GAAG,IAAI,CAAC;AACxH;;AAEA,IAAI,IAAI,aAAa,GAAG;AACxB,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AAC1D;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB;AACxF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;AAIlJ,MAAM,qBAAqB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAChH,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;AACjC,QAAQ,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,oBAAoB,EAAE,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;;AAEzG,QAAQ,IAAI,OAAO,GAAG,YAAY;;AAElC;AACA,QAAQ,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM;AAC3E,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACnC;AACA,YAAY,OAAO,GAAG,IAAG,6CAA6C,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,mBAAmB,EAAE,EAAE,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC1I;;AAEA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,mBAAmB;AAC5D,QAAQ,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAC/D,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;;AAE/D,QAAQ,MAAM,eAAe,GAAG;AAChC,aAAa,IAAI;AACjB,gBAAgB,MAAM;AACtB,gBAAgB,mBAAmB;AACnC,gBAAgB,OAAO;AACvB,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;AAC/C,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;AAC/C,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B;AACA,aAAa,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC9C,aAAa,IAAI;AACjB,gBAAgB,MAAM,GAAG,MAAM,GAAG,MAAM;AACxC,gBAAgB,OAAO,GAAG,mBAAmB,GAAG,UAAU,GAAG,UAAU;AACvE;;AAEA,QAAQ,MAAM,cAAc,GAAG,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAElI,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,eAAe;AACzC,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B,YAAY,oBAAoB;AAChC;AACA;AACA;;;;AAIA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB;AAC9E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;AAChM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAwE,mBAAmB,6BAA6B,sBAAsB;;;;;;AAM9I,MAAM,gBAAgB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAChG,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;AAC/F,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE;;AAE9C,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClC,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC;AACzB;;AAEA,QAAQ,IAAI,YAAY,EAAE,cAAc;;AAExC,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,YAAY,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AAC7D,YAAY,cAAc,GAAG,YAAY,CAAC,cAAc;AACxD;;AAEA,QAAQ,IAAI,cAAc,EAAE;AAC5B;AACA,YAAY,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC;AAC1E,YAAY,IAAI,KAAK,GAAG,CAAC;;AAEzB,YAAY,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,EAAE;AAC/D,YAAY,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI;AACjC,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;AACpD,oBAAoB,MAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AACjG,oBAAoB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC;AAC7G;AACA,gBAAgB,OAAO,CAAC,CAAC,UAAU,CAAC,iBAAiB,EAAE,eAAe,CAAC;AACvE,aAAa,CAAC;AACd;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;AAEhD,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,kDAAkD;AACxD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,oBAAoB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC/G;AACA,IAAI,6BAA6B,CAAC,GAAG,IAAI,EAAE;AAC3C,QAAQ,OAAO,IAAG,4DAA4D,CAAC,6BAA6B,EAAE,GAAG,IAAI,CAAC;AACtH;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;;;AAOlJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;AAE5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,CAAC,YAAY,EAAE,cAAc,EAAE,oBAAoB,EAAE,eAAe,GAAG,KAAK,EAAE;;AAEtG;AACA,QAAQ,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;AACpD,QAAQ,IAAI,KAAK,GAAG,IAAG,2CAA2C,CAAC,mBAAmB,EAAE,YAAY,CAAC;;AAErG;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC;AACA,YAAY,IAAI,CAAC,eAAe,EAAE;AAClC,gBAAgB,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC;AACrC;AACA,YAAY,YAAY,GAAG,CAAC,YAAY,CAAC;AACzC,SAAS,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACvC,YAAY,MAAM,KAAK,CAAC,6GAA6G;AACrI;;AAEA;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACtD,YAAY,IAAI,iBAAiB,GAAG,cAAc,CAAC,CAAC,CAAC;AACrD,YAAY,IAAI,iBAAiB,GAAG,oBAAoB,CAAC,CAAC,CAAC;;AAE3D,YAAY,IAAI,aAAa,GAAG;AAChC,gBAAgB,iBAAiB,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC;AAC3D,gBAAgB,iBAAiB,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;AAC1D;;AAEA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC7D,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpE,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3E,wBAAwB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC;AACxE;AACA;AACA;AACA;;AAEA,QAAQ,OAAO,IAAI,6CAA6C,CAAC,MAAM;AACvE,YAAY,SAAS;AACrB,YAAY,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1D,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,YAAY,EAAE,YAAY,EAAE;AACjD,QAAQ,IAAI,KAAK,GAAG,IAAG,2CAA2C,CAAC,mBAAmB,EAAE,YAAY,CAAC;AACrG,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC;AACA,YAAY,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC;AACjC,YAAY,YAAY,GAAG,CAAC,YAAY,CAAC;AACzC,SAAS,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACvC,YAAY,MAAM,KAAK,CAAC,6GAA6G;AACrI;;AAEA,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9D,YAAY,MAAM,KAAK,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,kEAAkE,CAAC;AACrH;AACA,QAAQ,OAAO,IAAI,6CAA6C,CAAC,MAAM;AACvE,YAAY,OAAO;AACnB,YAAY,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AACnD,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,YAAY,GAAG,IAAI;AAC3B,QAAQ,YAAY,GAAG,IAAI;AAC3B,QAAQ,WAAW,GAAG;AACtB,KAAK,GAAG,EAAE,EAAE;AACZ;AACA;AACA,QAAQ,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;;AAEnD,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB;AAC9D,gBAAgB,YAAY,EAAE,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC;AAClE,aAAa;AACb;;AAEA,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;AACzC,gBAAgB,MAAM,KAAK,CAAC,iEAAiE;AAC7F;AACA,YAAY,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,SAAS,CAAC,YAAY,CAAC;AAChG;;AAEA,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB;AAC7D,gBAAgB,WAAW,EAAE,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,oBAAoB,EAAE,IAAI;AAC3F,aAAa;AACb;;AAEA,QAAQ,OAAO,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,kBAAkB,CAAC,KAAK,EAAE,cAAc,EAAE,oBAAoB,EAAE;AAC1E,QAAQ,cAAc,GAAG,GAAG;AAC5B,QAAQ,QAAQ,GAAG,IAAI;AACvB,QAAQ,QAAQ,GAAG,IAAI;AACvB,KAAK,GAAG,EAAE,EAAE;AACZ;;AAEA,QAAQ,MAAM,YAAY,GAAG,EAAE;;AAE/B,QAAQ,QAAQ,GAAG,QAAQ,IAAI,IAAI,CAAC,QAAQ;;AAE5C;AACA,QAAQ,MAAM,iBAAiB,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC;;AAEnE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxD,YAAY,MAAM,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC;AACnD,YAAY,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,CAAC,CAAC;;AAE/D;AACA,YAAY,IAAI,iBAAiB,IAAI,MAAM,IAAG,6CAA6C,CAAC,cAAc;AAC1G,gBAAgB,KAAK,CAAC,CAAC,CAAC;AACxB,gBAAgB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB;AAC3D,aAAa,CAAC;;AAEd;AACA,YAAY,iBAAiB,GAAG,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE7H;AACA,YAAY,iBAAiB,IAAI,MAAM,IAAG,6CAA6C,CAAC,cAAc;AACtG,gBAAgB,iBAAiB;AACjC,gBAAgB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa;AACvD,aAAa,CAAC;;AAEd,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,MAAM,IAAI,GAAG,iBAAiB,CAAC,IAAI;AACnD,gBAAgB,MAAM,iBAAiB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AACrE,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACtD,oBAAoB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,cAAc,EAAE;AAClD,wBAAwB,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC;AAChD;AACA;AACA,gBAAgB,iBAAiB,GAAG,IAAI,6CAA6C,CAAC,MAAM;AAC5F,oBAAoB,MAAM;AAC1B,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB,CAAC;AACtC;AACA;;AAEA,YAAY,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAChD;;AAEA,QAAQ,OAAO,YAAY;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,KAAK,EAAE,WAAW,EAAE;AAC5C,QAAQ,aAAa,GAAG,CAAC;AACzB,QAAQ,aAAa,GAAG,GAAG,GAAG,IAAI;AAClC,QAAQ,eAAe,GAAG,EAAE;AAC5B,QAAQ,8BAA8B,GAAG,CAAC;AAC1C,KAAK,GAAG,EAAE,EAAE;AACZ;AACA;AACA;AACA;;;;AAIA,OAAO,CAAC;;AAER,MAAM,oCAAoC;AAC1C;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,YAAY,EAAE,qBAAqB,YAAY;AACtE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,yCAAyC,4CAA4C,CAAC;;;;AAIhM,MAAM,YAAY,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAC5F,IAAI,OAAO,qBAAqB,GAAG,2DAA2D,CAAC;;AAE/F,IAAI,MAAM,KAAK,CAAC,GAAG,IAAI,EAAE;AACzB,QAAQ,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;AAClD;;AAEA,IAAI,kBAAkB,CAAC,GAAG,IAAI,EAAE;AAChC;AACA,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC;AAC/D;;AAEA,IAAI,oBAAoB,CAAC,GAAG,IAAI,EAAE;AAClC;AACA,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC;AACjE;AACA;;AAEA,OAAO,CAAC;;AAER,MAAM,8DAA8D;AACpE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B;AACpG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;AAClJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;AAK/I,MAAM,2BAA2B,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAE1H,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AACvD,QAAQ,MAAM,WAAW,GAAG,IAAG,4CAA4C,CAAC,eAAe;AAC3F,YAAY,GAAG;AACf,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,EAAE;AACd,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;AACzC,YAAY,aAAa;AACzB,YAAY,IAAI;AAChB,YAAY,OAAO;AACnB,YAAY,IAAI;AAChB,SAAS;;AAET;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;;AAEtC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAG,4CAA4C,CAAC,eAAe,EAAE,GAAG,EAAE,OAAO,EAAE;AACrG,YAAY,QAAQ,EAAE,KAAK;AAC3B,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,uBAAuB,CAAC,QAAQ,EAAE,UAAU,EAAE;AACxD;;AAEA;AACA;AACA,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK;;AAEtE,QAAQ,OAAO,IAAG,4CAA4C,CAAC,WAAW;AAC1E,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,MAAM;AACvB,YAAY,GAAG;AACf,YAAY,GAAG;AACf,YAAY;AACZ,gBAAgB,UAAU,EAAE,GAAG;AAC/B,gBAAgB,KAAK,EAAE,GAAG;AAC1B,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,WAAW,EAAE,IAAI;AACjC,gBAAgB,WAAW,EAAE,IAAI,CAAC,WAAW;AAC7C,gBAAgB,OAAO,EAAE,KAAK;AAC9B,gBAAgB,SAAS,EAAE,qBAAqB;AAChD,gBAAgB,gBAAgB,EAAE,IAAI;;AAEtC;AACA,gBAAgB,cAAc,EAAE,UAAU;AAC1C,gBAAgB,SAAS,EAAE,IAAI;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,GAAG,IAAI;AACtB,QAAQ,kBAAkB,GAAG,CAAC;AAC9B,QAAQ,yBAAyB,GAAG,IAAI;AACxC,QAAQ,qBAAqB,GAAG,IAAI;AACpC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,6BAA6B,CAAC;;AAEtI,QAAQ,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;;AAExF,QAAQ,IAAI,yBAAyB,EAAE;AACvC,YAAY,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,IAAI;AAC9D,YAAY,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;AACtC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACnD,gBAAgB,IAAI,GAAG,GAAG,CAAC;AAC3B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACvD,oBAAoB,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;AACrD;;AAEA,gBAAgB,MAAM,IAAI,GAAG,GAAG,GAAG,YAAY;;AAE/C,gBAAgB,IAAI,QAAQ,GAAG,CAAC;AAChC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACvD,oBAAoB,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC;AACxE;AACA,gBAAgB,QAAQ,IAAI,YAAY,GAAG,CAAC,CAAC;;AAE7C,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACtD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AACvD,oBAAoB,MAAM,KAAK,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC;AACtD,oBAAoB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,GAAG;AAC5D;AACA;AACA;;AAEA,QAAQ,IAAI,qBAAqB;AACjC,QAAQ,IAAI,OAAO,EAAE;AACrB,YAAY,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,IAAI;AAC5D,YAAY,MAAM,IAAI,+BAA+B,QAAQ,CAAC,IAAI,CAAC;;AAEnE,YAAY,MAAM,QAAQ,GAAG,UAAU,GAAG,kBAAkB;AAC5D,YAAY,IAAI,QAAQ,GAAG,CAAC,EAAE;AAC9B,gBAAgB,MAAM,WAAW,GAAG,IAAI,YAAY,CAAC,YAAY,IAAI,UAAU,GAAG,QAAQ,CAAC,CAAC;AAC5F,gBAAgB,WAAW,CAAC,GAAG,CAAC,IAAI;AACpC,gBAAgB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM;;AAEvE,gBAAgB,MAAM,eAAe,GAAG,UAAU,GAAG,QAAQ;AAC7D,gBAAgB,QAAQ,GAAG,IAAI,6CAA6C,CAAC,MAAM;AACnF,oBAAoB,QAAQ,CAAC,IAAI;AACjC,oBAAoB,WAAW;AAC/B,oBAAoB,CAAC,eAAe,EAAE,YAAY,CAAC;AACnD;;AAEA,gBAAgB,IAAI,qBAAqB,EAAE;AAC3C,oBAAoB,qBAAqB,GAAG,IAAI,6CAA6C,CAAC,MAAM;AACpG,wBAAwB,OAAO;AAC/B,wBAAwB,IAAI,aAAa,CAAC,eAAe,CAAC;AAC1D,wBAAwB,CAAC,CAAC,EAAE,eAAe,CAAC;AAC5C,qBAAqB;AACrB,iDAAiD,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC;AACrG;AACA;AACA;;AAEA,QAAQ,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,IAAI;;AAExD,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;AACzC,QAAQ,MAAM,SAAS,GAAG,UAAU,GAAG,MAAM;AAC7C,QAAQ,IAAI,SAAS,KAAK,CAAC,EAAE;AAC7B,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,UAAU,CAAC,oCAAoC,EAAE,MAAM,CAAC,EAAE,CAAC;AAChH;;AAEA,QAAQ,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI;AAC5C,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC3C,YAAY,YAAY,GAAG,MAAM;AACjC,SAAS;;AAET,QAAQ,MAAM,MAAM,GAAG,EAAE,cAAc;;AAEvC,QAAQ,IAAI,qBAAqB,EAAE;AACnC,YAAY,MAAM,iBAAiB,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE5D,YAAY,MAAM,mBAAmB,GAAG,IAAI,aAAa,CAAC,iBAAiB,CAAC;;AAE5E,YAAY,IAAI,qBAAqB,EAAE;AACvC,gBAAgB,MAAM,0BAA0B,GAAG,qBAAqB,CAAC,IAAI;AAC7E,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,MAAM,EAAE,EAAE,CAAC,EAAE;AACzE,oBAAoB,mBAAmB,CAAC,CAAC,CAAC,GAAG,0BAA0B,CAAC,CAAC,CAAC;AAC1E;AACA,aAAa,MAAM;AACnB,gBAAgB,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC;AAC5C;AACA,YAAY,MAAM,CAAC,cAAc,GAAG,IAAI,6CAA6C,CAAC,MAAM;AAC5F,gBAAgB,OAAO;AACvB,gBAAgB,mBAAmB;AACnC,gBAAgB,CAAC,CAAC,EAAE,iBAAiB,CAAC;AACtC,aAAa;AACb;;AAEA,QAAQ,OAAO,MAAM;AACrB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;;AAI/L,MAAM,uBAAuB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAClH;AACA,IAAI,kCAAkC,CAAC,GAAG,IAAI,EAAE;AAChD,QAAQ,OAAO,IAAG,4DAA4D,CAAC,kCAAkC,EAAE,GAAG,IAAI,CAAC;AAC3H;AACA;AACA,MAAM,yBAAyB,SAAS,uBAAuB,CAAC;;;AAGhE,OAAO,CAAC;;AAER,MAAM,gDAAgD;AACtD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB;AACtF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,oBAAoB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;;AAG/G,OAAO,CAAC;;AAER,MAAM,kDAAkD;AACxD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,2BAA2B,mEAAmE,CAAC,sBAAsB;AACnK,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,mEAAmE,GAAG,mBAAmB,iDAAiD,oDAAoD,CAAC;;;;;AAKxN,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,gBAAgB,EAAE,2BAA2B,6DAA6D,CAAC,iBAAiB;AACnJ,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;;;;;AAKtM,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB;AAC9F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;;;;AAIrM,MAAM,wBAAwB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;;AAGvH,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;AAC7K,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;;;;;AAKtM,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK;AACjD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,kDAAkD;AACxD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB;AACxF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,qBAAqB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAChH,IAAI,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;AACzD;AACA;AACA,QAAQ,MAAM,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,CAAC,GAAG,OAAO;;AAEhE,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE;AACnD;AACA;AACA;AACA,YAAY,KAAK,EAAE,UAAU,GAAG,CAAC,OAAO,GAAG,UAAU,GAAG,OAAO,IAAI,OAAO;AAC1E,YAAY,MAAM,EAAE,WAAW,GAAG,CAAC,OAAO,GAAG,WAAW,GAAG,OAAO,IAAI,OAAO;AAC7E,SAAS,EAAE;AACX,YAAY,IAAI,EAAE,WAAW;AAC7B,YAAY,MAAM,EAAE,KAAK;AACzB,YAAY,eAAe,EAAE,EAAE;AAC/B,YAAY,GAAG,OAAO;AACtB,SAAS;AACT;AACA;;AAEA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;;;;;AAK7K;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;AACnG,IAAI,OAAO,qBAAqB,GAAG,IAAI;;AAEvC;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE;AACjD;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACjC,YAAY,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;AACpE;;AAEA,QAAQ,IAAI,YAAY,GAAG,EAAE;AAC7B,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM;AAC1C,YAAY,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;AAC3E,gBAAgB,GAAG,MAAM;AACzB,gBAAgB,UAAU,EAAE,SAAS;AACrC,aAAa,CAAC;AACd,YAAY,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;;AAElG;AACA,YAAY,MAAM,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AAClG,YAAY,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC;AAClE,YAAY,YAAY,CAAC,cAAc,CAAC,GAAG,cAAc;;AAEzD,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB;AAC7D,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;AAC7C,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,gDAAgD,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAClG;AACA,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACvF;;AAEA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;AACjD,YAAY,kBAAkB,EAAE,KAAK;AACrC,YAAY,GAAG,MAAM;AACrB,SAAS,CAAC;;AAEV,QAAQ,OAAO;AACf,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG,YAAY;AAC3B;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,0CAA0C;AAChD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,iBAAiB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC5G,MAAM,mBAAmB,SAAS,iBAAiB,CAAC;;;;AAIpD,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB;AAC1F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;AAC/L,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;;AAKlJ,MAAM,sBAAsB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE;AACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpC,YAAY,MAAM,GAAG,CAAC,MAAM,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACrC,YAAY,OAAO,GAAG,CAAC,OAAO,CAAC;AAC/B;;AAEA,QAAQ,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,QAAQ,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE;AACjF,YAAY,YAAY,EAAE,KAAK;AAC/B,YAAY,cAAc,EAAE,KAAK;AACjC,YAAY,oBAAoB,EAAE,IAAI;AACtC,SAAS,CAAC,CAAC,CAAC;;;AAGZ;AACA,QAAQ,MAAM,YAAY,GAAG,IAAG,6CAA6C,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG;AAClG;AACA,YAAY,CAAC,CAAC,EAAE,CAAC,KAAK,IAAG,6CAA6C,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC;AAC3H,SAAS,EAAE,CAAC,CAAC;;AAEb,QAAQ,OAAO;AACf,YAAY,YAAY;;AAExB;AACA,YAAY,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;;AAE/D;AACA,YAAY,oBAAoB,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,CAAC;AAC3E;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,kDAAkD;AACxD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB;AACxF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,qBAAqB,SAAS,4DAA4D,CAAC,cAAc,CAAC;;AAEhH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAA4B,CAAC,OAAO,EAAE,KAAK,EAAE;AACjD,QAAQ,SAAS,GAAG,IAAI;AACxB;AACA;AACA;AACA,KAAK,GAAG,EAAE,EAAE;AACZ;AACA,QAAQ,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,EAAE;AACzC,QAAQ,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI;;AAErE,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;;AAEnC,YAAY,MAAM,aAAa,GAAG,EAAE;AACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpD,gBAAgB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;;AAEtC,gBAAgB,MAAM,SAAS,GAAG,EAAE;AACpC,gBAAgB,MAAM,MAAM,GAAG,EAAE;AACjC,gBAAgB,MAAM,MAAM,GAAG,EAAE;;AAEjC,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK;AAClD,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM;AACnD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACzD,oBAAoB,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,oBAAoB,IAAI,GAAG,GAAG,CAAC;AAC/B,oBAAoB,IAAI,KAAK,GAAG,CAAC,QAAQ;AACzC,oBAAoB,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC;AAC1C,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACzD,wBAAwB,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC1C,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC7D,4BAA4B,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;AAChD,4BAA4B,GAAG,IAAI,KAAK;;AAExC,4BAA4B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;;AAE1D;AACA;AACA,4BAA4B,YAAY,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK;AAC7D,4BAA4B,YAAY,IAAI,CAAC,CAAC,IAAI,KAAK;AACvD;AACA;;AAEA;AACA,oBAAoB,IAAI,SAAS,IAAI,IAAI,IAAI,KAAK,GAAG,SAAS,EAAE;;AAEhE;AACA,oBAAoB,MAAM,QAAQ,GAAG;AACrC,wBAAwB,MAAM,GAAG,YAAY,GAAG,GAAG;AACnD,wBAAwB,MAAM,GAAG,YAAY,GAAG,GAAG;AACnD;AACA,oBAAoB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC5C,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC;AACA,gBAAgB,aAAa,CAAC,IAAI,CAAC;AACnC,oBAAoB,IAAI;AACxB,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B,oBAAoB,SAAS;AAC7B,iBAAiB,CAAC;AAClB;AACA,YAAY,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;AACvC;AACA,QAAQ,OAAO,OAAO;AACtB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,sDAAsD;AAC5D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB;AAC9F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,8BAA8B,uBAAuB,CAAC;;;;AAIlJ,MAAM,wBAAwB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAEvH;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,YAAY,EAAE;AAC3C;AACA,QAAQ,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3D,QAAQ,MAAM,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC,MAAM;AAC9C,QAAQ,MAAM,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM;AACpG,QAAQ,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,CAAC;;AAEnI,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;AAC3C,YAAY,KAAK,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC;AAC3C;;AAEA,QAAQ,IAAI,YAAY,GAAG,KAAK;;AAEhC;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACtC,YAAY,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC;AACtE;;AAEA;AACA,QAAQ,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC;AAC9C,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC;AAClH,YAAY,cAAc,EAAE,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK;AACpJ,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB;AAChF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;;;;;AAK7K,MAAM,iBAAiB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACjG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK;AACjD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,8DAA8D;AACpE;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;;;;;AAK7K,MAAM,uBAAuB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AACvG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK;AACjD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,wDAAwD;AAC9D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB;AAChG,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAyE,mBAAmB,8BAA8B,uBAAuB;AACjJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,yBAAyB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAExH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AACvD,QAAQ,MAAM,WAAW,GAAG,IAAG,4CAA4C,CAAC,eAAe;AAC3F,YAAY,GAAG;AACf,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,EAAE;AACd,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;AACzC,YAAY,aAAa;AACzB,YAAY,IAAI;AAChB,YAAY,OAAO;AACnB,YAAY,IAAI;AAChB,SAAS;;AAET;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;;AAEtC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAG,4CAA4C,CAAC,eAAe,EAAE,GAAG,EAAE,SAAS,EAAE;AACvG,YAAY,QAAQ,EAAE,KAAK;AAC3B,SAAS;AACT,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,uBAAuB,CAAC,QAAQ,EAAE;AAC5C;AACA;AACA,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK;;AAEtE,QAAQ,OAAO,IAAG,4CAA4C,CAAC,WAAW;AAC1E,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,MAAM;AACvB,YAAY,GAAG;AACf,YAAY,GAAG;AACf,YAAY;AACZ,gBAAgB,UAAU,EAAE,GAAG;AAC/B,gBAAgB,KAAK,EAAE,GAAG;AAC1B,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,WAAW,EAAE,IAAI;AACjC,gBAAgB,WAAW,EAAE,IAAI,CAAC,WAAW;AAC7C,gBAAgB,OAAO,EAAE,KAAK;AAC9B,gBAAgB,SAAS,EAAE,qBAAqB;AAChD,gBAAgB,gBAAgB,EAAE,IAAI;;AAEtC;AACA,gBAAgB,SAAS,EAAE,IAAI;AAC/B,gBAAgB,cAAc,EAAE,IAAI,CAAC,cAAc;AACnD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,2BAA2B,CAAC;;AAEpI,QAAQ,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;;AAElF,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;AACvD;AACA,YAAY,MAAM,QAAQ,gCAAgC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAChF,YAAY,MAAM,YAAY,+BAA+B,QAAQ,CAAC,IAAI,CAAC;AAC3E,YAAY,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,IAAI;;AAExE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACjD,gBAAgB,MAAM,OAAO,GAAG,CAAC,GAAG,UAAU,GAAG,YAAY;AAC7D,gBAAgB,MAAM,OAAO,GAAG,CAAC,GAAG,YAAY;AAChD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACrD,oBAAoB,MAAM,OAAO,GAAG,OAAO,GAAG,CAAC,GAAG,YAAY;AAC9D,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;AAC3D,wBAAwB,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;AAC1E;AACA;AACA;AACA;;AAEA,QAAQ,OAAO;AACf,YAAY,cAAc,EAAE;AAC5B,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,wCAAwC;AAC9C;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB,CAAC;AAC/F,uBAAuB,gCAAgC,EAAE,qBAAqB,gCAAgC,CAAC;AAC/G,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB;AAC9F,sBAAsB,CAAC;;;AAGvB,MAAM,iBAAiB,GAAG;AAC1B,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;AAClB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;AAClB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC;AACzB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;AACxB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACjB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC;AAC5B,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;AACpB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC;AAC3B,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC;AACvB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACnB,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACrB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;AACtB,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;AACvB;;AAEA;AACA,MAAM,wBAAwB,GAAG,IAAI,GAAG,CAAC,iBAAiB,CAAC;AAC3D;AACA,MAAM,gCAAgC,GAAG,IAAI,GAAG,CAAC;AACjD,IAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChD,IAAI,GAAG;AACP,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;AACzB,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC;AAC3B,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;AACzB,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;AACzB,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC;AAC/B,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC;AACxB,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;AACzB,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC;AAC3B,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC;AAC1B,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC;AAC3B,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC;AAC3B;AACA,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,SAAS,wBAAwB,CAAC,QAAQ,EAAE;AAC5C,IAAI,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE;;AAErC;AACA,IAAI,IAAI,aAAa,GAAG,gCAAgC,CAAC,GAAG,CAAC,QAAQ,CAAC;;AAEtE,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;AACrC;;AAEA;AACA,QAAQ,MAAM,sBAAsB,GAAG,QAAQ,CAAC,KAAK,CAAC,oBAAoB,CAAC;AAC3E,QAAQ,IAAI,sBAAsB,EAAE;AACpC,YAAY,QAAQ,GAAG,sBAAsB,CAAC,CAAC,CAAC;AAChD;;AAEA,QAAQ,IAAI,wBAAwB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACpD;AACA,YAAY,aAAa,GAAG,QAAQ;;AAEpC,SAAS,MAAM;AACf;AACA,YAAY,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC;AAC1D,YAAY,MAAM,KAAK,GAAG,gBAAgB,GAAG,wBAAwB,CAAC,IAAI,EAAE,GAAG,wBAAwB,CAAC,MAAM,EAAE;;AAEhH,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,oCAAoC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5H;AACA;AACA,IAAI,OAAO,aAAa;AACxB;;;AAGA,OAAO,CAAC;;AAER,MAAM,oDAAoD;AAC1D;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,+CAA+C,wCAAwC,CAAC;AACrM,qBAAyE,mBAAmB,8BAA8B,uBAAuB;AACjJ,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;AAC/I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,CAAC;;;;;;AAM/I,MAAM,uBAAuB,SAAS,8DAA8D,CAAC,gBAAgB,CAAC;;AAEtH,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,IAAG,4CAA4C,CAAC,eAAe;AACnG,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACjD,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY;AACpC,YAAY,GAAG;AACf,YAAY,MAAM;AAClB,YAAY,IAAI,CAAC,MAAM,CAAC,aAAa;AACrC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,SAAS;;AAET,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAG,4CAA4C,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC;AACjH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,uBAAuB,CAAC,QAAQ,EAAE;AAC5C,QAAQ,MAAM,QAAQ,GAAG,MAAM,IAAG,4CAA4C,CAAC,WAAW;AAC1F,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,MAAM;AACvB,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK;AAC7B,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU;AAClC,YAAY;AACZ,gBAAgB,KAAK,EAAE,GAAG;AAC1B,gBAAgB,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;AACpD,gBAAgB,OAAO,EAAE,OAAO;;AAEhC;AACA,gBAAgB,cAAc,EAAE,IAAI,CAAC,GAAG;AACxC,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AACxE,oBAAoB,IAAI,CAAC,MAAM,CAAC,aAAa;AAC7C;AACA;AACA;;AAEA,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;AAClC,QAAQ,MAAM,QAAQ,GAAG,IAAG,4CAA4C,CAAC,GAAG,8BAA8B,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEnH,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG;AACrE;;AAEA,QAAQ,OAAO,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,UAAU,GAAG,IAAI;AACzB,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,IAAG,8DAA8D,CAAC,qBAAqB,EAAE,KAAK,EAAE,yBAAyB,CAAC;;AAElI,QAAQ,IAAI,QAAQ;AACpB,QAAQ,MAAM,MAAM,GAAG,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS;AAC1D,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE;AACnC,YAAY,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACtD,gBAAgB,OAAO,CAAC,IAAI;AAC5B,oBAAoB,mEAAmE;AACvF,oBAAoB,oEAAoE;AACxF,oBAAoB;AACpB,iBAAiB;AACjB;AACA,YAAY,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC;AAC7C,SAAS,MAAM;AACf;AACA,YAAY,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AAC/C,YAAY,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;AAC/B;;AAEA,QAAQ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;;AAErE,QAAQ,OAAO;AACf,YAAY,cAAc,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;AACjD,SAAS;AACT;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB;AAC5F,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,gDAAgD,yCAAyC,CAAC;;;AAGxM,MAAM,uBAAuB,SAAS,+DAA+D,CAAC,gBAAgB,CAAC;;AAEvH;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,IAAI;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,GAAG,IAAI;;AAElC;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,IAAI;;AAErB;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,IAAI;;AAE1B;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,IAAI;;AAEf;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG,IAAI;;AAEnB;AACA;AACA;AACA;AACA,IAAI,sBAAsB,GAAG,IAAI;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,IAAI;;AAErB;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG,IAAI;;AAE1B;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,IAAI;;AAErB;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG,IAAI;;AAErB;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,4CAA4C;AAClD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB;AAC9E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,2CAA2C,8CAA8C,CAAC;AACtM,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,4BAA4B,qBAAqB,CAAC;AAC5I,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,uCAAuC,gCAAgC,CAAC;;;;;AAK7K;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,sDAAsD,CAAC,SAAS,CAAC;AAChG,IAAI,OAAO,eAAe,GAAG,2CAA2C,CAAC;AACzE,IAAI,OAAO,uBAAuB,GAAG,6DAA6D,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAClD;AACA;;;;AAIA,OAAO,CAAC;;AAER,MAAM,8CAA8C;AACpD;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB,CAAC;AACzF,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB;AACpF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,6CAA6C,sCAAsC,CAAC;;;AAG/L,MAAM,mBAAmB,SAAS,4DAA4D,CAAC,cAAc,CAAC;AAC9G;AACA,IAAI,6BAA6B,CAAC,GAAG,IAAI,EAAE;AAC3C,QAAQ,OAAO,IAAG,4DAA4D,CAAC,6BAA6B,EAAE,GAAG,IAAI,CAAC;AACtH;AACA;AACA,MAAM,qBAAqB,SAAS,mBAAmB,CAAC;;;AAGxD,OAAO,CAAC;;AAER,MAAM,uBAAuB;AAC7B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB;AAC9E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8CAA8C,GAAG,mBAAmB,4BAA4B,wBAAwB,CAAC;AAClJ,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,2BAA2B,uBAAuB,CAAC;AAC/I,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;;;;;AAKpH,MAAM,UAAU,GAAG,oCAAoC,CAAC,IAAI,CAAC,cAAc,IAAI,oCAAoC,CAAC,IAAI,CAAC,gBAAgB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,GAAG,OAAO,aAAa,EAAE,eAAe,EAAE,KAAK,KAAK;AAC9D,IAAI,MAAM,OAAO,GAAG,MAAM,IAAG,8CAA8C,CAAC,sBAAsB;AAClG,QAAQ,IAAI,UAAU,CAAC,aAAa,CAAC,EAAE,eAAe;AACtD,KAAK;;AAEL;AACA,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,EAAE;;AAEjC,IAAI,0BAA0B,6CAA6C,MAAM,KAAK;AACtF,QAAQ,MAAM,OAAO,GAAG,IAAG,8CAA8C,CAAC,WAAW,GAAG;AACxF,QAAQ,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;;AAE7H;AACA,QAAQ,MAAM,OAAO,GAAG,OAAO,KAAK,GAAG,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;AAElH,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAClC,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,SAAS,MAAM;AACf,YAAY,OAAO,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO,uBAAuB,KAAK,EAAE,CAAC;AAClH;AACA,KAAK;AACL;;AAEA;AACA,MAAM,gBAAgB,CAAC;AACvB,IAAI,OAAO,eAAe,GAAG;AAC7B;AACA;AACA,KAAK;;AAEL,IAAI,WAAW,sBAAsB,GAAG;AACxC,QAAQ,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;AAC3C,YAAY,IAAI,CAAC,uBAAuB,GAAG,IAAI;AAC/C,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAC/iB,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB,aAAa;AACb;AACA,QAAQ,OAAO,IAAI,CAAC,uBAAuB;AAC3C;AACA,IAAI,WAAW,uBAAuB,GAAG;AACzC,QAAQ,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;AAC5C,YAAY,IAAI,CAAC,wBAAwB,GAAG,IAAI;AAChD,gBAAgziB,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB,aAAa;AACb;AACA,QAAQ,OAAO,IAAI,CAAC,wBAAwB;AAC5C;;AAEA,IAAI,WAAW,sBAAsB,GAAG;AACxC,QAAQ,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;AAC3C,YAAY,IAAI,CAAC,uBAAuB,GAAG,IAAI;AAC/C,gBAAghB,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB,aAAa;AACb;AACA,QAAQ,OAAO,IAAI,CAAC,uBAAuB;AAC3C;;AAEA,IAAI,WAAW,MAAM,GAAG;AACxB,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC3B,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI;AAC/B,gBAAggBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB,aAAa;AACb;AACA,QAAQ,OAAO,IAAI,CAAC,OAAO;AAC3B;;AAEA,IAAI,WAAW,IAAI,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACzB,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI;AAC7B,gBAAgmB,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,KAAK;AACzB;;AAEA,IAAI,WAAW,IAAI,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACzB,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI;AAC7B,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAC1a,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,KAAK;AACzB;;AAEA,IAAI,WAAW,KAAK,GAAG;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI;AAC9B,gBAAgpU,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,eAAe,GAAG,gBAAgB,GAAG;AACrD;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,MAAM;AAC1B;;AAEA,IAAI,WAAW,KAAK,GAAG;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI;AAC9B,gBAAgtZ,gBAAgB,IAAI,CAAC,eAAe;AACpC,gBAAgB,GAAG;AACnB;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,MAAM;AAC1B;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,oBAAoB;AAC1B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,kCAAkC,EAAE,qBAAqB,kCAAkC,CAAC;AACnH,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB,CAAC;AAC7F,uBAAuB,iCAAiC,EAAE,qBAAqB,iCAAiC,CAAC;AACjH,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,8BAA8B,EAAE,qBAAqB,8BAA8B,CAAC;AAC3G,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,uBAAuB,EAAE,qBAAqB,uBAAuB,CAAC;AAC7F,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,yBAAyB,EAAE,qBAAqB,yBAAyB,CAAC;AACjG,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB,CAAC;AACzF,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,0BAA0B,EAAE,qBAAqB,0BAA0B,CAAC;AACnG,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB,CAAC;AAC3F,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,2BAA2B,EAAE,qBAAqB,2BAA2B,CAAC;AACrG,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,mCAAmC,EAAE,qBAAqB,mCAAmC,CAAC;AACrH,uBAAuB,8BAA8B,EAAE,qBAAqB,8BAA8B,CAAC;AAC3G,uBAAuB,mCAAmC,EAAE,qBAAqB,mCAAmC,CAAC;AACrH,uBAAuB,+BAA+B,EAAE,qBAAqB,+BAA+B,CAAC;AAC7G,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ;AAC9D,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,wBAAwB,qBAAqB,CAAC;AACxI,qBAAqB,IAAI,uCAAuC,GAAG,mBAAmB,oBAAoB,iBAAiB,CAAC;AAC5H,qBAAqB,IAAI,4DAA4D,GAAG,mBAAmB,yCAAyC,sCAAsC,CAAC;AAC3L,qBAAkF,mBAAmB,mCAAmC,gCAAgC;AACxK,qBAAqB,IAAI,8CAA8C,GAAG,mBAAmB,2BAA2B,wBAAwB,CAAC;AACjJ,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,wBAAwB,qBAAqB,CAAC;AACxI,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,0BAA0B,uBAAuB,CAAC;AAC9I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa,CAAC,MAAM,EAAE;AACrC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAChC,QAAQ,MAAM,GAAG,CAAC,MAAM,CAAC;AACzB;;AAEA;AACA,IAAI,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,4CAA4C,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa,CAAC,MAAM,EAAE,aAAa,EAAE;AACpD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAChC,QAAQ,MAAM,GAAG,CAAC,MAAM,CAAC;AACzB;;AAEA,IAAI,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI;AAC7C,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE;AACvD,YAAY,OAAO,IAAG,4CAA4C,CAAC,UAAU,EAAE,CAAC,EAAE,aAAa,CAAC;AAChG,SAAS,MAAM,IAAI,CAAC,YAAY,YAAY,EAAE;AAC9C,YAAY,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC;AACtC;AACA,QAAQ,OAAO,CAAC;AAChB,KAAK,CAAC,CAAC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,GAAG,EAAE,SAAS,EAAE;AAC1C,IAAI,IAAI,SAAS,EAAE;AACnB,QAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG;;AAExC,IAAI,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,QAAQ,SAAS,8CAA8C,CAAC,QAAQ,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,GAAG,IAAI,EAAE,SAAS,GAAG,IAAI,EAAE,EAAE;AACrE,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;;AAEA;AACA,IAAI,MAAM,OAAO,GAAG;AACpB,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B,uGAAuG,QAAQ,GAAG;;AAElJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,KAAK,GAAG;AAChB,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACnD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY;;AAErD;AACA,QAAQ,MAAM,iBAAiB;AAC/B;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK;AAC/C,kBAAkB,KAAK,IAAI,KAAK,CAAC,OAAO;AACxC,kBAAkB,KAAK,IAAI,IAAI,6CAA6C,CAAC,MAAM;AACnF,oBAAoB,SAAS;AAC7B,oBAAoB,IAAG,4CAA4C,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC;AACxF,oBAAoB,KAAK,CAAC,IAAI;AAC9B,iBAAiB,CAAC;;AAElB;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE;AAC5C,YAAY,MAAM,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC;;AAEnD,YAAY,MAAM,MAAM,GAAG,MAAM,IAAG,6CAA6C,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;;AAEtG,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC9C,YAAY,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AAChD,gBAAgB,KAAK,EAAE,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC5D,gBAAgB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAChC,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,KAAK,KAAK,CAAC,EAAE;AAC7B,gBAAgB,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACtC,aAAa,MAAM;AACnB,gBAAgB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC;AACA;;AAEA,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,4CAA4C,QAAQ,8CAA8C,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjK;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,wGAAwG,QAAQ,GAAG;;AAEpJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,aAAa,GAAG,CAAC,GAAG,CAAC;AAC7B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;;AAE9C;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;AACzE,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY;;AAErD,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM;AACrC;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AACjD,YAAY,MAAM,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AACjD,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;;AAEnC;AACA,YAAY,MAAM,MAAM,GAAG,EAAE;AAC7B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AACpD,gBAAgB,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;AAC1C,gBAAgB,MAAM,aAAa,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAE7G,gBAAgB,MAAM,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;AAC5F,gBAAgB,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpD;AACA,oBAAoB;AACpB;;AAEA;AACA,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;AAClG,gBAAgB,IAAI,IAAI,KAAK,EAAE,EAAE;AACjC;AACA,oBAAoB;AACpB;;AAEA,gBAAgB,MAAM,MAAM,GAAG,IAAG,4CAA4C,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC;;AAEvG,gBAAgB,MAAM,CAAC,IAAI,CAAC;AAC5B,oBAAoB,MAAM,EAAE,MAAM;AAClC,oBAAoB,KAAK,EAAE,MAAM,CAAC,aAAa,CAAC;AAChD,oBAAoB,KAAK,EAAE,CAAC;AAC5B,oBAAoB,IAAI,EAAE,IAAI;;AAE9B;AACA;AACA;AACA,iBAAiB,CAAC;AAClB;AACA,YAAY,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACjC;AACA,QAAQ,OAAO,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,sGAAsG,QAAQ,GAAG;;AAEhJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE;AACnC,QAAQ,KAAK,GAAG;AAChB,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;AAChD,YAAY,SAAS,EAAE,OAAO;AAC9B,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV,QAAQ,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACrE,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;AACnD,QAAQ,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE;;AAE7D;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe;;AAE7D;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AACvD,YAAY,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;AAC5C;AACA;AACA,gBAAgB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;AACpC,aAAa;;;AAGb,YAA+B,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;AAC3D,gBAAgB,CAAC,IAAI;AACrB;AACA,oBAAoB,EAAE,KAAK,CAAC;AAC5B;AACA,wBAAwB,EAAE,GAAG;AAC7B,2BAA2B,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;AAC7E;AACA;AACA,aAAa;;AAEb,YAAY,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAClD,YAAY,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;;AAE9C;AACA;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,gBAAgB;AAChB,oBAAoB,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1C,uBAAuB,CAAC,IAAI,QAAQ;AACpC,uBAAuB,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;AACxE,kBAAkB;AAClB;AACA,oBAAoB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ;AACxC,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ;AACtC;AACA;;AAEA;AACA,YAAY,MAAM,YAAY,GAAG,IAAG,4CAA4C,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtH,YAAY,MAAM,UAAU,GAAG,IAAG,4CAA4C,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAElH;AACA,YAAY,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAClC,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;AAEhC;AACA,YAAY,MAAM,OAAO,GAAG,IAAG,2CAA2C,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU;AAC5G,iBAAiB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,iBAAiB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE;AACtE,gBAAgB,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;;AAEtD,gBAAgB,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC;;AAE9D,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE;AACpE,oBAAoB,mBAAmB,EAAE,IAAI;AAC7C,iBAAiB,CAAC;;AAElB;AACA;AACA,gBAAgB,QAAQ,CAAC,IAAI,CAAC;AAC9B,oBAAoB,MAAM,EAAE;AAC5B,iBAAiB,CAAC;AAClB;AACA;;AAEA;AACA,QAAQ,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AACrD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,6FAA6F,QAAQ,GAAG;;AAE9H;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,KAAK,GAAG;AAChB,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACnD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY;;AAExD,QAAQ,MAAM,QAAQ,GAAG,EAAE;;AAE3B;AACA,QAAQ,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE;AACzD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,gBAAgB,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;AACpD;AACA;AACA,gBAAgB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;AACpC,aAAa;AACb,YAAY,IAAI,gBAAgB,KAAK,EAAE,EAAE;AACzC,gBAAgB,MAAM,KAAK,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,oBAAoB,CAAC;AAC1F;AACA,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;;AAE1D,YAAY,MAAM,MAAM,GAAG,MAAM,IAAG,6CAA6C,CAAC,IAAI,EAAE,IAAI,6CAA6C,CAAC,MAAM;AAChJ,gBAAgB,SAAS;AACzB,gBAAgB,IAAG,4CAA4C,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC;AACzF,gBAAgB,UAAU,CAAC,IAAI;AAC/B,aAAa,EAAE,KAAK,CAAC;AACrB,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;;AAE9C,YAAY,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAChD,gBAAgB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,EAAE;AAC5C,gBAAgB,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC;;AAE9C,gBAAgB,OAAO;AACvB,oBAAoB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACpC,oBAAoB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACpC,oBAAoB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,oBAAoB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;AAC5F;AACA,aAAa,CAAC,CAAC;AACf;AACA,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC5D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,wGAAwG,QAAQ,GAAG;AACpJ;AACA,IAAI,IAAI,GAAG,gBAAgB;;AAE3B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,eAAe,GAAG,EAAE,EAAE;AAC7C,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACnC,YAAY,KAAK,GAAG,CAAC,KAAK,CAAC;AAC3B;;;AAGA;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;AACtC;AACA,YAAY,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;AAC/D;;AAEA;AACA;AACA,QAAQ,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACvD,QAAQ,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrE;AACA,YAAY,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AACxD,gBAAgB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;AACjF;;AAEA;AACA;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS;AACxC,QAAQ,MAAM,iBAAiB,GAAG;AAClC,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B;AACA,QAAQ,IAAI,MAAM;AAClB,QAAQ,IAAI,IAAI,YAAY,mBAAmB,IAAI,2BAA2B,IAAI,SAAS,EAAE;AAC7F;AACA;AACA;AACA,YAAY,MAAM,GAAG,SAAS,CAAC,yBAAyB,CAAC,KAAK,EAAE,iBAAiB,EAAE,eAAe,CAAC;;AAEnG,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,SAAS,CAAC,KAAK,EAAE,iBAAiB,CAAC;AACxD;;AAEA,QAAQ,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,EAAE,GAAG,eAAe,EAAE,CAAC;AAC3F,QAAQ,OAAO,SAAS,CAAC,YAAY,uBAAuB,cAAc,GAAG;AAC7E,YAAY,mBAAmB,EAAE,IAAI;AACrC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;AAC/C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,sHAAsH,2BAA2B,IAAI;AAChL;AACA,IAAI,IAAI,GAAG,cAAc;;AAEzB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,oHAAoH,2BAA2B,IAAI;AAC5K;AACA,IAAI,IAAI,GAAG,kBAAkB;;AAE7B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;AACA;;AAEA,SAAS,MAAM,CAAC,CAAC,EAAE;AACnB,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,mGAAmG,QAAQ,GAAG;;AAE1I;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,eAAe,GAAG,EAAE,EAAE;AAC7C,QAAQ,IAAI,SAAS,GAAG,KAAK;AAC7B,QAAQ,IAAI,WAAW,GAAG,KAAK;;AAE/B;AACA;AACA,QAAQ,IAAI,MAAM;AAClB,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,YAAY,MAAM,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC;AACpC,SAAS,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;AACpF,YAAY,SAAS,GAAG,IAAI;AAC5B,YAAY,MAAM,2BAA2B,KAAK,CAAC;AACnD,SAAS,MAAM;AACf,YAAY,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;AAC/B,gBAAgB,KAAK,GAAG,qBAAqB,KAAK,EAAE;AACpD,aAAa,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACpE,gBAAgB,SAAS,GAAG,IAAI;AAChC,aAAa,MAAM;AACnB,gBAAgB,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC;AAC5G;AACA,YAAY,WAAW,GAAG,IAAI;;AAE9B;AACA,YAAY,MAAM,iDAAiD,CAAC,KAAK,EAAE,GAAG;AAC9E,gBAAgB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAE;AAC3D,oBAAoB,QAAQ,EAAE,KAAK;AACnC,oBAAoB,qBAAqB,EAAE,IAAI;AAC/C,iBAAiB;AACjB,aAAa,CAAC;AACd;;AAEA;AACA,QAAQ,MAAM,kBAAkB,GAAG,eAAe,CAAC,kBAAkB,IAAI,KAAK;;AAE9E;AACA,QAAQ,MAAM,gBAAgB,GAAG;AACjC,cAAc;AACd,cAAc,eAAe,CAAC,gBAAgB,IAAI,IAAI;;AAEtD,QAAQ,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,MAAM;AAC5C,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACnD,YAAY,kBAAkB;AAC9B,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV,QAAQ,MAAM,cAAc,yBAAyB,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC/E,YAAY,GAAG,WAAW;AAC1B,YAAY,GAAG;AACf,SAAS,CAAC,CAAC;;AAEX,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,EAAE;AACpE,YAAY,mBAAmB,EAAE,IAAI;AACrC,SAAS,CAAC;;AAEV,QAAQ,IAAI,aAAa;AACzB,QAAQ,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AACxE,YAAY,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,EAAE;AAC/E,gBAAgB,mBAAmB,EAAE,IAAI;AACzC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;AACjC;;AAEA;AACA,QAAQ,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;AACtE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACjD,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;;AAEnF,YAAY,IAAI,aAAa,EAAE;AAC/B;AACA,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACvE;AACA,YAAY,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AACrC,gBAAgB,cAAc,EAAE;AAChC,sBAAsB;AACtB,wBAAwB,0BAA0B,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AACtE,wBAAwB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;AAClE;AACA,sBAAsB,OAAO,CAAC,CAAC;AAC/B,aAAa,CAAC;AACd;AACA,QAAQ,OAAO,CAAC,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B,2GAA2G,QAAQ,GAAG;AAC1J;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;;AAEtB;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW;AAC1C,YAAY,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG;AAChF,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;AAC/C;AACA,SAAS;;AAET,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;AACxD,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;AAC9C,YAAY,OAAO,CAAC,IAAI,CAAC,4EAA4E,CAAC;AACtG,YAAY,IAAI,CAAC,aAAa,GAAG,CAAC;AAClC;;AAEA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;AACjG,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;AACjD,YAAY,OAAO,CAAC,IAAI,CAAC,kFAAkF,CAAC;AAC5G,YAAY,IAAI,CAAC,gBAAgB,GAAG,CAAC;AACrC;AACA;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,gBAAgB,EAAE;AACzC,QAAQ,mBAAmB,GAAG,qBAAqB;AACnD,QAAQ,WAAW,GAAG,KAAK;AAC3B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC9C,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,YAAY,KAAK,GAAG,wBAAwB,KAAK,EAAE;AACnD;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;AAC9C,YAAY,gBAAgB,GAAG,CAAC,gBAAgB,CAAC;AACjD;;AAEA;AACA,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,GAAG;AAC/C,YAAY,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACpD,SAAS;;AAET;AACA;AACA;AACA,QAAQ,MAAM,WAAW,GAAG,WAAW,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC;;AAExE;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,OAAO,IAAI,KAAK,EAAE;AACrC,YAAY,MAAM,cAAc,GAAG,EAAE;;AAErC,YAAY,KAAK,MAAM,UAAU,IAAI,UAAU,EAAE;AACjD,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;AACvD,oBAAoB,SAAS,EAAE,UAAU;AACzC,oBAAoB,OAAO,EAAE,IAAI;AACjC,oBAAoB,UAAU,EAAE,IAAI;AACpC,iBAAiB;AACjB,gBAAgB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM;;AAEvD,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,cAAc,CAAC,IAAI,CAAC;AACxC,wBAAwB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAClE,wBAAwB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa;AAC9D,qBAAqB;AACrB,iBAAiB,MAAM;AACvB,oBAAoB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;AAC/E;AACA;;AAEA;AACA,YAAY,MAAM,MAAM,GAAG;AAC3B,kBAAkB,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,IAAG,4CAA4C,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxG,kBAAkB,IAAG,4CAA4C,CAAC,OAAO,EAAE,cAAc,CAAC;;AAE1F;AACA,YAAY,MAAM,aAAa,GAAG;AAClC,iBAAiB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACrC,iBAAiB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9C,YAAY,QAAQ,CAAC,IAAI,CAAC;AAC1B,gBAAgB,QAAQ,EAAE,OAAO;AACjC,gBAAgB,MAAM,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,gBAAgB,MAAM,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,aAAa,CAAC;AACd;AACA,QAAQ,OAAO,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,sGAAsG,QAAQ,GAAG;AAChJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,OAAO,yBAAyB,MAAM,CAAC;AAC/C,QAAQ,SAAS,GAAG,KAAK;AACzB,QAAQ,QAAQ,GAAG,KAAK;AACxB,QAAQ,SAAS,2BAA2B,QAAQ,CAAC;AACrD,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACnD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY;;AAErD;AACA;AACA;AACA;;AAEA;AACA,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,gBAAgB;AAC5F,QAAQ,IAAI,OAAO,KAAK,MAAM,EAAE,CAEvB,MAAM,IAAI,OAAO,KAAK,MAAM,EAAE;AACvC,YAAY,MAAM,GAAG,IAAG,6CAA6C,CAAC,YAAY,EAAE,MAAM,EAAE,YAAY,CAAC,cAAc,CAAC;AACxH,SAAS,MAAM,IAAI,OAAO,KAAK,KAAK,EAAE;AACtC,YAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1C,SAAS,MAAM;AACf,YAAY,MAAM,KAAK,CAAC,CAAC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACrE;;AAEA,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5C;;AAEA,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,MAAM,GAAG,IAAG,6CAA6C,CAAC,mBAAmB,EAAE,MAAM,EAAE,SAAS,CAAC;AAC7G;;AAEA,QAAQ,OAAO,MAAM;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B,4GAA4G,QAAQ,GAAG;AAC3J;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,GAAG,IAAI;AACnB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;AAC1D,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;AACrE,QAAQ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,CAAC;;AAE1D;AACA,QAAQ,IAAI,MAAM;AAClB,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,EAAE,eAAe,IAAI,OAAO,CAAC,EAAE;AAC/C,gBAAgB,MAAM,KAAK,CAAC,CAAC,qGAAqG,CAAC,CAAC;AACpI;AACA,YAAY,MAAM,GAAG,OAAO,CAAC,aAAa;;AAE1C,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,YAAY;AACxF;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,yGAAyG,QAAQ,GAAG;;AAErJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE;AACvB,QAAQ,KAAK,GAAG;AAChB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;;AAExE;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;AAC1C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AACpD,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACnD,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE3C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAG,6CAA6C,CAAC,IAAI,EAAE,IAAI,6CAA6C,CAAC,MAAM;AAChJ,gBAAgB,SAAS;AACzB,gBAAgB,IAAG,4CAA4C,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;AACrF,gBAAgB,MAAM,CAAC,IAAI;AAC3B,aAAa,EAAE,KAAK,CAAC;;AAErB,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;;AAE9C,YAAY,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AAChD,gBAAgB,KAAK,yBAAyB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AACpF,gBAAgB,KAAK,yBAAyB,MAAM,CAAC,CAAC,CAAC,CAAC;AACxD,aAAa,CAAC,CAAC;;AAEf,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B,SACA,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC,qHAAqH,QAAQ,GAAG;;AAEzK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,gBAAgB,EAAE;AACzC,QAAQ,mBAAmB,GAAG;AAC9B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,GAAG,4BAA4B,KAAK,EAAE;AACvD;;AAEA;AACA,QAAQ,MAAM,KAAK,GAAG,gBAAgB,CAAC,GAAG;AAC1C,YAAY,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACpD,SAAS;;AAET;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AAClD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;;AAExE,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;AAC1C,YAAY,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;;AAE1D;AACA,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,WAAW,EAAE,GAAG,YAAY,EAAE,CAAC;;AAEhF;AACA,YAAY,MAAM,KAAK,GAAG,IAAG,4CAA4C,CAAC,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC;;AAEhH,YAAY,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AACpD,gBAAgB,KAAK,EAAE,CAAC;AACxB,gBAAgB,KAAK,EAAE,gBAAgB,CAAC,CAAC;AACzC,aAAa,CAAC,CAAC,CAAC;AAChB;AACA,QAAQ,OAAO,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kCAAkC,oHAAoH,QAAQ,GAAG;;AAEvK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE;AACpC,QAAQ,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU;AAC5C,YAAY,KAAK,SAAS;AAC1B,YAAY,KAAK,cAAc;AAC/B,gBAAgB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM;AACvD,YAAY,KAAK,UAAU;AAC3B,YAAY,KAAK,eAAe;AAChC,YAAY,KAAK,WAAW;AAC5B,YAAY,KAAK,eAAe;AAChC,YAAY,KAAK,QAAQ;AACzB,gBAAgB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM;AACxD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM;AACzD,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,gEAAgE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;AACnI;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE;AACxC;;AAEA,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC7B,YAAY,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC;AACrH;AACA,QAAQ,IAAI,MAAM,CAAC,IAAI,EAAE;AACzB,YAAY,OAAO,CAAC,IAAI,CAAC,0FAA0F,CAAC;AACpH;;AAEA,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,GAAG,4BAA4B,KAAK,EAAE;AACvD;;AAEA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;;AAExE,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;AAC1C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AACpD,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACnD,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE3C,YAAY,MAAM,aAAa,GAAG,EAAE;AACpC,YAAY,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;AACvC,gBAAgB,aAAa,CAAC,IAAI,CAAC,IAAG,4CAA4C,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrG;AACA,YAAY,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa;AAC3E,YAAY,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE;AACvD;AACA,QAAQ,OAAO,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AAC9C;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE;AACvC,QAAQ,MAAM,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,IAAI,KAAK;AACnE,QAAQ,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,CAAC;AACzD,QAAQ,MAAM,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,IAAI,KAAK;AACzE,QAAQ,IAAI,eAAe,GAAG,MAAM,CAAC,eAAe,IAAI,IAAI;;AAE5D,QAAQ,MAAM,iBAAiB,GAAG,EAAE,GAAG,MAAM;;AAE7C,QAAQ,IAAI,iBAAiB,KAAK,MAAM,EAAE;AAC1C,YAAY,iBAAiB,CAAC,yBAAyB,CAAC,GAAG,IAAI;AAC/D,YAAY,iBAAiB,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;AAC3D;;AAEA,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,GAAG,4BAA4B,KAAK,EAAE;AACvD;;AAEA;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAoB;AAC5H,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU;;AAE7E,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;;AAExE,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;AAC1C;AACA,YAAY,IAAI,MAAM,GAAG,EAAE;AAC3B,YAAY,IAAI,cAAc,GAAG,CAAC,EAAE;AACpC,gBAAgB,IAAI,eAAe,KAAK,IAAI,EAAE;AAC9C,oBAAoB,eAAe,GAAG,cAAc,GAAG,CAAC;AACxD,iBAAiB,MAAM,IAAI,cAAc,IAAI,eAAe,EAAE;AAC9D,oBAAoB,MAAM,KAAK,CAAC,yDAAyD;AACzF;;AAEA;;AAEA,gBAAgB,MAAM,MAAM,GAAG,aAAa,GAAG,cAAc;AAC7D,gBAAgB,MAAM,MAAM,GAAG,aAAa,GAAG,eAAe;AAC9D,gBAAgB,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM;AAChD,gBAAgB,IAAI,MAAM,GAAG,CAAC;;AAE9B;AACA,gBAAgB,OAAO,IAAI,EAAE;AAC7B,oBAAoB,MAAM,UAAU,GAAG,MAAM,GAAG,MAAM;AACtD,oBAAoB,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;AACnE,oBAAoB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;AAEhE,oBAAoB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC;AACjD,oBAAoB,MAAM,OAAO,GAAG,UAAU,IAAI,GAAG,CAAC,MAAM;AAC5D,oBAAoB,MAAM,CAAC,IAAI,CAAC;AAChC,wBAAwB,MAAM,EAAE;AAChC,4BAA4B,MAAM,CAAC,MAAM;AACzC,4BAA4B,QAAQ,GAAG,CAAC,GAAG,MAAM;AACjD,4BAA4B,OAAO,GAAG,CAAC,GAAG;AAC1C,yBAAyB;AACzB,wBAAwB,cAAc,EAAE,OAAO,CAAC,cAAc;AAC9D,wBAAwB,OAAO;AAC/B,qBAAqB;AACrB,oBAAoB,IAAI,OAAO,EAAE;AACjC,oBAAoB,MAAM,IAAI,IAAI;AAClC;;AAEA,aAAa,MAAM;AACnB,gBAAgB,MAAM,GAAG,CAAC;AAC1B,oBAAoB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9C,oBAAoB,cAAc,EAAE,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,cAAc;AAC9E,oBAAoB,OAAO,EAAE;AAC7B,iBAAiB;AACjB;;AAEA;AACA,YAAY,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACxC,gBAAgB,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;;AAEvF;AACA,gBAAgB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AACvD,oBAAoB,MAAM,EAAE,KAAK,CAAC,cAAc;AAChD,oBAAoB,GAAG;AACvB,iBAAiB,CAAC;;AAElB;AACA,gBAAgB,IAAI,iBAAiB,KAAK,MAAM,EAAE;AAClD;AACA,oBAAoB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC7D;AACA,oBAAoB,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG;AAClF,wBAAwB,uBAAuB,CAAC,KAAK,IAAG,4CAA4C,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;AAChH,qBAAqB;;AAErB,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,CAAC,MAAM,GAAG,uBAAuB,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;AAC5E;;AAEA;AACA,gBAAgB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;AACvE;;AAEA;AACA;AACA,YAAY,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE;AAC7E,gBAAgB,cAAc,EAAE,iBAAiB,EAAE;AACnD,aAAa,CAAC;;AAEd,YAAY,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,QAAQ,EAAE;AAC1D;AACA,QAAQ,OAAO,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AAC9C;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,eAAe,CAAC,KAAK,EAAE,MAAM,EAAE;AACzC,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,GAAG,4BAA4B,KAAK,EAAE;AACvD;AACA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;AACxE,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;AAC1C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;;AAEpD;AACA;AACA;AACA,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC;AAC7E,YAAY,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;;AAE/F,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,uBAAuB,OAAO,GAAG,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACtH,YAAY,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;AACnC;AACA,QAAQ,OAAO,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ;AAC9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,qGAAqG,QAAQ,GAAG;;AAEzI;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,eAAe,GAAG,EAAE,EAAE;;AAE9C,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;AAC/C,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;;AAErE,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,YAAY,EAAE;AAC1C,YAAY,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI;AAC1C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,eAAe,EAAE,CAAC;AAC3F,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,uBAAuB,MAAM,GAAG;AACvF,gBAAgB,mBAAmB,EAAE,IAAI;AACzC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;AACtD,YAAY,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAClC;;AAEA,QAAQ,OAAO,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2BAA2B,yGAAyG,QAAQ,GAAG;;AAErJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,GAAG;AAChB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;AACrE,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,CAAC;;AAEzD;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE;AAC3C,YAAY,MAAM,MAAM,GAAG,MAAM,IAAG,6CAA6C,CAAC,IAAI,EAAE,IAAI,6CAA6C,CAAC,MAAM;AAChJ,gBAAgB,SAAS;AACzB,gBAAgB,IAAG,4CAA4C,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC;AACpF,gBAAgB,KAAK,CAAC,IAAI;AAC1B,aAAa,EAAE,KAAK,CAAC;;AAErB,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;;AAE9C,YAAY,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AAChD,gBAAgB,KAAK,yBAAyB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AACpF,gBAAgB,KAAK,yBAAyB,MAAM,CAAC,CAAC,CAAC,CAAC;AACxD,aAAa,CAAC,CAAC;AACf,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B;;AAEA,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC7D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,uGAAuG,QAAQ,GAAG;AACjJ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;;AAEtB,QAAQ,IAAI,CAAC,gBAAgB,GAAG;AAChC;AACA,YAAY,QAAQ,EAAE,oCAAoC;AAC1D,YAAY,QAAQ,EAAE,oCAAoC;AAC1D,YAAY,QAAQ,EAAE;AACtB;AACA;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,SAAS,GAAG,GAAG;AACvB,QAAQ,cAAc,GAAG,GAAG;AAC5B,QAAQ,2BAA2B,GAAG,GAAG;AACzC,QAAQ,iBAAiB,GAAG,IAAI;AAChC,QAAQ,YAAY,GAAG,IAAI;AAC3B,QAAQ,OAAO,GAAG,IAAI;AACtB,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;;AAE/C,QAAQ,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9C,YAAY,MAAM,KAAK,CAAC,wEAAwE,CAAC;AACjG;;AAEA,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;AAC1D,QAAQ,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;;AAEvE,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;;AAE3D,QAAQ,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;AACxE,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;AAClD,YAAY,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACzC,gBAAgB,MAAM,KAAK,CAAC,CAAC,sCAAsC,EAAE,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAChH;;AAEA,YAAY,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC;AACzC,YAAY,IAAI,OAAO,IAAI,MAAM,EAAE;AACnC,gBAAgB,MAAM,KAAK,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAClF;AACA;AACA;AACA,YAAY,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,YAAY;AACjD;;AAEA,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAE/C,QAAQ,IAAI,EAAE,GAAG,IAAI;AACrB,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;AAC9B,YAAY,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAC/C,SAAS,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;AACnD,YAAY,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;AAC9E,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;AAC5D,oBAAoB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AAClG,oBAAoB,OAAO,GAAG,IAAI;AAClC,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD;AACA,QAAQ,MAAM,UAAU,GAAG,EAAE;AAC7B,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB;AACA,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACjD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxD,gBAAgB,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC;AAC1C,gBAAgB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;AACtC,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AACzD,oBAAoB,IAAI,CAAC,QAAQ,EAAE;AACnC;AACA,gBAAgB,MAAM,IAAI,GAAG,MAAM,4CAA4C,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACxJ,gBAAgB,UAAU,CAAC,IAAI,CAAC;AAChC,oBAAoB,KAAK,EAAE,IAAI;AAC/B,oBAAoB,KAAK,EAAE,IAAI;AAC/B,oBAAoB;AACpB,iBAAiB,CAAC;AAClB;AACA,SAAS,MAAM,IAAI,OAAO,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU,EAAE;AACrE,YAAY,MAAM,SAAS,GAAG,EAAE;AAChC,gBAAgB,MAAM;AACtB,gBAAgB,SAAS;AACzB,gBAAgB,cAAc;AAC9B,gBAAgB,2BAA2B;AAC3C,gBAAgB,iBAAiB;AACjC,gBAAgB,YAAY,IAAI,UAAU;AAC1C,aAAa,CAAC,CAAC,CAAC;;AAEhB,YAAY,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY;;AAEvD,YAAY,KAAK,MAAM,OAAO,IAAI,SAAS,CAAC,aAAa,EAAE;AAC3D,gBAAgB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;AAChF,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnE,oBAAoB,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,EAAE,EAAE;AAC7D,wBAAwB,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG;AACzC;AACA;;AAEA,gBAAgB,MAAM,IAAI,GAAG,IAAI,4CAA4C,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;;AAE9I,gBAAgB,UAAU,CAAC,IAAI,CAAC;AAChC,oBAAoB,KAAK,EAAE,OAAO,CAAC,KAAK;AACxC,oBAAoB,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;AACrD,oBAAoB,IAAI,EAAE;AAC1B,iBAAiB;AACjB;;AAEA,SAAS,MAAM,IAAI,OAAO,KAAK,UAAU,EAAE;AAC3C,YAAY,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;;AAEtF,YAAY,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACxC,gBAAgB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;AAChF,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnE,oBAAoB,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AACxD,wBAAwB,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG;AACzC;AACA;;AAEA,gBAAgB,MAAM,IAAI,GAAG,IAAI,4CAA4C,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;AAE/I,gBAAgB,UAAU,CAAC,IAAI,CAAC;AAChC,oBAAoB,KAAK,EAAE,IAAI;AAC/B,oBAAoB,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;AAC1C,oBAAoB,IAAI,EAAE;AAC1B,iBAAiB,CAAC;AAClB;AACA,SAAS,MAAM;AACf,YAAY,MAAM,KAAK,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;AAC5D;;AAEA,QAAQ,OAAO,UAAU;AACzB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,uGAAuG,yBAAyB,GAAG;AAClK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AACtC,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;;AAE/C,QAAQ,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9C,YAAY,MAAM,KAAK,CAAC,wEAAwE,CAAC;AACjG;;AAEA,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D;AACA,QAAQ,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC;AACxD,QAAQ,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK;AACtD,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,EAAE;AACtC,YAAY,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1C,YAAY,OAAO,MAAM;AACzB,SAAS,CAAC;;AAEV,QAAQ,OAAO,MAAM;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC,qHAAqH,QAAQ,GAAG;AACzK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,gBAAgB,EAAE;AAC1C,QAAQ,mBAAmB,GAAG;AAC9B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;AAC/C,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D;AACA,QAAQ,MAAM,KAAK,GAAG,gBAAgB,CAAC,GAAG;AAC1C,YAAY,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACpD,SAAS;;AAET;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AAClD,YAAY,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,GAAG,YAAY,GAAG,IAAI;AACpF,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;;AAErE;AACA,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,WAAW,EAAE,YAAY,EAAE,CAAC;;AAEzE,QAAQ,MAAM,iBAAiB;AAC/B,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK;AAC7C,kBAAkB,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,kBAAkB,KAAK,IAAI,IAAG,4CAA4C,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC;;AAE/F;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,gBAAgB,EAAE;AACrD;AACA,YAAY,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;;AAElD,YAAY,MAAM,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;AACrD,gBAAgB,KAAK,EAAE,CAAC;AACxB,gBAAgB,KAAK,EAAE,gBAAgB,CAAC,CAAC;AACzC,aAAa,CAAC,CAAC;AACf,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;AACrD,YAAY,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACjC;;AAEA,QAAQ,OAAO,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,qGAAqG,QAAQ,GAAG;;AAE7I;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;AACxB,QAAQ,SAAS,GAAG,GAAG;AACvB,QAAQ,UAAU,GAAG,KAAK;AAC1B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;;AAE/C,QAAQ,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9C,YAAY,MAAM,KAAK,CAAC,sEAAsE,CAAC;AAC/F;AACA,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D,QAAQ,MAAM,UAAU,GAAG,UAAU,GAAG,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;;AAE3F,QAAQ,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;AACjF,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC;;AAErE;AACA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,6BAA6B,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC;;AAErH;AACA;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;;AAEnD;AACA;AACA,QAAQ,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK;AAC1C,YAAY,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;AACzC,gBAAgB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACtC,gBAAgB,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjD,gBAAgB,GAAG,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;AACvD,aAAa,CAAC;AACdiHAAiH,QAAQ,GAAG;;AAEjK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE,gBAAgB,EAAE;AAC1C,QAAQ,SAAS,GAAG,GAAG;AACvB,QAAQ,KAAK,GAAG,IAAI;AACpB,QAAQ,UAAU,GAAG,KAAK;AAC1B,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;AAC/C,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE;AAC7D,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;;AAEjE;AACA;AACA;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxD,YAAY,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC;AAC3C,YAAY,MAAM,SAAS,GAAG,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/E,YAAY,MAAM,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;;AAE3E;AACA,YAAY,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,WAAW,EAAE,YAAY,EAAE,CAAC;;AAE7E,YAAY,IAAI,MAAM;AACtB,YAAY,IAAI,wCAAwC,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5E;AACA,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,sCAAsC;AACvF,oBAAoB,MAAM;AAC1B,oBAAoB,WAAW,CAAC,SAAS;AACzC,oBAAoB;AACpB;AACA,wBAAwB,aAAa,EAAE,SAAS;AAChD,wBAAwB,cAAc,EAAE,SAAS;AACjD,wBAAwB,YAAY,EAAE,SAAS;AAC/C,qBAAqB;AACrB,iBAAiB,CAAC,CAAC,CAAC;AACpB,gBAAgB,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;AAC1D,oBAAoB,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9C,oBAAoB,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9C,oBAAoB,GAAG,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;AAC3D,iBAAiB,CAAC;AAClB,aAAa,MAAM;AACnB;AACA,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,6BAA6B,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACrI,gBAAgB,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;AAC1D,oBAAoB,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9C,oBAAoB,KAAK,EAAE,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjE,oBAAoB,GAAG,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;AAC3D,iBAAiB,CAAC;AAClB;AACA,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;;AAEpD,YAAY,IAAI,KAAK,KAAK,IAAI,EAAE;AAChC,gBAAgB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;AAC/C;AACA,YAAY,QAAQ,CAAC,IAAI,CAAC,MAAM;AAChC;;AAEA,QAAQ,OAAO,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iCAAiC,mHAAmH,QAAQ,GAAG;;AAErK;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,eAAe,GAAG,EAAE,EAAE;;AAEvD;;AAEA;AACA,QAAQ,MAAM,aAAa,GAAG,CAAC,MAAM,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC7D,QAAQ,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;;AAEpE;AACA,QAAQ,MAAM,WAAW,GAAG,CAAC,sBAAsB,EAAE,QAAQ,CAAC,uBAAuB,CAAC;AACtF,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;AAC9D,YAAY,kBAAkB,EAAE,KAAK;AACrC,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC,CAAC,SAAS;;AAEpB;AACA,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AACjD,YAAY,MAAM,EAAE,YAAY;AAChC;AACA,YAAY,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB;AACzE,YAAY,iBAAiB;AAC7B,YAAY,GAAG,eAAe;AAC9B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,uBAAuB,MAAM,EAAE,CAAC,CAAC,CAAC;;AAErF;AACA,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC;AAClE,QAAQ,IAAI,MAAM,GAAG,IAAI;AACzB,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AACxC,YAAY,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACpC;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC;AAC3B;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,uGAAuG,QAAQ,GAAG;AAC3I,IAAI,kBAAkB,GAAG;;AAEzB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;;AAEtB;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI;AAC9C;;;AAGA;AACA,IAAI,MAAM,KAAK,CAAC,WAAW,EAAE;AAC7B,QAAQ,kBAAkB,GAAG,IAAI;AACjC,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,OAAO,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,EAAE,kBAAkB,EAAE,CAAC;AACtF,SAAS,MAAM;AACf,YAAY,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC;AAC3D;AACA;;AAEA,IAAI,MAAM,sBAAsB,CAAC,WAAW,EAAE;;AAE9C;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;AACnD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAErD;AACA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa;AAC7D,QAAQ,OAAO,IAAI,4CAA4C,CAAC,QAAQ;AACxE,YAAY,QAAQ,CAAC,IAAI;AACzB,YAAY,aAAa;AACzB;AACA;;AAEA,IAAI,MAAM,yBAAyB,CAAC,WAAW,EAAE,EAAE,kBAAkB,EAAE,EAAE;;AAEzE;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC3B,YAAY,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC;AAC/E,YAAY,IAAI,CAAC,OAAO,GAAG,MAAM,uCAAuC,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AAC9I;;AAEA;AACA,QAAQ,IAAI,OAAO,kBAAkB,KAAK,QAAQ,IAAI,kBAAkB,YAAY,GAAG,EAAE;AACzF;AACA,YAAY,kBAAkB,GAAG,IAAI,YAAY;AACjD,gBAAgB,MAAM,CAAC,MAAM,KAAK,CAAC,kBAAkB,CAAC,EAAE,WAAW;AACnE,aAAa;AACb;;AAEA,QAAQ,IAAI,kBAAkB,YAAY,YAAY,EAAE;AACxD,YAAY,kBAAkB,GAAG,IAAI,6CAA6C,CAAC,MAAM;AACzF,gBAAgB,SAAS;AACzB,gBAAgB,kBAAkB;AAClC,gBAAgB,CAAC,CAAC,EAAE,kBAAkB,CAAC,MAAM;AAC7C;AACA,SAAS,MAAM,IAAI,EAAE,kBAAkB,YAAY,6CAA6C,CAAC,MAAM,CAAC,EAAE;AAC1G,YAAY,MAAM,IAAI,KAAK,CAAC,4EAA4E;AACxG;;AAEA;AACA,QAAQ,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;AAC1D,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,UAAU,EAAE,IAAI;AAC5B,SAAS,CAAC;;AAEV;AACA;AACA,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;;AAEvH,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa;AACnF,QAAQ,OAAO,IAAI,4CAA4C,CAAC,QAAQ;AACxE,YAAY,QAAQ,CAAC,IAAI;AACzB,YAAY,aAAa;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,kGAAkG,QAAQ,GAAG;AACvI;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;;AAExB,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;AAC1D,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;AAC3D,QAAQ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAEhD;AACA,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,cAAc,EAAE;AACpD,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC;AACtF,YAAY,QAAQ,CAAC,IAAI,CAAC,4CAA4C,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACnG;;AAEA,QAAQ,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,qGAAqG,QAAQ,GAAG;AAC7I;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,CAAC;AACtB;;AAEA;AACA,IAAI,MAAM,KAAK,CAAC,MAAM,EAAE;;AAExB,QAAQ,MAAM,cAAc,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC;;AAE1D,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;AAC3D,QAAQ,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;;AAE5D,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxD,YAAY,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC;AAC5C,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AACxD,YAAY,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI;;AAElE;AACA,YAAY,MAAM,UAAU,GAAG,CAAC,MAAM,IAAG,6CAA6C,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE;AACxI,gBAAgB,IAAI,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;AAC7C,gBAAgB,IAAI,EAAE,UAAU;AAChC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC;;AAE3C,YAAY,MAAM,MAAM,yBAAyB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AACzE,YAAY,MAAM,MAAM,yBAAyB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AACzE,YAAY,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7G,YAAY,MAAM,KAAK,GAAG,4CAA4C,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC;AACrG,YAAY,QAAQ,CAAC,IAAI,CAAC;AAC1B,gBAAgB,eAAe,EAAE,UAAU;AAC3C,gBAAgB,KAAK;AACrB,aAAa,CAAC;AACd;;AAEA,QAAQ,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC3D;AACA;;AAEA,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;AACtC,IAAI,qBAAqB,EAAE;AAC3B,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,0BAA0B;AAC9C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,kCAAkC;AAC3F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,wDAAwD;AAC7E,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,sBAAsB,EAAE;AAC5B,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,2BAA2B;AAC/C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,+BAA+B;AACxF,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,6CAA6C;AAClE,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,oBAAoB,EAAE;AAC1B,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,yBAAyB;AAC7C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,6BAA6B;AACtF,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,8CAA8C;AACnE,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;;AAEL,IAAI,WAAW,EAAE;AACjB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,gBAAgB;AACpC,QAAQ,OAAO,EAAE,uCAAuC,CAAC,oBAAoB;AAC7E,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,0BAA0B;AAC/C,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,eAAe,EAAE;AACrB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,qBAAqB;AACzC,QAAQ,OAAO,EAAE,uCAAuC,CAAC,qBAAqB;AAC9E,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,2BAA2B;AAChD,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,aAAa,EAAE;AACnB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,mBAAmB;AACvC,QAAQ,OAAO,EAAE,uCAAuC,CAAC,qBAAqB;AAC9E,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,iBAAiB;AACtC,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,sBAAsB,EAAE;AAC5B,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,2BAA2B;AAC/C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,qBAAqB;AAC9E,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,sBAAsB;AAC3C,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,iBAAiB,EAAE;AACvB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,sBAAsB;AAC1C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,oBAAoB;AAC7E,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,aAAa;AAClC,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,0BAA0B,EAAE;AAChC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,8BAA8B;AAClD,QAAQ,OAAO,EAAE,uCAAuC,CAAC,kCAAkC;AAC3F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,qCAAqC;AAC1D,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,sBAAsB,EAAE;AAC5B,QAAQ,UAAU,EAAE,2BAA2B;AAC/C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,+BAA+B;AACxF,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,gCAAgC;AACrD,SAAS;AACT,QAAQ,MAAM,EAAE,OAAO;AACvB,KAAK;AACL,IAAI,gCAAgC,EAAE;AACtC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,mCAAmC;AACvD,QAAQ,OAAO,EAAE,uCAAuC,CAAC,SAAS;AAClE,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,2BAA2B;AAChD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,8BAA8B,EAAE;AACpC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,kCAAkC;AACtD,QAAQ,OAAO,EAAE,CAAC,uCAAuC,CAAC,yBAAyB,EAAE,uCAAuC,CAAC,eAAe,CAAC;AAC7I,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,wBAAwB;AAC7C,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,eAAe,EAAE;AACrB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,mBAAmB;AACvC,QAAQ,OAAO,EAAE,CAAC,uCAAuC,CAAC,0BAA0B,EAAE,uCAAuC,CAAC,6BAA6B,CAAC;AAC5J,QAAQ,WAAW,EAAE,CAAC,4DAA4D,CAAC,aAAa,mCAAmC,IAAI,CAAC;AACxI,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,qBAAqB;AAC1C,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,eAAe,EAAE;AACrB,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,mBAAmB;AACvC,QAAQ,OAAO,EAAE,uCAAuC,CAAC,sBAAsB;AAC/E,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,kCAAkC;AACvD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;;AAEL,IAAI,sBAAsB,EAAE;AAC5B;AACA,QAAQ,UAAU,EAAE,2BAA2B;AAC/C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,+BAA+B;AACxF,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,6BAA6B;AAClD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;;AAEL,IAAI,oBAAoB,EAAE;AAC1B;AACA,QAAQ,UAAU,EAAE,yBAAyB;AAC7C,QAAQ,OAAO,EAAE,CAAC,uCAAuC,CAAC,6BAA6B,EAAE,uCAAuC,CAAC,gCAAgC,EAAE,uCAAuC,CAAC,iCAAiC,CAAC;AAC7O,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,gCAAgC;AACrD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,oBAAoB,EAAE;AAC1B;AACA,QAAQ,UAAU,EAAE,yBAAyB;AAC7C,QAAQ,OAAO,EAAE,CAAC,uCAAuC,CAAC,6BAA6B,EAAE,uCAAuC,CAAC,gCAAgC,EAAE,uCAAuC,CAAC,iCAAiC,CAAC;AAC7O,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB,YAAY,OAAO,EAAE,eAAe;AACpC,SAAS;AACT,QAAQ,MAAM,EAAE,OAAO;AACvB,KAAK;;AAEL,IAAI,gCAAgC,EAAE;AACtC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,mCAAmC;AACvD,QAAQ,OAAO,EAAE,uCAAuC,CAAC,SAAS;AAClE,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,8BAA8B;AACnD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;;AAEL,IAAI,kBAAkB,EAAE;AACxB;AACA,QAAQ,UAAU,EAAE,uBAAuB;AAC3C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,2BAA2B;AACpF,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,uBAAuB;AAC5C,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,4BAA4B,EAAE;AAClC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,+BAA+B;AACnD,QAAQ,OAAO,EAAE,uCAAuC,CAAC,mCAAmC;AAC5F,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,4BAA4B;AACjD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,6BAA6B,EAAE;AACnC,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,iCAAiC;AACrD,QAAQ,OAAO,EAAE,uCAAuC,CAAC,qCAAqC;AAC9F,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,oCAAoC;AACzD,SAAS;AACT,QAAQ,MAAM,EAAE,YAAY;AAC5B,KAAK;AACL,IAAI,gBAAgB,EAAE;AACtB;AACA,QAAQ,UAAU,EAAE,oBAAoB;AACxC,QAAQ,OAAO,EAAE,uCAAuC,CAAC,wBAAwB;AACjF,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,mCAAmC;AACxD,SAAS;AACT,QAAQ,MAAM,EAAE,OAAO;AACvB,KAAK;AACL,IAAI,kBAAkB,EAAE;AACxB;AACA,QAAQ,UAAU,EAAE,uBAAuB;AAC3C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,2BAA2B;AACpF,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,kBAAkB;AACvC,SAAS;AACT,QAAQ,MAAM,EAAE,OAAO;AACvB,KAAK;;AAEL;AACA,IAAI,oBAAoB,EAAE;AAC1B,QAAQ,WAAW,EAAE,2CAA2C,CAAC,aAAa;AAC9E,QAAQ,UAAU,EAAE,yBAAyB;AAC7C,QAAQ,OAAO,EAAE,uCAAuC,CAAC,SAAS;AAClE,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,yBAAyB;AAC9C,SAAS;AACT,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK;AACL,IAAI,0BAA0B,EAAE;AAChC,QAAQ,WAAW,EAAE,4DAA4D,CAAC,aAAa;AAC/F,QAAQ,UAAU,EAAE,8BAA8B;AAClD,QAAQ,OAAO,EAAE,CAAC,uCAAuC,CAAC,kCAAkC,EAAE,uCAAuC,CAAC,SAAS,CAAC;AAChJ,QAAQ,SAAS,EAAE;AACnB;AACA;AACA,YAAY,OAAO,EAAE,mCAAmC;AACxD,SAAS;AACT,QAAQ,MAAM,EAAE,OAAO;AACvB,KAAK;AACL,CAAC;;;AAGD;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;AACnC,IAAI,oBAAoB,EAAE,qBAAqB;AAC/C,IAAI,KAAK,EAAE,sBAAsB;AACjC;AACA,IAAI,KAAK,EAAE,8BAA8B;AACzC,IAAI,gBAAgB,EAAE,eAAe;;AAErC;AACA,IAAI,YAAY,EAAE,oBAAoB;AACtC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,IAAI,IAAI;AACR,IAAI,KAAK,GAAG,IAAI;AAChB,IAAI;AACJ,QAAQ,iBAAiB,GAAG,IAAI;AAChC,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,gBAAgB,GAAG,KAAK;AAChC,QAAQ,QAAQ,GAAG,MAAM;AACzB,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,KAAK,GAAG,IAAI;AACpB,QAAQ,SAAS,GAAG,MAAM;AAC1B,QAAQ,wBAAwB,GAAG,IAAI;AACvC,QAAQ,eAAe,GAAG,IAAI;AAC9B,QAAQ,eAAe,GAAG,EAAE;AAC5B,KAAK,GAAG;AACR,EAAE;AACF;;AAEA;AACA;AACA,IAAI,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI;;AAErC;AACA,IAAI,MAAM,YAAY,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,IAAI,IAAI,CAAC,YAAY,EAAE;AACvB,QAAQ,MAAM,KAAK,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACrG;;AAEA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC;AACrC,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,0CAA0C,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAC3E;;AAEA,IAAI,MAAM,iBAAiB,GAAG;AAC9B,QAAQ,iBAAiB;AACzB,QAAQ,MAAM;AACd,QAAQ,SAAS;AACjB,QAAQ,gBAAgB;AACxB,QAAQ,QAAQ;AAChB,QAAQ,MAAM;AACd,QAAQ,KAAK;AACb,QAAQ,SAAS;AACjB,QAAQ,wBAAwB;AAChC,QAAQ,eAAe;AACvB,QAAQ,eAAe;AACvB;;AAEA,IAAI,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC;AAC5B,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,SAAS,CAAC;AAC7C,QAAQ,CAAC,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC;AACrC,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,SAAS,CAAC;AAC7C,KAAK,CAAC;;AAEN;AACA,IAAI,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,CAAC;AACtE,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI;;AAEvB,IAAI,IAAG,2CAA2C,CAAC,gBAAgB,EAAE,iBAAiB,EAAE;AACxF,QAAQ,QAAQ,EAAE,OAAO;AACzB,QAAQ,MAAM,EAAE,IAAI;AACpB,QAAQ,OAAO,EAAE,KAAK;AACtB,KAAK,CAAC;;AAEN,IAAI,MAAM,aAAa,GAAG,YAAY,CAAC,QAAQ;AAC/C,IAAI,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE;;AAE5D,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;;AAEtC;AACA,IAAI,MAAM,QAAQ,GAAG,EAAE;AACvB,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,EAAE;AACjD,QAAQ,IAAI,CAAC,GAAG,EAAE;;AAElB;AACA,QAAQ,IAAI,OAAO;AACnB,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAChC,YAAY,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,OAAO,EAAE,MAAM,KAAK;AAC7D,gBAAgB,IAAI,CAAC;AACrB,gBAAgB,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;AACrC,oBAAoB,IAAI,CAAC,KAAK,IAAI,EAAE;AACpC;AACA;AACA,wBAAwB,OAAO,CAAC,IAAI,CAAC;AACrC,wBAAwB;AACxB;AACA,oBAAoB,IAAI;AACxB,wBAAwB,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;AAClF,wBAAwB;AACxB,qBAAqB,CAAC,OAAO,GAAG,EAAE;AAClC,wBAAwB,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,wBAAwB,CAAC,EAAE;AAC7E;AACA;AACA,4BAA4B,CAAC,GAAG,GAAG;AACnC,yBAAyB,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,uBAAuB,CAAC,EAAE;AACnF,4BAA4B,CAAC,GAAG,GAAG;AACnC,yBAAyB,MAAM;AAC/B,4BAA4B,MAAM,CAAC,GAAG,CAAC;AACvC,4BAA4B;AAC5B;;AAEA;AACA;AACA,gBAAgB,MAAM,CAAC,CAAC,CAAC;AACzB,aAAa;AACb,SAAS,MAAM;AACf,YAAY,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,EAAE,iBAAiB,CAAC;AACnE;;AAEA,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO;AAC9B,QAAQ,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC9B;;AAEA;AACA,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;;AAE/B;AACA,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC1D,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,OAAO;AACpC;;AAEA,IAAI,OAAO,MAAM;AACjB;;;AAGA,OAAO,CAAC;;AAER,MAAM,qBAAqB;AAC3B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB,CAAC;AAC/F,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB,CAAC;AACnF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB,CAAC;AACnF,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB,CAAC;AACjF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB,CAAC;AACnF,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB,CAAC;AACjF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB,CAAC;AACjF,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe;AAC5E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,8CAA8C,GAAG,mBAAmB,2BAA2B,wBAAwB,CAAC;AACjJ,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,wBAAwB,qBAAqB,CAAC;AACxI,qBAAqB,IAAI,0CAA0C,GAAG,mBAAmB,uBAAuB,oBAAoB,CAAC;AACrI,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,0BAA0B,uBAAuB,CAAC;AAC9I,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,mCAAmC,gCAAgC,CAAC;AACzK,qBAAqB,IAAI,+CAA+C,GAAG,mBAAmB,2BAA2B,iDAAiD,CAAC;AAC3K,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,2CAA2C,wCAAwC,CAAC;;AAEjM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa,CAAC,6BAA6B,EAAE,OAAO,EAAE;;AAErE,IAAI,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;AACnC,QAAQ,IAAG,0CAA0C,CAAC,YAAY,EAAE,6BAA6B,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,CAAC;AACnI,QAAQ,IAAG,0CAA0C,CAAC,YAAY,EAAE,6BAA6B,EAAE,uBAAuB,EAAE,IAAI,EAAE,OAAO,CAAC;AAC1I,KAAK;;AAEL;AACA,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;AACjC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;AACvC;AACA,IAAI,OAAO,IAAI;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE;AACjC,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,IAAI,IAAI,GAAG,CAAC;AAChB,IAAI,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC9C,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;AAClC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;AAChC,YAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACtD;AACA,QAAQ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,YAAY,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AAClC;AACA,QAAQ,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM;AAC7C;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrC;AACA,IAAI,OAAO,MAAM;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,OAAO,EAAE,MAAM,GAAG,IAAI,EAAE;;AAE/C,IAAI,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;;AAE9D;AACA,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,qBAAqB,EAAE;AAC1D,YAAY,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;AAChD;;AAEA,QAAQ,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;;AAEtC,KAAK,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;AAC7C,QAAQ,MAAM,OAAO,GAAG,IAAG,2CAA2C,CAAC,YAAY,EAAE,OAAO,CAAC,MAAM,CAAC;AACpG;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,MAAM,GAAG,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;;AAElE,KAAK,MAAM;AACX,QAAQ,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,OAAO;AACrD,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,IAAI,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,MAAM,EAAE;AACxC,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI;AAC5B,IAAI,QAAQ,IAAI,CAAC,MAAM;AACvB,QAAQ,KAAK,CAAC;AACd,YAAY,OAAO,MAAM,CAAC,MAAM,EAAE;AAClC,QAAQ,KAAK,CAAC;AACd,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/B,gBAAgB,MAAM,IAAI,KAAK,CAAC,wGAAwG,CAAC;AACzI;AACA,YAAY,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACrC,QAAQ;AACR,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,4CAA4C,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,IAAI,EAAE;AACrC;AACA;AACA,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG;AACnC,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG;AAC5B,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG;AAC5B,SAAS,OAAO,CAAC,KAAK,EAAE,GAAG;AAC3B,SAAS,OAAO,CAAC,OAAO,EAAE,GAAG;AAC7B,SAAS,OAAO,CAAC,QAAQ,EAAE,KAAK;AAChC,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI;AAC9B,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI;AAC9B,SAAS,OAAO,CAAC,QAAQ,EAAE,KAAK;AAChC,SAAS,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAA2B,CAAC,IAAI,EAAE;AAC3C,IAAI,OAAO,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,EAAE,EAAE;AAC7B,IAAI;AACJ,QAAQ,CAAC,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM;AACrC,YAAY,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM;AACxC,YAAY,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO;AAC1C,YAAY,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO;AAC1C,YAAY,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO;AAC1C,YAAY,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO;AAC1C,YAAY,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM;AACxC,YAAY,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,aAAa,EAAE,YAAY,EAAE;AACpD,IAAI,MAAM,KAAK,GAAG,EAAE;AACpB,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;AAC3B,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACzB,QAAQ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,MAAM,YAAY,EAAE;AAC1E,YAAY,EAAE,CAAC;AACf,YAAY;AACZ;;AAEA,QAAQ,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,MAAM,YAAY,EAAE;AACjG,YAAY,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,YAAY,EAAE;AAClE,gBAAgB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AACjD;AACA;AACA;;AAEA,IAAI,OAAO,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAChC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE;AACnC;;AAEA,MAAM,iBAAiB,GAAG,oEAAoE;AAC9F,MAAM,sBAAsB,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AAC5E,MAAM,iBAAiB,GAAG,gDAAgD;;AAE1E;AACA,MAAM,qBAAqB,GAAG,IAAI,GAAG,CAAC;AACtC;AACA;AACA,IAAI,CAAC,8BAA8B,EAAE,uDAAuD,CAAC;;AAE7F;AACA;AACA,IAAI,CAAC,CAAC,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC3E,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACrC,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;AAC3B,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,KAAK;AACtD,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK;AAC5C,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK;AAC5C,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,KAAK;AAC9C,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,IAAI;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,8CAA8C,CAAC,QAAQ,CAAC;AACrF;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;;AAE5B;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;;AAEvB;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE;;AAEtC,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS;AACrC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,SAAS;;AAE3C;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;AACvC,QAAQ,QAAQ,MAAM,CAAC,IAAI;AAC3B,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC;AACrD,YAAY,KAAK,SAAS;AAC1B;AACA,gBAAgB,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AACnD,YAAY,KAAK,KAAK;AACtB,gBAAgB,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;;AAEtC,YAAY;AACZ;AACA;AACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,EAAE;AAClC,oBAAoB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACrD;AACA;AACA,wBAAwB,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AAC3D,qBAAqB,MAAM,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,yBAAyB,IAAI,MAAM,CAAC,SAAS,EAAE;AACzH,wBAAwB,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC;AAC7D,qBAAqB,MAAM;AAC3B;AACA,wBAAwB,OAAO,IAAI,oBAAoB,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AACxE;AACA;AACA,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,QAAQ,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACpC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B;AACA,YAAY,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC;AAC5E;AACA,QAAQ,OAAO,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,MAAM,KAAK,CAAC,2CAA2C;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,MAAM,EAAE;AAClC,QAAQ,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,GAAG,EAAE;AAC/B,QAAQ,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,cAAc,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;;AAEtD;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;;AAEpE;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;;AAEzC;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,wBAAwB,GAAG,MAAM,CAAC,wBAAwB,IAAI,GAAG;;AAE9E;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACvD,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;AACvD,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,MAAM,YAAY,GAAG,EAAE;AAC/B,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,MAAM,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;AACpC,YAAY,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,wBAAwB,EAAE;AAC9D,gBAAgB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACjD,gBAAgB;AAChB;;AAEA,YAAY,IAAI,SAAS,GAAG,KAAK;AACjC,YAAY,IAAI,KAAK,GAAG,CAAC;AACzB,YAAY,MAAM,SAAS,GAAG,EAAE;;AAEhC,YAAY,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACzC,gBAAgB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM;AACtC,gBAAgB,IAAI,gBAAgB,GAAG,IAAI;AAC3C,gBAAgB,OAAO,KAAK,GAAG,GAAG,EAAE;AACpC,oBAAoB,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;;AAEjE,oBAAoB,IAAI,KAAK,GAAG,CAAC,EAAE;AACnC,wBAAwB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,yBAAyB,GAAG,MAAM;AAC/E;AACA,oBAAoB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACxD,wBAAwB,gBAAgB,GAAG,MAAM;AACjD,wBAAwB;AACxB;;AAEA,oBAAoB,EAAE,GAAG;AACzB;AACA,gBAAgB,IAAI,gBAAgB,KAAK,IAAI,EAAE;AAC/C,oBAAoB,SAAS,GAAG,IAAI;AACpC,oBAAoB;AACpB;AACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAChD,gBAAgB,KAAK,GAAG,GAAG;AAC3B;AACA,YAAY,IAAI,SAAS,EAAE;AAC3B,gBAAgB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACjD,aAAa,MAAM;AACnB,gBAAgB,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AAC/C;AACA;;AAEA,QAAQ,OAAO,YAAY;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AACpC,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM;AAC7C,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC;AAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;AAC5C,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D;;AAEA,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM;AACzC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;;AAElD,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtE,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;;AAE7B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnE,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;;AAE7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;AAClE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;;AAEtD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAE5F,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC7C,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS;;AAEvD,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,sDAAsD,CAAC,QAAQ,EAAE;AACzF,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEpC;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B;;AAEA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,OAAO,EAAE;AAC3B,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AACnC,QAAQ,MAAM,KAAK,GAAG,CAAC;AACvB,QAAQ,IAAI,QAAQ,GAAG,CAAC;AACxB,QAAQ,OAAO,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,aAAa,GAAG,KAAK;AAGrC,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACzD,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;AACvE,YAAY,KAAK,MAAM,KAAK,IAAI,cAAc,EAAE;AAEhD,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC;AAC7D,gBAAgB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AACvD,gBAAgB,MAAM,CAAC,GAAG,IAAG,2CAA2C,CAAC,GAAG,EAAE,KAAK,CAAC;AACpF,gBAAgB,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC;AAChE,gBAAgB,IAAI,CAAC,aAAa,IAAI,CAAC,KAAK,KAAK,EAAE;AACnD,oBAAoB,aAAa,GAAG,IAAI;AACxC;AACA;AACA,YAAY,IAAI,CAAC,aAAa,EAAE;AAChC,gBAAgB,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC;AAClF;AACA,YAAY,QAAQ,IAAI,KAAK;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,UAAU,EAAE;AACzB,QAAQ,MAAM,OAAO,GAAG,IAAI,sDAAsD,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC;AACjJ,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;AACnC,QAAQ,OAAO,OAAO,CAAC,MAAM,EAAE;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,MAAM,QAAQ,GAAG,EAAE;AAC3B,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAClD,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AACvC;AACA,QAAQ,OAAO,QAAQ;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,GAAG,CAAC,MAAM;AAChC;AACA;AACA;;AAEA,IAAI,MAAM,EAAE,GAAG;AACf,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7G,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7G,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7G,KAAK;AACL,IAAI,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;AACzB,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAClC,QAAQ,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AAC7B,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB,YAAY,EAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAC5B,YAAY,CAAC,IAAI,CAAC;AAClB;AACA;AACA,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACnD,IAAI,OAAO,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,GAAG;;AAEJ,MAAM,gBAAgB,GAAG,IAAG,2CAA2C,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;;;AAG5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,GAAG,SAAS,cAAc,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;;AAEtD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AACpE,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;;AAEzC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACvD,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;AACvD,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;AACnC;;AAEA;AACA;AACA,QAAQ,MAAM,oBAAoB,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEpE;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG;AACtB,gDAAgD,MAAM,CAAC,MAAM;AAC7D,cAAc,yBAAyB,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,oCAAoC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACjH,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEnF,QAAQ,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB;;AAE3D;AACA,QAAQ,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,yBAAyB,IAAI,IAAI;;AAEjF,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,KAAK;;AAE/D,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,EAAE;AACjD;;AAEA,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,KAAK;;AAE/D;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,EAAE;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,YAAY,OAAO,EAAE;AACrB;;AAEA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,MAAM,KAAK,SAAS,EAAE;AAClC,YAAY,OAAO,MAAM;AACzB;;AAEA,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,kBAAkB;AAC5D;;AAEA,QAAQ,IAAI,MAAM,GAAG,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B;AACA;AACA,YAAY,MAAM,KAAK,GAAG,IAAI,sDAAsD,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;;AAE/H;AACA;AACA;AACA,YAAY,IAAI,YAAY,GAAG;AAC/B,gBAAgB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9B,gBAAgB,IAAI,EAAE,CAAC;AACvB,gBAAgB,IAAI,EAAE,IAAI;AAC1B,gBAAgB,IAAI,EAAE,IAAI;AAC1B;;AAEA,YAAY,IAAI,YAAY,GAAG;AAC/B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAClD,gBAAgB,MAAM,WAAW,GAAG;AACpC,oBAAoB,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;AACzC,oBAAoB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAClC,oBAAoB,IAAI,EAAE,YAAY;AACtC,oBAAoB,IAAI,EAAE,IAAI;AAC9B;AACA,gBAAgB,YAAY,CAAC,IAAI,GAAG;AACpC,gBAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY;AAClD,gBAAgB,YAAY,GAAG;AAC/B;;AAEA,YAAY,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;AACrC;AACA,gBAAgB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE;;AAExC;AACA,gBAAgB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;AAErE;AACA;AACA,gBAAgB,IAAI,CAAC,OAAO,GAAG,IAAI;AACnC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI;;AAExC;AACA,gBAAgB,IAAI,IAAI,CAAC,IAAI,EAAE;;AAE/B;AACA,oBAAoB,MAAM,eAAe,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;;AAE5D;AACA;AACA,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI;AAC5C,oBAAoB,IAAI,CAAC,IAAI,GAAG,eAAe;;AAE/C;AACA,oBAAoB,IAAI,eAAe,CAAC,IAAI,EAAE;AAC9C,wBAAwB,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG,eAAe;AACnE,qBAAqB,MAAM;AAC3B;AACA;AACA,wBAAwB,YAAY,GAAG,eAAe;AACtD;AACA;;AAEA;AACA,gBAAgB,MAAM,MAAM,GAAG;AAC/B,oBAAoB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;AACvD,oBAAoB,IAAI,EAAE,IAAI,CAAC,IAAI;AACnC,oBAAoB,IAAI,EAAE,IAAI,CAAC,IAAI;AACnC,oBAAoB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;AACxC;;AAEA;AACA;AACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE;AACjC,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM;AAC7C,oBAAoB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC;AACtD,iBAAiB,MAAM;AACvB;AACA,oBAAoB,YAAY,GAAG,MAAM;AACzC;;AAEA;AACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE;AACjC,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM;AAC7C,oBAAoB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;AACjD;AACA;;AAEA;AACA,YAAY,KAAK,IAAI,WAAW,GAAG,YAAY,EAAE,WAAW,KAAK,IAAI,EAAE,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE;AACvG,gBAAgB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC9C;AACA,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,IAAI;AACzB;;AAEA;AACA,QAAQ,IAAI,IAAI,CAAC,yBAAyB,EAAE;AAC5C;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACxD,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,yBAAyB;AAC3D;AACA;;AAEA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;;AAErC,QAAQ,OAAO,MAAM;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE;AAC3B;AACA;AACA;AACA,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACtF,QAAQ,IAAI,IAAI,KAAK,SAAS,EAAE;AAChC,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI;AACzC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,MAAM,YAAY,GAAG,EAAE;;AAE/B,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACrE,gBAAgB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,gBAAgB;AAChB;AACA,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;AAElD,YAAY,KAAK,MAAM,CAAC,IAAI,cAAc,EAAE;AAC5C,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC/C,oBAAoB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,iBAAiB,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;AAC/C,oBAAoB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7E,yBAAyB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,oBAAoB,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1E;AACA;AACA;AACA,wBAAwB,YAAY,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;AACxD,qBAAqB,MAAM;AAC3B,wBAAwB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACzD;AACA,iBAAiB,MAAM;AACvB,oBAAoB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AACrD;AACA;AACA;;AAEA,QAAQ,OAAO,YAAY;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,cAAc,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AACpC,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,WAAW;AACxC,YAAY,UAAU,CAAC;AACvB,kBAAkB,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW;AACrD,kBAAkB,MAAM,CAAC;AACzB,SAAS;;AAET,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;AAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAElE,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;AAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAElE,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;AAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAElE,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;AAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAElE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACvD,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;AACvD,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;AACnC;AACA;;AAEA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,OAAO,MAAM;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM,UAAU,SAAS,8CAA8C,CAAC,QAAQ,CAAC;AACjF;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;AACxC,QAAQ,QAAQ,MAAM,CAAC,IAAI;AAC3B,YAAY,KAAK,gBAAgB;AACjC,gBAAgB,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC;AACjD,YAAY,KAAK,aAAa;AAC9B,gBAAgB,OAAO,IAAI,WAAW,CAAC,MAAM,CAAC;AAC9C,YAAY,KAAK,UAAU;AAC3B,gBAAgB,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC;AACrD,YAAY,KAAK,SAAS;AAC1B,gBAAgB,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;AAC1C,YAAY,KAAK,KAAK;AACtB,gBAAgB,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;AACtC,YAAY,KAAK,KAAK;AACtB,gBAAgB,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC;AACtC,YAAY,KAAK,MAAM;AACvB,gBAAgB,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC;AACvC,YAAY,KAAK,MAAM;AACvB,gBAAgB,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC;AACvC,YAAY,KAAK,OAAO;AACxB,gBAAgB,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC;AAClD,YAAY,KAAK,cAAc;AAC/B,gBAAgB,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC;AAC/C,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC;AAC5C,YAAY,KAAK,SAAS;AAC1B,gBAAgB,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;AAC1C,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,MAAM,KAAK,CAAC,8CAA8C;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE;AAChB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM,OAAO,SAAS,UAAU,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC1D,QAAQ,OAAO,OAAO,KAAK;AAC3B,cAAc;AACd,cAAc,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,UAAU,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,SAAS;;AAEpB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;AACvC,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,SAAS,iBAAiB,CAAC;AACpC,IAAI,IAAI,GAAG,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,SAAS,iBAAiB,CAAC;AACpC,IAAI,IAAI,GAAG,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,SAAS,iBAAiB,CAAC;AACrC,IAAI,IAAI,GAAG,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,SAAS,iBAAiB,CAAC;AACrC,IAAI,IAAI,GAAG,MAAM;AACjB;;AAEA;AACA;AACA;AACA,MAAM,eAAe,SAAS,UAAU,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AAC/D;AACA,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE;AAC9B,SAAS,MAAM;AACf,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AACxC,gBAAgB,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE;AACvC;AACA,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AACzC,gBAAgB,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;AACrC;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,UAAU,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;AACnC,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,SAAS,SAAS,UAAU,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;AACjC,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,OAAO,SAAS,UAAU,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI;AACzC,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,UAAU,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,KAAK;AAC1D,YAAY,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1C,SAAS,EAAE,IAAI,CAAC;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,UAAU,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,CAAC,IAAI,EAAE;AAClC;AACA,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAChC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzC,YAAY,IAAI,eAAe,CAAC,EAAE,CAAC,EAAE;AACrC,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACjC,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAChC,aAAa,MAAM;AACnB,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACjC;AACA;AACA,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB;AACA,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;AAC5D;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,QAAQ,IAAI;AACpB,YAAY,KAAK,IAAI;AACrB,YAAY,KAAK,IAAI;AACrB,YAAY,KAAK,IAAI;AACrB;AACA,gBAAgB,OAAO,KAAK;;AAE5B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AACjC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzC,YAAY,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AACrE,gBAAgB;AAChB;AACA,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACnC,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAChC,aAAa,MAAM;AACnB,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACjC;AACA;AACA,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AACpC,YAAY,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACzC;;AAEA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;AAC9C,YAAY,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;AACrD;;AAEA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACnC,YAAY,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;;AAErC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,KAAK,EAAE;AACrD,gBAAgB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AAC9C;AACA,SAAS,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AAC9C,YAAY,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1C;;AAEA,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,8CAA8C,CAAC,QAAQ,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;;AAExC,QAAQ,QAAQ,MAAM,CAAC,IAAI;AAC3B,YAAY,KAAK,kBAAkB;AACnC,gBAAgB,OAAO,IAAI,gBAAgB,CAAC,MAAM,CAAC;AACnD,YAAY,KAAK,UAAU;AAC3B,gBAAgB,OAAO,IAAI,oBAAoB,CAAC,MAAM,CAAC;AACvD,YAAY,KAAK,YAAY;AAC7B,gBAAgB,OAAO,IAAI,sBAAsB,CAAC,MAAM,CAAC;AACzD,YAAY,KAAK,iBAAiB;AAClC,gBAAgB,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC;AAClD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,qBAAqB,CAAC,MAAM,CAAC;;AAExD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,qBAAqB,CAAC,MAAM,CAAC;AACxD,YAAY,KAAK,OAAO;AACxB,gBAAgB,OAAO,IAAI,iBAAiB,CAAC,MAAM,CAAC;AACpD,YAAY,KAAK,aAAa;AAC9B,gBAAgB,OAAO,IAAI,uBAAuB,CAAC,MAAM,CAAC;AAC1D,YAAY,KAAK,QAAQ;AACzB,gBAAgB,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC;AACrD,YAAY,KAAK,SAAS;AAC1B,gBAAgB,OAAO,IAAI,mBAAmB,CAAC,MAAM,CAAC;AACtD,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,MAAM,KAAK,CAAC,sDAAsD;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE;AAChC,QAAQ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AAClC,cAAc,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,OAAO,CAAC;AAC9D,cAAc,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO;AAClD,UAAU,IAAI,EAAE;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC;AAC/C;AACA;;AAEA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,YAAY,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf;AACA;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,YAAY,CAAC;AACjD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;;AAE5B;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB;;AAE5D;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY;;AAEpD;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI;AACtD,QAAQ,IAAI,CAAC,OAAO,GAAG,8EAA8E;;AAErG,QAAQ,IAAI,CAAC,YAAY,GAAG,gBAAgB;AAC5C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,EAAE;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC;AACA,QAAQ,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC5D,YAAY,IAAI,GAAG,GAAG,GAAG,IAAI;AAC7B;;AAEA;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;;AAEjF;AACA,QAAQ,OAAO,MAAM,CAAC,GAAG;AACzB,YAAY,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACzG,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,YAAY,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;;AAEA,QAAQ,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;AACnC,YAAY,OAAO,EAAE;AACrB;;AAEA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAChC,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACjD,SAAS,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,SAAS,EAAE;AACtE,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1D,SAAS,MAAM;AACf,YAAY,OAAO,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,SAAS,YAAY,CAAC;AACnD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC7C;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,YAAY,CAAC;AAC9C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;;AAE5B;AACA,QAAQ,MAAM,aAAa,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;AACtF,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAM,aAAa,SAAS,8CAA8C,CAAC,QAAQ,CAAC;;AAEpF;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;AACxC,QAAQ,QAAQ,MAAM,CAAC,IAAI;AAC3B,YAAY,KAAK,oBAAoB;AACrC,gBAAgB,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC;;AAErD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,sBAAsB,CAAC,MAAM,CAAC;;AAEzD,YAAY,KAAK,mBAAmB;AACpC,gBAAgB,OAAO,IAAI,iBAAiB,CAAC,MAAM,CAAC;AACpD,YAAY,KAAK,gBAAgB;AACjC,gBAAgB,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC;;AAEjD,YAAY,KAAK,UAAU;AAC3B,gBAAgB,OAAO,IAAI,qBAAqB,CAAC,MAAM,CAAC;AACxD,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;AAClC,QAAQ,MAAM,KAAK,CAAC,iDAAiD;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB;;AAEA,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE;AAC7C,QAAQ,kBAAkB,GAAG,IAAI;AACjC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,IAAI,kBAAkB,EAAE;AAChC,YAAY,MAAM,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChH;;AAEA,QAAQ,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,QAAQ,IAAI,WAAW,KAAK,IAAI,EAAE;AAClC;AACA;AACA,YAAY,MAAM,MAAM,GAAG,CAAC,kBAAkB,IAAI,IAAI,YAAY,iBAAiB;AACnF,kBAAkB,CAAC,IAAI,CAAC,GAAG;AAC3B,kBAAkB,EAAE;AACpB,YAAY,MAAM,KAAK,GAAG,kBAAkB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;;AAE9D,YAAY,MAAM,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC;AACpH,YAAY,cAAc,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,cAAc,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9K;AACA,QAAQ,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE;AACzC;AACA;AACA,MAAM,iBAAiB,SAAS,cAAc,CAAC,GAAG;;AAElD;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;AACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE;AAC7C,QAAQ,kBAAkB,GAAG,IAAI;AACjC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,MAAM,IAAI,GAAG,WAAW,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;AAE/D,QAAQ,IAAI,eAAe,GAAG,EAAE;AAChC,QAAQ,IAAI,KAAK,GAAG,EAAE;AACtB,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AACjC,YAAY,IAAI,cAAc,IAAI,IAAI,EAAE;AACxC,gBAAgB,IAAI,kBAAkB,EAAE;AACxC,oBAAoB,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;AAC9D,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACzD;AACA,aAAa,MAAM,IAAI,UAAU,IAAI,IAAI,EAAE;AAC3C,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,GAAG,EAAE;AAC9C,oBAAoB,eAAe,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,CAAC;AAC1H,oBAAoB,KAAK,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;AAEpJ,iBAAiB,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,GAAG,EAAE;AACrD,oBAAoB,eAAe,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,eAAe,EAAE,WAAW,CAAC;AAC/H,oBAAoB,KAAK,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACzJ;AACA;AACA;AACA,QAAQ,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,cAAc,EAAE,KAAK,EAAE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,aAAa,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE;AAC7C,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,MAAM,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC;AACrG;AACA,QAAQ,OAAO,EAAE,MAAM,EAAE;AACzB;AACA;;;AAGA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,aAAa,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;AAC3D,QAAQ,IAAI,cAAc;AAC1B,QAAQ,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;AACjD,YAAY,IAAI,SAAS,YAAY,sBAAsB,EAAE;AAC7D;AACA,gBAAgB,MAAM,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC;AAC7D,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM;AACtC,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,MAAM,WAAW,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC;AAC3E,oBAAoB,WAAW,GAAG,WAAW,CAAC,MAAM;AACpD;AACA,aAAa,MAAM;AACnB,gBAAgB,MAAM,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC;AACnF,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM;AACtC,gBAAgB,cAAc,GAAG,MAAM,CAAC,cAAc;AACtD;AACA;AACA,QAAQ,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,OAAO,SAAS,8CAA8C,CAAC,QAAQ,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;;AAE5B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE;AAC9B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI;AACtC,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;AACxC,QAAQ,QAAQ,MAAM,CAAC,IAAI;AAC3B,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,gBAAgB,CAAC,MAAM,CAAC;AACnD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,gBAAgB,CAAC,MAAM,CAAC;AACnD,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,IAAI,gBAAgB,CAAC,MAAM,CAAC;;AAEnD,YAAY,KAAK,SAAS;AAC1B,gBAAgB,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC;AACjD,YAAY,KAAK,cAAc;AAC/B,gBAAgB,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC;AAC/C,YAAY,KAAK,MAAM;AACvB,gBAAgB,OAAO,IAAI,WAAW,CAAC,MAAM,CAAC;AAC9C,YAAY,KAAK,OAAO;AACxB,gBAAgB,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC;;AAE/C,YAAY,KAAK,UAAU;AAC3B,gBAAgB,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC;;AAElD,YAAY,KAAK,KAAK;AACtB,gBAAgB,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC;AAC7C,YAAY,KAAK,YAAY;AAC7B,gBAAgB,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC;AAC7C,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,MAAM,KAAK,CAAC,mDAAmD;AACvE;;AAEA;;AAEA,MAAM,cAAc,SAAS,OAAO,CAAC;;AAErC;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC1D,QAAQ,OAAO,OAAO,KAAK;AAC3B,cAAc;AACd,cAAc,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAChF;AACA;;;AAGA,MAAM,YAAY,SAAS,OAAO,CAAC;AACnC,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,EAAE;AAC7C;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;;AAEzB,QAAQ,MAAM,UAAU,GAAG,EAAE;AAC7B,QAAQ,IAAI,oBAAoB,GAAG,EAAE;;AAErC,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,IAAI,KAAK,GAAG,IAAI;AAC5B,YAAY,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtF,gBAAgB,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5D,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAClC,oBAAoB,KAAK,GAAG,IAAI;AAChC;AACA;AACA,YAAY,IAAI,KAAK,KAAK,IAAI,EAAE;AAChC,gBAAgB,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;AAChD,aAAa,MAAM;AACnB,gBAAgB,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;AACrD,oBAAoB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAClG,oBAAoB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AAC3C,oBAAoB,oBAAoB,GAAG,EAAE;AAC7C;AACA,gBAAgB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC;AACA;AACA,QAAQ,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC1F,YAAY,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AACnC,YAAY,oBAAoB,GAAG,EAAE;AACrC;;AAEA,QAAQ,OAAO,UAAU;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,OAAO,CAAC;;AAElC;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC;AACA;;;AAGA,MAAM,YAAY,SAAS,OAAO,CAAC;AACnC,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;AAC1C,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;AACpC;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI;AACnC,YAAY,IAAI,SAAS,GAAG,CAAC;AAC7B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;AACjD,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;AAC/C,oBAAoB,SAAS,GAAG,CAAC,GAAG,CAAC;AACrC,oBAAoB;AACpB,iBAAiB,MAAM;AACvB,oBAAoB;AACpB;AACA;;AAEA,YAAY,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM;AACvC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;AAChD,gBAAgB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAClD,gBAAgB,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;AACnD,oBAAoB,QAAQ,GAAG,KAAK;AACpC,oBAAoB;AACpB,iBAAiB,MAAM;AACvB,oBAAoB;AACpB;AACA;;AAEA,YAAY,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ;AAClD,SAAS,CAAC;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACrC;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK;AACxC,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;AACzB,gBAAgB,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC1D;AACA,oBAAoB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;AACjE,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,GAAG,GAAG,KAAK;AACvC;AACA;AACA,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;AAC9B,gBAAgB,KAAK,GAAG,qBAAqB,CAAC,KAAK;AACnD;;AAEA,YAAY,OAAO,KAAK;AACxB,SAAS,CAAC;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;;AAEvC;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,YAAY,GAAG,gBAAgB;AAC5C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE;AACrD,YAAY,KAAK,EAAE,KAAK;AACxB,YAAY,SAAS,EAAE,IAAI;AAC3B,SAAS,CAAC;;AAEV,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,MAAM,EAAE;AACrC,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AACpC,QAAQ,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC;AAChE,QAAQ,OAAO,YAAY;AAC3B;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB;AACA;;AAEA;AACA;AACA;AACA,QAAQ,MAAM,SAAS,GAAG,EAAE;AAC5B,QAAQ,IAAI,gBAAgB,GAAG,EAAE;AACjC,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC;AACA;AACA;AACA;;AAEA,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,EAAE;AAChF,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;AACjD,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;AACnF,oBAAoB,gBAAgB,GAAG,EAAE;AACzC;AACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACrC,aAAa,MAAM;AACnB,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5C;AACA;AACA,QAAQ,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;AAC3E;;AAEA;;AAEA,QAAQ,OAAO,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,UAAU,SAAS,OAAO,CAAC;;AAEjC,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;AAC9C,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB;AACpE,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB,CAAC,MAAM,EAAE;AACrC,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;;AAE1C;AACA,QAAQ,MAAM,cAAc,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACrD,gBAAgB,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9C;AACA;;AAEA;AACA,QAAQ,MAAM,eAAe,GAAG,cAAc,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC;;AAExF,QAAQ,IAAI,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;AAC3C,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B;AACA,YAAY,IAAI,GAAG,qBAAqB,CAAC,IAAI;AAC7C,iBAAiB,UAAU,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG;AAC1D,iBAAiB,IAAI,EAAE;AACvB;AACA,QAAQ,OAAO,IAAI;AACnB;;;AAGA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,OAAO,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvE;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB;AACA,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,KAAK;AACvD,YAAY,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;AAC7C,SAAS,EAAE,MAAM,CAAC;AAClB;;AAEA;;AAEA,MAAM,UAAU,SAAS,OAAO,CAAC;AACjC,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;AACxC;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK;AACxC,YAAY,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG;AACrF,SAAS,CAAC;AACV;AACA;;AAEA;AACA,MAAM,WAAW,SAAS,OAAO,CAAC;AAClC;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,IAAI,OAAO,GAAG,EAAE;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,YAAY,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;AAChC;AACA,QAAQ,OAAO,CAAC,OAAO,CAAC;AACxB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,SAAS,YAAY,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;;AAEf,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,gBAAgB;AACrD,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;AAC7C,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW;AACxD,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,QAAQ;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE;AAC5B,QAAQ,aAAa,GAAG,SAAS;AACjC,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC;;AAE1D,QAAQ;AACR;AACA;AACA;AACA,YAAY,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;;AAE5E;AACA;AACA;AACA;AACA,gBAAgB,IAAI,CAAC,cAAc,KAAK,QAAQ;AAChD,iBAAiB,IAAI,CAAC,cAAc,KAAK,OAAO,IAAI,aAAa,KAAK,CAAC;AACvE;AACA,UAAU;AACV,YAAY,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU;AACjD;AACA,QAAQ,OAAO,CAAC,UAAU,CAAC;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;;AAErB,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,gBAAgB;AACrD,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;AAC7C;;AAEA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC;AACxE,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC7E,gBAAgB,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD;AACA,YAAY,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;AACnC;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,UAAU,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC;AACrB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,oBAAoB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,wDAAwD,EAAE,EAAE,CAAC,CAAC;AAC1F,QAAQ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,uGAAuG,EAAE,QAAQ,CAAC,CAAC;;AAE/I,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACrC;AACA;AACA;AACA;AACA,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC9C,YAAY,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3E,SAAS,MAAM;AACf,YAAY,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AACzC;;AAEA,QAAQ,OAAO,IAAI;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,YAAY,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC;AACA,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,gBAAgB,EAAE,SAAS,KAAK;AACvE,YAAY,OAAO,SAAS,CAAC,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC;AACpE,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;AAClB;AACA;;AAEA;AACA;AACA;AACA,MAAM,sBAAsB,SAAS,YAAY,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,YAAY,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,OAAO,gBAAgB,CAAC,IAAI,CAAC;AACrC;AACA;;AAEA;AACA,MAAM,mBAAmB,SAAS,YAAY,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AACzD,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;AACnC,YAAY,OAAO,CAAC,IAAI,CAAC;AACzB;AACA,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACnE;AACA;;AAEA,MAAM,wBAAwB,GAAG;AACjC,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,YAAY;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;AACjD,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACzC,QAAQ,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AAC9C,QAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;;AAEnC,QAAQ,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACnD,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK;AAC7B,cAAc,IAAG,2CAA2C,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO;AAC5F,cAAc,IAAG,2CAA2C,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AACtC;AACA;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACzC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM;AACjC;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,MAAM,mBAAmB,SAAS,8CAA8C,CAAC,QAAQ,CAAC;AAC1F,IAAI,qBAAqB,GAAG,KAAK;;AAEjC,IAAI,YAAY,GAAG,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,EAAE;;AAEf,QAAQ,IAAI,CAAC,iBAAiB,GAAG,eAAe;;AAEhD;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;AACzE,QAAQ,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC;AACjF,QAAQ,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC;AACpF,QAAQ,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC;AACpF,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC;;AAEhE;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE;AAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,EAAE;;AAEjC;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE;AAC9B,QAAQ,KAAK,MAAM,UAAU,IAAI,aAAa,CAAC,YAAY,EAAE;AAC7D,YAAY,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC;AACpD,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEzC,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;AACjE,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO;;AAEtD,YAAY,IAAI,KAAK,CAAC,OAAO,EAAE;AAC/B,gBAAgB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACvD,gBAAgB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AACnD;AACA;;AAEA;AACA,QAAQ,IAAI,CAAC,yBAAyB,GAAG,eAAe,CAAC,yBAAyB,IAAI,EAAE;AACxF,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC;AACnE,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;AAEhE,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B;AACA,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;;AAEzD;AACA;AACA;AACA;AACA,YAAY,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB;AAC3E;;AAEA,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,MAAM;AAC3E,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK;AACnC;AACA,iBAAiB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;AACnE,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC,EAAE,IAAG,2CAA2C,CAAC,YAAY,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC;AAC1J,iBAAiB,IAAI,CAAC,GAAG;AACzB,SAAS,GAAG,IAAI;;AAEhB;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;AACrD,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;;AAE1E,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,CAAC;AAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAExE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACnD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAExE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACnD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAExE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACnD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAExE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACnD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;;AAExE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC,gBAAgB;;AAEhE;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY;;AAExD,QAAQ,IAAI,CAAC,4BAA4B,GAAG,eAAe,CAAC,4BAA4B,IAAI,IAAI;AAChG,QAAQ,IAAI,CAAC,8BAA8B,GAAG,eAAe,CAAC,8BAA8B,IAAI,KAAK;;AAErG,QAAQ,IAAI,eAAe,CAAC,YAAY,EAAE;AAC1C,YAAY,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY;AAC5D;;AAEA,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK;;AAE3B,QAAQ,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,aAAa,IAAI,IAAI;AAClE,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;AAC/C;AACA;AACA,YAAY,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACrD,YAAY,KAAK,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;AACjE,gBAAgB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC9E,oBAAoB,MAAM,IAAI,KAAK,CAAC,+EAA+E,CAAC;AACpH;AACA,gBAAgB,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ;AAC9C;AACA,YAAY,IAAI,CAAC,aAAa,GAAG,aAAa;AAC9C;AACA,QAAQ,IAAI,CAAC,wBAAwB,GAAG,IAAI,GAAG,EAAE;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,IAAI,EAAE;AACtB,QAAQ,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AAChC,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;;AAEpD,YAAY,IAAI,CAAC,IAAI,EAAE;;AAEvB,YAAY,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC1C,gBAAgB,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;AAClD,oBAAoB,OAAO,IAAI,CAAC,OAAO;AACvC,iBAAiB,MAAM;AACvB,oBAAoB,MAAM,KAAK,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;AACzD;AACA,aAAa,MAAM;AACnB,gBAAgB,OAAO,IAAI;AAC3B;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE;AAChE,QAAQ,iBAAiB,GAAG,IAAI;AAChC,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,gBAAgB,GAAG,KAAK;AAChC,QAAQ,QAAQ,GAAG,MAAM;AACzB,QAAQ,MAAM,GAAG,IAAI;AACrB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,6BAA6B,EAAE;AACxE,YAAY,iBAAiB;AAC7B,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,SAAS;;AAET;AACA,QAAQ,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA,QAAQ,IAAI;;AAEZ;AACA,QAAQ;AACR,YAAY,SAAS,GAAG,IAAI;AAC5B,YAAY,kBAAkB,GAAG,IAAI;AACrC,YAAY,OAAO,GAAG,KAAK;AAC3B,YAAY,UAAU,GAAG,IAAI;AAC7B,YAAY,UAAU,GAAG,IAAI;AAC7B,YAAY,aAAa,GAAG,IAAI;AAChC,YAAY,qBAAqB,GAAG,IAAI;AACxC,SAAS,GAAG,EAAE;AACd,MAAM;;AAEN,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;;AAE7C;AACA,QAAQ,IAAI,aAAa;;AAEzB,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACnC,gBAAgB,MAAM,KAAK,CAAC,8BAA8B;AAC1D;;AAEA,YAAY,IAAI,SAAS,KAAK,IAAI,EAAE;AACpC,gBAAgB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC/C,oBAAoB,MAAM,KAAK,CAAC,iCAAiC;;AAEjE,iBAAiB,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,EAAE;AAC7D,oBAAoB,MAAM,KAAK,CAAC,8CAA8C;AAC9E;;AAEA,gBAAgB,aAAa,GAAG,IAAI,CAAC,GAAG;AACxC,oBAAoB,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,qBAAqB,EAAE;AACzH;;AAEA,aAAa,MAAM;AACnB,gBAAgB,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAClH;;AAEA,SAAS,MAAM;AACf,YAAY,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;AACrD,gBAAgB,MAAM,KAAK,CAAC,mCAAmC;AAC/D;;AAEA,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC1C,gBAAgB,MAAM,KAAK,CAAC,gHAAgH;AAC5I;;AAEA;AACA,YAAY,aAAa,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAC/G;AACA;AACA;;AAEA,QAAQ,IAAI,UAAU,KAAK,IAAI,EAAE;AACjC,YAAY,IAAI,OAAO,KAAK,YAAY,EAAE;AAC1C,gBAAgB,UAAU,GAAG,IAAI,CAAC,gBAAgB;AAClD,aAAa,MAAM;AACnB;AACA,gBAAgB,UAAU,GAAG,IAAG,4CAA4C,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAChI;AACA,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,UAAU,EAAE;AAC7B,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,sKAAsK,CAAC;AACrM;AACA;;AAEA;AACA,QAAQ,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC;;AAE5E,QAAQ,IAAI,OAAO,IAAI,UAAU,EAAE;;AAEnC;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3D,gBAAgB,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,UAAU,EAAE;AACtE,oBAAoB;;AAEpB,iBAAiB,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE;AAC3E;AACA,oBAAoB,IAAI,UAAU,EAAE;AACpC,wBAAwB,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC;AACpE;;AAEA,iBAAiB,MAAM;AACvB;AACA,oBAAoB,IAAI,OAAO,EAAE;AACjC,wBAAwB,SAAS;AACjC,4BAA4B,aAAa,CAAC,CAAC,CAAC;AAC5C,4BAA4B,UAAU;AACtC,4BAA4B,GAAG,IAAI,GAAG,KAAK,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC;AAC9E,4BAA4B,IAAI,CAAC;AACjC,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA,QAAQ,MAAM,MAAM,GAAG,EAAE;;AAEzB,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,EAAE,OAAO,IAAI,UAAU,CAAC,EAAE;AAC1C;AACA;;AAEA,gBAAgB;AAChB,oBAAoB,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI;AAC5C,wBAAwB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AAC1D,4BAA4B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE;AACjF,gCAAgC,OAAO,IAAI;AAC3C;AACA;AACA,wBAAwB,OAAO,KAAK;AACpC,qBAAqB;AACrB,kBAAkB;AAClB,oBAAoB,MAAM,KAAK;AAC/B,wBAAwB,kFAAkF;AAC1G,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM,IAAI,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;;AAElF,YAAY,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7D,gBAAgB,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,6CAA6C,CAAC,MAAM,CAAC,OAAO;AAC9F,oBAAoB,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtF,oBAAoB;AACpB,iBAAiB;AACjB;;AAEA,SAAS,MAAM;AACf,YAAY,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7D,gBAAgB,MAAM,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5D;;AAEA;AACA,YAAY,IAAI,CAAC,SAAS,EAAE;AAC5B;AACA,gBAAgB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACvD,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChD;AACA;AACA;;AAEA,QAAQ,oCAAoC,MAAM;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;;AAEtC;AACA;AACA;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;AAE9G,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,aAAa,KAAK;AAC1D,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;AAC3E,YAAY,IAAI,UAAU,KAAK,SAAS,EAAE;AAC1C;AACA,gBAAgB,OAAO;AACvB,aAAa,MAAM;AACnB,gBAAgB,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;AAChD,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACvD;AACA,gBAAgB,IAAI,IAAI,CAAC,8BAA8B,EAAE;AACzD,oBAAoB,CAAC,GAAG,2BAA2B,CAAC,CAAC,CAAC;AACtD;;AAEA,gBAAgB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;AAC9C,oBAAoB,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1C;;AAEA;AACA;AACA,gBAAgB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,oBAAoB,OAAO,EAAE;AAC7B;;AAEA,gBAAgB,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE;AAC5F,oBAAoB,aAAa;AACjC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;;AAExB,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;;AAExD,gBAAgB,OAAO,MAAM;AAC7B;AACA,SAAS,CAAC,CAAC,IAAI,EAAE;;AAEjB,QAAQ,OAAO,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,kBAAkB,GAAG,IAAI;AACjC,QAAQ,qBAAqB,GAAG,IAAI;AACpC,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;;AAE/G,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC;;AAElE,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,SAAS;AACrB,YAAY,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,KAAK,cAAc,EAAE;AACrF,YAAY,MAAM,CAAC,cAAc,GAAG,cAAc;AAClD;AACA,QAAQ,OAAO,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,IAAI,EAAE;AAC3B,QAAQ,IAAI,GAAG,IAAI;AACnB,QAAQ,kBAAkB,GAAG,KAAK;AAClC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AAC9C,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;;AAE/C,QAAQ,OAAO,IAAI,CAAC;AACpB,cAAc,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,kBAAkB,EAAE;AACzE,cAAc,EAAE,MAAM,EAAE,IAAG,2CAA2C,CAAC,WAAW,EAAE,MAAM,IAAI,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,EAAE;AAClH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,GAAG,IAAI;AACnB,QAAQ,kBAAkB,GAAG,KAAK;AAClC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC,MAAM;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,kBAAkB,GAAG,IAAI;AACjC,QAAQ,qBAAqB,GAAG,IAAI;AACpC,KAAK,GAAG,EAAE,EAAE;AACZ,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;AACvC,YAAY,SAAS;AACrB,YAAY,kBAAkB;AAC9B,YAAY,qBAAqB;AACjC,SAAS,CAAC,CAAC,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE,WAAW,GAAG,EAAE,EAAE;AAC1C,QAAQ,IAAI,KAAK,YAAY,6CAA6C,CAAC,MAAM,EAAE;AACnF,YAAY,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AAClC;AACA,QAAQ,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV,QAAQ,SAAS;AACjB,QAAQ,WAAW,GAAG,EAAE;AACxB,MAAM;AACN,QAAQ,IAAI,SAAS,YAAY,6CAA6C,CAAC,MAAM,EAAE;AACvF,YAAY,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC;AACzD;;AAEA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAG,2CAA2C,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AACpJ,YAAY,MAAM,KAAK,CAAC,kDAAkD,CAAC;AAC3E;;AAEA,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa;AACjB,QAAQ,SAAS;AACjB,QAAQ;AACR,YAAY,mBAAmB,GAAG,KAAK;AACvC,YAAY,4BAA4B,GAAG,IAAI;AAC/C;AACA,MAAM;AACN,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC;AAChE,QAAQ,IAAI,mBAAmB,EAAE;AACjC,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzE;;AAEA;AACA;AACA;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;;AAE5E;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;AAC7D,YAAY,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,GAAG,CAAC;AAC9E,YAAY,IAAI,mBAAmB,EAAE;AACrC,gBAAgB,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE;AACxC;AACA;;AAEA,QAAQ,IAAI,4BAA4B,IAAI,IAAI,CAAC,4BAA4B,EAAE;AAC/E,YAAY,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC;AACpD;;AAEA,QAAQ,OAAO,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC;AACtB,QAAQ,aAAa,GAAG,IAAI;AAC5B,QAAQ,KAAK,GAAG,IAAI;AACpB,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAE;AAC1E,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa;;AAEpD,YAAY,IAAI,aAAa,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE;AACvF;AACA,gBAAgB,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC;AAC5D,aAAa,MAAM,IAAI,aAAa,KAAK,IAAI,EAAE;AAC/C,gBAAgB,IAAI,KAAK,KAAK,IAAI,IAAI,UAAU,IAAI,aAAa,EAAE;AACnE,oBAAoB,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC;AAC7D,iBAAiB,MAAM,IAAI,SAAS,IAAI,aAAa,EAAE;AACvD,oBAAoB,aAAa,GAAG,aAAa,CAAC,SAAS,CAAC;AAC5D,iBAAiB,MAAM;AACvB,oBAAoB,MAAM,KAAK;AAC/B,wBAAwB,CAAC,4FAA4F,CAAC;AACtH,wBAAwB,CAAC,gGAAgG,CAAC;AAC1H,wBAAwB,CAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACjF;AACA;AACA;AACA,SAAS,MAAM,IAAI,aAAa,KAAK,IAAI,EAAE;AAC3C;AACA;AACA,YAAY,IAAI,IAAI,CAAC,aAAa,EAAE;AACpC,gBAAgB,aAAa,GAAG,IAAI,CAAC,aAAa;AAClD,aAAa,MAAM;AACnB,gBAAgB,MAAM,KAAK;AAC3B,oBAAoB,8FAA8F;AAClH,oBAAoB,+EAA+E;AACnG,oBAAoB,qEAAqE;AACzF,oBAAoB;AACpB;AACA;AACA;AACA,QAAQ,OAAO,aAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,YAAY,EAAE;AACtC,QAAQ,KAAK,GAAG,IAAI;AACpB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,aAAa,GAAG,IAAI;AAC5B,QAAQ,qBAAqB,GAAG,KAAK;AACrC,QAAQ,QAAQ,GAAG,IAAI;AACvB,QAAQ,OAAO,GAAG,KAAK;AACvB,QAAQ,UAAU,GAAG,KAAK;AAC1B,QAAQ,UAAU,GAAG,IAAI;AACzB,QAAQ,aAAa,GAAG,IAAI;AAC5B,QAAQ,WAAW,GAAG,KAAK;AAC3B,QAAQ,gBAAgB,GAAG,EAAE;AAC7B,QAAQ,GAAG;AACX,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;;AAExE,QAAQ,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AAC/C,YAAY,MAAM,KAAK,CAAC,CAAC,wCAAwC,EAAE,OAAO,aAAa,CAAC,CAAC,CAAC;AAC1F;;AAEA;AACA,QAAQ,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,aAAa,CAAC;AAC/E,QAAQ,IAAI,gBAAgB,KAAK,SAAS,EAAE;AAC5C,YAAY,gBAAgB,GAAG,IAAI,+CAA+C,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC1G,YAAY,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,aAAa,EAAE,gBAAgB,CAAC;AAC9E;;AAEA,QAAQ,MAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACtD,QAAQ,KAAK,MAAM,GAAG,IAAI,wBAAwB,EAAE;AACpD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC5C,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,kBAAkB,CAAC,GAAG,CAAC,GAAG,KAAK;AAC/C;AACA;;AAEA,QAAQ,MAAM,QAAQ,GAAG,gBAAgB,CAAC,MAAM,CAAC;AACjD,YAAY,QAAQ,EAAE,YAAY;AAClC,YAAY,qBAAqB;AACjC,YAAY,KAAK;AACjB,YAAY,SAAS;AACrB,YAAY,GAAG,kBAAkB;AACjC,YAAY,GAAG,MAAM;AACrB,SAAS,CAAC;;AAEV,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC7C,gBAAgB,kBAAkB,EAAE,KAAK;AACzC,gBAAgB,OAAO;AACvB,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B,gBAAgB,aAAa;AAC7B,gBAAgB,GAAG,gBAAgB;AACnC,aAAa,CAAC;AACd,YAAY,OAAO,WAAW,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS;AACpD;;AAEA,QAAQ,OAAO,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,mBAAmB,CAAC;AAChD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,mBAAmB,CAAC;AAClD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,mBAAmB,SAAS,mBAAmB,CAAC;AACtD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,oBAAoB,SAAS,mBAAmB,CAAC;AACvD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,kBAAkB,SAAS,mBAAmB,CAAC;AACrD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,iBAAiB,SAAS,mBAAmB,CAAC;AACpD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,iBAAiB,SAAS,mBAAmB,CAAC;AACpD,IAAI,qBAAqB,GAAG,IAAI;AAChC;AACA,MAAM,mBAAmB,SAAS,mBAAmB,CAAC;AACtD,MAAM,kBAAkB,SAAS,mBAAmB,CAAC;AACrD,MAAM,YAAY,SAAS,mBAAmB,CAAC;AAC/C,IAAI,qBAAqB,GAAG,IAAI;;AAEhC,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;AAC7C,QAAQ,OAAO,CAAC,IAAI,CAAC,uJAAuJ;AAC5K;AACA;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD,IAAI,qBAAqB,GAAG,IAAI;AAChC;;AAEA,MAAM,WAAW,SAAS,mBAAmB,CAAC;AAC9C,MAAM,aAAa,SAAS,mBAAmB,CAAC;AAChD,MAAM,aAAa,SAAS,mBAAmB,CAAC;AAChD,MAAM,cAAc,SAAS,mBAAmB,CAAC;AACjD,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C,QAAQ,IAAI,CAAC,aAAa,GAAG,qBAAqB;AAClD,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzF,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,CAAC,UAAU,EAAE,iBAAiB,EAAE,eAAe,EAAE;AAC9E,QAAQ,OAAO,yBAAyB,CAAC,IAAI,EAAE,UAAU,EAAE,iBAAiB,EAAE,eAAe,CAAC;AAC9F;AACA;AACA,MAAM,gBAAgB,SAAS,cAAc,CAAC,GAAG;;AAEjD,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;;AAEnD,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD,MAAM,gBAAgB,GAAG,GAAG;;AAE5B,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD,IAAI,YAAY,GAAG,MAAM;;AAEzB,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C,QAAQ,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,IAAI,IAAI;AACpD,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B;AACA,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI;AAClC,YAAY,IAAI,CAAC,aAAa,GAAG,IAAI,qBAAqB,CAAC;AAC3D,gBAAgB,WAAW,EAAE,gBAAgB;AAC7C,gBAAgB,gBAAgB,EAAE,IAAI;AACtC,gBAAgB,cAAc,EAAE,OAAO;AACvC,aAAa,CAAC;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;;AAEtC,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9C,YAAY,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;AAC3C;;AAEA,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;AAClG,QAAQ,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,gBAAgB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAC5G,YAAY,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;AACA,MAAM,kBAAkB,SAAS,mBAAmB,CAAC;;AAErD,MAAM,mBAAmB,SAAS,mBAAmB,CAAC;AACtD,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD,MAAM,eAAe,SAAS,mBAAmB,CAAC;;AAElD,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;;AAEnD,MAAM,YAAY,SAAS,mBAAmB,CAAC;;AAE/C,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD,MAAM,cAAc,SAAS,mBAAmB,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB,CAAC,IAAI,EAAE,UAAU,EAAE,iBAAiB,EAAE,eAAe,EAAE;AACzF,IAAI,IAAI,EAAE,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;AAC5E,QAAQ,MAAM,IAAI,KAAK,CAAC,+FAA+F;AACvH;AACA,IAAI,IAAI,EAAE,eAAe,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,YAAY,MAAM,CAAC,EAAE;AAC/E,QAAQ,MAAM,IAAI,KAAK,CAAC,0FAA0F;AAClH;AACA,IAAI,IAAI,EAAE,eAAe,IAAI,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;AAChF,QAAQ,MAAM,IAAI,KAAK,CAAC,gFAAgF;AACxG;AACA,IAAI,MAAM,cAAc,GAAG,eAAe,CAAC,QAAQ;AACnD,IAAI,MAAM,cAAc,GAAG,eAAe,CAAC,QAAQ;;AAEnD;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;AACvD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,cAAc,CAAC,iCAAiC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI;;AAEA;AACA,IAAI,IAAI,cAAc,KAAK,SAAS,EAAE;AACtC;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;AAC3D,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,cAAc,CAAC,iCAAiC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzI;;AAEA;AACA;AACA,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE;AAC9D,YAAY,IAAI,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE;AACzF,gBAAgB,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;AACzE,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,IAAI,eAAe,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnH,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,iBAAiB,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,mBAAmB,CAAC;;AAEhD,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C,QAAQ,IAAI,CAAC,aAAa,GAAG,0BAA0B;AACvD,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzF,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,CAAC,UAAU,EAAE,iBAAiB,EAAE,eAAe,EAAE;AAC9E,QAAQ,OAAO,yBAAyB,CAAC,IAAI,EAAE,UAAU,EAAE,iBAAiB,EAAE,eAAe,CAAC;AAC9F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,mBAAmB,CAAC;AAClD,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C,QAAQ,IAAI,CAAC,aAAa,GAAG,kBAAkB;AAC/C,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnC,aAAa,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AACnD,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,CAAC,UAAU,EAAE,iBAAiB,EAAE,eAAe,EAAE;AAC9E,QAAQ,OAAO,yBAAyB,CAAC,IAAI,EAAE,UAAU,EAAE,iBAAiB,EAAE,eAAe,CAAC;AAC9F;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;;AAEnD,IAAI,IAAI,eAAe,GAAG;AAC1B,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,SAAS,EAAE;AAC3B,QAAQ,iBAAiB,GAAG,KAAK;AACjC,QAAQ,eAAe,GAAG,KAAK;AAC/B,QAAQ,cAAc,GAAG,IAAI;AAC7B,QAAQ,oBAAoB,GAAG;AAC/B,KAAK,GAAG,EAAE,EAAE;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,IAAI,cAAc,KAAK,IAAI,EAAE;AACrC,YAAY,MAAM,KAAK,CAAC,6BAA6B;AACrD;AACA,QAAQ,IAAI,aAAa,GAAG,IAAI;;AAEhC,QAAQ,MAAM,oBAAoB,GAAG,iBAAiB,KAAK,MAAM;;AAEjE,QAAQ,SAAS,SAAS,GAAG;AAC7B,YAAY,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;AACvF;;AAEA;AACA,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,IAAI,KAAK,GAAG,SAAS,EAAE;AAC/B,QAAQ,IAAI,WAAW,GAAG,GAAG;AAC7B,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe;AACpD;AACA;AACA;AACA,QAAQ,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAC5C,QAAQ,MAAM,aAAa,GAAG,eAAe,GAAG,sBAAsB;;AAEtE,QAAQ,IAAI,eAAe,GAAG,EAAE;AAChC,QAAQ,IAAI,yBAAyB,GAAG,EAAE;;AAE1C,QAAQ,IAAI,IAAI,GAAG,KAAK;AACxB,QAAQ,IAAI,kBAAkB,GAAG,IAAI;;;AAGrC,QAAQ,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;;AAE7D,QAAQ,KAAK,MAAM,MAAM,IAAI,SAAS,EAAE;AACxC;AACA,YAAY,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM;AAC3C,YAAY,MAAM,gBAAgB,GAAG,oBAAoB,GAAG,MAAM,CAAC,gBAAgB,GAAG,IAAI;;AAE1F;AACA;AACA,YAAY,IAAI,cAAc,GAAG,IAAI;AACrC,YAAY,IAAI,eAAe,GAAG,eAAe;;AAEjD,YAAY,IAAI,QAAQ,IAAI,MAAM,EAAE;AACpC,gBAAgB,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,GAAG,MAAM,CAAC,MAAM;;AAE5E;AACA,gBAAgB,WAAW,IAAI,WAAW;AAC1C,gBAAgB,kBAAkB,GAAG,SAAS,GAAG,YAAY;;AAE7D;AACA;AACA;AACA;AACA,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,eAAe,GAAG,WAAW,GAAG,cAAc,GAAG,eAAe;AACpF;;AAEA,gBAAgB,IAAI,YAAY,EAAE;AAClC,oBAAoB,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACpE,wBAAwB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1D,wBAAwB,IAAI,KAAK,IAAI,eAAe,EAAE;AACtD;AACA;AACA,4BAA4B,IAAI,cAAc,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,eAAe,IAAI,cAAc,GAAG,kBAAkB,EAAE;AAC5H,gCAAgC;AAChC;AACA,4BAA4B,cAAc,GAAG,KAAK;AAClD;AACA;AACA;AACA;;AAEA,YAAY,IAAI,cAAc,GAAG,EAAE;AACnC,YAAY,IAAI,wBAAwB,GAAG,EAAE;;AAE7C;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACvD,gBAAgB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAClD;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,IAAI,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAChD,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AACrD,oBAAoB,MAAM,QAAQ,GAAG,8DAA8D,CAAC,wBAAwB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;AAEnJ,oBAAoB,IAAI,QAAQ,KAAK,SAAS,EAAE;AAChD;AACA;AACA;AACA,wBAAwB,IAAI,aAAa,KAAK,IAAI,IAAI,QAAQ,KAAK,aAAa,IAAI,CAAC,iBAAiB,EAAE;AACxG,4BAA4B,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC;AAChE,4BAA4B,MAAM,eAAe,GAAG,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACtG,4BAA4B,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;AAC9E,4BAA4B,KAAK,CAAC,IAAI,GAAG,aAAa;AACtD,4BAA4B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;AAE9C;AACA,4BAA4B,eAAe,GAAG,EAAE;AAChD,4BAA4B,cAAc,GAAG,EAAE;AAC/C,4BAA4B,KAAK,GAAG,SAAS,EAAE;AAC/C;;AAEA,wBAAwB,aAAa,GAAG,KAAK,CAAC,QAAQ,GAAG,QAAQ;AACjE;AAGA,iBAAiB,MAAM,IAAI,KAAK,IAAI,eAAe,IAAI,KAAK,IAAI,aAAa,EAAE;AAC/E;AACA,oBAAoB,MAAM,IAAI,GAAG,CAAC,KAAK,GAAG,eAAe,IAAI,cAAc,GAAG,WAAW;AACzF,oBAAoB,MAAM,YAAY,GAAG,IAAG,4CAA4C,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;;AAExG,oBAAoB,IAAI,cAAc,KAAK,IAAI,IAAI,KAAK,IAAI,cAAc,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI,GAAG,IAAI;AACnC,qBAAqB,MAAM,IAAI,IAAI,KAAK,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,GAAG,eAAe,CAAC,EAAE;AAChG,wBAAwB,IAAI,GAAG,KAAK;AACpC,qBAAqB,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC5D,wBAAwB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY;AACzD,qBAAqB,MAAM;AAC3B;AACA,wBAAwB,IAAI,YAAY,KAAK,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAMxC,MAAM;AAC/B,4BAA4B,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY;;AAE7D;AACA,4BAA4B,eAAe,CAAC,IAAI,CAAC,cAAc;;AAE/D,4BAA4B,IAAI,oBAAoB,EAAE;AACtD,gCAAgC,yBAAyB,CAAC,IAAI,CAAC,wBAAwB,CAAC;AACxF;AACA,4BAA4B,MAAM,CAAC,eAAe,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,yBAAyB;AAC/G,gCAAgC,eAAe,EAAE;AACjD;;AAEA,4BAA4B,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe;AAC7E,4BAA4B,KAAK,CAAC,IAAI,GAAG;;AAEzC,4BAA4B,IAAI,oBAAoB,EAAE;AACtD,gCAAgC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB;AACxE,oCAAoC,eAAe,EAAE,yBAAyB,EAAE,aAAa;AAC7F;AACA;;AAEA,4BAA4B,MAAM,CAAC,IAAI,CAAC,KAAK;;AAE7C;AACA,4BAA4B,eAAe,GAAG;AAC9C,4BAA4B,cAAc,GAAG;AAC7C,4BAA4B,yBAAyB,GAAG;AACxD,4BAA4B,wBAAwB,GAAG;AACvD,4BAA4B,KAAK,GAAG,SAAS;AAC7C;AACA;;AAEA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,oBAAoB,cAAc,CAAC,IAAI,CAAC,KAAK;;AAE7C,oBAAoB,IAAI,oBAAoB,EAAE;AAC9C,wBAAwB,IAAI,UAAU,GAAG,IAAG,4CAA4C,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,CAAC,CAAC;;AAErI,wBAAwB,IAAI,QAAQ;AACpC,wBAAwB,IAAI,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE;AAC7D,4BAA4B,QAAQ,GAAG,IAAG,4CAA4C,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,EAAE,CAAC,CAAC;;AAEvI;AACA;AACA,4BAA4B,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AACrE,4BAA4B,IAAI,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;AAC3E;AACA,gCAAgC,QAAQ,GAAG,IAAG,4CAA4C,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,cAAc,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AACrJ;AACA,yBAAyB,MAAM;AAC/B;AACA,4BAA4B,QAAQ,GAAG,IAAI;AAC3C;AACA,wBAAwB,wBAAwB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC7E;;AAEA;AACA;;AAEA,YAAY,IAAI,QAAQ,IAAI,MAAM,EAAE;AACpC,gBAAgB,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,GAAG,MAAM,CAAC,MAAM;AAC5E,gBAAgB,WAAW,IAAI,SAAS,GAAG;AAC3C;;AAEA;AACA,YAAY,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,gBAAgB,eAAe,CAAC,IAAI,CAAC,cAAc;AACnD,gBAAgB,IAAI,oBAAoB,EAAE;AAC1C,oBAAoB,yBAAyB,CAAC,IAAI,CAAC,wBAAwB,CAAC;AAC5E;AACA,aAAa,MAAM,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AACnE;AACA,gBAAgB,KAAK,GAAG,SAAS;AACjC,gBAAgB,eAAe,GAAG;AAClC,gBAAgB,cAAc,GAAG;AACjC,gBAAgB,yBAAyB,GAAG,EAAE;AAC9C,gBAAgB,wBAAwB,GAAG,EAAE;AAC7C;;AAEA;;AAEA,QAAQ,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC,YAAY,IAAI,oBAAoB,IAAI,iBAAiB,EAAE;AAC3D;AACA;AACA,gBAAgB,MAAM,IAAI,KAAK;AAC/B,oBAAoB,6GAA6G;AACjI,oBAAoB;AACpB,iBAAiB;AACjB;;AAEA;AACA,YAAY,MAAM,CAAC,eAAe,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,yBAAyB,CAAC;;AAE3I;AACA,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;AAC9D,YAAY,KAAK,CAAC,IAAI,GAAG,aAAa;AACtC,YAAY,IAAI,oBAAoB,EAAE;AACtC,gBAAgB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB;AACxD,oBAAoB,eAAe,EAAE,yBAAyB,EAAE,aAAa;AAC7E;AACA;AACA,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9B;;AAEA,QAAQ,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;;AAE1C;AACA,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AAClE,QAAQ,IAAI,iBAAiB,IAAI,eAAe,EAAE;AAClD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpD,gBAAgB,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AACvC,gBAAgB,IAAI,CAAC,iBAAiB,EAAE;AACxC,oBAAoB,OAAO,KAAK,CAAC,WAAW,CAAC;AAC7C;;AAEA,gBAAgB,IAAI,CAAC,eAAe,EAAE;AACtC,oBAAoB,OAAO,KAAK,CAAC,UAAU,CAAC;AAC5C;AACA;AACA,YAAY,IAAI,oBAAoB,EAAE;AACtC,gBAAgB,MAAM,UAAU,GAAG,EAAE;AACrC,gBAAgB,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAC5C,oBAAoB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;AACpD,wBAAwB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7C;AACA;AACA,gBAAgB,QAAQ,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE;AACnD,aAAa,MAAM;AACnB,gBAAgB,QAAQ,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE;AAC/C;AACA;AACA,QAAQ,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,CAAC,SAAS,EAAE,yBAAyB,GAAG,IAAI,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,UAAU,GAAG,YAAY,CAAC,MAAM;AAC5C,QAAQ,IAAI,aAAa,GAAG,EAAE;;AAE9B,QAAQ,MAAM,6BAA6B,GAAG,KAAK,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,yBAAyB,CAAC,MAAM,GAAG,CAAC;AAC9H,QAAQ,IAAI,8BAA8B,GAAG,6BAA6B,GAAG,EAAE,GAAG,IAAI;AACtF,QAAQ,IAAI,6BAA6B,GAAG,6BAA6B,GAAG,yBAAyB,CAAC,CAAC,CAAC,GAAG,IAAI;AAC/G,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,MAAM,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;AAC9C,YAAY,IAAI,GAAG,GAAG,GAAG;AACzB,YAAY,IAAI,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,YAAY,MAAM,WAAW,GAAG,aAAa,CAAC,MAAM;AACpD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAC/D;AACA;AACA;AACA,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC;AAC7D,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC;AACnF,gBAAgB,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC;AACpE,gBAAgB,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;AAC9D,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AAC1D,gBAAgB,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC;AACxE,gBAAgB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;AAClD,oBAAoB,MAAM,IAAI,KAAK,CAAC,2GAA2G,CAAC;AAChJ;;AAEA,gBAAgB,IAAI,OAAO;AAC3B,gBAAgB,IAAI,6BAA6B,EAAE;AACnD;AACA;AACA,oBAAoB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG;AACpD,wBAAwB,IAAI,KAAK,KAAK,CAAC,GAAG;AAC1C,2BAA2B,6BAA6B,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,yBAAyB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG;AAC1H,qBAAqB,CAAC,CAAC,MAAM;AAC7B,iBAAiB,MAAM;AACvB,oBAAoB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AACpF;;AAEA;AACA,gBAAgB,MAAM,GAAG,GAAG,CAAC,GAAG,OAAO;AACvC,gBAAgB,MAAM,QAAQ,GAAG,OAAO,GAAG,CAAC,GAAG,GAAG;AAClD,gBAAgB,IAAI,OAAO,GAAG,CAAC,IAAI,QAAQ,GAAG,GAAG,EAAE;AACnD,oBAAoB,GAAG,GAAG,QAAQ;AAClC,oBAAoB,UAAU,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC;AAC7E;AACA;AACA,YAAY,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,GAAG,UAAU;AAC3E,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,SAAS,IAAI,CAAC,CAAC;AAClE,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,UAAU,IAAI,CAAC,CAAC;AACrE,YAAY,aAAa,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACjE,YAAY,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC;AACxD,YAAY,UAAU,GAAG,YAAY,CAAC,MAAM;;AAE5C,YAAY,IAAI,6BAA6B,EAAE;AAC/C,gBAAgB,8BAA8B,CAAC,IAAI,CAAC,GAAG,6BAA6B,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACvG,gBAAgB,6BAA6B,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC5F;AACA;AACA,QAAQ,aAAa,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;;AAE3C,QAAQ,IAAI,6BAA6B,EAAE;AAC3C,YAAY,8BAA8B,CAAC,IAAI,CAAC,GAAG,6BAA6B,CAAC;AACjF,YAAY,OAAO,CAAC,aAAa,EAAE,8BAA8B,CAAC;AAClE,SAAS,MAAM;AACf,YAAY,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;AACtC;AACA;;AAEA;AACA,IAAI,qBAAqB,CAAC,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE;;AAE9D,QAAQ,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,QAAQ,CAAC;;AAEvF,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/C,YAAY,MAAM,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC;AAC5C,YAAY,OAAO,CAAC,IAAI,CAAC;AACzB,gBAAgB,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9B,gBAAgB,SAAS,EAAE;AAC3B,oBAAoB,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,oBAAoB,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,iBAAiB;AACjB,aAAa,CAAC;AACd;AACA,QAAQ,OAAO,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,sBAAsB,GAAG,YAAY,EAAE,mBAAmB,GAAG,oBAAoB,EAAE;AAChI,QAAQ,QAAQ,GAAG,QAAQ,IAAI,SAAS;;AAExC,QAAQ,IAAI,KAAK,EAAE,WAAW,EAAE,aAAa;;AAE7C,QAAQ,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAClF;AACA,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM;AAClF,SAAS,MAAM;AACf,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM;AACjF;;AAEA,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,sBAAsB,EAAE,mBAAmB,CAAC;AACrH;;AAEA;AACA,IAAI,MAAM;AACV,QAAQ,SAAS;AACjB,QAAQ,WAAW;AACnB,MAAM;AACN,QAAQ,IAAI,IAAI;AAChB;AACA,QAAQ,IAAI,WAAW,EAAE,sBAAsB,EAAE;AACjD,YAAY,IAAI,SAAS,YAAY,6CAA6C,CAAC,MAAM,EAAE;AAC3F,gBAAgB,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC;AAC7D;AACA,YAAY,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,WAAW,CAAC;AACpE,SAAS,MAAM;AACf,YAAY,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,QAAQ,MAAM,cAAc,GAAG,WAAW,EAAE,cAAc,IAAI,IAAI;;AAElE,QAAQ,MAAM,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3E;AACA,QAAQ,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;AAC1B,QAAQ,KAAK,IAAI,KAAK,IAAI,SAAS,EAAE;AACrC,YAAY,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,YAAY,IAAI,KAAK,IAAI,eAAe,EAAE;AAC1C,gBAAgB,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,eAAe,IAAI,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC;AACzF,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;AAChD,gBAAgB,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;AAChC,aAAa,MAAM;AACnB,gBAAgB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACvD;AACA;AACA,QAAQ,OAAO,GAAG,OAAO,CAAC,GAAG;AAC7B,YAAY,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW;AACxE;;AAEA,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,CAAC,MAAM,EAAE;AACjC,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACjD;AACA,YAAY,sBAAsB,EAAE,IAAI;AACxC,SAAS,CAAC;AACV,QAAQ,MAAM,gBAAgB,GAAG,QAAQ;;AAEzC,QAAQ,MAAM,KAAK,GAAG;AACtB,QAAQ,MAAM,WAAW,GAAG;AAC5B,QAAQ,MAAM,aAAa,GAAG;AAC9B,QAAQ,IAAI,cAAc,GAAG;AAC7B,QAAQ,IAAI,eAAe,GAAG;AAC9B,QAAQ,IAAI,cAAc,GAAG;;AAE7B,QAAQ,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE;AACxE,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;;AAE3C,YAAY,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,YAAY,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;;AAE3C,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACxD;AACA,gBAAgB,sBAAsB,EAAE,IAAI;AAC5C,aAAa,CAAC;;AAEd,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,YAAY,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,KAAK,gBAAgB,EAAE;AAC9I,gBAAgB,KAAK,CAAC,IAAI,CAAC,OAAO;AAClC,gBAAgB,WAAW,CAAC,IAAI,CAAC,cAAc;AAC/C,gBAAgB,aAAa,CAAC,IAAI,CAAC,eAAe;AAClD,gBAAgB,cAAc,GAAG;AACjC,gBAAgB,eAAe,GAAG;AAClC,gBAAgB,cAAc,IAAI,OAAO,CAAC,MAAM;AAChD;;AAEA;;AAEA,QAAQ,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,MAAM,EAAE;;AAEhC,QAAQ,MAAM,CAAC,QAAQ,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;;AAEvG,QAAQ,MAAM,KAAK,GAAG;AACtB,QAAQ,MAAM,WAAW,GAAG;AAC5B,QAAQ,MAAM,aAAa,GAAG;;AAE9B,QAAQ,MAAM,gBAAgB,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;AAE7E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;;AAElD,YAAY,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,cAAc,GAAG,mBAAmB,CAAC,CAAC,CAAC;AACzD,YAAY,MAAM,eAAe,GAAG,oBAAoB,CAAC,CAAC,CAAC;;AAE3D;AACA,YAAY,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC;AAC9F,YAAY,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;AACtD,YAAY,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE;AAC1C,YAAY,MAAM,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;;AAE9D,YAAY,IAAI,OAAO,IAAI,UAAU,IAAI,WAAW,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5E,gBAAgB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;AACnC,gBAAgB,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC;AAChD,gBAAgB,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC;AACnD,aAAa,MAAM;AACnB,gBAAgB,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;AAC3C,gBAAgB,KAAK,CAAC,EAAE,CAAC,IAAI,OAAO;AACpC,gBAAgB,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;AACvD,gBAAgB,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC;AAC1D;AACA;;AAEA,QAAQ,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa,CAAC;;AAElD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE;;AAEnE,QAAQ,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC;AAC/C,QAAQ,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC;AACjD,QAAQ,MAAM,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC;;;AAGnD;AACA,QAAQ,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;AACnC,QAAQ,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;;AAEnC,QAAQ,OAAO,CAAC,IAAI,CAAC,EAAE;AACvB,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AACvF,gBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AACvD,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACtH,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACzH,gBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;AAChC,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;AACjC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;AAClC,aAAa,MAAM;AACnB,gBAAgB,CAAC,GAAG,CAAC;AACrB;AACA,YAAY,EAAE,CAAC;AACf;;AAEA;AACA,QAAQ,CAAC,GAAG,CAAC;AACb,QAAQ,CAAC,GAAG,CAAC;AACb,QAAQ,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACpC,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9E,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;AAC1C,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACtH,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,IAAG,2CAA2C,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACzH,gBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;AAChC,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;AACjC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;AAClC,aAAa,MAAM;AACnB,gBAAgB,CAAC,GAAG,CAAC;AACrB;AACA,YAAY,EAAE,CAAC;AACf;;AAEA,QAAQ,OAAO;AACf,YAAY,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;AACnC,YAAY,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/C,YAAY,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAChD;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,mBAAmB,CAAC;AACnD,MAAM,aAAa,SAAS,mBAAmB,CAAC;AAChD,MAAM,eAAe,SAAS,mBAAmB,CAAC;;AAElD;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,mBAAmB,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C,QAAQ,IAAI,CAAC,aAAa,GAAG,gBAAgB;;AAE7C,QAAQ,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM;AAC/D,YAAY,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC1C,SAAS;;AAET,QAAQ,OAAO,CAAC,IAAI,CAAC,0JAA0J;AAC/K;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;;AAEtC;AACA,QAAQ,MAAM,CAAC,SAAS,EAAE,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;;AAE/E,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC;AACA,YAAY,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC;;AAEhD,SAAS,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3C;AACA,YAAY,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,SAAS;;AAE9C,YAAY,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACnE,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,2BAA2B,EAAE,QAAQ,CAAC,qEAAqE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAC1L;AACA,YAAY,OAAO,IAAG,2CAA2C,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACpH;AACA;;AAEA;;AAEA,MAAM,oBAAoB,SAAS,mBAAmB,CAAC;;AAEvD,MAAM,mBAAmB,SAAS,mBAAmB,CAAC;AACtD,MAAM,wBAAwB,SAAS,mBAAmB,CAAC;;AAE3D,MAAM,iBAAiB,SAAS,mBAAmB,CAAC;;AAEpD,MAAM,eAAe,SAAS,mBAAmB,CAAC;;AAElD,MAAM,aAAa,SAAS,mBAAmB,CAAC;;AAEhD,IAAI,WAAW,CAAC,aAAa,EAAE,eAAe,EAAE;AAChD,QAAQ,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC;;AAE7C;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC;AAC1C;AACA;;AAEA,MAAM,eAAe,SAAS,mBAAmB,CAAC;;AAElD,MAAM,eAAe,SAAS,mBAAmB,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,CAAC;AACpB,IAAI,OAAO,uBAAuB,GAAG;AACrC,QAAQ,WAAW;AACnB,QAAQ,mBAAmB;AAC3B,QAAQ,kBAAkB;AAC1B,QAAQ,gBAAgB;AACxB,QAAQ,kBAAkB;AAC1B,QAAQ,aAAa;AACrB,QAAQ,gBAAgB;AACxB,QAAQ,iBAAiB;AACzB,QAAQ,iBAAiB;AACzB,QAAQ,YAAY;AACpB,QAAQ,gBAAgB;AACxB,QAAQ,mBAAmB;AAC3B,QAAQ,oBAAoB;AAC5B,QAAQ,eAAe;AACvB,QAAQ,aAAa;AACrB,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,QAAQ,gBAAgB;AACxB,QAAQ,gBAAgB;AACxB,QAAQ,gBAAgB;AACxB,QAAQ,gBAAgB;AACxB,QAAQ,aAAa;AACrB,QAAQ,eAAe;AACvB,QAAQ,eAAe;AACvB,QAAQ,cAAc;AACtB,QAAQ,aAAa;AACrB,QAAQ,eAAe;AACvB,QAAQ,cAAc;AACtB,QAAQ,kBAAkB;AAC1B,QAAQ,mBAAmB;AAC3B,QAAQ,cAAc;AACtB,QAAQ,eAAe;AACvB,QAAQ,gBAAgB;AACxB,QAAQ,YAAY;AACpB,QAAQ,oBAAoB;AAC5B,QAAQ,mBAAmB;AAC3B,QAAQ,wBAAwB;AAChC,QAAQ,iBAAiB;AACzB,QAAQ,eAAe;AACvB,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,QAAQ,cAAc;AACtB,QAAQ,cAAc;AACtB,QAAQ,eAAe;AACvB,QAAQ,eAAe;;AAEvB;AACA,QAAQ,mBAAmB;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,eAAe,CAAC,6BAA6B,EAAE;AAChE,QAAQ,iBAAiB,GAAG,IAAI;AAChC,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ,gBAAgB,GAAG,KAAK;AAChC,QAAQ,QAAQ,GAAG,MAAM;AACzB,QAAQ,MAAM,GAAG,IAAI;AACrB,KAAK,GAAG,EAAE,EAAE;;AAEZ,QAAQ,MAAM,CAAC,aAAa,EAAE,eAAe,CAAC,GAAG,MAAM,aAAa,CAAC,6BAA6B,EAAE;AACpG,YAAY,iBAAiB;AAC7B,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,SAAS;;AAET;AACA,QAAQ,MAAM,aAAa,GAAG,eAAe,CAAC,eAAe,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,qBAAqB;;AAE5G,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC;AAC7D,QAAQ,IAAI,CAAC,GAAG,EAAE;AAClB,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,yBAAyB,EAAE,aAAa,CAAC,2CAA2C,CAAC,CAAC;AAChH,YAAY,GAAG,GAAG,mBAAmB;AACrC;AACA,QAAQ,OAAO,IAAI,GAAG,CAAC,aAAa,EAAE,eAAe,CAAC;AACtD;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,sBAAsB;AAC5B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,eAAe,EAAE,qBAAqB,eAAe,CAAC;AAC7E,uBAAuB,UAAU,EAAE,qBAAqB,UAAU,CAAC;AACnE,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,eAAe,EAAE,qBAAqB,eAAe;AAC5E,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,iBAAiB,oBAAoB,CAAC;AACzH,qBAAqB,IAAI,sCAAsC,GAAG,mBAAmB,mBAAmB,sBAAsB,CAAC;AAC/H,qBAAqB,IAAI,qCAAqC,GAAG,mBAAmB,kBAAkB,qBAAqB,CAAC;AAC5H,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;AACpH,qBAAqB,IAAI,+BAA+B,GAAG,mBAAmB,WAAW,OAAO,CAAC;AACjG,qBAAqB,IAAI,uCAAuC,GAAG,mBAAmB,oBAAoB,uBAAuB,CAAC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU,CAAC,GAAG,EAAE,aAAa,EAAE;AAC9C,IAAI,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;AAC7C;AACA,QAAQ,MAAM,KAAK;AACnB,YAAY,gGAAgG;AAC5G,YAAY,2EAA2E;AACvF,YAAY;AACZ;AACA;;AAEA,IAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAG,oCAAoC,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,WAAW,EAAE;AACtG,IAAI,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC;AACpE,IAAI,IAAI,OAAO,aAAa,KAAK,WAAW,EAAE;AAC9C,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,4CAA4C,EAAE,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC;AAC5F;AACA,IAAI,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC;;AAE5D;AACA,IAAI,IAAI,KAAK;;AAEb;AACA,IAAI,IAAI,OAAO,CAAC,gBAAgB,KAAK,CAAC,EAAE;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE3C,QAAQ,MAAM,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAC9C,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;;AAE/C,QAAQ,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACjD,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAChE;;AAEA,KAAK,MAAM;AACX;AACA,QAAQ,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AACzC;;AAEA,IAAI,OAAO,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB,CAAC,CAAC,EAAE,GAAG,EAAE;AAC3C,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,QAAQ,OAAO,IAAI,YAAY,EAAE;AACjC;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACjB,QAAQ,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC;;AAEA,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG;AACvB,IAAI,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;;AAExC,IAAI,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;AACxC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AACtD;AACA,IAAI,OAAO,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,CAAC,EAAE;AACpB,IAAI,OAAO,yBAAyB,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,CAAC,EAAE;AACpB,IAAI,OAAO,yBAAyB,CAAC,CAAC,EAAE,IAAI,CAAC;AAC7C;;;AAGA,MAAM,oBAAoB,GAAG;AAC7B,IAAI,KAAK,EAAE,uBAAuB,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;AACpF,IAAI,OAAO,EAAE,uBAAuB,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;AACpF,IAAI,QAAQ,EAAE,uBAAuB,IAAI,EAAE,aAAa,GAAG,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACrH,QAAQ,IAAI,IAAI;AAChB,cAAc,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG;AAC7D,cAAc,GAAG,GAAG,IAAI,GAAG,KAAK;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,EAAE;AAC/C,IAAI,MAAM,EAAE,GAAG,oBAAoB,CAAC,SAAS,CAAC;AAC9C,IAAI,IAAI,CAAC,EAAE,EAAE;AACb,QAAQ,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC;AACjF;;AAEA;AACA,IAAI,OAAO,OAAO,IAAI,KAAK,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACrE;;AAEA,MAAM,oBAAoB,GAAG;AAC7B,IAAI,KAAK,EAAE,uBAAuB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;AAClF,IAAI,OAAO,EAAE,uBAAuB,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;AACpF,IAAI,QAAQ,EAAE,uBAAuB,IAAI,EAAE,aAAa,GAAG,MAAM,EAAE,WAAW,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,IAAI,IAAI;AAClI,UAAU,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,WAAW,CAAC;AACjE,UAAU,KAAK,GAAG,IAAI,GAAG,GAAG;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,EAAE;AAC/C,IAAI,MAAM,EAAE,GAAG,oBAAoB,CAAC,SAAS,CAAC;AAC9C,IAAI,IAAI,CAAC,EAAE,EAAE;AACb,QAAQ,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC;AACjF;;AAEA;AACA,IAAI,OAAO,OAAO,IAAI,KAAK,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8BAA8B,CAAC,SAAS,EAAE,YAAY,EAAE;AACjE,IAAI,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI;AACzC,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC;AACtD,KAAK;;AAEL,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;AAC9B,QAAQ,MAAM,EAAE,SAAS,CAAC;AAC1B,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;;AAE5C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC/B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACtD,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AACrD;AACA;;AAEA,IAAI,MAAM,QAAQ,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC;AAC5C,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;AAEnF,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC/B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;AAC3C,YAAY,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;AACnD,YAAY,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;AACxD,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACvD;AACA;AACA,IAAI,OAAO,GAAG;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,GAAG,KAAK,KAAK,GAAG,GAAG,CAAC,CAAC;AAC1C,IAAI,OAAO,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB,IAAI,kBAAkB;AACtB,IAAI,eAAe;AACnB,IAAI,aAAa;AACjB,IAAI,aAAa;AACjB,IAAI,aAAa;AACjB,IAAI,IAAI,GAAG,IAAI;AACf,IAAI,SAAS,GAAG,KAAK;AACrB,IAAI,0BAA0B,GAAG,KAAK;AACtC,EAAE;AACF,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC5C,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC/D;;AAEA,IAAI,MAAM,OAAO,GAAG,YAAY,CAAC,aAAa,EAAE,SAAS,CAAC;AAC1D,IAAI,MAAM,OAAO,GAAG,YAAY,CAAC,aAAa,EAAE,SAAS,CAAC;AAC1D,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,eAAe,GAAG,CAAC,CAAC;;AAErE,IAAI,IAAI,YAAY,GAAG,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC;AACzD,IAAI,IAAI,SAAS,CAAC;;AAElB,IAAI,IAAI,0BAA0B,EAAE;AACpC,QAAQ,MAAM,aAAa,GAAG,aAAa,IAAI,kBAAkB,GAAG,CAAC,CAAC;AACtE,QAAQ,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,EAAE,SAAS,CAAC;AAC3H,QAAQ,YAAY,GAAG,SAAS;AAChC,KAAK,MAAM;AACX,QAAQ,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC;AAClF;;AAEA,IAAI,MAAM,WAAW,GAAG,8BAA8B,CAAC,SAAS,EAAE,YAAY,CAAC;;AAE/E,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC5C;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,EAAE,CAAC,EAAE;AAClD,YAAY,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC;AACzC,YAAY,MAAM,KAAK,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACvE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,EAAE,CAAC,EAAE;AACzD;AACA,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK;AAClC;AACA;AACA;;AAEA;;AAEA,IAAI,OAAO,WAAW;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;AACxC;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;AACrE,IAAI,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;;AAE9B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3C,QAAQ,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACnC;;AAEA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE;AACpC,QAAQ,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,IAAG,qCAAqC,CAAC,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxG;;AAEA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,EAAE,CAAC,EAAE;AACrC,QAAQ,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,IAAG,qCAAqC,CAAC,sBAAsB,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAChH;;AAEA,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE;AACpF,IAAI,IAAI,SAAS,IAAI,CAAC,EAAE;AACxB,QAAQ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC9D;;AAEA,IAAI,IAAI,SAAS,IAAI,CAAC,EAAE;AACxB,QAAQ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC9D;;AAEA,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;;AAE9C,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AAC9C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACjD,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY;AAC/F;;AAEA,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;AAC3B,QAAQ,IAAI,QAAQ,IAAI,CAAC,EAAE;AAC3B,YAAY,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;AACjE;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAG,sCAAsC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ;AAClG,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;AAC/D;AACA;;AAEA,IAAI,OAAO,WAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,WAAW,EAAE,SAAS,GAAG,GAAG,EAAE,SAAS,GAAG,IAAI,EAAE,QAAQ,GAAG,IAAI,EAAE;AAC1F,IAAI,OAAO,qBAAqB,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,WAAW,EAAE,SAAS,GAAG,GAAG,EAAE,SAAS,GAAG,KAAK,EAAE,QAAQ,GAAG,IAAI,EAAE;AACvF,IAAI,OAAO,qBAAqB,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,YAAY;AAChB,IAAI,UAAU;AACd,IAAI;AACJ,QAAQ,UAAU,GAAG,IAAI;AACzB,QAAQ,KAAK,GAAG,GAAG;AACnB,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,QAAQ,GAAG,SAAS;AAC5B,QAAQ,QAAQ,GAAG,IAAI;AACvB,QAAQ,WAAW,GAAG,IAAI;AAC1B,QAAQ,WAAW,GAAG,IAAI;AAC1B,QAAQ,SAAS,GAAG,KAAK;AACzB,QAAQ,OAAO,GAAG,IAAI;AACtB,QAAQ,SAAS,GAAG,GAAG;AACvB,QAAQ,SAAS,GAAG,KAAK;AACzB,QAAQ,QAAQ,GAAG,IAAI;AACvB,QAAQ,gBAAgB,GAAG,IAAI;;AAE/B;AACA,QAAQ,cAAc,GAAG,IAAI;AAC7B,QAAQ,cAAc,GAAG,IAAI;AAC7B,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,SAAS,GAAG,KAAK;AACzB,KAAK,GAAG;AACR,EAAE;AACF,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM;AACvC,IAAI,IAAI,UAAU,KAAK,IAAI,EAAE;AAC7B,QAAQ,UAAU,GAAG,YAAY;AACjC;AACA,IAAI,IAAI,YAAY,GAAG,UAAU,EAAE;AACnC,QAAQ,MAAM,KAAK,CAAC,CAAC,cAAc,EAAE,YAAY,CAAC,qCAAqC,EAAE,UAAU,CAAC,CAAC,CAAC;AACtG;;AAEA,IAAI,IAAI,aAAa,KAAK,YAAY,EAAE;AACxC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,aAAa,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AAC5G;;AAEA,IAAI,IAAI,UAAU,IAAI,CAAC,EAAE;AACzB,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC/D;;AAEA,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,EAAE;AAChD,QAAQ,MAAM,IAAI,KAAK;AACvB,YAAY,0IAA0I;AACtJ,YAAY;AACZ,SAAS;AACT;;AAEA,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;AACpC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,sBAAsB,CAAC;AACzE;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;AAChE,QAAQ,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC;AACjE;;AAEA;AACA,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,IAAI,UAAU,CAAC;AAC7F,IAAI,IAAI,cAAc,KAAK,IAAI,IAAI,UAAU,GAAG,cAAc,EAAE;AAChE,QAAQ,UAAU,GAAG;AACrB;AACA,IAAI,MAAM,kBAAkB,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG;;AAE3E,IAAI,IAAI,EAAE,GAAG,UAAU;AACvB,IAAI,IAAI,KAAK,GAAG,UAAU;;AAE1B;AACA,IAAI,IAAI,cAAc,KAAK,IAAI,EAAE;AACjC,QAAQ,IAAI,cAAc,GAAG,UAAU,EAAE;AACzC,YAAY,IAAI,MAAM,EAAE;AACxB,gBAAgB,KAAK,GAAG,cAAc;AACtC;AACA,SAAS,MAAM;AACf,YAAY,KAAK,GAAG,EAAE,GAAG,cAAc;AACvC;AACA;;AAEA;AACA,IAAI,MAAM,GAAG,GAAG,IAAI,sCAAsC,CAAC,GAAG,CAAC,UAAU,CAAC;AAC1E,IAAI,MAAM,WAAW,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC;AACpD,IAAI,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC;AAC/D,IAAI,MAAM,uBAAuB,GAAG,IAAI,YAAY,CAAC,kBAAkB,GAAG,KAAK,CAAC;;AAEhF,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;AACjC;AACA,QAAQ,MAAM,MAAM,GAAG,CAAC,GAAG,UAAU;AACrC,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,EAAE,YAAY,CAAC;AAC5E,QAAQ,IAAI,WAAW,KAAK,YAAY,EAAE;AAC1C;AACA;AACA;AACA,YAAY,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;AAChD;;AAEA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACjD;;AAEA,QAAQ,IAAI,gBAAgB,EAAE;AAC9B,YAAY,IAAI,GAAG,GAAG,CAAC;AACvB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAClD,gBAAgB,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;AACrC;AACA,YAAY,MAAM,IAAI,GAAG,GAAG,GAAG,WAAW;AAC1C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAClD,gBAAgB,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI;AACtC;AACA;;AAEA,QAAQ,IAAI,WAAW,KAAK,IAAI,EAAE;AAClC;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACvD,gBAAgB,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,YAAY,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,WAAW;AAC7C;;AAEA;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,WAAW,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;AACvC;;AAEA,QAAQ,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,WAAW,CAAC;;AAEpD;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC;;AAE7B;AACA,YAAY,uBAAuB,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;AACtG;AACA;;AAEA,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACvC;AACA,QAAQ,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACjE,YAAY,uBAAuB,CAAC,CAAC,CAAC,KAAK,GAAG;AAC9C;AACA;;AAEA;AACA,IAAI,MAAM,eAAe,GAAG,WAAW,CAAC,MAAM;;AAE9C;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,MAAM,IAAG,uCAAuC,CAAC,MAAM;AAC1E;AACA,QAAQ,IAAI,uCAAuC,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;AAChI,QAAQ,IAAI,uCAAuC,CAAC,MAAM,CAAC,SAAS,EAAE,uBAAuB,EAAE,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAC3H,KAAK;AACL,IAAI,IAAI,SAAS,EAAE;AACnB,QAAQ,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3C;;AAEA,IAAI,MAAM,aAAa,+BAA+B,QAAQ,CAAC,IAAI,CAAC;AACpE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,QAAQ,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;AAChE;;AAEA,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,EAAE;AAC5C,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,GAAG,eAAe,CAAC;AACtE;AACA,QAAQ,QAAQ,OAAO;AACvB,YAAY,KAAK,KAAK;AACtB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5C,oBAAoB,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AACjE;AACA,gBAAgB;AAChB,YAAY,KAAK,OAAO;AACxB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5C,oBAAoB,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AACnE;AACA,gBAAgB;AAChB,YAAY,KAAK,IAAI;AACrB,gBAAgB,IAAI,KAAK,KAAK,GAAG,EAAE;AACnC,oBAAoB,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;AAClF,iBAAiB,MAAM,IAAI,KAAK,KAAK,GAAG,EAAE;AAC1C,oBAAoB,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;AAC9E,iBAAiB,MAAM;AACvB,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAChG;AACA,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,0DAA0D,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACxG;AACA;;AAEA,IAAI,OAAO,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,aAAa,EAAE,IAAI,EAAE;AAC9C,IAAI,QAAQ,GAAG,IAAI;AACnB,IAAI,YAAY,GAAG,IAAI;AACvB,IAAI,MAAM,GAAG,IAAI;AACjB,CAAC,GAAG,EAAE,EAAE;AACR,IAAI,MAAM,MAAM,GAAG,QAAQ,GAAG,aAAa,GAAG,CAAC,GAAG,aAAa;AAC/D,IAAI,IAAI,MAAM;AACd,IAAI,QAAQ,IAAI;AAChB,QAAQ,KAAK,QAAQ;AACrB,YAAY,MAAM,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACvD,YAAY;AACZ,QAAQ,KAAK,MAAM;AACnB,QAAQ,KAAK,aAAa;AAC1B,YAAY,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACpC,YAAY;AACZ,QAAQ,KAAK,SAAS;AACtB,YAAY,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACpC,YAAY;AACZ,QAAQ,KAAK,OAAO;AACpB,YAAY,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAChE,YAAY;AACZ,QAAQ;AACR,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3D;AACA,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC;AAClD;AACA,IAAI,IAAI,YAAY,KAAK,IAAI,EAAE;AAC/B,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,IAAI,aAAa,GAAG,YAAY,EAAE;AACtC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,aAAa,CAAC,uCAAuC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AACxH;;AAEA,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE;AAClC,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/D,IAAI,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;;AAErC;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;AAChC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;AACpD;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;AAChC;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC;AACjC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;AAChC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AAC/B;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AAC/B;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;AAClC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC;AACtC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AAC/B;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;AAChC;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC;AACjC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;;AAEhD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,EAAE;AAC1D,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACjD;;AAEA,IAAI,OAAO,MAAM;AACjB;;AAEA,SAAS,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC5C,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvD;AACA;;;AAGA,MAAM,QAAQ,CAAC;;AAEf;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,aAAa,EAAE;AACtC,QAAQ,IAAI,CAAC,KAAK,GAAG;AACrB,QAAQ,IAAI,CAAC,aAAa,GAAG;AAC7B;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa;AACvD;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE;AAChC,QAAQ,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;AAC3D,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,IAAI,EAAE;;AAEd,QAAQ,IAAI,oCAAoC,CAAC,IAAI,CAAC,cAAc,EAAE;AACtE,YAAY,IAAI,oCAAoC,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC5E,gBAAgB,MAAM,IAAI,KAAK,CAAC,0CAA0C;AAC1E;AACA,YAAY,EAAE,GAAG,qCAAqC,CAAC,QAAQ;AAC/D,SAAS,MAAM,IAAI,oCAAoC,CAAC,IAAI,CAAC,eAAe,EAAE;AAC9E,YAAY,EAAE,GAAG,6BAA6B,IAAI,sBAAsB,IAAI,KAAK;AACjF,gBAAgB,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE;AACrD,gBAAgB,+BAA+B,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxF;AACA,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,oEAAoE;AAChG;;AAEA,QAAQ,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE;AACpC;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,0BAA0B;AAChC;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB,CAAC;AACnF,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB,CAAC;AAC3F,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB,CAAC;AAC3F,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,cAAc,EAAE,qBAAqB,cAAc;AAC1E,sBAAsB,CAAC;;AAEvB,MAAM,gBAAgB,GAAG,kEAAkE;;AAE3F,MAAM,WAAW,GAAG;AACpB,MAAM,sBAAsB,GAAG;AAC/B,MAAM,oBAAoB,GAAG;AAC7B,MAAM,cAAc,GAAG;AACvB,MAAM,kBAAkB,GAAG;AAC3B,MAAM,sBAAsB,GAAG;;;AAG/B,OAAO,CAAC;;AAER,MAAM,qBAAqB;AAC3B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,sBAAsB,EAAE,qBAAqB,sBAAsB,CAAC;AAC3F,uBAAuB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AACzD,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,kBAAkB,EAAE,qBAAqB,kBAAkB,CAAC;AACnF,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,iBAAiB,EAAE,qBAAqB,iBAAiB,CAAC;AACjF,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ;AAC9D,sBAAsB,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,EAAE;AACnD,IAAI,IAAI,iBAAiB,EAAE,iBAAiB,CAAC,IAAI,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE;AACjC;AACA,IAAI,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,IAAI,OAAO,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,KAAK,YAAY;AACxE;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,CAAC,EAAE;AAC7B,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,CAAC,EAAE;AAC/B,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,EAAE;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,GAAG,EAAE;AAClC,IAAI,MAAM,UAAU,GAAG,EAAE;AACzB,IAAI,IAAI,OAAO,GAAG,GAAG;AACrB,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACnC,QAAQ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACvC,QAAQ,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;AAC5B;AACA,IAAI,OAAO,UAAU;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,GAAG,SAAS,EAAE;AACjD,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;AAC1B,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AAC7B,QAAQ,OAAO,GAAG,CAAC,GAAG,CAAC;AACvB,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;AACpC,QAAQ,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,0BAA0B,CAAC;AAC1D;AACA,IAAI,OAAO,YAAY;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,IAAI,EAAE;AAC9B,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,CAAC,EAAE;AACvB;AACA;AACA,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE;AACtC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;AAC7B;AACA,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;;AAE7C;AACA,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;AACpD,IAAI,YAAY,CAAC,IAAI,GAAG,OAAO;;AAE/B;AACA,IAAI,YAAY,CAAC,QAAQ,GAAG,IAAI;;AAEhC;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;;AAExB;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;;AAEzB;AACA,IAAI,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE;AACxB,IAAI,OAAO,MAAM,CAAC,MAAM;AACxB,QAAQ,EAAE;AACV,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AAC/B,YAAY,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;AACvC,gBAAgB,OAAO,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;AAC1C;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,MAAM,GAAG,CAAC;AAClB,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM;AAC/B,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE;AAC3B,IAAI,IAAI,KAAK,GAAG,CAAC;AACjB,IAAI,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;AACzB,QAAQ,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE,KAAK;AAChC;AACA,IAAI,OAAO,KAAK;AAChB;;;AAGA,OAAO,CAAC;;AAER,MAAM,gCAAgC;AACtC;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,YAAY,EAAE,qBAAqB,YAAY;AACtE,sBAAsB,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,CAAC;;AAEpB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,QAAQ,EAAE;AAClE,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU;AACrC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO;AAC/B;;AAEA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;AAChC;;AAEA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,MAAM,EAAE;AACpB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE;AAC3C,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,gBAAgB,IAAI,CAAC,OAAO,EAAE;AAC9B,aAAa,MAAM;AACnB;AACA,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE;;AAEjD;AACA;AACA,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE;AACnE,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK;AAChD,oBAAoB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;AAC9C;AACA;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI;AACxB;;AAEA;AACA;AACA;AACA;AACA,IAAI,GAAG,GAAG;AACV,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE;AACvC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;AACpC,QAAQ,IAAI,MAAM,GAAG,CAAC,EAAE;AACxB,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC;AACjC;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AACxB,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,QAAQ,OAAO,WAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,KAAK,EAAE;AACnB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,EAAE;AACzC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;AAC7B,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,QAAQ,OAAO,aAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,CAAC,EAAE;AACf,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,CAAC,EAAE;AACb,QAAQ,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,CAAC,EAAE;AACd,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;AAChB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,OAAO,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;AACpE,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAChD,YAAY,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,IAAI,IAAI,GAAG,CAAC;AACpB,QAAQ;AACR,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;AAClF,aAAa,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;AACpF,UAAU;AACV,YAAY,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjH,kBAAkB,IAAI,CAAC,MAAM,CAAC,IAAI;AAClC,kBAAkB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAClC,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC;AACtC,YAAY,IAAI,GAAG,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,QAAQ,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;AAC3D;AACA;;AAEA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;AACf,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,EAAE;AAC1C;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AAC5B,QAAQ,KAAK,MAAM,EAAE,IAAI,IAAI,EAAE;AAC/B,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;AAC7C,YAAY,IAAI,KAAK,KAAK,SAAS,EAAE;AACrC,gBAAgB,KAAK,GAAG,YAAY,CAAC,OAAO,EAAE;AAC9C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC;AAC5C;AACA,YAAY,IAAI,GAAG,KAAK;AACxB;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE;AAC9B,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AAC5B,QAAQ,IAAI,IAAI,KAAK,SAAS,EAAE;;AAEhC,QAAQ,IAAI,MAAM,GAAG,EAAE;AACvB,QAAQ,KAAK,MAAM,EAAE,IAAI,IAAI,EAAE;AAC/B,YAAY,MAAM,IAAI,EAAE;AACxB,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;AACxC,YAAY,IAAI,IAAI,KAAK,SAAS,EAAE;AACpC,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE;AAC7B,gBAAgB,MAAM,MAAM;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,YAAY,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAClC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,GAAG;AACrB,QAAQ,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC;AACjD;AACA;;AAEA;AACA;AACA;AACA,MAAM,YAAY,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE;AAClD,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzC,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AACpC,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC;AACxE,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC;;AAEtE,QAAQ,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AACvE,QAAQ,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;AAC9E,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACpC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACpC,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3C,QAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE;AACxC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AACxC,QAAQ,MAAM,IAAI,GAAG,IAAI,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;AAC9E,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG;AAC5B,QAAQ,IAAI,GAAG,GAAG,CAAC;AACnB,QAAQ,OAAO,GAAG,IAAI,GAAG,EAAE;AAC3B,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;AAClD,gBAAgB,OAAO,EAAE;AACzB;AACA,YAAY,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpD,gBAAgB,KAAK,CAAC,IAAI,GAAG,IAAI;AACjC,gBAAgB,IAAI,SAAS,GAAG,GAAG;AACnC,gBAAgB,IAAI,QAAQ,GAAG,IAAI;AACnC,gBAAgB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtD,oBAAoB,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK;AACpE,oBAAoB,IAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,GAAG,SAAS,EAAE;AAChE,wBAAwB,QAAQ,GAAG,KAAK,CAAC,KAAK,EAAE;AAChD,wBAAwB,SAAS,GAAG,KAAK;AACzC;AACA;;AAEA,gBAAgB,IAAI,QAAQ,KAAK,IAAI,EAAE;AACvC,oBAAoB,KAAK,CAAC,IAAI,GAAG,QAAQ;AACzC,oBAAoB,KAAK,CAAC,cAAc,GAAG,SAAS;AACpD,iBAAiB,MAAM;AACvB,oBAAoB,OAAO,EAAE;AAC7B;AACA;AACA,YAAY,EAAE,GAAG;AACjB;;AAEA,QAAQ,MAAM,OAAO,GAAG,EAAE;AAC1B,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5C,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI;AAC9B,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;AAC3B,YAAY,OAAO,EAAE;AACrB;;AAEA,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;AAC/B,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACnC,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AACtC,YAAY,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;AAClC,YAAY,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;AACjC;;AAEA,QAAQ,OAAO,CAAC,OAAO,EAAE;AACzB,QAAQ,OAAO,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE;AAChB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AAC1E;;AAEA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;AACpC,QAAQ,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;AACpC,QAAQ,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;AACxC;AACA;AACA,MAAM,gBAAgB,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;AACrD,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,cAAc,GAAG,GAAG;AACjC;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,CAAC,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;AACpG,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;AAC1B,QAAQ,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;AAC9C,QAAQ,OAAO,CAAC;AAChB;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,YAAY,EAAE,qBAAqB,YAAY;AACtE,sBAAsB,CAAC;;AAEvB;AACA;AACA;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;AACnC,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,MAAM,EAAE,QAAQ;AACpB,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,GAAG,EAAE,KAAK;;AAEd,IAAI,KAAK,EAAE,OAAO;AAClB,IAAI,WAAW,EAAE,WAAW;AAC5B,IAAI,WAAW,EAAE,WAAW;AAC5B,IAAI,WAAW,EAAE,WAAW;AAC5B,CAAC,CAAC;;AAEF;AACA;AACA;;;AAGA,OAAO,CAAC;;AAER,MAAM,uBAAuB;AAC7B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,UAAU,EAAE,qBAAqB,UAAU,CAAC;AACnE,uBAAuB,4BAA4B,EAAE,qBAAqB,4BAA4B,CAAC;AACvG,uBAAuB,4BAA4B,EAAE,qBAAqB,4BAA4B,CAAC;AACvG,uBAAuB,qBAAqB,EAAE,qBAAqB,qBAAqB;AACxF,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;AACpH,qBAAqB,IAAI,wCAAwC,GAAG,mBAAmB,qBAAqB,wBAAwB,CAAC;AACrI;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,qBAAqB,GAAG,CAAC,YAAY;AAC3C;AACA,IAAI,IAAI,YAAY;;AAEpB,IAAI,OAAO,kBAAkB;AAC7B,QAAQ,IAAI,YAAY,KAAK,SAAS,EAAE;AACxC,YAAY,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAChF,gBAAgB,YAAY,GAAG,KAAK;AACpC,aAAa,MAAM;AACnB,gBAAgB,IAAI;AACpB,oBAAoB,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE;AACxE,oBAAoB,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC;AACrE,iBAAiB,CAAC,OAAO,CAAC,EAAE;AAC5B,oBAAoB,YAAY,GAAG,KAAK;AACxC;AACA;AACA;AACA,QAAQ,OAAO,YAAY;AAC3B,KAAK;AACL,CAAC,GAAG;;AAEJ,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;AACjC,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,EAAE,EAAE,IAAI;AACZ,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,KAAK,EAAE,OAAO;AAClB,IAAI,EAAE,EAAE,IAAI;AACZ,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,KAAK,EAAE,OAAO;AAClB,CAAC,CAAC;AACF;;AAEA,MAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;AACnD;AACA,IAAI,CAAC,wCAAwC,CAAC,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE;AAC/E,CAAC,CAAC;;AAEF;AACA,MAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;AACnD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;AACzB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,OAAO;AAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,OAAO;AAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ;AAChC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,YAAY;AACjC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,KAAK;AAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ;AAChC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,OAAO;AAC9B,CAAC,CAAC;;;AAGF,OAAO,CAAC;;AAER,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ;AAC9D,sBAAsB,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,uBAAuB,MAAM;AAC3C;AACA;AACA;AACA,IAAI,WAAW,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,OAAO,GAAG,UAAU,GAAG,IAAI,EAAE;AACzC,YAAY,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI;AACxC;AACA,QAAQ,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE;AACnB,QAAQ,MAAM,KAAK,CAAC,yCAAyC;AAC7D;AACA,CAAC,CAAC;;;AAGF,OAAO,CAAC;;AAER,MAAM,oBAAoB;AAC1B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,wBAAwB,EAAE,qBAAqB,wBAAwB,CAAC;AAC/F,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,YAAY,EAAE,qBAAqB,YAAY;AACtE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,+BAA+B,GAAG,mBAAmB,WAAW,OAAO,CAAC;AACjG,qBAAqB,IAAI,iCAAiC,GAAG,mBAAmB,aAAa,OAAO,CAAC;AACrG,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;AACpH,qBAAqB,IAAI,qCAAqC,GAAG,mBAAmB,kBAAkB,qBAAqB,CAAC;;AAE5H;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB,GAAG,GAAG;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,gBAAgB,GAAG;AACzB,IAAI,KAAK,EAAE,YAAY;AACvB,IAAI,MAAM,EAAE,WAAW;AACvB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,IAAI,EAAE,iBAAiB;AAC3B,IAAI,MAAM,EAAE,kBAAkB;AAC9B,IAAI,KAAK,EAAE,WAAW;AACtB,IAAI,KAAK,EAAE,YAAY;AACvB,IAAI,MAAM,EAAE,YAAY;AACxB,IAAI,KAAK,EAAE,WAAW;AACtB;AACA,MAAM,YAAY,CAAC;;AAEnB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE;;AAEpC,QAAQ,IAAI,CAAC,MAAM,GAAG,+BAA+B,CAAC,UAAU,CAAC,QAAQ,CAAC;AAC1E,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;AACzB,YAAY,IAAI,CAAC,MAAM,GAAG,GAAG;AAC7B,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI;;AAElC,YAAY,IAAI,KAAK,GAAG,+BAA+B,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAC1E,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;;AAErE,YAAY,IAAI,CAAC,iBAAiB,EAAE;;AAEpC,YAAY,MAAM,MAAM,GAAG,+BAA+B,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACrF,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,cAAc,CAAC;AAC3C,gBAAgB,KAAK,CAAC,UAAU,EAAE;AAClC,oBAAoB,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,KAAK,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3E,oBAAoB,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;AAC9D,oBAAoB,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACtE,iBAAiB;AACjB,gBAAgB,MAAM,GAAG;AACzB,oBAAoB,MAAM,CAAC,OAAO,EAAE;AACpC;AACA,aAAa,CAAC;AACd,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,MAAM,GAAG,GAAG;AAC7B,YAAY,IAAI,CAAC,UAAU,GAAG,WAAW;AACzC,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB;AACA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE;AACjF,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,gBAAgB,CAAC,SAAS,CAAC,IAAI,0BAA0B,CAAC;AACnG;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;AACtD,QAAQ,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;AACrC,QAAQ,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;AACrC,QAAQ,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;AAC7C,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;AACpD,QAAQ,OAAO,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,WAAW,GAAG;AACxB,QAAQ,MAAM,IAAI,GAAG,MAAM,+BAA+B,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3F,QAAQ,mCAAmC,IAAI,CAAC,MAAM;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,MAAM,IAAI,GAAG,MAAM,+BAA+B,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3F,QAAQ,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,MAAM,IAAI,GAAG,MAAM,+BAA+B,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;AACnG,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,MAAM,EAAE,SAAS,GAAG,IAAI,EAAE,UAAU,GAAG,IAAI,EAAE;AACjE,IAAI,IAAI,GAAG;AACX,IAAI,IAAI;AACR,QAAQ,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;AAC7B,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACxD,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,UAAU,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC1D,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO,CAAC,SAAS,EAAE;;AAElC,IAAI,IAAI,oCAAoC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,EAAE;AAChH,QAAQ,OAAO,IAAI,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;;AAErD,KAAK,MAAM,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,EAAE,OAAO,EAAE,IAAI,KAAK,MAAM,EAAE;AACpF,QAAQ,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,gBAAgB;AACrD,QAAQ,MAAM,OAAO,GAAG,oCAAoC,CAAC,GAAG,CAAC,OAAO;;AAExE,QAAQ,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE;AACrC,QAAQ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEhF;AACA,QAAQ,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;AAC/F,QAAQ,IAAI,OAAO,EAAE;AACrB;AACA;AACA;AACA,YAAY,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,EAAE,QAAQ,IAAI,OAAO,CAAC,GAAG,EAAE,eAAe;AAC/E,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/D;AACA;AACA,QAAQ,OAAO,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC;AAC5C,KAAK,MAAM;AACX;AACA;AACA;AACA,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC;AAC/B;AACA;;AAEA,MAAM,aAAa,GAAG;AACtB;AACA,IAAI,GAAG,EAAE,sDAAsD;AAC/D,IAAI,GAAG,EAAE,6BAA6B;AACtC,IAAI,GAAG,EAAE,0BAA0B;AACnC,IAAI,GAAG,EAAE,uBAAuB;AAChC,IAAI,GAAG,EAAE,0DAA0D;;AAEnE;AACA,IAAI,GAAG,EAAE,gEAAgE;AACzE,IAAI,GAAG,EAAE,sDAAsD;AAC/D,IAAI,GAAG,EAAE,8DAA8D;AACvE,IAAI,GAAG,EAAE,0DAA0D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE;AAC/C,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,oCAAoC,CAAC;AACnG,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;AAC9C;;AAEA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,KAAK,CAAC,OAAO,EAAE;;AAEzB,QAAQ,IAAI,QAAQ,GAAG,iCAAiC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACjF,QAAQ,IAAI,IAAI,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC;;AAE7C,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;AACzB,YAAY,OAAO,IAAI;AACvB,SAAS,MAAM;AACf,YAAY,OAAO,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,iBAAiB,GAAG,SAAS,EAAE;AAChE,QAAQ,IAAI,QAAQ,GAAG,iCAAiC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;AAEjF,QAAQ,IAAI;AACZ,YAAY,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;AACxE,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,IAAI,GAAG,CAAC;AACxD,YAAY,IAAI,MAAM,GAAG,CAAC;;AAE1B,YAAY,MAAM,+BAA+B,CAAC,QAAQ,CAAC,KAAK,CAAC,iCAAiC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;AAC1I,YAAY,MAAM,UAAU,GAAG,+BAA+B,CAAC,iBAAiB,CAAC,QAAQ,CAAC;AAC1F,YAAY,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;;AAEpD,YAAY,OAAO,IAAI,EAAE;AACzB,gBAAgB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE;AAC3D,gBAAgB,IAAI,IAAI,EAAE;AAC1B,oBAAoB;AACpB;;AAEA,gBAAgB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACvD,oBAAoB,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK;AACrD,wBAAwB,IAAI,GAAG,EAAE;AACjC,4BAA4B,MAAM,CAAC,GAAG,CAAC;AACvC,4BAA4B;AAC5B;AACA,wBAAwB,OAAO,EAAE;AACjC,qBAAqB,CAAC;AACtB,iBAAiB,CAAC;;AAElB,gBAAgB,MAAM,IAAI,KAAK,CAAC,MAAM;AACtC,gBAAgB,MAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,MAAM,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC;;AAEnE,gBAAgB,iBAAiB,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AAChE;;AAEA,YAAY,UAAU,CAAC,KAAK,EAAE;AAC9B,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB;AACA,YAAY,IAAI;AAChB,gBAAgB,MAAM,+BAA+B,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC/E,aAAa,CAAC,MAAM;AACpB,YAAY,MAAM,KAAK;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ,CAAC,KAAK,EAAE,GAAG,KAAK,EAAE;AACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,IAAI;AACZ,YAAY,IAAI,MAAM,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;AAChD,YAAY,IAAI,MAAM,EAAE,OAAO,MAAM;AACrC,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,YAAY;AACZ;AACA;AACA,IAAI,OAAO,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE,WAAW,GAAG,KAAK,EAAE;;AAExG,IAAI,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,gBAAgB,EAAE;AACpE;;AAEA,QAAQ,IAAI,OAAO,CAAC,gBAAgB,EAAE;AACtC,YAAY,MAAM,KAAK,CAAC,qKAAqK;AAC7L,SAAS,MAAM,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,iBAAiB,EAAE;AAChF,YAAY,MAAM,KAAK,CAAC,wJAAwJ;AAChL;AACA;;AAEA;AACA,IAAI,IAAG,qCAAqC,CAAC,gBAAgB,EAAE,OAAO,CAAC,iBAAiB,EAAE;AAC1F,QAAQ,MAAM,EAAE,UAAU;AAC1B,QAAQ,IAAI,EAAE,eAAe;AAC7B,QAAQ,IAAI,EAAE;AACd,KAAK;;AAEL;AACA;AACA,IAAI,IAAI,KAAK;AACb,IAAI,IAAI,CAAC,KAAK,IAAI,oCAAoC,CAAC,GAAG,CAAC,eAAe,EAAE;AAC5E,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC3C,YAAY,MAAM,KAAK,CAAC,qDAAqD;AAC7E;AACA,QAAQ,IAAI;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;AAC3D,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,YAAY,OAAO,CAAC,IAAI,CAAC,oDAAoD,EAAE,CAAC,CAAC;AACjF;AACA;;AAEA,IAAI,IAAI,CAAC,KAAK,IAAI,oCAAoC,CAAC,GAAG,CAAC,UAAU,EAAE;AACvE;;AAEA;AACA,QAAQ,KAAK,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,IAAI,oCAAoC,CAAC,GAAG,CAAC,QAAQ,CAAC;AACrG;;AAEA,IAAI,IAAI,CAAC,KAAK,IAAI,oCAAoC,CAAC,GAAG,CAAC,cAAc,EAAE;AAC3E;AACA,QAAQ,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,WAAW,EAAE;AACnE,YAAY,MAAM,KAAK,CAAC,kEAAkE;AAC1F;;AAEA;AACA,QAAQ,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE;AACtI,YAAY,MAAM,IAAI,KAAK;AAC3B,gBAAgB,6GAA6G;AAC7H,gBAAgB;AAChB;AACA;AACA,QAAQ,KAAK,GAAG,oCAAoC,CAAC,GAAG,CAAC,WAAW;AACpE;;AAEA,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,MAAM;;AAE/C,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC;AACxD,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,oCAAoC,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC;;AAEjG,IAAI,IAAI,SAAS,GAAG,UAAU;AAC9B,IAAI,IAAI,SAAS,GAAG,QAAQ;AAC5B,QAAQ,oCAAoC,CAAC,GAAG,CAAC,UAAU;AAC3D,QAAQ,oCAAoC,CAAC,GAAG,CAAC;AACjD,aAAa,UAAU,CAAC,SAAS,EAAE,eAAe;AAClD,aAAa,UAAU,CAAC,YAAY,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACnE,QAAQ;AACR,KAAK;;AAEL;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,QAAQ,KAAK,MAAM,GAAG,UAAU,GAAG,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,QAAQ,CAAC;;AAErG;AACA,IAAI,IAAI,QAAQ;AAChB,IAAI,IAAI,gBAAgB,GAAG,KAAK,YAAY,SAAS,GAAG,UAAU,GAAG,SAAS;;AAE9E;AACA,IAAI,IAAI,eAAe,GAAG,KAAK;;AAE/B;AACA,IAAI,IAAI,QAAQ;;AAEhB,IAAI,IAAI,KAAK,EAAE;AACf;AACA;AACA;AACA;AACA,QAAQ,QAAQ,GAAG,MAAM,QAAQ,CAAC,KAAK,EAAE,SAAS,EAAE,gBAAgB,CAAC;AACrE;;AAEA,IAAI,MAAM,QAAQ,GAAG,QAAQ,KAAK,SAAS;;AAE3C,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;AAChC;;AAEA,QAAQ,IAAI,oCAAoC,CAAC,GAAG,CAAC,gBAAgB,EAAE;AACvE;AACA;AACA,YAAY,MAAM,KAAK,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACrE,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,IAAI;AACpB,oBAAoB,QAAQ,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC;AACvD,oBAAoB,QAAQ,GAAG,SAAS,CAAC;AACzC,iBAAiB,CAAC,OAAO,CAAC,EAAE;AAC5B;AACA;AACA,oBAAoB,OAAO,CAAC,IAAI,CAAC,CAAC,gCAAgC,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF;AACA,aAAa,MAAM,IAAI,OAAO,CAAC,gBAAgB,EAAE;AACjD,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,qEAAqE,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACrH,aAAa,MAAM,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,iBAAiB,EAAE;AACpF,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,2EAA2E,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3H;AACA;;AAEA,QAAQ,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/D;AACA;AACA;AACA;;AAEA,YAAY,IAAI,OAAO,CAAC,gBAAgB,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,iBAAiB,EAAE;AACzG;AACA,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,MAAM,KAAK,CAAC,CAAC,gGAAgG,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;AACjJ,iBAAiB,MAAM;AACvB;AACA;AACA,oBAAoB,OAAO,IAAI;AAC/B;AACA;;AAEA;AACA,YAAY,QAAQ,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC;;AAE/C,YAAY,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AACzC,gBAAgB,OAAO,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC;AACrE;;AAEA;AACA,YAAY,QAAQ,GAAG,gBAAgB;AACvC;;AAEA;AACA,QAAQ,eAAe;AACvB,YAAY,KAAK;AACjB,eAAe,OAAO,QAAQ,KAAK,WAAW;AAC9C,eAAe,QAAQ,YAAY,QAAQ;AAC3C,eAAe,QAAQ,CAAC,MAAM,KAAK,IAAG;AACtC;;AAEA;AACA,IAAI,IAAG,qCAAqC,CAAC,gBAAgB,EAAE,OAAO,CAAC,iBAAiB,EAAE;AAC1F,QAAQ,MAAM,EAAE,UAAU;AAC1B,QAAQ,IAAI,EAAE,eAAe;AAC7B,QAAQ,IAAI,EAAE;AACd,KAAK;;AAEL,IAAI,IAAI,MAAM;AACd,IAAI,IAAI,EAAE,oCAAoC,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,EAAE;AACjF;AACA,QAAQ,IAAI,MAAM;;AAElB,QAAQ,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;AACxC;AACA;AACA,YAAY,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;;AAEjE,SAAS,MAAM;AACf,YAAY,QAAQ;AACpB;AACA,YAAY,OAAO,SAAS,KAAK,WAAW,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AACpF,UAAU;AACV;AACA;AACA,YAAY,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;;AAEjE;AACA,YAAY,IAAG,qCAAqC,CAAC,gBAAgB,EAAE,OAAO,CAAC,iBAAiB,EAAE;AAClG,gBAAgB,MAAM,EAAE,UAAU;AAClC,gBAAgB,IAAI,EAAE,eAAe;AACrC,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,gBAAgB,QAAQ,EAAE,GAAG;AAC7B,gBAAgB,MAAM,EAAE,MAAM,CAAC,MAAM;AACrC,gBAAgB,KAAK,EAAE,MAAM,CAAC,MAAM;AACpC,aAAa;AACb,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,MAAM,YAAY,CAAC,QAAQ,EAAE,IAAI,IAAI;AAC1D,gBAAgB,IAAG,qCAAqC,CAAC,gBAAgB,EAAE,OAAO,CAAC,iBAAiB,EAAE;AACtG,oBAAoB,MAAM,EAAE,UAAU;AACtC,oBAAoB,IAAI,EAAE,eAAe;AACzC,oBAAoB,IAAI,EAAE,QAAQ;AAClC,oBAAoB,GAAG,IAAI;AAC3B,iBAAiB;AACjB,aAAa;AACb;AACA,QAAQ,MAAM,GAAG,MAAM;AACvB;;AAEA,IAAI;AACJ;AACA;AACA,QAAQ,eAAe,IAAI;AAC3B;AACA;AACA,SAAS,MAAM,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,SAAS;AAClD,MAAM;AACN,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB;AACA,YAAY,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,0BAA0B,QAAQ,GAAG,OAAO,CAAC,iBAAiB,CAAC;AACnG,SAAS,MAAM;AACf;AACA,YAAY,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,MAAM,EAAE;AAC3D,gBAAgB,OAAO,EAAE,QAAQ,CAAC;AAClC,aAAa,CAAC;AACd,iBAAiB,KAAK,CAAC,GAAG,IAAI;AAC9B;AACA;AACA,oBAAoB,OAAO,CAAC,IAAI,CAAC,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACpF,iBAAiB,CAAC;AAClB;AACA;AACA,IAAI,IAAG,qCAAqC,CAAC,gBAAgB,EAAE,OAAO,CAAC,iBAAiB,EAAE;AAC1F,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,IAAI,EAAE,eAAe;AAC7B,QAAQ,IAAI,EAAE;AACd,KAAK,CAAC;;AAEN,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,MAAM,IAAI,KAAK,CAAC,8CAA8C;AAC1E;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,IAAI,QAAQ,YAAY,YAAY,EAAE;AAC1C,QAAQ,OAAO,QAAQ,CAAC,QAAQ;AAChC;;AAEA,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC5C,IAAI,IAAI,IAAI,YAAY,YAAY,EAAE;AACtC,QAAQ,OAAO,IAAI,CAAC,QAAQ;AAC5B;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;;AAE1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;AAC7E,IAAI,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC;AACjF,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE;AACzB;AACA,QAAQ,OAAO;AACf;;AAEA,IAAI,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;AAC5C,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,2BAA2B,MAAM,EAAE;;AAEtE,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,CAAC,QAAQ,EAAE,iBAAiB,EAAE;;AAEzD,IAAI,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;AAChE,IAAI,IAAI,aAAa,KAAK,IAAI,EAAE;AAChC,QAAQ,OAAO,CAAC,IAAI,CAAC,2FAA2F;AAChH;AACA,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,IAAI,GAAG,CAAC;AAC9C,IAAI,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;AACtC,IAAI,IAAI,MAAM,GAAG,CAAC;;AAElB,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;AAC5C,IAAI,eAAe,IAAI,GAAG;AAC1B,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE;AACnD,QAAQ,IAAI,IAAI,EAAE;;AAElB,QAAQ,MAAM,SAAS,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM;AAC/C,QAAQ,IAAI,SAAS,GAAG,KAAK,EAAE;AAC/B,YAAY,KAAK,GAAG,SAAS;;AAE7B;AACA;AACA,YAAY,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;;AAEnD;AACA,YAAY,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;;AAEjC,YAAY,MAAM,GAAG,SAAS;AAC9B;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;AACjC,QAAQ,MAAM,GAAG,SAAS;;AAE1B,QAAQ,MAAM,QAAQ,GAAG,CAAC,MAAM,GAAG,KAAK,IAAI,GAAG;;AAE/C;AACA,QAAQ,iBAAiB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;;AAEtD,QAAQ,OAAO,IAAI,EAAE;AACrB;;AAEA;AACA,IAAI,MAAM,IAAI,EAAE;;AAEhB,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,KAAK,EAAE;AAC5B;AACA,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AACvC,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;AACrD;AACA,QAAQ,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC,YAAY,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;AACrD;AACA,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1B;;;AAGA,OAAO,CAAC;;AAER,MAAM,sBAAsB;AAC5B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,UAAU,EAAE,qBAAqB,UAAU;AAClE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,qCAAqC,GAAG,mBAAmB,kBAAkB,qBAAqB,CAAC;AAC5H,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,iBAAiB,oBAAoB,CAAC;AACzH,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;AACpH,qBAAqB,IAAI,uCAAuC,GAAG,mBAAmB,oBAAoB,uBAAuB,CAAC;AAClI,qBAAqB,IAAI,kCAAkC,GAAG,mBAAmB,cAAc,OAAO,CAAC;;AAEvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;;;AAGA,IAAI,oBAAoB;AACxB,IAAI,cAAc;AAClB,IAAI,iBAAiB;AACrB,MAAM,uBAAuB,GAAG,oCAAoC,CAAC,IAAI,CAAC,cAAc,IAAI,oCAAoC,CAAC,IAAI,CAAC,gBAAgB;AACtJ,IAAI,uBAAuB,EAAE;AAC7B;AACA,IAAI,oBAAoB,GAAG,uBAAuB,KAAK,wBAAwB,MAAM,KAAK;AAC1F,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACnC,YAAY,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;AAC7E;AACA,QAAQ,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM;AACrD,KAAK;AACL,IAAI,iBAAiB,GAAG,IAAI,CAAC,iBAAiB;AAC9C,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS;;AAEnC,CAAC,MAAM,IAAI,kCAAkC,EAAE;AAC/C;;AAEA,IAAI,iBAAiB,GAAG,+BAA+B,GAAG,KAAK;AAC/D,QAAQ,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE;AAC7C,QAAQ,MAAM,WAAW,GAAG,QAAQ,CAAC,QAAQ;;AAE7C,QAAQ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;;AAE7F,QAAQ,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;AAC1G,QAAQ,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,CAAC,QAAQ,EAAE;AACxE;AACA;AACA,YAAY,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC;AACzC;AACA,QAAQ,OAAO,QAAQ;AACvB;;AAEA,CAAC,MAAM;AACP,IAAI,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC;AAC/D;;;AAGA;AACA,MAAM,kBAAkB,GAAG;AAC3B,IAAI,CAAC,EAAE,SAAS;AAChB,IAAI,CAAC,EAAE,SAAS;AAChB,IAAI,CAAC,EAAE,UAAU;AACjB,IAAI,CAAC,EAAE,SAAS;AAChB,IAAI,CAAC,EAAE,KAAK;AACZ,IAAI,CAAC,EAAE,SAAS;AAChB;;AAEA;AACA;AACA;AACA,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC;AACjC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACxB,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AACzB,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;AAC1B,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACxB,CAAC,CAAC;;AAEF,MAAM,QAAQ,CAAC;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC/C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,IAAI,CAAC,KAAK,EAAE;AAC7B,QAAQ,IAAI,KAAK,YAAY,QAAQ,EAAE;AACvC,YAAY,OAAO,KAAK;AACxB,SAAS,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG,EAAE;AACtE,YAAY,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAC5C,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,wBAAwB,EAAE,OAAO,KAAK,CAAC,CAAC,CAAC;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAY,MAAM,IAAI,KAAK,CAAC,yDAAyD;AACrF;;AAEA,QAAQ,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;AAC3C,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI;AAC7E,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,OAAO,CAAC,GAAG,EAAE;AAC9B,QAAQ,MAAM,QAAQ,GAAG,MAAM,IAAG,oCAAoC,CAAC,OAAO,EAAE,GAAG,CAAC;AACpF,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AACrC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7G;AACA,QAAQ,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;AAC1C,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,QAAQ,CAAC,IAAI,EAAE;AAChC,QAAQ,IAAI,uBAAuB,EAAE;AACrC;AACA,YAAY,MAAM,GAAG,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC;;AAErD,YAAY,MAAM,GAAG,GAAG,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;;AAEpF;AACA,YAAY,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEpC,YAAY,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEzG,SAAS,MAAM;AACf;AACA,YAAY,MAAM,GAAG,GAAG,kCAAkC,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;;AAEpF,YAAY,OAAO,MAAM,iBAAiB,CAAC,GAAG,CAAC;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE,cAAc,GAAG,KAAK,EAAE;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACtC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,yCAAyC,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACzG;;AAEA,QAAQ,IAAI,cAAc,KAAK,KAAK,EAAE;AACtC,YAAY,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9C,SAAS,MAAM,IAAI,cAAc,KAAK,KAAK,EAAE,CAEpC,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,cAAc,CAAC,CAAC,CAAC;AAC5E;AACA,QAAQ,IAAI,EAAE,MAAM,CAAC,IAAI,YAAY,iBAAiB,IAAI,MAAM,CAAC,IAAI,YAAY,UAAU,CAAC,EAAE;AAC9F,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACtE;AACA,QAAQ,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,YAAY,KAAK,CAAC;AAClB,YAAY,KAAK,CAAC;AAClB,YAAY,KAAK,CAAC;AAClB,YAAY,KAAK,CAAC;AAClB,gBAAgB,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChG,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACjC,YAAY,OAAO,IAAI;AACvB;;AAEA,QAAQ,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3E,QAAQ,QAAQ,IAAI,CAAC,QAAQ;AAC7B,YAAY,KAAK,CAAC,CAAC;AACnB,YAAY,KAAK,CAAC;AAClB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACtF,oBAAoB,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5C,oBAAoB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAClD,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEjD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;AACjG;AACA,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5G;AACA,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA,IAAI,GAAG,GAAG;AACV,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACjC,YAAY,OAAO,IAAI;AACvB;;AAEA,QAAQ,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;AAE3E,QAAQ,QAAQ,IAAI,CAAC,QAAQ;AAC7B,YAAY,KAAK,CAAC;AAClB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACvE,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD;AACA,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC1E,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxD;AACA,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5G;AACA,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEhE;;AAEA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACjC,YAAY,OAAO,IAAI;AACvB;;AAEA,QAAQ,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;AAE3E,QAAQ,QAAQ,IAAI,CAAC,QAAQ;AAC7B,YAAY,KAAK,CAAC;AAClB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACvE,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG;AAC3C;AACA,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC1E,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxD,oBAAoB,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG;AAC3C;AACA,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5G;;AAEA,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;AACtE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1H;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACjC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,yCAAyC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxF;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;AACnD,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACjC;AACA,YAAY,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,UAAU,GAAG,CAAC,CAAC;AACjE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AAChF,gBAAgB,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;AAC9D,gBAAgB,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;AAC9D,gBAAgB,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;AAC9D,gBAAgB,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AACpD;AACA,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEpE,SAAS,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACxC;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACjD,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AACnD;AACA,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,gDAAgD,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE;AAChC,QAAQ,QAAQ,GAAG,CAAC;AACpB,KAAK,GAAG,EAAE,EAAE;;AAEZ;AACA,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAC5D,YAAY,OAAO,IAAI;AACvB;;AAEA;AACA,QAAQ,IAAI,cAAc,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,QAAQ;;AAErE;AACA;AACA;AACA;AACA,QAAQ,MAAM,aAAa,GAAG,IAAG,qCAAqC,CAAC,kBAAkB,EAAE,KAAK,CAAC;AACjG,QAAQ,MAAM,cAAc,GAAG,IAAG,qCAAqC,CAAC,kBAAkB,EAAE,MAAM,CAAC;AACnG,QAAQ,IAAI,aAAa,IAAI,cAAc,EAAE;AAC7C,YAAY,OAAO,IAAI;AACvB,SAAS,MAAM,IAAI,aAAa,EAAE;AAClC,YAAY,KAAK,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK;AACvD,SAAS,MAAM,IAAI,cAAc,EAAE;AACnC,YAAY,MAAM,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM;AACvD;;AAEA,QAAQ,IAAI,uBAAuB,EAAE;AACrC;;AAEA;AACA,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ;;AAE7C;AACA,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;;AAE1C;AACA,YAAY,MAAM,GAAG,GAAG,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;;AAE5E;AACA,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;;AAEtD;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;;AAE3G;AACA,YAAY,OAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;;AAEpD,SAAS,MAAM;AACf;AACA,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE;;AAEpC,YAAY,QAAQ,cAAc;AAClC,gBAAgB,KAAK,KAAK;AAC1B,gBAAgB,KAAK,SAAS;AAC9B,oBAAoB,IAAI,cAAc,KAAK,KAAK,IAAI,cAAc,KAAK,SAAS,EAAE;AAClF,wBAAwB,OAAO,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,cAAc,CAAC,8CAA8C,CAAC,CAAC;AACzH,wBAAwB,cAAc,GAAG,UAAU;AACnD;;AAEA,gBAAgB,KAAK,SAAS;AAC9B,gBAAgB,KAAK,UAAU;AAC/B,gBAAgB,KAAK,SAAS;AAC9B;AACA;AACA,oBAAoB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;AACvF,wBAAwB,YAAY,EAAE;AACtC,qBAAqB,CAAC;AACtB,oBAAoB;;AAEpB,gBAAgB,KAAK,SAAS;AAC9B;AACA;AACA,oBAAoB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACrC,wBAAwB,KAAK,EAAE,MAAM;AACrC,wBAAwB,GAAG,EAAE,MAAM;AACnC,wBAAwB,MAAM,EAAE,UAAU;AAC1C,qBAAqB,CAAC;AACtB,oBAAoB;;AAEpB,gBAAgB;AAChB,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC5F;;AAEA,YAAY,OAAO,MAAM,iBAAiB,CAAC,GAAG,CAAC;AAC/C;;AAEA;;AAEA,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;AAC1C,QAAQ,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChC,QAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,QAAQ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;AAC9B,QAAQ,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEpC,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;AACpE;AACA,YAAY,OAAO,IAAI;AACvB;;AAEA,QAAQ,IAAI,uBAAuB,EAAE;AACrC;AACA,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ;;AAE7C;AACA,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;;AAE1C,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK;AACtD,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM;;AAExD;AACA,YAAY,MAAM,GAAG,GAAG,oBAAoB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;;AAElF;AACA,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM;AAChC,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;AAC7C,gBAAgB,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAC5C,aAAa;;AAEb;AACA,YAAY,MAAM,WAAW,GAAG,IAAI,QAAQ;AAC5C,gBAAgB,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI;AAChE,gBAAgB,QAAQ,EAAE,SAAS,EAAE;AACrC,aAAa;;AAEb;AACA,YAAY,OAAO,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC;;AAEnD,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AAC3E,YAAY,OAAO,MAAM,iBAAiB,CAAC,GAAG,CAAC;AAC/C;AACA;;AAEA,IAAI,MAAM,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;AAC7C;AACA,QAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,QAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AAClC,QAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AAC/C,QAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEhD;AACA,QAAQ,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjG,YAAY,OAAO,IAAI;AACvB;;AAEA,QAAQ,MAAM,UAAU,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC;AAC5C,QAAQ,MAAM,WAAW,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC;;AAE7C,QAAQ,IAAI,uBAAuB,EAAE;AACrC;AACA,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ;;AAE7C;AACA,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;;AAE1C;AACA;AACA,YAAY,MAAM,GAAG,GAAG,oBAAoB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;;AAEtF;AACA,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM;AAChC,gBAAgB,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW;AACrD,gBAAgB,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE;AAClC,aAAa;;AAEb;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;;AAE/H;AACA,YAAY,OAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;;AAEpD,SAAS,MAAM;AACf;AACA,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AAC/C,gBAAgB,IAAI,EAAE,KAAK;AAC3B,gBAAgB,GAAG,EAAE,KAAK;AAC1B,gBAAgB,KAAK,EAAE,UAAU;AACjC,gBAAgB,MAAM,EAAE,WAAW;AACnC,aAAa,CAAC;;AAEd,YAAY,OAAO,MAAM,iBAAiB,CAAC,GAAG,CAAC;AAC/C;;AAEA;;AAEA,IAAI,MAAM,WAAW,CAAC,UAAU,EAAE,WAAW,EAAE;AAC/C;AACA,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;AACtE,YAAY,OAAO,IAAI;AACvB;;AAEA;AACA,QAAQ,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,IAAI,CAAC;AAC1D,QAAQ,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,IAAI,CAAC;;;AAG7D,QAAQ,IAAI,uBAAuB,EAAE;AACrC;AACA,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ;;AAE7C;AACA,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;;AAE1C;AACA;AACA,YAAY,MAAM,GAAG,GAAG,oBAAoB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;;AAEtF,YAAY,IAAI,OAAO,GAAG,CAAC;AAC3B,YAAY,IAAI,OAAO,GAAG,CAAC;AAC3B,YAAY,IAAI,KAAK,GAAG,CAAC;AACzB,YAAY,IAAI,KAAK,GAAG,CAAC;;AAEzB,YAAY,IAAI,YAAY,IAAI,CAAC,EAAE;AACnC,gBAAgB,OAAO,GAAG,YAAY;AACtC,aAAa,MAAM;AACnB,gBAAgB,KAAK,GAAG,CAAC,YAAY;AACrC;;AAEA,YAAY,IAAI,aAAa,IAAI,CAAC,EAAE;AACpC,gBAAgB,OAAO,GAAG,aAAa;AACvC,aAAa,MAAM;AACnB,gBAAgB,KAAK,GAAG,CAAC,aAAa;AACtC;;AAEA;AACA,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM;AAChC,gBAAgB,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW;AACzD,gBAAgB,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;AAC1C,aAAa;;AAEb;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;;AAE/H;AACA,YAAY,OAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;;AAEpD,SAAS,MAAM;AACf;AACA,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE;;AAEpC,YAAY,IAAI,YAAY,IAAI,CAAC,IAAI,aAAa,IAAI,CAAC,EAAE;AACzD;AACA,gBAAgB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;AAClC,oBAAoB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;AAClD,oBAAoB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;AAClD,oBAAoB,KAAK,EAAE,UAAU;AACrC,oBAAoB,MAAM,EAAE,WAAW;AACvC,iBAAiB;AACjB,aAAa,MAAM,IAAI,YAAY,IAAI,CAAC,IAAI,aAAa,IAAI,CAAC,EAAE;AAChE;AACA;AACA,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;AACtD,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC;AACtD,gBAAgB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,oBAAoB,GAAG,EAAE,GAAG;AAC5B,oBAAoB,IAAI,EAAE,IAAI;;AAE9B;AACA,oBAAoB,KAAK,EAAE,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI;AACzD,oBAAoB,MAAM,EAAE,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;AAC3D,iBAAiB,CAAC;AAClB,aAAa,MAAM;AACnB;AACA;;AAEA,gBAAgB,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,gBAAgB,IAAI,SAAS,GAAG,CAAC;AACjC,gBAAgB,IAAI,aAAa,GAAG,CAAC,EAAE;AACvC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;AAC7D,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;AAC3E,iBAAiB,MAAM;AACvB,oBAAoB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;AACzD;;AAEA,gBAAgB,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,gBAAgB,IAAI,SAAS,GAAG,CAAC;AACjC,gBAAgB,IAAI,YAAY,GAAG,CAAC,EAAE;AACtC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC;AAC5D,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;AACzE,iBAAiB,MAAM;AACvB,oBAAoB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;AACxD;;AAEA,gBAAgB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,oBAAoB,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AACxC,oBAAoB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AACtC,oBAAoB,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;AACvC,iBAAiB,CAAC,CAAC,OAAO,CAAC;AAC3B,oBAAoB,IAAI,EAAE,SAAS;AACnC,oBAAoB,GAAG,EAAE,SAAS;AAClC,oBAAoB,KAAK,EAAE,UAAU;AACrC,oBAAoB,MAAM,EAAE,WAAW;AACvC,iBAAiB;AACjB;;AAEA,YAAY,OAAO,MAAM,iBAAiB,CAAC,GAAG,CAAC;AAC/C;AACA;;AAEA,IAAI,MAAM,MAAM,CAAC,IAAI,GAAG,WAAW,EAAE,OAAO,GAAG,CAAC,EAAE;AAClD,QAAQ,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAY,MAAM,IAAI,KAAK,CAAC,qDAAqD;AACjF;;AAEA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;AACtC,QAAQ,OAAO,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC5D;;AAEA,IAAI,QAAQ,CAAC,cAAc,GAAG,KAAK,EAAE;AACrC,QAAQ,IAAI,MAAM,GAAG,IAAI,uCAAuC,CAAC,MAAM;AACvE,YAAY,OAAO;AACnB,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AACrC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ;AACnD,SAAS;;AAET,QAAQ,IAAI,cAAc,KAAK,KAAK,EAAE,CAE7B,MAAM,IAAI,cAAc,KAAK,KAAK,EAAE;AAC7C,YAAY,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,cAAc,CAAC,CAAC,CAAC;AAC5E;AACA,QAAQ,OAAO,MAAM;AACrB;;AAEA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAY,MAAM,IAAI,KAAK,CAAC,uDAAuD;AACnF;;AAEA;AACA;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE;;AAE1C;AACA,QAAQ,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;;AAE9E;AACA,QAAQ,MAAM,IAAI,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;AACjF,QAAQ,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE9D,QAAQ,OAAO,YAAY;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI;;AAEtD;AACA,QAAQ,MAAM,SAAS,sBAAsB,IAAI,CAAC,WAAW,CAAC;AAC9D,QAAQ,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ;;AAEzD;AACA,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI;AACrC,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE;AAChC,YAAY,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC;AACnD,SAAS;;AAET;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,EAAE,CAAC,EAAE;AACrD,YAAY,MAAM,WAAW,GAAG,QAAQ,GAAG,CAAC;AAC5C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;AAC/C,gBAAgB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACxD;AACA;AACA,QAAQ,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,GAAG,IAAI,EAAE;AAClD,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,QAAQ,KAAK,IAAI,EAAE;AAC/B,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACpC;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,WAAW,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE,OAAO,IAAI,CAAC;;AAEvD,QAAQ,QAAQ,WAAW;AAC3B,YAAY,KAAK,CAAC;AAClB,gBAAgB,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,IAAI,CAAC,GAAG,EAAE;AAC1B,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5G;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;;AAErB,QAAQ,IAAI,uBAAuB,EAAE;AACrC,YAAY,IAAI,oCAAoC,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC5E,gBAAgB,MAAM,IAAI,KAAK,CAAC,4CAA4C;AAC5E;;AAEA,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE;AACjE,YAAY,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,WAAW;;AAEvE;AACA,YAAY,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;;AAEhD,YAAY,IAAG,qCAAqC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI;;AAEzE,SAAS,MAAM,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,eAAe,EAAE;AAC/E,YAAY,MAAM,IAAI,KAAK,CAAC,8EAA8E;;AAE1G,SAAS,MAAM;AACf,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE;AACtC,YAAY,OAAO,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AACzC;AACA;;AAEA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,uBAAuB,EAAE;AACrC,YAAY,MAAM,IAAI,KAAK,CAAC,0DAA0D;AACtF;;AAEA,QAAQ,OAAO,kCAAkC,CAAC,IAAI,CAAC,IAAI,EAAE;AAC7D,YAAY,GAAG,EAAE;AACjB,gBAAgB,KAAK,EAAE,IAAI,CAAC,KAAK;AACjC,gBAAgB,MAAM,EAAE,IAAI,CAAC,MAAM;AACnC,gBAAgB,QAAQ,EAAE,IAAI,CAAC;AAC/B;AACA,SAAS,CAAC;AACV;AACA;;AAEA;AACA;AACA;AACA,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;AAI/C,OAAO,CAAC;;AAER,MAAM,sBAAsB;AAC5B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,oBAAoB,EAAE,qBAAqB,oBAAoB,CAAC;AACvF,uBAAuB,gBAAgB,EAAE,qBAAqB,gBAAgB,CAAC;AAC/E,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,SAAS,EAAE,qBAAqB,SAAS,CAAC;AACjE,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AACzD,uBAAuB,OAAO,EAAE,qBAAqB,OAAO;AAC5D,sBAAsB,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,GAAG,UAAU,EAAE,aAAa,GAAG,KAAK,EAAE;AACxI;;AAEA;AACA,IAAI,MAAM,OAAO,GAAG,SAAS,GAAG,QAAQ;AACxC,IAAI,MAAM,OAAO,GAAG,UAAU,GAAG,SAAS;;AAE1C;AACA;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,GAAG,SAAS,GAAG,WAAW,CAAC;;AAE/E;AACA,IAAI,MAAM,QAAQ,GAAG,SAAS,GAAG,QAAQ;AACzC,IAAI,MAAM,SAAS,GAAG,UAAU,GAAG,SAAS;;AAE5C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACzC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;AAC5C;AACA,YAAY,MAAM,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC;;AAE/C;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,GAAG,GAAG;AAC/C,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,GAAG,GAAG;;AAE/C;AACA;AACA,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;AACrD,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;;AAEtD,YAAY,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,YAAY,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;;;AAGhC;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;AAC5B,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;;AAE5B;AACA,YAAY,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxC,YAAY,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,YAAY,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAClC,YAAY,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;;AAE5B;AACA,YAAY,MAAM,OAAO,GAAG,EAAE,GAAG,QAAQ;AACzC,YAAY,MAAM,OAAO,GAAG,EAAE,GAAG,QAAQ;AACzC,YAAY,MAAM,IAAI,GAAG,OAAO,GAAG,EAAE;AACrC,YAAY,MAAM,IAAI,GAAG,OAAO,GAAG,EAAE;AACrC,YAAY,MAAM,IAAI,GAAG,OAAO,GAAG,EAAE;AACrC,YAAY,MAAM,IAAI,GAAG,OAAO,GAAG,EAAE;;AAErC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;AAClD;AACA,gBAAgB,MAAM,OAAO,GAAG,CAAC,GAAG,QAAQ;;AAE5C,gBAAgB,OAAO,CAAC,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;AAClD,oBAAoB,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9C,oBAAoB,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9C,oBAAoB,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9C,oBAAoB,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9C;AACA;AACA;;AAEA,IAAI,OAAO,OAAO;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;AACzC;AACA;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AACxC,IAAI,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;;AAEzC,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACtD,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AACrB,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB;;AAEA;AACA,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjE;AACA;AACA,IAAI,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;;AAE5D;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC3C,QAAQ,IAAI,QAAQ,GAAG,CAAC;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC1D,YAAY,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;AACpD,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvC;AACA,QAAQ,YAAY,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACzC;;AAEA,IAAI,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC;AAChC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB;AACA,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE9B;AACA,IAAI,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;;AAEnD;AACA;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;;AAE3D;AACA,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;;AAEjD,IAAI,wBAAwB,UAAU;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B;AACA,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE9B;AACA,IAAI,IAAI,OAAO,GAAG,CAAC;AACnB,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACxC,QAAQ,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5C;;AAEA;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;;AAEpC;AACA,IAAI,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;;AAE3D,IAAI,wBAAwB,aAAa;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE;AACzB,IAAI,IAAI,MAAM,GAAG,CAAC;AAClB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC1C,QAAQ,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACnC;AACA,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE;AAC7B;AACA,IAAI,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;AAEtC;AACA,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;;AAEtC;AACA,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;;AAEtC;AACA,IAAI,MAAM,gBAAgB,GAAG,UAAU,IAAI,UAAU,GAAG,UAAU,CAAC;;AAEnE,IAAI,OAAO,gBAAgB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,GAAG,EAAE;AACxB,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AAClE;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,GAAG,EAAE;AAClB,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,KAAK,CAAC,yBAAyB,CAAC;AAChE,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACpB,IAAI,IAAI,UAAU,GAAG,CAAC;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACzC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;AAC1B,YAAY,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACxB,YAAY,UAAU,GAAG,CAAC;AAC1B;AACA;AACA,IAAI,6FAA6F,CAAC,GAAG,EAAE,UAAU,CAAC;AAClH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,GAAG,EAAE;AAClB,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,KAAK,CAAC,yBAAyB,CAAC;AAChE,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACpB,IAAI,IAAI,UAAU,GAAG,CAAC;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACzC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;AAC1B,YAAY,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACxB,YAAY,UAAU,GAAG,CAAC;AAC1B;AACA;AACA,IAAI,6FAA6F,CAAC,GAAG,EAAE,UAAU,CAAC;AAClH;;AAEA,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B;AACA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAK,CAAC;AACZ;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAC7B,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;AACtD,YAAY,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;;AAE5E,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC;;AAE/B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACvD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI;AACjD,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AAC3C,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AAChD;;AAEA;AACA,QAAQ,IAAI,KAAK,GAAG,CAAC;AACrB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9C,YAAY,EAAE,KAAK;;AAEnB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK;;AAEzD;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AACvD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACtD,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AAC/B,YAAY,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,EAAE;AACjE,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC;AACxD,gBAAgB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,QAAQ;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,GAAG;AACzB,QAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE;AACvC,QAAQ,MAAM,GAAG,GAAG,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC;AAC9D,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AAClD,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACrC,QAAQ,OAAO,GAAG;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE;AACnC,QAAQ,MAAM,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACxD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAChD,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;AACnC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC1B;AACA,QAAQ,OAAO,GAAG;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE;AACzB,QAAQ,IAAI,GAAG,KAAK,IAAI;AACxB,YAAY,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAEzE,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,YAAY;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE;AAC7B,QAAQ,IAAI,GAAG,KAAK,IAAI;AACxB,YAAY,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAEzE,QAAQ,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,YAAY;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE;AAChC,QAAQ,IAAI,GAAG,KAAK,IAAI;AACxB,YAAY,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;;AAEzE,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,YAAY;AAClD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;AAC3C,YAAY,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AAChC;;AAEA,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM;;AAEhC;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;AACjC,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK;AAC7B,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC;;AAEpC,QAAQ,IAAI,MAAM;AAClB,QAAQ,IAAI,CAAC;AACb,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO;AACnC,QAAQ,IAAI,GAAG,KAAK,CAAC,EAAE;AACvB,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE;AACvE,gBAAgB,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;AACpE;AACA,SAAS,MAAM;AACf;AACA,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE;AACvE,gBAAgB,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC;AACzE;AACA;;AAEA;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK;AAChC,QAAQ,KAAK,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;AAChD,YAAY,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC;AACpC,YAAY,MAAM,UAAU,GAAG,GAAG,KAAK,CAAC;;AAExC;AACA,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE;AAC3D;AACA,gBAAgB,MAAM,KAAK,GAAG,MAAM,GAAG,UAAU,GAAG,CAAC;AACrD,gBAAgB,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;AAC1E,oBAAoB,MAAM,CAAC,GAAG,CAAC;AAC/B,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;;AAE5C;AACA,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEzC,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;AAC5C,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACtD,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D;AACA,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,GAAG;AACxC,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,GAAG;AACxC,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,GAAG;AACxC,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,GAAG;AACxC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;AACjD,oBAAoB,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;;AAEjD;AACA,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;AACpD;AACA;;AAEA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC/B,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACnC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACrC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;;AAEzC,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;AAClC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;AACtC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;AACtC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AACzD;AACA;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC;AAC9B,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC;;AAE9B;AACA,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAC5B,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAChC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACnC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACvC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;AACxC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;;AAExC;AACA,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;AACnC,QAAQ,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;;AAEnC;AACA,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG;AAC/B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AACpC;AACA,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM;;AAEhC;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;AACjC,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK;AAC7B,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC;;AAEpC,QAAQ,IAAI,MAAM;AAClB,QAAQ,IAAI,CAAC;AACb,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO;AACnC,QAAQ,IAAI,GAAG,KAAK,CAAC,EAAE;AACvB,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE;AACvE,gBAAgB,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;AACpF;AACA,SAAS,MAAM;AACf;AACA,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE;AACvE,gBAAgB,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC;AACzF;AACA;;AAEA;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK;AAChC,QAAQ,KAAK,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;AAChD,YAAY,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC;AACpC,YAAY,MAAM,OAAO,GAAG,GAAG,KAAK,CAAC;AACrC,YAAY,MAAM,UAAU,GAAG,OAAO,KAAK,CAAC;AAC5C,YAAY,MAAM,WAAW,GAAG,UAAU,KAAK,CAAC;;AAEhD;AACA,YAAY,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,MAAM,IAAI,GAAG,EAAE;AAC3D,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;AAC5E,oBAAoB,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC;AACxC,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU;;AAE5C;AACA,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;AACrC,oBAAoB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEzC;AACA,oBAAoB,MAAM,GAAG,GAAG,EAAE;AAClC,oBAAoB,MAAM,GAAG,GAAG,EAAE;;AAElC,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;AAC5C,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACtD,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D,oBAAoB,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAoB,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;AAC3D,oBAAoB,MAAM,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO;;AAE3D;AACA,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,oBAAoB,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;AACjD,oBAAoB,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;;AAEjD;AACA,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACtC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;;AAE1C;AACA,oBAAoB,IAAI,CAAC,KAAK,CAAC,EAAE;AACjC,wBAAwB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC1C,wBAAwB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AAC9C,wBAAwB;AACxB;;AAEA;AACA,oBAAoB,IAAI,CAAC,KAAK,WAAW;AACzC,wBAAwB;;AAExB,oBAAoB,MAAM,EAAE,GAAG,MAAM,GAAG,UAAU,GAAG,CAAC;AACtD,oBAAoB,MAAM,EAAE,GAAG,MAAM,GAAG,OAAO,GAAG,CAAC;;AAEnD,oBAAoB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7C,oBAAoB,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;AAClD,oBAAoB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7C,oBAAoB,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;AAClD;AACA;AACA;;AAEA;AACA,QAAQ,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC;AAC/B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE;AAC1C,YAAY,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAClC,YAAY,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;AACxD;AACA;;AAEA,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC/B,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;;AAErC,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;AAClC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AAC3B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;AACtC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AAC7D;AACA;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC;AAC9B,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC;;AAE9B;AACA,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAC5B,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACnC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;;AAEpC;AACA,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE;AAC3B,QAAQ,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;;AAEnC;AACA,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG;AAC/B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AAC3B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;AAC7B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG;AAC9B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnC,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AAC3B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;AAC7B,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM,CAAC;;AAEb;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,UAAU,EAAE;AAC5B;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACtC,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;AAC1C,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpD,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM;AAChC,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC;;AAEnB;AACA;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;AACzC,QAAQ,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AAC/C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AACpD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AAChD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AAChD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;AACnD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;;AAEnD;AACA,QAAQ,MAAM,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,UAAU;AAC/C,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACrC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;AAErC;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACzC;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,UAAU,KAAK,CAAC,GAAG,GAAG;;AAErD;AACA,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC;AACtE,YAAY,MAAM,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC;;AAE3D;AACA;AACA,YAAY,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;AAC5B,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;AACzD,YAAY,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;;AAE7D;AACA,YAAY,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;AAClC,YAAY,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5C;AACA,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;AAEtD;AACA;AACA,QAAQ,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC;AACpD;;AAEA,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AACpC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ;AACjC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ;AACjC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW;AACpC,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW;AACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY;AACpC,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB;AAC1C,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;;AAEzB,QAAQ,IAAI,IAAI,EAAE;AAClB;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,gBAAgB,MAAM,EAAE,GAAG,CAAC,GAAG;AAC/B,gBAAgB,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC;;AAEjC,gBAAgB,MAAM,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC;AACxC,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,gBAAgB,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC;AACzC;AACA,SAAS,MAAM;AACf;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,gBAAgB,MAAM,EAAE,GAAG,CAAC,GAAG;AAC/B,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AAC9D,gBAAgB,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC/D;AACA;AACA,QAAQ,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC/C,YAAY,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;;AAE5B,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AACtD,YAAY,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACvD;AACA,QAAQ,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC;;AAE1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAChD,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACrC,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACzC,YAAY,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,YAAY,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEpC,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM;AACzD,YAAY,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM;AAC7D;AACA;;AAEA,IAAI,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AAC7B,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;AAC7C;;AAEA,IAAI,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;AACjC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;AAC5C;AACA;;AAEA,MAAM,GAAG,CAAC;AACV,IAAI,WAAW,CAAC,UAAU,EAAE;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC;AACpD,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,UAAU;AAClD,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC;AAC7C,YAAY,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU;AACvD;AACA;;AAEA,IAAI,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE;AAC9B,QAAQ,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC;AAC1C;;AAEA,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE;AAC1B,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;AACtC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE;;AAExC,IAAI,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,IAAI,CAAC,EAAE;AACjD,QAAQ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AACpE;;AAEA;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;;AAEzD;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;AAEpD,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;;AAErD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC1C,QAAQ,IAAI,WAAW,GAAG,CAAC;;AAE3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,cAAc,EAAE,EAAE,CAAC,EAAE;AAChE,YAAY,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC;AAC7B,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE;AAC3B,gBAAgB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACvC,aAAa,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;AAC7C,gBAAgB,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK;AACrD;;AAEA,YAAY,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/C;;AAEA,QAAQ,MAAM,CAAC,IAAI,EAAE;AACrB,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC;AAC/C;;AAEA,IAAI,OAAO,WAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC9B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC;AACtC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,CAAC,EAAE;AAC1B,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3B,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AACtE,IAAI,OAAO,EAAE;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACtC,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM;AACvC,IAAI,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM;;AAEzC,IAAI,MAAM,WAAW,GAAG,CAAC,aAAa,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC;;AAE7D,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI;AAC3B,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;AAClC,QAAQ,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;;AAElB,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI;AAC5B,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;AAClC,QAAQ,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAC3C,KAAK;;AAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AAC7C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AACjD,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,YAAY,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;AAErC,YAAY,IAAI,CAAC,EAAE,CAAC;AACpB,YAAY,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;AACpC,gBAAgB,CAAC,GAAG,EAAE;AACtB,gBAAgB,CAAC,GAAG,CAAC;AACrB,aAAa,MAAM,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;AAC3C,gBAAgB,CAAC,GAAG,EAAE;AACtB,gBAAgB,CAAC,GAAG,CAAC;AACrB,aAAa,MAAM;AACnB,gBAAgB,CAAC,GAAG,EAAE;AACtB,gBAAgB,CAAC,GAAG,CAAC;AACrB;AACA,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACjD,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAC3B;AACA;;AAEA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AAC7C,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACvB;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AAC7C,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACvB;;AAEA;AACA,IAAI,IAAI,CAAC,GAAG,aAAa;AACzB,IAAI,IAAI,CAAC,GAAG,YAAY;AACxB,IAAI,IAAI,YAAY,GAAG,EAAE;AACzB,IAAI,IAAI,YAAY,GAAG,EAAE;AACzB,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC3B,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAChC,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEhC,QAAQ,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAY,KAAK,CAAC;AAClB,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AACxB,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,EAAE,CAAC;AACnB,gBAAgB;AAChB,YAAY,KAAK,CAAC;AAClB,gBAAgB,EAAE,CAAC;AACnB,gBAAgB;AAChB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK;AAC/B,oBAAoB,CAAC,yDAAyD,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,4BAA4B;AACpH;AACA;AACA;;AAEA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,IAAI,YAAY,CAAC,OAAO,EAAE;;AAE1B,IAAI,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;;AAEvC;;;AAGA,OAAO,CAAC;;AAER,MAAM,uBAAuB;AAC7B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,MAAM,EAAE,qBAAqB,MAAM,CAAC;AAC3D,uBAAuB,GAAG,EAAE,qBAAqB,GAAG,CAAC;AACrD,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,SAAS,EAAE,qBAAqB,SAAS,CAAC;AACjE,uBAAuB,WAAW,EAAE,qBAAqB,WAAW,CAAC;AACrE,uBAAuB,cAAc,EAAE,qBAAqB,cAAc,CAAC;AAC3E,uBAAuB,UAAU,EAAE,qBAAqB,UAAU,CAAC;AACnE,uBAAuB,MAAM,EAAE,qBAAqB,MAAM,CAAC;AAC3D,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,YAAY,EAAE,qBAAqB,YAAY,CAAC;AACvE,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,SAAS,EAAE,qBAAqB,SAAS,CAAC;AACjE,uBAAuB,OAAO,EAAE,qBAAqB,OAAO,CAAC;AAC7D,uBAAuB,mBAAmB,EAAE,qBAAqB,mBAAmB,CAAC;AACrF,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AACzD,uBAAuB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AACzD,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,IAAI,EAAE,qBAAqB,IAAI,CAAC;AACvD,uBAAuB,KAAK,EAAE,qBAAqB,KAAK,CAAC;AACzD,uBAAuB,UAAU,EAAE,qBAAqB,UAAU;AAClE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sCAAsC,GAAG,mBAAmB,mBAAmB,sBAAsB,CAAC;AAC/H,qBAAqB,IAAI,8CAA8C,GAAG,mBAAmB,4BAA4B,wBAAwB,CAAC;AAClJ,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,2BAA2B,uBAAuB,CAAC;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;AAClC,IAAI,OAAO,EAAE,YAAY;AACzB;AACA;AACA,IAAI,OAAO,EAAE,OAAO,YAAY,KAAK,WAAW,GAAG,YAAY,EAAE,WAAW;AAC5E,IAAI,OAAO,EAAE,YAAY;AACzB,IAAI,MAAM,EAAE,KAAK;AACjB,IAAI,IAAI,EAAE,SAAS;AACnB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,MAAM,EAAE,WAAW;AACvB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,MAAM,EAAE,WAAW;AACvB,IAAI,KAAK,EAAE,aAAa;AACxB,IAAI,MAAM,EAAE,cAAc;AAC1B,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,IAAI,EAAE,SAAS;AACnB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;;AAGA,MAAM,MAAM,CAAC;AACb;AACA,IAAI,IAAI,IAAI,GAAG;AACf;AACA,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;AACnC;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACpB;AACA;AACA,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK;AACpC;;AAEA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;AACnC,KAAK;;AAEL;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;AACnC;;AAEA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;AACnC,KAAK;;AAEL;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;AACvC,KAAK;;AAEL,IAAI,UAAU;;AAEd;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,IAAI,EAAE;AACzB,QAAQ,IAAI,IAAG,8CAA8C,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACtF,YAAY,IAAI,CAAC,UAAU,8BAA8B,IAAI,CAAC,CAAC,CAAC,CAAC;AACjE,SAAS,MAAM;AACf;AACA,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,8CAA8C,CAAC,MAAM;AACvF,wCAAwC,IAAI,CAAC,CAAC,CAAC;AAC/C;AACA,8FAA8F,IAAI,CAAC,CAAC,CAAC;AACrG,gBAAgB,IAAI,CAAC,CAAC,CAAC;AACvB,aAAa;AACb;;AAEA,QAAQ,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE;AAC/B,YAAY,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK;AAC/B,gBAAgB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC7C,oBAAoB,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3C,oBAAoB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACjD;AACA,wBAAwB,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AAClD;AACA;AACA;AACA,gBAAgB,OAAO,GAAG,CAAC,GAAG,CAAC;AAC/B,aAAa;AACb,YAAY,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK;AACtC;;AAEA;AACA,gBAAgB,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AACvC;AACA,SAAS,CAAC;AACV;;AAEA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG;AACzB,QAAQ,MAAM,CAAC,UAAU,EAAE,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI;;AAEnD,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7D,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACjD,gBAAgB,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC3D;AACA,SAAS,MAAM;AACf,YAAY,OAAO,IAAI,CAAC;AACxB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,MAAM,CAAC,UAAU,EAAE,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI;;AAEnD,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC;;AAE5C,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7D,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC5D,SAAS,MAAM;AACf,YAAY,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;AAC/D;AACA,YAAY,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;AAC1C,gBAAgB,OAAO,KAAK;AAC5B;AACA;AACA,QAAQ,OAAO,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACzC,QAAQ,MAAM,EAAE,GAAG,KAAK,GAAG,QAAQ;AACnC,QAAQ,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,QAAQ;;AAEzC;AACA,QAAQ,MAAM,IAAI;AAClB,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI;AACpC,kBAAkB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE;AAC3C,kBAAkB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;AACzC,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,MAAM,CAAC,uCAAuC,CAAC,CAAC;AACvG;AACA,QAAQ,OAAO,SAAS,CAAC,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;AAC3C;;AAEA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;AACtC;;AAEA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,QAAQ,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC;AAC/D;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG;AAC/B;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG;AAC/B;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG;AAC/B;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG;AAC/B;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,GAAG,MAAM,EAAE;AACrB;AACA,QAAQ,MAAM,aAAa,GAAG,EAAE;AAChC,QAAQ,MAAM,UAAU,GAAG,EAAE;;AAE7B;AACA;AACA,QAAQ,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE;AAC9E,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;;AAE1C,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AACvD;AACA,gBAAgB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC3D,gBAAgB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEzD,aAAa,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAClD,gBAAgB,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC;;AAE3E;AACA,gBAAgB,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;;AAEnD,aAAa,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACnE;AACA,gBAAgB,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,KAAK;AACxC,gBAAgB,KAAK,GAAG,KAAK,KAAK;AAClC,sBAAsB;AACtB,sBAAsB,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;AAChF,gBAAgB,GAAG,GAAG,GAAG,KAAK;AAC9B,sBAAsB,IAAI,CAAC,IAAI,CAAC,UAAU;AAC1C,sBAAsB,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC;;AAE9E,gBAAgB,IAAI,KAAK,GAAG,GAAG,EAAE;AACjC,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9D;;AAEA,gBAAgB,MAAM,OAAO,GAAG;AAChC,oBAAoB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;AACtC,oBAAoB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACvD,iBAAiB;;AAEjB,gBAAgB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,gBAAgB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;AAE3D,aAAa,MAAM;AACnB,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1D;AACA;;AAEA,QAAQ,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,KAAK,CAAC;AACrE,QAAQ,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE7D,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC;AACA;AACA,QAAQ,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC;;AAE7D;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;;AAEpC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,IAAI,aAAa,GAAG,CAAC;AACjC,YAAY,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACnE,gBAAgB,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;AACvC,gBAAgB,aAAa,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;AAC9E,gBAAgB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5C;AACA,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC;AAC9C;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,IAAI,EAAE;AACrB,QAAQ,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;AAClC;;AAEA;AACA,IAAI,SAAS,CAAC,GAAG,IAAI,EAAE;AACvB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACrC,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACjD,QAAQ,IAAI,CAAC,KAAK,KAAK,EAAE;AACzB;AACA,YAAY,CAAC,GAAG,CAAC;AACjB,SAAS,MAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AAC1C,YAAY,MAAM,KAAK,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC;AACjD;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEzC,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC1B;AACA,YAAY,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1D,YAAY,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;AACnD;;AAEA,QAAQ,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;;AAEhF,QAAQ,IAAI,CAAC,KAAK,CAAC,EAAE;AACrB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpD,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChD;AACA;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE;AACjC,QAAQ,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;;AAE9C,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;;AAE5C,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;;AAEnD;AACA,YAAY,IAAI,WAAW,GAAG,CAAC;;AAE/B,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,gBAAgB,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC3F,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,gBAAgB,IAAI,CAAC,KAAK,GAAG,EAAE;AAC/B,oBAAoB,MAAM,KAAK,GAAG,GAAG,GAAG,IAAI;AAC5C,oBAAoB,WAAW,IAAI,KAAK,GAAG,gBAAgB;AAC3D,oBAAoB,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD;AACA,gBAAgB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5C;;AAEA;AACA,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC;AAClD;;AAEA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE;AAChC,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,GAAG,IAAI,EAAE;AACxB,QAAQ,OAAO,IAAI,MAAM;AACzB,YAAY,IAAI,CAAC,IAAI;AACrB,YAAY,IAAI,CAAC,IAAI;AACrB,YAAY,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG;AAC5C;AACA;;AAEA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,EAAE;AACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;AACrD,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,EAAE;AAC1B,QAAQ,OAAO,IAAI,MAAM;AACzB,YAAY,IAAI,CAAC,IAAI;AACrB,YAAY,IAAI,CAAC,IAAI;AACrB,YAAY,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG;AAC9C,SAAS;AACT;;AAEA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,GAAG,IAAI,EAAE;AAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;AACvD,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE,EAAE;AAC1C;AACA,QAAQ,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;;AAEjE,QAAQ,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC;AAC5D,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,GAAG,CAAC,CAAC;AACnE,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;;AAE1D,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,gBAAgB,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,eAAe;AACtG,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE,EAAE;AACzC,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE;AAClB;AACA,QAAQ,IAAI,aAAa,GAAG,EAAE;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AAChC,gBAAgB,IAAI,aAAa,KAAK,EAAE,EAAE;AAC1C,oBAAoB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;AACzE;AACA,gBAAgB,aAAa,GAAG,CAAC;AACjC;AACA;;AAEA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,IAAI,aAAa,KAAK,EAAE,EAAE;AAClC;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,KAAK;AACvE,gBAAgB,OAAO,KAAK,KAAK,aAAa,GAAG,OAAO,GAAG,IAAI,GAAG;AAClE,aAAa,EAAE,CAAC,CAAC;;AAEjB,YAAY,IAAI,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,YAAY;AACjE;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;AACtD;;AAEA,IAAI,IAAI,GAAG;AACX,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AACxC;AACA,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,GAAG,GAAG;AACV,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,GAAG,EAAE;AACZ,QAAQ,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AACrD,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAChD;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,GAAG,EAAE;AACZ,QAAQ,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AACrD,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAChD;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AAClD;;AAEA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;AACrB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACrE;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE;AACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5C;;AAEA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACnD;AACA,QAAQ,OAAO,IAAI;AACnB;;AAEA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE;AACpC;;AAEA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACtC,QAAQ,OAAO,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;AACvC;;AAEA,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACrC,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC1B;AACA,YAAY,MAAM,GAAG,GAAG,IAAG,sCAAsC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpF,YAAY,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC;AAC/D;AACA,QAAQ,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC;AAChH,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AACnD;;AAEA,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACrC,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC1B;AACA,YAAY,MAAM,GAAG,GAAG,IAAG,sCAAsC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpF,YAAY,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC;AAC/D;AACA,QAAQ,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC;AACjH,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AACnD;;AAEA,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACxC,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC1B,YAAY,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAClE;AACA,QAAQ,MAAM,KAAK,GAAG,IAAG,sCAAsC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClF,QAAQ,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACvD;AACA,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AACxC,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC1B,YAAY,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAClE;AACA,QAAQ,MAAM,KAAK,GAAG,IAAG,sCAAsC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClF,QAAQ,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,IAAI,EAAE;AACb;AACA,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI;;AAE3C;AACA,QAAQ,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC/C,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;AACxD;;AAEA;AACA,QAAQ,IAAI,MAAM;AAClB,QAAQ,MAAM,gBAAgB,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AACxE,QAAQ,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AACjE,QAAQ,IAAI,gBAAgB,IAAI,CAAC,cAAc,EAAE;AACjD;AACA,YAAY,MAAM,GAAG,MAAM;AAC3B,SAAS,MAAM,IAAI,CAAC,gBAAgB,IAAI,cAAc,EAAE;AACxD;AACA,YAAY,MAAM,GAAG,MAAM;AAC3B;;AAEA;AACA,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE;;AAEnC,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM;AACrC,IAAI,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE5D,IAAI,IAAI,aAAa,KAAK,aAAa,EAAE;AACzC,QAAQ,MAAM,KAAK,CAAC,CAAC,6BAA6B,EAAE,aAAa,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAC/F;;AAEA;AACA,IAAI,IAAI,aAAa,GAAG,IAAI;;AAE5B,IAAI,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACrD,QAAQ,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;AAC3D,YAAY,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;;AAE/C,YAAY,IAAI,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE;AAClD,gBAAgB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,aAAa,MAAM;AACnB,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/B;;AAEA,YAAY,OAAO,GAAG;AACtB,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AAChB;;AAEA,IAAI,OAAO,aAAa,CAAC,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE;AAC/B,IAAI,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,GAAG,IAAG,sCAAsC,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AACzH,IAAI,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC;AACvD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,GAAG,UAAU,EAAE,aAAa,GAAG,KAAK,EAAE;;AAE/F;AACA,IAAI,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC9C,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;AACvC,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;;AAEtC,IAAI,IAAI,MAAM,GAAG,IAAG,sCAAsC,CAAC,gBAAgB;AAC3E,sDAAsD,KAAK,CAAC,IAAI;AAChE,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC;AAC1C,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC;AAC/B,QAAQ,IAAI;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AAC/E;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc,CAAC,KAAK,EAAE;AACrC,IAAI,IAAI,GAAG,IAAI;AACf,IAAI,IAAI,GAAG,UAAU;AACrB,CAAC,GAAG,EAAE,EAAE;;AAER;AACA,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAQ,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;AAC7E;AACA,IAAI,IAAI,CAAC,IAAI,EAAE;AACf;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC;AACvE;;AAEA;AACA,IAAI,IAAI,UAAU;AAClB,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,QAAQ,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;AACzD,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,QAAQ,UAAU,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;AAC7C,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,QAAQ,UAAU,GAAG,IAAI;AACzB,KAAK,MAAM;AACX,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC/D;;AAEA,IAAI,IAAI,EAAE;AACV,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;AAC5B,QAAQ,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,sBAAsB;AACxG,KAAK,MAAM,IAAI,IAAI,KAAK,UAAU,EAAE;AACpC,QAAQ,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,uBAAuB;AACzG,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AACnC,QAAQ,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,sBAAsB;AACxG,KAAK,MAAM;AACX,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;AACpD;;AAEA,IAAI,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC1G,IAAI,OAAO,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,IAAI,MAAM,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,MAAM;AAC1F,IAAI,OAAO,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1B,IAAI,MAAM,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,IAAI;AACxF,IAAI,OAAO,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC7B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1B,IAAI,MAAM,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,KAAK;;AAEzF,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;AACzB,KAAK,MAAM;AACX,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACtC;AACA,IAAI,OAAO,MAAM,EAAE,CAAC;AACpB,QAAQ,CAAC;AACT,QAAQ,CAAC,EAAE,IAAI,MAAM;AACrB,YAAY,OAAO;AACnB,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvB,YAAY,CAAC,CAAC;AACd;AACA,KAAK,CAAC;AACN;;;AAGA,MAAM,kBAAkB,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACtD,IAAI,MAAM,EAAE,GAAG,MAAM,6CAA6C,CAAC,gBAAgB,CAAC,KAAK;AACzF,IAAI,OAAO,MAAM,EAAE,CAAC;AACpB,QAAQ,CAAC,EAAE,IAAI;AACf,QAAQ,CAAC,EAAE,kBAAkB,CAAC,MAAM,CAAC;AACrC,QAAQ,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC;AACnC,QAAQ,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC;AACnC,QAAQ,CAAC,EAAE,kBAAkB,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtE,KAAK,CAAC;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,iBAAiB,EAAE,cAAc,EAAE;AACzD;AACA;AACA,IAAI,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,IAAI;AACtD,IAAI,MAAM,iBAAiB,GAAG,cAAc,CAAC,IAAI;;AAEjD,IAAI,MAAM,KAAK,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAExE;AACA,IAAI,MAAM,YAAY,GAAG,IAAI,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjF,IAAI,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,GAAG,iBAAiB,CAAC,IAAI;;AAEnE,IAAI,IAAI,QAAQ,GAAG,CAAC;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;AACxC,QAAQ,MAAM,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,SAAS;;AAE/C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;AAC3C,YAAY,IAAI,GAAG,GAAG,CAAC;AACvB,YAAY,IAAI,KAAK,GAAG,CAAC;;AAEzB,YAAY,MAAM,cAAc,GAAG,CAAC,GAAG,SAAS;AAChD,YAAY,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC;AACtC;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;AAChD;AACA,gBAAgB,MAAM,IAAI,GAAG,MAAM,CAAC,iBAAiB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;;AAE1E,gBAAgB,KAAK,IAAI,IAAI;AAC7B,gBAAgB,GAAG,IAAI,mBAAmB,CAAC,OAAO,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI;AACzE;;AAEA,YAAY,MAAM,GAAG,GAAG,GAAG,GAAG,KAAK;AACnC,YAAY,YAAY,CAAC,QAAQ,EAAE,CAAC,GAAG,GAAG;AAC1C;AACA;;AAEA,IAAI,OAAO,IAAI,MAAM;AACrB,QAAQ,iBAAiB,CAAC,IAAI;AAC9B,QAAQ,YAAY;AACpB,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,gBAAgB,EAAE;AAC7C,IAAI,GAAG,GAAG,IAAI;AACd,CAAC,GAAG,EAAE,EAAE;AACR,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAQ,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;AACzE;;AAEA,IAAI,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,IAAI;;AAE9C,IAAI,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;AAC7E,QAAQ,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC;AAC9F;;AAEA,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AACnD,IAAI,MAAM,OAAO,+BAA+B,GAAG,CAAC,IAAI,CAAC;AACzD,IAAI,MAAM,QAAQ,+BAA+B,IAAI,CAAC,IAAI,CAAC;;AAE3D,IAAI,MAAM,SAAS,+BAA+B,KAAK,CAAC,IAAI,CAAC;;AAE7D;AACA,IAAI,MAAM,YAAY,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;;AAEpE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;AACxC,QAAQ,MAAM,MAAM,GAAG,CAAC,GAAG,UAAU;AACrC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC;AACtC,YAAY,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3F;AACA;AACA,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE;AACtC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;AACvB,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;AACtB,QAAQ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACxC,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC7B,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AAC/B;AACA,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACnC,QAAQ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACrC,YAAY,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9C,SAAS,CAAC;AACV;AACA,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE,GAAG,EAAE;AACxC;AACA;AACA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACzC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;AACvB;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1B,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,GAAG,IAAI,EAAE,WAAW,GAAG,IAAI,EAAE;AACtE,IAAI,IAAI,WAAW,KAAK,KAAK,GAAG,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE;AACzD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,KAAK,CAAC,+BAA+B,EAAE,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AAClJ;;AAEA,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB;AACA,QAAQ,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI;AAC9C;AACA,IAAI,OAAO,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,EAAE;AAC/B,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;;AAEhD;;AAEA,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;AAC9C,IAAI,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;;AAElE;AACA,IAAI,MAAM,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC5D;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;;AAE9D;AACA,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;;AAEtC,IAAI,IAAI,GAAG,KAAK,CAAC,EAAE;AACnB;;AAEA,QAAQ,IAAI,MAAM,GAAG,CAAC;AACtB,QAAQ,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AACtC,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;AAC1C,YAAY,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;AAC1C,YAAY,MAAM,IAAI,UAAU,CAAC,MAAM;AACvC;;AAEA,KAAK,MAAM;;AAEX,QAAQ,IAAI,UAAU,GAAG,CAAC;;AAE1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACjD,YAAY,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;;AAE7C;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAClD;AACA,gBAAgB,IAAI,WAAW,GAAG,CAAC;;AAEnC,gBAAgB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,gBAAgB,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC1F,oBAAoB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AACxC,oBAAoB,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI;AAC1C,oBAAoB,IAAI,CAAC,KAAK,GAAG,EAAE;AACnC,wBAAwB,KAAK,IAAI,UAAU;AAC3C;AACA,oBAAoB,WAAW,IAAI,KAAK,GAAG,gBAAgB;AAC3D,oBAAoB,gBAAgB,IAAI,UAAU,CAAC,CAAC,CAAC;AACrD,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AAChD;AACA;AACA,gBAAgB,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC7C;;AAEA,YAAY,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC;AACnC;AACA;AACA,IAAI,OAAO,IAAI,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,EAAE;AACjC;AACA;AACA,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;AACvD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE,YAAY,GAAG,IAAI,EAAE;AAC5F,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI;AAChC,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI;;AAEhC;AACA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC;;AAE1C;AACA,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AACzC,IAAI,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAExB;AACA;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AAC/E,IAAI,IAAI,YAAY,KAAK,IAAI,EAAE;AAC/B,QAAQ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;AACjC;;AAEA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;;AAE/C;AACA,QAAQ,IAAI,WAAW,GAAG,CAAC;;AAE3B,QAAQ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,gBAAgB,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACvF,YAAY,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;AACrC,YAAY,IAAI,CAAC,KAAK,GAAG,EAAE;AAC3B,gBAAgB,MAAM,KAAK,GAAG,GAAG,GAAG,IAAI;AACxC,gBAAgB,WAAW,IAAI,KAAK,GAAG,gBAAgB;AACvD,gBAAgB,gBAAgB,IAAI,UAAU,CAAC,CAAC,CAAC;AACjD;AACA,YAAY,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AACxC;;AAEA;AACA,QAAQ,MAAM,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC;AAC3F;;AAEA,IAAI,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;;AAE3C,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AAC3C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,UAAU,GAAG,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE;AACtE,IAAI,MAAM,SAAS,+BAA+B,KAAK,CAAC,IAAI,CAAC;AAC7D,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI;;AAEhC,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;AACtB;AACA,QAAQ,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACxD,QAAQ,MAAM,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,MAAM;AAC3C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;;AAEnH,QAAQ,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC;AACzE,QAAQ,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC;;AAEvE,QAAQ,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;AACtC;AACA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC;AAC1C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC;AAChD,IAAI,MAAM,cAAc,GAAG,UAAU,CAAC,IAAI;;AAE1C;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC;;AAE3H;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC5C,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AACxE;;AAEA,IAAI,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;;AAE1D,IAAI,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,OAAO,GAAG,KAAK,EAAE;AAClD,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI;AAChC,IAAI,MAAM,SAAS,+BAA+B,KAAK,CAAC,IAAI,CAAC;;AAE7D,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;AACtB;AACA,QAAQ,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACxD,QAAQ,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC;AAC/E;AACA,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC;;AAE1C;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC;;AAE1F;AACA,IAAI,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC;AACvC;AACA;;AAEA,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AAC/C;;;AAGA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACvD,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;AACtB,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;AACrB;AACA,IAAI,OAAO,MAAM;AACjB;;AAEA,SAAS,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE;AAClD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACvD,IAAI,OAAO,IAAI,MAAM;AACrB,QAAQ,KAAK;AACb,QAAQ,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;AAC7C,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE;AAChC,IAAI,IAAI,KAAK;AACb,IAAI,IAAI,aAAa;AACrB,IAAI,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACxC,QAAQ,KAAK,GAAG,SAAS;AACzB,QAAQ,aAAa,GAAG,YAAY;AACpC,KAAK,MAAM,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AAC/C,QAAQ,KAAK,GAAG,OAAO;AACvB,QAAQ,aAAa,GAAG,aAAa;AACrC,KAAK,MAAM,IAAI,OAAO,UAAU,KAAK,SAAS,EAAE;AAChD,QAAQ,KAAK,GAAG,MAAM;AACtB,QAAQ,aAAa,GAAG,UAAU;AAClC,KAAK,MAAM;AACX;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,uBAAuB,EAAE,OAAO,UAAU,CAAC,CAAC,CAAC;AACtE;AACA,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,CAAC;AAC7D;;AAEA,SAAS,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE;AACvC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,IAAI,EAAE;AACpB,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,aAAa,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,MAAM,EAAE;AAC3B,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,IAAI,EAAE;AACrB,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,aAAa,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,MAAM,EAAE;AAC5B,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,IAAI,EAAE;AACpB,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAClD,IAAI,OAAO,IAAI,MAAM;AACrB,QAAQ,SAAS;AACjB,QAAQ,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;AAC1D,QAAQ,IAAI;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,MAAM,EAAE,SAAS,EAAE;AAChD,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,QAAQ,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC;AAC5D;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACtC,QAAQ,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC;AACnF;AACA,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACpD,QAAQ,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;AAC7E;;AAEA,IAAI,MAAM,MAAM,GAAG,SAAS,KAAK,QAAQ;AACzC,IAAI,MAAM,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO;;AAE3C;AACA,IAAI,MAAM,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,UAAU;AAC/C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI;AACjC,IAAI,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEpD;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/C;AACA,QAAQ,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;;AAE5C;AACA,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAQ,MAAM,WAAW,GAAG,CAAC,GAAG,CAAC;;AAEjC;AACA,QAAQ,UAAU,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC;AAC1D,QAAQ,IAAI,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;AACzC,YAAY,UAAU,CAAC,UAAU,CAAC,IAAI,GAAG;AACzC;AACA;AAEA,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9E;;;AAGA,OAAO,CAAC;;AAER,MAAM,sBAAsB;AAC5B;AACA;AACA;AACA,OAAO,CAAC,mCAAmC,EAAE,mBAAmB,EAAE,mBAAmB,KAAK;;AAE1F,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,QAAQ,EAAE,qBAAqB,QAAQ,CAAC;AAC/D,uBAAuB,aAAa,EAAE,qBAAqB,aAAa,CAAC;AACzE,uBAAuB,UAAU,EAAE,qBAAqB,UAAU;AAClE,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,sCAAsC,GAAG,mBAAmB,mBAAmB,sBAAsB,CAAC;AAC/H,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,kBAAkB,cAAc,CAAC;;;;AAIpH,MAAM,aAAa,CAAC;;AAEpB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE;AAClC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;AACA;;AAEA,MAAM,QAAQ,CAAC;AACf;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAClC,QAAQ,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,sCAAsC,CAAC,QAAQ,EAAE;AACvG;AACA,YAAY,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AACjH;AACA,QAAQ,IAAI,CAAC,MAAM,mCAAmC,MAAM,CAAC;AAC7D,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC;;AAEA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;AACzC;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AAC1C;;AAEA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;AACjD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU,CAAC,GAAG,EAAE,EAAE,UAAU,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE;AACvE,IAAI,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,cAAc,EAAE;AACnE,QAAQ,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC;AAC5F;;AAEA;AACA;AACA,IAAI,IAAI,UAAU,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;AAC3C,QAAQ,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;AACrE;;AAEA,IAAI,MAAM,MAAM,GAAG,EAAE;;AAErB,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;AACjD,IAAI,KAAK,CAAC,WAAW,GAAG,WAAW;AACnC,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;;AAEvB,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjC,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG;AACvB,KAAK,MAAM,IAAI,GAAG,YAAY,IAAI,EAAE;AACpC,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC;AAC5C,KAAK,MAAM,IAAI,GAAG,YAAY,gBAAgB,EAAE;AAChD,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG;AAC3B,KAAK,MAAM;AACX,QAAQ,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC;AACjE;AACA;AACA,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,gBAAgB,GAAG,OAAO,CAAC;;AAEpE,IAAI,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC3D;AACA,QAAQ,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/C,QAAQ,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;AAC1C,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;AAC7C,QAAQ,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,gBAAgB,GAAG,OAAO,CAAC;AACxE;;AAEA,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ;;AAEnC,IAAI,IAAI,KAAK,EAAE,IAAI;AACnB,IAAI,IAAI,UAAU,IAAI,IAAI,EAAE;AAC5B,QAAQ,KAAK,GAAG,UAAU;AAC1B,QAAQ,IAAI,GAAG,UAAU,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;AACjE,KAAK,MAAM;AACX,QAAQ,IAAI,GAAG,CAAC,GAAG,GAAG;AACtB,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3C;;AAEA;AACA,IAAI,IAAI,WAAW,GAAG,EAAE;AACxB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;AACpC,QAAQ,WAAW,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AACpE;;AAEA,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACnD,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU;AACnC,IAAI,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW;AACrC,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;AACrE,IAAI,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;AACjC,QAAQ,KAAK,CAAC,WAAW,GAAG,CAAC;AAC7B,QAAQ,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AACvC,YAAY,KAAK,CAAC,QAAQ,GAAG,OAAO;AACpC,SAAS,CAAC;AACV,QAAQ,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;AAC/D,QAAQ,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;AAC7E,QAAQ,MAAM,SAAS,GAAG,IAAI,sCAAsC,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;AAE7H,QAAQ,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;AACrD,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B;;AAEA;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;;AAElB,IAAI,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC;AACzC;;;AAGA,OAAO;;AAEP,UAAU,CAAC;AACX;AACA;AACA,SAAS,IAAI,wBAAwB,GAAG,EAAE;AAC1C;AACA;AACA,SAAS,SAAS,mBAAmB,CAAC,QAAQ,EAAE;AAChD;AACA,UAAU,IAAI,YAAY,GAAG,wBAAwB,CAAC,QAAQ,CAAC;AAC/D,UAAU,IAAI,YAAY,KAAK,SAAS,EAAE;AAC1C,WAAW,OAAO,YAAY,CAAC,OAAO;AACtC;AACA;AACA,UAAU,IAAI,MAAM,GAAG,wBAAwB,CAAC,QAAQ,CAAC,GAAG;AAC5D;AACA;AACA,WAAW,OAAO,EAAE;AACpB,WAAW;AACX;AACA;AACA,UAAU,mBAAmB,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,mBAAmB,CAAC;AACpF;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO;AAC/B;AACA;AACA;AACA;AACA,SAAS,CAAC,MAAM;AAChB,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,GAAG,CAAC,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,SAAS,CAAC;AACjH,UAAU,IAAI,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;AACxD,WAAW,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3C,WAAW,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,KAAK;AACpC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,EAAE;AAClD,YAAY,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,UAAU,EAAE,OAAO,KAAK;AAC3D,YAAY,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE,OAAO,KAAK;AAC5E;AACA,WAAW,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC,WAAW,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC,WAAW,IAAI,GAAG,GAAG,EAAE;AACvB,WAAW,cAAc,GAAG,cAAc,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACpG,WAAW,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,EAAE,OAAO,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC9I,YAAY,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjG;AACA,WAAW,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,KAAK,CAAC;AACzC,WAAW,mBAAmB,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC;AACzC,WAAW,OAAO,EAAE;AACpB,WAAW;AACX,UAAU,GAAG;AACb;AACA;AACA,SAAS,CAAC,MAAM;AAChB;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;AAC3D,WAAW,IAAI,IAAI,GAAG,IAAI,UAAU,EAAE;AACtC,YAAY,GAAG,mBAAmB,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;AAC/F,aAAa,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;AAC5F;AACA;AACA,WAAW;AACX,UAAU,GAAG;AACb;AACA;AACA,SAAS,CAAC,MAAM;AAChB,UAAU,mBAAmB,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,MAAM,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AACjG,UAAU,GAAG;AACb;AACA;AACA,SAAS,CAAC,MAAM;AAChB;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK;AAC/C,WAAW,GAAG,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,WAAW,EAAE;AACnE,YAAY,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;AACnF;AACA,WAAW,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AACxE,WAAW;AACX,UAAU,GAAG;AACb;AACA;AACA,IAAI,mBAAmB,GAAG,EAAE;AAC5B;AACA,CAAC,MAAM;AACP;AACA;AACA;AACA,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC1C,qBAAqB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE;AAChE,uBAAuB,mBAAmB,EAAE,2BAA2B,2DAA2D,CAAC,mBAAmB,CAAC;AACvJ,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,2BAA2B,EAAE,2BAA2B,0CAA0C,CAAC,2BAA2B,CAAC;AACtJ,uBAAuB,UAAU,EAAE,2BAA2B,wCAAwC,CAAC,UAAU,CAAC;AAClH,uBAAuB,oBAAoB,EAAE,2BAA2B,qEAAqE,CAAC,oBAAoB,CAAC;AACnK,uBAAuB,kBAAkB,EAAE,2BAA2B,mEAAmE,CAAC,kBAAkB,CAAC;AAC7J,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,oCAAoC,EAAE,2BAA2B,uCAAuC,CAAC,oCAAoC,CAAC;AACrK,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,qCAAqC,EAAE,2BAA2B,uCAAuC,CAAC,qCAAqC,CAAC;AACvK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,aAAa,EAAE,2BAA2B,6DAA6D,CAAC,aAAa,CAAC;AAC7I,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,kCAAkC,EAAE,2BAA2B,0CAA0C,CAAC,kCAAkC,CAAC;AACpK,uBAAuB,yBAAyB,EAAE,2BAA2B,0CAA0C,CAAC,yBAAyB,CAAC;AAClJ,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,YAAY,EAAE,2BAA2B,sDAAsD,CAAC,YAAY,CAAC;AACpI,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,uCAAuC,EAAE,2BAA2B,uCAAuC,CAAC,uCAAuC,CAAC;AAC3K,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,wBAAwB,EAAE,2BAA2B,2CAA2C,CAAC,wBAAwB,CAAC;AACjJ,uBAAuB,mBAAmB,EAAE,2BAA2B,2CAA2C,CAAC,mBAAmB,CAAC;AACvI,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,kBAAkB,EAAE,2BAA2B,yDAAyD,CAAC,kBAAkB,CAAC;AACnJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,2CAA2C,CAAC,kBAAkB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2DAA2D,CAAC,oBAAoB,CAAC;AACzJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,qCAAqC,EAAE,2BAA2B,2DAA2D,CAAC,qCAAqC,CAAC;AAC3L,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,kBAAkB,EAAE,2BAA2B,2CAA2C,CAAC,kBAAkB,CAAC;AACrI,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,2CAA2C,CAAC,iBAAiB,CAAC;AACnI,uBAAuB,wBAAwB,EAAE,2BAA2B,yDAAyD,CAAC,wBAAwB,CAAC;AAC/J,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,sBAAsB,EAAE,2BAA2B,yDAAyD,CAAC,sBAAsB,CAAC;AAC3J,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,mBAAmB,EAAE,2BAA2B,2DAA2D,CAAC,mBAAmB,CAAC;AACvJ,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,WAAW,EAAE,2BAA2B,6CAA6C,CAAC,WAAW,CAAC;AACzH,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,2CAA2C,CAAC,kBAAkB,CAAC;AACrI,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,kBAAkB,EAAE,2BAA2B,yDAAyD,CAAC,kBAAkB,CAAC;AACnJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,uBAAuB,EAAE,2BAA2B,0CAA0C,CAAC,uBAAuB,CAAC;AAC9I,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,kBAAkB,EAAE,2BAA2B,yDAAyD,CAAC,kBAAkB,CAAC;AACnJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,yCAAyC,EAAE,2BAA2B,uCAAuC,CAAC,yCAAyC,CAAC;AAC/K,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,2CAA2C,CAAC,mBAAmB,CAAC;AACvI,uBAAuB,iCAAiC,EAAE,2BAA2B,0CAA0C,CAAC,iCAAiC,CAAC;AAClK,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,0BAA0B,EAAE,2BAA2B,yDAAyD,CAAC,0BAA0B,CAAC;AACnK,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,uBAAuB,EAAE,2BAA2B,2DAA2D,CAAC,uBAAuB,CAAC;AAC/J,uBAAuB,gBAAgB,EAAE,2BAA2B,8DAA8D,CAAC,gBAAgB,CAAC;AACpJ,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,2CAA2C,CAAC,YAAY,CAAC;AACzH,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,GAAG,EAAE,2BAA2B,4CAA4C,CAAC,GAAG,CAAC;AACxG,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,yBAAyB,EAAE,2BAA2B,0CAA0C,CAAC,yBAAyB,CAAC;AAClJ,uBAAuB,gBAAgB,EAAE,2BAA2B,+DAA+D,CAAC,gBAAgB,CAAC;AACrJ,uBAAuB,gBAAgB,EAAE,2BAA2B,0CAA0C,CAAC,gBAAgB,CAAC;AAChI,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,mDAAmD,CAAC,kBAAkB,CAAC;AAC7I,uBAAuB,6BAA6B,EAAE,2BAA2B,2DAA2D,CAAC,6BAA6B,CAAC;AAC3K,uBAAuB,6BAA6B,EAAE,2BAA2B,2DAA2D,CAAC,6BAA6B,CAAC;AAC3K,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,sBAAsB,EAAE,2BAA2B,mDAAmD,CAAC,sBAAsB,CAAC;AACrJ,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,sBAAsB,EAAE,2BAA2B,yDAAyD,CAAC,sBAAsB,CAAC;AAC3J,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,2BAA2B,EAAE,2BAA2B,0CAA0C,CAAC,2BAA2B,CAAC;AACtJ,uBAAuB,8BAA8B,EAAE,2BAA2B,0CAA0C,CAAC,8BAA8B,CAAC;AAC5J,uBAAuB,qBAAqB,EAAE,2BAA2B,2DAA2D,CAAC,qBAAqB,CAAC;AAC3J,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,cAAc,EAAE,2BAA2B,6DAA6D,CAAC,cAAc,CAAC;AAC/I,uBAAuB,yBAAyB,EAAE,2BAA2B,0CAA0C,CAAC,yBAAyB,CAAC;AAClJ,uBAAuB,oBAAoB,EAAE,2BAA2B,0CAA0C,CAAC,oBAAoB,CAAC;AACxI,uBAAuB,mBAAmB,EAAE,2BAA2B,0CAA0C,CAAC,mBAAmB,CAAC;AACtI,uBAAuB,6BAA6B,EAAE,2BAA2B,8DAA8D,CAAC,6BAA6B,CAAC;AAC9K,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,sBAAsB,EAAE,2BAA2B,yDAAyD,CAAC,sBAAsB,CAAC;AAC3J,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,sCAAsC,EAAE,2BAA2B,uCAAuC,CAAC,sCAAsC,CAAC;AACzK,uBAAuB,4BAA4B,EAAE,2BAA2B,yDAAyD,CAAC,4BAA4B,CAAC;AACvK,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,eAAe,EAAE,2BAA2B,2DAA2D,CAAC,eAAe,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,2DAA2D,CAAC,mBAAmB,CAAC;AACvJ,uBAAuB,YAAY,EAAE,2BAA2B,2DAA2D,CAAC,YAAY,CAAC;AACzI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,0BAA0B,EAAE,2BAA2B,yDAAyD,CAAC,0BAA0B,CAAC;AACnK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,wBAAwB,EAAE,2BAA2B,yDAAyD,CAAC,wBAAwB,CAAC;AAC/J,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,iBAAiB,EAAE,2BAA2B,8DAA8D,CAAC,iBAAiB,CAAC;AACtJ,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,mDAAmD,CAAC,eAAe,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,wBAAwB,EAAE,2BAA2B,2DAA2D,CAAC,wBAAwB,CAAC;AACjK,uBAAuB,iCAAiC,EAAE,2BAA2B,2DAA2D,CAAC,iCAAiC,CAAC;AACnL,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,2CAA2C,CAAC,mBAAmB,CAAC;AACvI,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,2BAA2B,EAAE,2BAA2B,yDAAyD,CAAC,2BAA2B,CAAC;AACrK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,uBAAuB,EAAE,2BAA2B,yDAAyD,CAAC,uBAAuB,CAAC;AAC7J,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,yBAAyB,EAAE,2BAA2B,2DAA2D,CAAC,yBAAyB,CAAC;AACnK,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,mDAAmD,CAAC,kBAAkB,CAAC;AAC7I,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,2DAA2D,CAAC,yBAAyB,CAAC;AACnK,uBAAuB,4BAA4B,EAAE,2BAA2B,2DAA2D,CAAC,4BAA4B,CAAC;AACzK,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,uBAAuB,EAAE,2BAA2B,0CAA0C,CAAC,uBAAuB,CAAC;AAC9I,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,sBAAsB,EAAE,2BAA2B,yDAAyD,CAAC,sBAAsB,CAAC;AAC3J,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,mDAAmD,CAAC,eAAe,CAAC;AACvI,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,kBAAkB,EAAE,2BAA2B,mDAAmD,CAAC,kBAAkB,CAAC;AAC7I,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,mDAAmD,CAAC,cAAc,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,QAAQ,EAAE,2BAA2B,0CAA0C,CAAC,QAAQ,CAAC;AAChH,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,mBAAmB,EAAE,2BAA2B,2CAA2C,CAAC,mBAAmB,CAAC;AACvI,uBAAuB,gBAAgB,EAAE,2BAA2B,wCAAwC,CAAC,gBAAgB,CAAC;AAC9H,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,SAAS,EAAE,2BAA2B,uDAAuD,CAAC,SAAS,CAAC;AAC/H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,wBAAwB,EAAE,2BAA2B,2DAA2D,CAAC,wBAAwB,CAAC;AACjK,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,yBAAyB,EAAE,2BAA2B,0CAA0C,CAAC,yBAAyB,CAAC;AAClJ,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,mDAAmD,CAAC,gBAAgB,CAAC;AACzI,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,QAAQ,EAAE,2BAA2B,4CAA4C,CAAC,QAAQ,CAAC;AAClH,uBAAuB,QAAQ,EAAE,2BAA2B,4CAA4C,CAAC,QAAQ,CAAC;AAClH,uBAAuB,QAAQ,EAAE,2BAA2B,4CAA4C,CAAC,QAAQ,CAAC;AAClH,uBAAuB,aAAa,EAAE,2BAA2B,4CAA4C,CAAC,aAAa,CAAC;AAC5H,uBAAuB,gCAAgC,EAAE,2BAA2B,2DAA2D,CAAC,gCAAgC,CAAC;AACjL,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,2CAA2C,CAAC,iBAAiB,CAAC;AACnI,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,6BAA6B,EAAE,2BAA2B,uCAAuC,CAAC,6BAA6B,CAAC;AACvJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,YAAY,EAAE,2BAA2B,mDAAmD,CAAC,YAAY,CAAC;AACjI,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,2BAA2B,EAAE,2BAA2B,2DAA2D,CAAC,2BAA2B,CAAC;AACvK,uBAAuB,yBAAyB,EAAE,2BAA2B,yDAAyD,CAAC,yBAAyB,CAAC;AACjK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,uBAAuB,EAAE,2BAA2B,yDAAyD,CAAC,uBAAuB,CAAC;AAC7J,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,oBAAoB,EAAE,2BAA2B,yDAAyD,CAAC,oBAAoB,CAAC;AACvJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,gBAAgB,EAAE,2BAA2B,mDAAmD,CAAC,gBAAgB,CAAC;AACzI,uBAAuB,wBAAwB,EAAE,2BAA2B,2DAA2D,CAAC,wBAAwB,CAAC;AACjK,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,2CAA2C,CAAC,iBAAiB,CAAC;AACnI,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,oCAAoC,EAAE,2BAA2B,uCAAuC,CAAC,oCAAoC,CAAC;AACrK,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2CAA2C,CAAC,oBAAoB,CAAC;AACzI,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,gBAAgB,EAAE,2BAA2B,8DAA8D,CAAC,gBAAgB,CAAC;AACpJ,uBAAuB,oBAAoB,EAAE,2BAA2B,8DAA8D,CAAC,oBAAoB,CAAC;AAC5J,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,qBAAqB,EAAE,2BAA2B,0CAA0C,CAAC,qBAAqB,CAAC;AAC1I,uBAAuB,oCAAoC,EAAE,2BAA2B,2DAA2D,CAAC,oCAAoC,CAAC;AACzL,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,OAAO,EAAE,2BAA2B,uCAAuC,CAAC,OAAO,CAAC;AAC3G,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,WAAW,EAAE,2BAA2B,2CAA2C,CAAC,WAAW,CAAC;AACvH,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,qCAAqC,EAAE,2BAA2B,uCAAuC,CAAC,qCAAqC,CAAC;AACvK,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,uBAAuB,EAAE,2BAA2B,2DAA2D,CAAC,uBAAuB,CAAC;AAC/J,uBAAuB,MAAM,EAAE,2BAA2B,6CAA6C,CAAC,MAAM,CAAC;AAC/G,uBAAuB,2BAA2B,EAAE,2BAA2B,0CAA0C,CAAC,2BAA2B,CAAC;AACtJ,uBAAuB,0BAA0B,EAAE,2BAA2B,0CAA0C,CAAC,0BAA0B,CAAC;AACpJ,uBAAuB,sBAAsB,EAAE,2BAA2B,0CAA0C,CAAC,sBAAsB,CAAC;AAC5I,uBAAuB,YAAY,EAAE,2BAA2B,sDAAsD,CAAC,YAAY,CAAC;AACpI,uBAAuB,mBAAmB,EAAE,2BAA2B,0CAA0C,CAAC,mBAAmB,CAAC;AACtI,uBAAuB,2BAA2B,EAAE,2BAA2B,0CAA0C,CAAC,2BAA2B,CAAC;AACtJ,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,cAAc,EAAE,2BAA2B,2CAA2C,CAAC,cAAc,CAAC;AAC7H,uBAAuB,gBAAgB,EAAE,2BAA2B,2DAA2D,CAAC,gBAAgB,CAAC;AACjJ,uBAAuB,gBAAgB,EAAE,2BAA2B,2DAA2D,CAAC,gBAAgB,CAAC;AACjJ,uBAAuB,gBAAgB,EAAE,2BAA2B,uCAAuC,CAAC,gBAAgB,CAAC;AAC7H,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,mBAAmB,EAAE,2BAA2B,0CAA0C,CAAC,mBAAmB,CAAC;AACtI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,kCAAkC,EAAE,2BAA2B,uCAAuC,CAAC,kCAAkC,CAAC;AACjK,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,uCAAuC,EAAE,2BAA2B,uCAAuC,CAAC,uCAAuC,CAAC;AAC3K,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,qCAAqC,EAAE,2BAA2B,uCAAuC,CAAC,qCAAqC,CAAC;AACvK,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,eAAe,EAAE,2BAA2B,mDAAmD,CAAC,eAAe,CAAC;AACvI,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,iBAAiB,EAAE,2BAA2B,yDAAyD,CAAC,iBAAiB,CAAC;AACjJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,sBAAsB,EAAE,2BAA2B,yDAAyD,CAAC,sBAAsB,CAAC;AAC3J,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,wBAAwB,EAAE,2BAA2B,uCAAuC,CAAC,wBAAwB,CAAC;AAC7I,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,SAAS,EAAE,2BAA2B,uCAAuC,CAAC,SAAS,CAAC;AAC/G,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,mBAAmB,EAAE,2BAA2B,uCAAuC,CAAC,mBAAmB,CAAC;AACnI,uBAAuB,aAAa,EAAE,2BAA2B,2CAA2C,CAAC,aAAa,CAAC;AAC3H,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,qCAAqC,EAAE,2BAA2B,uCAAuC,CAAC,qCAAqC,CAAC;AACvK,uBAAuB,iBAAiB,EAAE,2BAA2B,uCAAuC,CAAC,iBAAiB,CAAC;AAC/H,uBAAuB,2BAA2B,EAAE,2BAA2B,uCAAuC,CAAC,2BAA2B,CAAC;AACnJ,uBAAuB,oBAAoB,EAAE,2BAA2B,2CAA2C,CAAC,oBAAoB,CAAC;AACzI,uBAAuB,wBAAwB,EAAE,2BAA2B,2DAA2D,CAAC,wBAAwB,CAAC;AACjK,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,cAAc,EAAE,2BAA2B,uCAAuC,CAAC,cAAc,CAAC;AACzH,uBAAuB,iCAAiC,EAAE,2BAA2B,uCAAuC,CAAC,iCAAiC,CAAC;AAC/J,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,iBAAiB,EAAE,2BAA2B,mDAAmD,CAAC,iBAAiB,CAAC;AAC3I,uBAAuB,uBAAuB,EAAE,2BAA2B,mDAAmD,CAAC,uBAAuB,CAAC;AACvJ,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,WAAW,EAAE,2BAA2B,uCAAuC,CAAC,WAAW,CAAC;AACnH,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,yBAAyB,EAAE,2BAA2B,2DAA2D,CAAC,yBAAyB,CAAC;AACnK,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,uBAAuB,EAAE,2BAA2B,2DAA2D,CAAC,uBAAuB,CAAC;AAC/J,uBAAuB,+BAA+B,EAAE,2BAA2B,uCAAuC,CAAC,+BAA+B,CAAC;AAC3J,uBAAuB,YAAY,EAAE,2BAA2B,uCAAuC,CAAC,YAAY,CAAC;AACrH,uBAAuB,sBAAsB,EAAE,2BAA2B,uCAAuC,CAAC,sBAAsB,CAAC;AACzI,uBAAuB,gBAAgB,EAAE,2BAA2B,mDAAmD,CAAC,gBAAgB,CAAC;AACzI,uBAAuB,mBAAmB,EAAE,2BAA2B,sDAAsD,CAAC,mBAAmB,CAAC;AAClJ,uBAAuB,+BAA+B,EAAE,2BAA2B,2DAA2D,CAAC,+BAA+B,CAAC;AAC/K,uBAAuB,gBAAgB,EAAE,2BAA2B,2CAA2C,CAAC,gBAAgB,CAAC;AACjI,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,4BAA4B,EAAE,2BAA2B,uCAAuC,CAAC,4BAA4B,CAAC;AACrJ,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,QAAQ,EAAE,2BAA2B,uCAAuC,CAAC,QAAQ,CAAC;AAC7G,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,qBAAqB,EAAE,2BAA2B,uCAAuC,CAAC,qBAAqB,CAAC;AACvI,uBAAuB,8BAA8B,EAAE,2BAA2B,uCAAuC,CAAC,8BAA8B,CAAC;AACzJ,uBAAuB,mCAAmC,EAAE,2BAA2B,uCAAuC,CAAC,mCAAmC,CAAC;AACnK,uBAAuB,gCAAgC,EAAE,2BAA2B,uCAAuC,CAAC,gCAAgC,CAAC;AAC7J,uBAAuB,eAAe,EAAE,2BAA2B,uCAAuC,CAAC,eAAe,CAAC;AAC3H,uBAAuB,yBAAyB,EAAE,2BAA2B,uCAAuC,CAAC,yBAAyB,CAAC;AAC/I,uBAAuB,mBAAmB,EAAE,2BAA2B,2CAA2C,CAAC,mBAAmB,CAAC;AACvI,uBAAuB,YAAY,EAAE,2BAA2B,2CAA2C,CAAC,YAAY,CAAC;AACzH,uBAAuB,kBAAkB,EAAE,2BAA2B,uCAAuC,CAAC,kBAAkB,CAAC;AACjI,uBAAuB,aAAa,EAAE,2BAA2B,uCAAuC,CAAC,aAAa,CAAC;AACvH,uBAAuB,qBAAqB,EAAE,2BAA2B,yDAAyD,CAAC,qBAAqB,CAAC;AACzJ,uBAAuB,uBAAuB,EAAE,2BAA2B,uCAAuC,CAAC,uBAAuB,CAAC;AAC3I,uBAAuB,mBAAmB,EAAE,2BAA2B,yDAAyD,CAAC,mBAAmB,CAAC;AACrJ,uBAAuB,UAAU,EAAE,2BAA2B,uCAAuC,CAAC,UAAU,CAAC;AACjH,uBAAuB,0BAA0B,EAAE,2BAA2B,uCAAuC,CAAC,0BAA0B,CAAC;AACjJ,uBAAuB,oBAAoB,EAAE,2BAA2B,uCAAuC,CAAC,oBAAoB,CAAC;AACrI,uBAAuB,mCAAmC,EAAE,2BAA2B,0CAA0C,CAAC,mCAAmC,CAAC;AACtK,uBAAuB,8BAA8B,EAAE,2BAA2B,0CAA0C,CAAC,8BAA8B,CAAC;AAC5J,uBAAuB,mCAAmC,EAAE,2BAA2B,0CAA0C,CAAC,mCAAmC,CAAC;AACtK,uBAAuB,+BAA+B,EAAE,2BAA2B,0CAA0C,CAAC,+BAA+B,CAAC;AAC9J,uBAAuB,aAAa,EAAE,2BAA2B,4CAA4C,CAAC,aAAa,CAAC;AAC5H,uBAAuB,GAAG,EAAE,2BAA2B,6CAA6C,CAAC,GAAG,CAAC;AACzG,uBAAuB,OAAO,EAAE,2BAA2B,4CAA4C,CAAC,OAAO,CAAC;AAChH,uBAAuB,GAAG,EAAE,2BAA2B,4CAA4C,CAAC,GAAG,CAAC;AACxG,uBAAuB,oBAAoB,EAAE,2BAA2B,4CAA4C,CAAC,oBAAoB,CAAC;AAC1I,uBAAuB,GAAG,EAAE,2BAA2B,oCAAoC,CAAC,GAAG,CAAC;AAChG,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,SAAS,EAAE,2BAA2B,6CAA6C,CAAC,SAAS,CAAC;AACrH,uBAAuB,iBAAiB,EAAE,2BAA2B,wCAAwC,CAAC,iBAAiB,CAAC;AAChI,uBAAuB,OAAO,EAAE,2BAA2B,4CAA4C,CAAC,OAAO,CAAC;AAChH,uBAAuB,OAAO,EAAE,2BAA2B,4CAA4C,CAAC,OAAO,CAAC;AAChH,uBAAuB,WAAW,EAAE,2BAA2B,6CAA6C,CAAC,WAAW,CAAC;AACzH,uBAAuB,cAAc,EAAE,2BAA2B,6CAA6C,CAAC,cAAc,CAAC;AAC/H,uBAAuB,gBAAgB,EAAE,2BAA2B,4CAA4C,CAAC,gBAAgB,CAAC;AAClI,uBAAuB,eAAe,EAAE,2BAA2B,2CAA2C,CAAC,eAAe,CAAC;AAC/H,uBAAuB,UAAU,EAAE,2BAA2B,6CAA6C,CAAC,UAAU,CAAC;AACvH,uBAAuB,UAAU,EAAE,2BAA2B,4CAA4C,CAAC,UAAU,CAAC;AACtH,uBAAuB,UAAU,EAAE,2BAA2B,4CAA4C,CAAC,UAAU,CAAC;AACtH,uBAAuB,WAAW,EAAE,2BAA2B,4CAA4C,CAAC,WAAW,CAAC;AACxH,uBAAuB,SAAS,EAAE,2BAA2B,4CAA4C,CAAC,SAAS,CAAC;AACpH,uBAAuB,MAAM,EAAE,2BAA2B,6CAA6C,CAAC,MAAM,CAAC;AAC/G,uBAAuB,GAAG,EAAE,2BAA2B,4CAA4C,CAAC,GAAG,CAAC;AACxG,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,YAAY,EAAE,2BAA2B,6CAA6C,CAAC,YAAY,CAAC;AAC3H,uBAAuB,YAAY,EAAE,2BAA2B,4CAA4C,CAAC,YAAY,CAAC;AAC1H,uBAAuB,eAAe,EAAE,2BAA2B,4CAA4C,CAAC,eAAe,CAAC;AAChI,uBAAuB,GAAG,EAAE,2BAA2B,4CAA4C,CAAC,GAAG,CAAC;AACxG,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,SAAS,EAAE,2BAA2B,6CAA6C,CAAC,SAAS,CAAC;AACrH,uBAAuB,OAAO,EAAE,2BAA2B,6CAA6C,CAAC,OAAO,CAAC;AACjH,uBAAuB,YAAY,EAAE,2BAA2B,4CAA4C,CAAC,YAAY,CAAC;AAC1H,uBAAuB,QAAQ,EAAE,2BAA2B,0CAA0C,CAAC,QAAQ,CAAC;AAChH,uBAAuB,mBAAmB,EAAE,2BAA2B,6CAA6C,CAAC,mBAAmB,CAAC;AACzI,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,UAAU,EAAE,2BAA2B,4CAA4C,CAAC,UAAU,CAAC;AACtH,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,KAAK,EAAE,2BAA2B,4CAA4C,CAAC,KAAK,CAAC;AAC5G,uBAAuB,KAAK,EAAE,2BAA2B,6CAA6C,CAAC,KAAK,CAAC;AAC7G,uBAAuB,OAAO,EAAE,2BAA2B,4CAA4C,CAAC,OAAO,CAAC;AAChH,uBAAuB,WAAW,EAAE,2BAA2B,4CAA4C,CAAC,WAAW,CAAC;AACxH,uBAAuB,KAAK,EAAE,2BAA2B,6CAA6C,CAAC,KAAK,CAAC;AAC7G,uBAAuB,QAAQ,EAAE,2BAA2B,6CAA6C,CAAC,QAAQ,CAAC;AACnH,uBAAuB,IAAI,EAAE,2BAA2B,6CAA6C,CAAC,IAAI,CAAC;AAC3G,uBAAuB,eAAe,EAAE,2BAA2B,4CAA4C,CAAC,eAAe,CAAC;AAChI,uBAAuB,KAAK,EAAE,2BAA2B,6CAA6C,CAAC,KAAK,CAAC;AAC7G,uBAAuB,UAAU,EAAE,2BAA2B,6CAA6C,CAAC,UAAU;AACtH,sBAAsB,CAAC;AACvB,qBAAqB,IAAI,oCAAoC,GAAG,mBAAmB,iBAAiB,cAAc,CAAC;AACnH,qBAAqB,IAAI,0CAA0C,GAAG,mBAAmB,uBAAuB,oBAAoB,CAAC;AACrI,qBAAqB,IAAI,uCAAuC,GAAG,mBAAmB,oBAAoB,iBAAiB,CAAC;AAC5H,qBAAqB,IAAI,2CAA2C,GAAG,mBAAmB,wBAAwB,qBAAqB,CAAC;AACxI,qBAAqB,IAAI,wCAAwC,GAAG,mBAAmB,qBAAqB,kBAAkB,CAAC;AAC/H,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,6CAA6C,GAAG,mBAAmB,0BAA0B,uBAAuB,CAAC;AAC9I,qBAAqB,IAAI,4CAA4C,GAAG,mBAAmB,yBAAyB,sBAAsB,CAAC;AAC3I,qBAAqB,IAAI,+DAA+D,GAAG,mBAAmB,2CAA2C,wCAAwC,CAAC;AAClM,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,uCAAuC,oCAAoC,CAAC;AACtL,qBAAqB,IAAI,qEAAqE,GAAG,mBAAmB,iDAAiD,8CAA8C,CAAC;AACpN,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,yCAAyC,sCAAsC,CAAC;AAC5L,qBAAqB,IAAI,yDAAyD,GAAG,mBAAmB,qCAAqC,kCAAkC,CAAC;AAChL,qBAAqB,IAAI,mEAAmE,GAAG,mBAAmB,+CAA+C,4CAA4C,CAAC;AAC9M,qBAAqB,IAAI,uDAAuD,GAAG,mBAAmB,mCAAmC,gCAAgC,CAAC;AAC1K,qBAAqB,IAAI,mDAAmD,GAAG,mBAAmB,+BAA+B,4BAA4B,CAAC;AAC9J,qBAAqB,IAAI,6DAA6D,GAAG,mBAAmB,yCAAyC,sCAAsC,CAAC;AAC5L,qBAAqB,IAAI,sDAAsD,GAAG,mBAAmB,kCAAkC,+BAA+B,CAAC;AACvK,qBAAqB,IAAI,8DAA8D,GAAG,mBAAmB,0CAA0C,uCAAuC,CAAC;AAC/L,qBAAqB,IAAI,2DAA2D,GAAG,mBAAmB,uCAAuC,oCAAoC,CAAC;AACtL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,CAAC,GAAG;;AAEyC,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACE,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC1C,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACC,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACH,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AAClC,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAClC,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACA,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACtC,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACH,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACH,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAClC,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACL,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AACF,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC/B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAClC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AAC1C,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACH,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACtC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACP,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACN,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AACL,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACtC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACG,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACC,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACL,mBAAmB,CAAC;AACzC,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAC5B,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACjC,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACzC,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACxC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACzC,mBAAmB,CAAC;AACD,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACvC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACR,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AACb,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACX,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACrC,mBAAmB,CAAC;AACV,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AAC3B,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AAC7B,mBAAmB,CAAC;AACJ,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACL,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACtC,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACH,mBAAmB,CAAC;AAC/D,IAAC,sBAAsB,GAAG,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AACrB,mBAAmB,CAAC;AACzB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACvB,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACZ,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AAChC,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACtB,mBAAmB,CAAC;AACf,mBAAmB,CAAC;AACvD,IAAC,2BAA2B,GAAG,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AACnC,mBAAmB,CAAC;AACd,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACnB,mBAAmB,CAAC;AACpB,mBAAmB,CAAC;AAClB,mBAAmB,CAAC;AAChB,mBAAmB,CAAC;AAC1B,mBAAmB,CAAC;AACjB,mBAAmB,CAAC;AACxB,mBAAmB,CAAC;AACT,mBAAmB,CAAC;AAC9B,mBAAmB,CAAC;AACf,mBAAmB,CAAC;;;;","x_google_ignoreList":[0]}