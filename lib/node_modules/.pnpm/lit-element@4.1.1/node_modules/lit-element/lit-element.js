import { ReactiveElement as b } from '../../../@lit_reactive-element@2.0.4/node_modules/@lit/reactive-element/reactive-element.js';
export { defaultConverter, notEqual } from '../../../@lit_reactive-element@2.0.4/node_modules/@lit/reactive-element/reactive-element.js';
import { render as B, noChange as T } from '../../../lit-html@3.2.1/node_modules/lit-html/lit-html.js';
export { html, nothing } from '../../../lit-html@3.2.1/node_modules/lit-html/lit-html.js';

/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */class r extends b{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0;}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const s=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=B(s,this.renderRoot,this.renderOptions);}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(true);}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(false);}render(){return T}}r._$litElement$=true,r["finalized"]=true,globalThis.litElementHydrateSupport?.({LitElement:r});const i=globalThis.litElementPolyfillSupport;i?.({LitElement:r});(globalThis.litElementVersions??=[]).push("4.1.1");

export { r as LitElement, b as ReactiveElement, T as noChange, B as render };
//# sourceMappingURL=lit-element.js.map
