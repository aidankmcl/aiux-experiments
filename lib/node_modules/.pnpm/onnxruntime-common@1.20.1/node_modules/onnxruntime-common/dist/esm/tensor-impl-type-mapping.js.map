{"version":3,"file":"tensor-impl-type-mapping.js","sources":["../../../../../../../../node_modules/.pnpm/onnxruntime-common@1.20.1/node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n    ['int4', Uint8Array],\n    ['uint4', Uint8Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt/Float16Array checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt/Float16Array\n// polyfill if available.\nlet isTypedArrayChecked = false;\nexport const checkTypedArray = () => {\n    if (!isTypedArrayChecked) {\n        isTypedArrayChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && BigInt64Array.from;\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && BigUint64Array.from;\n        const isFloat16ArrayAvailable = typeof Float16Array !== 'undefined' && Float16Array.from;\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n        if (isFloat16ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Float16Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(Float16Array, 'float16');\n        }\n        else {\n            // if Float16Array is not available, use 'Uint16Array' to store the data.\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Uint16Array);\n        }\n    }\n};\n//# sourceMappingURL=tensor-impl-type-mapping.js.map"],"names":[],"mappings":"AAAA;AACA;AACA;AACY,MAAC,qCAAqC,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;AAC7B,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AACzB,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;AACvB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;AAC3B,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AACzB,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AACzB,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;AACxB,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;AAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;AAC3B,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;AACxB,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AACzB,CAAC;AACD;AACY,MAAC,qCAAqC,GAAG,IAAI,GAAG,CAAC;AAC7D,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC;AAC7B,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC;AACzB,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC;AACvB,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC;AAC3B,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC;AACzB,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC;AACzB,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC;AAC7B,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC;AAC3B,CAAC;AACD;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,KAAK;AACnB,MAAC,eAAe,GAAG,MAAM;AACrC,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC9B,QAAQ,mBAAmB,GAAG,IAAI;AAClC,QAAQ,MAAM,wBAAwB,GAAG,OAAO,aAAa,KAAK,WAAW,IAAI,aAAa,CAAC,IAAI;AACnG,QAAQ,MAAM,yBAAyB,GAAG,OAAO,cAAc,KAAK,WAAW,IAAI,cAAc,CAAC,IAAI;AACtG,QAAQ,MAAM,uBAAuB,GAAG,OAAO,YAAY,KAAK,WAAW,IAAI,YAAY,CAAC,IAAI;AAChG,QAAQ,IAAI,wBAAwB,EAAE;AACtC,YAAY,qCAAqC,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC;AAC7E,YAAY,qCAAqC,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;AAC7E;AACA,QAAQ,IAAI,yBAAyB,EAAE;AACvC,YAAY,qCAAqC,CAAC,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC;AAC/E,YAAY,qCAAqC,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC;AAC/E;AACA,QAAQ,IAAI,uBAAuB,EAAE;AACrC,YAAY,qCAAqC,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC;AAC9E,YAAY,qCAAqC,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC;AAC9E;AACA,aAAa;AACb;AACA,YAAY,qCAAqC,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC;AAC7E;AACA;AACA;;;;","x_google_ignoreList":[0]}